{"text": "import { Logger } from '@hw-agconnect/hmcore';\n\n\nimport { window } from '@kit.ArkUI';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\nconst TAG: string = '[WindowUtil]';\n\nexport class WindowUtil {\n  public static requestFullScreen(windowStage: window.WindowStage, context: Context): void {\n    windowStage.getMainWindow((err: BusinessError, data: window.Window) => {\n      if (err.code) {\n        Logger.error(TAG, 'Failed to obtain the main window. Cause: ' + JSON.stringify(err));\n        return;\n      }\n      let windowClass: window.Window = data;\n      Logger.info(TAG, 'Succeeded in obtaining the main window. Data: ' + JSON.stringify(data));\n\n      \n      let isLayoutFullScreen = true;\n      try {\n        \n        let area: window.AvoidArea = windowClass.getWindowAvoidArea(window.AvoidAreaType.TYPE_SYSTEM);\n        let naviBarArea: window.AvoidArea =\n          windowClass.getWindowAvoidArea(window.AvoidAreaType.TYPE_NAVIGATION_INDICATOR);\n        Logger.info(TAG,\n          `Succeeded get the window navigation indicator HEIGHT: ${px2vp(naviBarArea.bottomRect.height)}`);\n        AppStorage.setOrCreate<number>('statusBarHeight', px2vp(area.topRect.height));\n        AppStorage.setOrCreate<number>('naviIndicatorHeight', px2vp(naviBarArea.bottomRect.height));\n        WindowUtil.getDeviceSize(context);\n        if (area.topRect.height > 0) {\n          let promise: Promise<void> = windowClass.setWindowLayoutFullScreen(isLayoutFullScreen);\n          promise.then(() => {\n            Logger.info(TAG, 'Succeeded in setting the window layout to full-screen mode.');\n          }).catch((err: BusinessError) => {\n            Logger.error(TAG, 'Failed to set the window layout to full-screen mode. Cause:' + JSON.stringify(err));\n          });\n        }\n      } catch {\n        Logger.error(TAG, 'Failed to set the window layout to full-screen mode. ');\n      }\n    });\n  }\n\n  static getDeviceSize(context: Context): void {\n    \n    window.getLastWindow(context).then((data: window.Window) => {\n      let properties = data.getWindowProperties();\n      console.log(\"properties\", properties);\n      AppStorage.setOrCreate<number>('deviceHeight', px2vp(properties.windowRect.height));\n      AppStorage.setOrCreate<number>('deviceWidth', px2vp(properties.windowRect.width));\n    });\n  }\n}", "path": "arcview-master\\entry\\src\\main\\ets\\entryability\\WindowUtil.ets", "project_name": "arcview-master", "id": "c80da61fdfa588781bab3afa102a6de4e244d1f9bbae7ccc49eef074ee6a8f5c"}
{"text": "import { hilog } from '@kit.PerformanceAnalysisKit';\nimport { BackupExtensionAbility, BundleVersion } from '@kit.CoreFileKit';\n\nexport default class EntryBackupAbility extends BackupExtensionAbility {\n  async onBackup() {\n    hilog.info(0x0000, 'testTag', 'onBackup ok');\n  }\n\n  async onRestore(bundleVersion: BundleVersion) {\n    hilog.info(0x0000, 'testTag', 'onRestore ok %{public}s', JSON.stringify(bundleVersion));\n  }\n}", "path": "arcview-master\\entry\\src\\main\\ets\\entrybackupability\\EntryBackupAbility.ets", "project_name": "arcview-master", "id": "86d98657ff69992b0464f44830948e2b20845b25aebb3b167e0e85aef6690963"}
{"text": "import abilityTest from './Ability.test';\n\nexport default function testsuite() {\n  abilityTest();\n}", "path": "arcview-master\\entry\\src\\ohosTest\\ets\\test\\List.test.ets", "project_name": "arcview-master", "id": "15eb664ed676fb094a5a7529eb650f33f96c9d9c4a567a04c9c9dc8e21217f4b"}
{"text": "import localUnitTest from './LocalUnit.test';\n\nexport default function testsuite() {\n  localUnitTest();\n}", "path": "arcview-master\\entry\\src\\test\\List.test.ets", "project_name": "arcview-master", "id": "868f0c1148c4ebb4cc23cd0b1e00390cd45f8c578f55e4371753057ae285205c"}
{"text": "export const HAR_VERSION = '1.0.2';\nexport const BUILD_MODE_NAME = 'debug';\nexport const DEBUG = true;\nexport const TARGET_NAME = 'default';\n\n\nexport default class BuildProfile { \n\tstatic readonly HAR_VERSION = HAR_VERSION;\n\tstatic readonly BUILD_MODE_NAME = BUILD_MODE_NAME;\n\tstatic readonly DEBUG = DEBUG;\n\tstatic readonly TARGET_NAME = TARGET_NAME;\n}", "path": "arcview-master\\library\\BuildProfile.ets", "project_name": "arcview-master", "id": "99918b4da901dc066bcca3588ce7bf70880dcb39fe7d48c901d57e9382371d2e"}
{"text": "export { default as ArcView } from './src/main/ets/components/ArcView'\n\nexport { default as ArcProgressView } from './src/main/ets/components/ArcProgressView'\n\nexport * from './src/main/ets/components/DisplayUtil'\n\nexport * from './src/main/ets/components/ArcViewUtil'\n\nexport { default as ArcColors } from './src/main/ets/components/ArcColors'\n\nexport { default as ValueUtil } from './src/main/ets/components/ValueUtil'\n", "path": "arcview-master\\library\\Index.ets", "project_name": "arcview-master", "id": "2d89f723cc654bfe28c47de9abf380a5bf80c616c501128f559be0d86210d910"}
{"text": "export default class ArcColors {\n  public static readonly arcInnerColors: Array<[\n    string,\n    number\n  ]> = [\n    [\"#66D0DAE4\", 0.00],\n    [\"#662A6078\", 0.33],\n    [\"#66B9CD74\", 0.66],\n    [\"#66085438\", 1.00],\n  ]\n  public static readonly arcOuterColors: Array<[\n    string,\n    number\n  ]> = [\n    [\"#FFD0DAE4\", 0.00],\n    [\"#FF2A6078\", 0.33],\n    [\"#FFB9CD74\", 0.66],\n    [\"#FF085438\", 1.00],\n  ]\n\n  public static colorsToStops(colors: Array<[string, number]>): ColorStop[] {\n    return colors.map((item) => {\n      return {\n        color: item[0], offset: item[1]\n      } as ColorStop;\n    });\n  }\n\n  public static colorsToLinearGradient(colors: Array<[string, number]>): LinearGradient {\n    return new LinearGradient(ArcColors.colorsToStops(colors))\n  }\n\n  public static colorsToCanvasGradient(colors: Array<[string, number]>,\n    canvasGradient: CanvasGradient): CanvasGradient {\n    colors.forEach((item) => {\n      canvasGradient.addColorStop(item[1], item[0]);\n    })\n    return canvasGradient\n  }\n}\n", "path": "arcview-master\\library\\src\\main\\ets\\components\\ArcColors.ets", "project_name": "arcview-master", "id": "6314b3a78640b976c5489f8dd9829d50c3e92112d9ae362a091b622cc0d8285d"}
{"text": "import { hilog } from '@kit.PerformanceAnalysisKit';\nimport { BackupExtensionAbility, BundleVersion } from '@kit.CoreFileKit';\n\nconst DOMAIN = 0x0000;\n\nexport default class EntryBackupAbility extends BackupExtensionAbility {\n  async onBackup () {\n    hilog.info(DOMAIN, 'testTag', 'onBackup ok');\n    await Promise.resolve();\n  }\n\n  async onRestore (bundleVersion : BundleVersion) {\n    hilog.info(DOMAIN, 'testTag', 'onRestore ok %{public}s', JSON.stringify(bundleVersion));\n    await Promise.resolve();\n  }\n}", "path": "ark-ui-master\\entry\\src\\main\\ets\\entrybackupability\\EntryBackupAbility.ets", "project_name": "ark-ui-master", "id": "9e9a535fa4199cf533c9067c0f17587d1106c2e58fb8f8bb652434a6825d2dfd"}
{"text": "import router from '@ohos.router';\nimport entry from 'libentry.so'\n\nfunction TestFunction(str:string) {\n  let ret = str + ' world!'\n  return ret;\n}\n\n@Entry\n@Component\nstruct Index {\n\n  @State message: string = 'Test native api: 2 + 3 = ?'\n  @State message2: string = 'Click me'\n\n  build() {\n    Row() {\n      Column() {\n        \n        Text($r('app.string.homePage_Text'))\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n        Button() {\n          \n          Text($r('app.string.homeClick_value'))\n            .fontSize(30)\n            .fontWeight(FontWeight.Bold)\n        }\n        .type(ButtonType.Capsule)\n        .margin({\n          top: 20\n        })\n        \n        .backgroundColor($r('app.color.btn_background'))\n        .width('40%')\n        .height('5%')\n        \n        .onClick(() => {\n          router.pushUrl({ url: 'pages/Second' })\n        })\n\n        \n        Text(this.message)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n          .onClick(() => {\n            this.message = \"Test native api: 2 + 3 = \" + entry.add(2, 3);\n            console.log(\"Test NAPI 2 + 3 = \" + entry.add(2, 3));\n          })\n        \n        Text(this.message2)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n          .onClick(() => {\n            this.message2 = entry.nativeCallArkTS(TestFunction);\n          })\n\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkuiX-example-main\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "arkuiX-example-main", "id": "b912807f488cc080fbde654559a400a16d805505884c1a7e0936bba083eee142"}
{"text": "import router from '@ohos.router';\n\n@Entry\n@Component\nstruct Second {\n  build() {\n    Row() {\n      Column() {\n        \n        Text($r('app.string.secondPage_Text'))\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n        Button() {\n          \n          Text($r('app.string.secondClick_value'))\n            .fontSize(25)\n            .fontWeight(FontWeight.Bold)\n        }\n        .type(ButtonType.Capsule)\n        .margin({\n          top: 20\n        })\n        \n        .backgroundColor($r('app.color.btn_background'))\n        .width('40%')\n        .height('5%')\n        \n        .onClick(() => {\n          router.back()\n        })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkuiX-example-main\\entry\\src\\main\\ets\\pages\\Second.ets", "project_name": "arkuiX-example-main", "id": "d637202af37c5989c8d7a1b479d66f420d6dfbee370d92f81836d7bddec76b92"}
{"text": "import { AddFormOptions } from '@kit.ArkUI'\nimport { componentSnapshot, componentUtils } from '@kit.ArkUI';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\nimport { image } from '@kit.ImageKit';\nimport { util } from '@kit.ArkTS';\nimport { Want } from '@kit.AbilityKit';\n\nconst tag = 'AddFormMenuItem::ets::';\n\nconst querySnapshotAsync = async (want: Want, componentId: string): Promise<void> => {\n  let compInfo = componentUtils.getRectangleById(componentId);\n  try {\n    const imagePackageApi: image.ImagePacker = image.createImagePacker();\n    const packOpts: image.PackingOption = {\n      format: 'image/webp',\n      quality: 50,\n    };\n    let packPixmap: image.PixelMap = await componentSnapshot.get(componentId);\n    let arrayBuffer: ArrayBuffer = await imagePackageApi.packing(packPixmap, packOpts);\n    let base64Helper = new util.Base64Helper();\n    let uint8Arr = new Uint8Array(arrayBuffer);\n    let pixelStr = base64Helper.encodeToStringSync(uint8Arr);\n    !want.parameters && (want.parameters = {});\n    want.parameters['ohos.extra.param.key.add_form_to_host_width'] = compInfo.size.width.toFixed(2);\n    want.parameters['ohos.extra.param.key.add_form_to_host_height'] = compInfo.size.height.toFixed(2);\n    want.parameters['ohos.extra.param.key.add_form_to_host_screenx'] = compInfo.screenOffset.x.toFixed(2);\n    want.parameters['ohos.extra.param.key.add_form_to_host_screeny'] = compInfo.screenOffset.y.toFixed(2);\n    want.parameters['ohos.extra.param.key.add_form_to_host_snapshot'] = pixelStr;\n    hilog.info(0x3900, tag, 'pixelStr length:' + pixelStr.length);\n  } catch (err) {\n    hilog.error(0x3900, tag, 'get pixelmap string error:' + err);\n  }\n}\n\nconst querySnapshot = (want: Want, componentId: string): boolean => {\n  querySnapshotAsync(want, componentId);\n  return true;\n}\n\n@Builder\nAddFormMenuItem(want: Want, componentId: string, options?: AddFormOptions): void {\n  FormMenuItem(options?.style?.options ? options.style.options : {\n    startIcon: $r('sys.media.ic_form_menu_add'),\n    content: $r('sys.string.ohos_add_form_to_desktop')\n  })\n  .onClick(async () => {\n      let uiContext = this.getUIContext();\n      await querySnapshot(want, componentId, uiContext);\n      FormMenuItem.onRequestPublishFormWithSnapshot(want, options?.formBindingData?.data, options?.callback);\n    })\n}", "path": "arkui_ace_engine-master\\advanced_ui_component\\formmenu\\source\\formmenu.ets", "project_name": "arkui_ace_engine-master", "id": "69adf42f0aa7f3f39c1da48ecb4e5c85aed7edb7efad8e2bb3b26ff7121104d8"}
{"text": "import { AddFormOptions } from '@kit.ArkUI'\nimport { componentSnapshot, componentUtils } from '@kit.ArkUI';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\nimport { image } from '@kit.ImageKit';\nimport { util } from '@kit.ArkTS';\nimport { Want } from '@kit.AbilityKit';\n\nconst tag = 'AddFormMenuItem::ets::';\n\nconst querySnapshotAsync = async (want: Want, componentId: string): Promise<void> => {\n  !want.parameters && (want.parameters = {});\n  let pixelStr = '/9j/4AAQSk';\n  let width = 300.00;\n  let height = 300.00;\n  let screenOffsetX = 210.00;\n  let screeOffsetY = 490.00;\n  want.parameters['ohos.extra.param.key.add_form_to_host_width'] = compInfo.size.width.toFixed(2);\n  want.parameters['ohos.extra.param.key.add_form_to_host_height'] = compInfo.size.height.toFixed(2);\n  want.parameters['ohos.extra.param.key.add_form_to_host_screenx'] = compInfo.screenOffset.x.toFixed(2);\n  want.parameters['ohos.extra.param.key.add_form_to_host_screeny'] = compInfo.screenOffset.y.toFixed(2);\n  want.parameters['ohos.extra.param.key.add_form_to_host_snapshot'] = pixelStr;\n}\n\nconst querySnapshot = (want: Want, componentId: string): boolean => {\n  querySnapshotAsync(want, componentId);\n  return true;\n}\n\n@Builder\nAddFormMenuItem(want: Want, componentId: string, options?: AddFormOptions): void {\n  if (querySnapshot(want, componentId)) {\n  }\n  MenuItem(options?.style?.options ? options.style.options : {\n    startIcon: $r('sys.media.ic_form_menu_add'),\n    content: $r('sys.string.ohos_add_form_to_desktop')\n  })\n}", "path": "arkui_ace_engine-master\\advanced_ui_component\\formmenu\\source\\formmenu_preview.ets", "project_name": "arkui_ace_engine-master", "id": "92a744e42c9491f13b793727d0b79c52ccddde6587392dc44769d1e932de8e0d"}
{"text": "import hilog from '@ohos.hilog';\nimport common from '@ohos.app.ability.common';\nimport { Callback } from '@ohos.base';\nimport AtomicServiceOptions from '@ohos.app.ability.AtomicServiceOptions';\n\n@Component\nexport struct FullScreenLaunchComponent {\n  @BuilderParam content: Callback<void> = this.doNothingBuilder;\n  context: common.UIAbilityContext = getContext(this) as common.UIAbilityContext;\n  appId: string = '';\n  options?: AtomicServiceOptions\n  @State private isShow: boolean = false;\n  @Builder\n  doNothingBuilder(){\n  };\n\n  build(){\n    Row() {\n      this.content();\n    }.justifyContent(FlexAlign.Center)\n    .onClick(\n      () => {\n        hilog.warn(0x3900, 'FullScreenLaunchComponent', 'Embedded components do not support preview.');\n    }\n    );\n  }\n}", "path": "arkui_ace_engine-master\\advanced_ui_component\\fullscreenlaunchcomponent\\source\\fullscreenlaunchcomponent_preview.ets", "project_name": "arkui_ace_engine-master", "id": "fa39993fce3a60ba6b3460468c8c4aef66dde3f4d9ebb33725058c6900595260"}
{"text": "import { LengthMetrics } from '@ohos.arkui.node';\nimport { common } from '@kit.AbilityKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\nconst DEFAULT_MARGIN = 16\nconst ITEM_SPACE = 4\nconst MIN_SIZE = 24\nconst MID_SIZE = 40\nconst MAX_SIZE = 48\nconst MAX_FONT_SIZE = 2\n\n@Component\nexport struct SwipeRefresher {\n  @Prop\n  content: string = '';\n  @Prop\n  isLoading: boolean = false;\n  maxAppFontScale: number = 1;\n  isFollowingSystemFontScale: boolean = false;\n  minFontSize: number = 1.75;\n  maxFontSize: number = 2;\n\n  aboutToAppear() {\n    try {\n      let uiContent: UIContext = this.getUIContext();\n      this.isFollowingSystemFontScale = uiContent.isFollowingSystemFontScale();\n      this.maxAppFontScale = uiContent.getMaxFontScale();\n    } catch (err) {\n      let code: number = (err as BusinessError).code;\n      let message: string = (err as BusinessError).message;\n      hilog.error(0x3900, 'SwipeRefresher', `Failed to init fontsizescale info, cause, code: ${code}, message: ${message}`);\n    }\n  }\n\n  updateFontScale(): number {\n    let uiContent: UIContext = this.getUIContext();\n    let systemFontScale = (uiContent.getHostContext() as common.UIAbilityContext)?.config?.fontSizeScale ?? 1;\n    if (!this.isFollowingSystemFontScale) {\n      return 1;\n    }\n    return Math.min(systemFontScale, this.maxAppFontScale);\n  }\n\n  build() {\n    Flex({ justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n      if (this.isLoading) {\n        LoadingProgress()\n          .height(Math.min(this.updateFontScale(), MAX_FONT_SIZE) === this.maxFontSize ? MAX_SIZE :\n            (Math.min(this.updateFontScale(), MAX_FONT_SIZE) === this.minFontSize ? MID_SIZE : MIN_SIZE))\n          .width(Math.min(this.updateFontScale(), MAX_FONT_SIZE) === this.maxFontSize ? MAX_SIZE :\n            (Math.min(this.updateFontScale(), MAX_FONT_SIZE) === this.minFontSize ? MID_SIZE : MIN_SIZE))\n          .margin({\n            end: LengthMetrics.vp(ITEM_SPACE)\n          })\n      }\n      Text(this.content)\n        .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n        .fontSize($r('sys.float.ohos_id_text_size_body2'))\n        .minFontScale(1)\n        .maxFontScale(Math.min(this.updateFontScale(), 2))\n        .padding({\n          top: DEFAULT_MARGIN,\n          bottom: DEFAULT_MARGIN\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\advanced_ui_component\\swiperefresher\\source\\swiperefresher.ets", "project_name": "arkui_ace_engine-master", "id": "556ab57e7f61441ee4031202efa5be20afa03b4f36142301e479055ac8774999"}
{"text": "export * from './src/main/ets/components';\n\nexport * from './src/main/ets/utils';\n\nexport * from './src/main/ets/common/route';", "path": "arkui_ace_engine-master\\examples\\components\\common\\Index.ets", "project_name": "arkui_ace_engine-master", "id": "311c48be44c2f1246148e9f968584065bc06167c9b03f9d2fd1a285a05920a70"}
{"text": "export interface Route {\n  name: string;\n  label: ResourceStr;\n}\n\nexport interface RouteGroup extends Route {\n  children: Route[];\n}", "path": "arkui_ace_engine-master\\examples\\components\\common\\src\\main\\ets\\common\\route.ets", "project_name": "arkui_ace_engine-master", "id": "9e3a15a7553ad283fe3bd6f26def66a28ba7f6e928ebdc49e39c090e79c0fe7e"}
{"text": "import { BlockTag } from '../model/BlockTag';\nimport { tagDesRule } from '../utils';\nimport { formatDate } from '../utils/timeUtil';\n\n@Component\nexport struct ColorPalette {\n  @Prop color: ResourceColor | undefined = undefined;\n  @Prop colors: ResourceColor[] =\n    ['#0A59F7', '#646AFD', '#FE7062', '#E9E8ED', '#1C1C1C', $r('sys.color.ohos_id_color_text_primary_contrary')];\n  @Prop isEnabled: boolean = false;\n  onChange?: (color: ResourceColor) => void;\n  @Prop title: string = '';\n\n  build() {\n    Row() {\n      ForEach(this.colors, (color: ResourceColor, index: number) => {\n        Button() {\n          Circle({ width: 24, height: 24 })\n            .fill(color)\n            .borderRadius(12)\n            .shadow(ShadowStyle.OUTER_DEFAULT_XS)\n            .scale({\n              x: this.color === color ? 1.25 : 1,\n              y: this.color === color ? 1.25 : 1,\n            })\n            .border({\n              width: 2,\n              color: '#fff'\n            })\n            .animation({ curve: Curve.Sharp, duration: 150 })\n        }\n        .type(ButtonType.Circle)\n        .backgroundColor(Color.Transparent)\n        .width(32)\n        .height(32)\n        .onClick(() => {\n          this.onChange?.(color);\n        })\n      })\n    }\n    .enabled(this.isEnabled)\n    .width('100%')\n    .grayscale(this.isEnabled ? 0 : 1)\n  }\n}\n\n@Preview\n@Component\nstruct ColorPalettePreview {\n  build() {\n    ColorPalette({})\n  }\n}", "path": "arkui_ace_engine-master\\examples\\components\\common\\src\\main\\ets\\components\\ColorPalette.ets", "project_name": "arkui_ace_engine-master", "id": "516e48330c61fc8f923f5ad52897de4dbf8e2a2354a3df47d2f0f8a44411eb14"}
{"text": "import { BlockTag } from '../model/BlockTag';\nimport { tagDesRule } from '../utils';\nimport { formatDate } from '../utils/timeUtil';\nimport { Block } from './Block';\n\nenum Mode {\n  ONE = '1',\n  TWO = '2',\n};\n\n@Component\nexport struct SliderBlock {\n  @Prop title: string;\n  @Prop step: number = 1;\n  @Link isEnabled: boolean;\n  @Link value: number;\n  @Prop min: number = 0;\n  @Prop max: number = 100;\n  @State listSliderTagsTemp: Array<BlockTag> = [];\n  @StorageLink('Block') listSliderTags: Array<BlockTag> = [];\n\n  build() {\n    Column({ space: 0 }) {\n      Block({ title: this.title, isEnabled: $isEnabled }) {\n        Row({ space: 0 }) {\n          Text(`${this.value}`)\n            .fontSize(16)\n            .width(28)\n          Slider({\n            value: this.value,\n            min: this.min,\n            max: this.max,\n            step: this.step,\n            style: SliderStyle.OutSet\n          })\n            .showSteps(false)\n            .enabled(this.isEnabled)\n            .showSteps(true)\n            .width('80%')\n            .onChange((value: number, mode: SliderChangeMode) => {\n              this.value = value\n              if (mode.toString() === Mode.TWO) {\n                setTimeout(() => {\n                  let time = formatDate(new Date(Date.now()))\n                  this.listSliderTagsTemp.push(new BlockTag(time, tagDesRule(this.title, value.toString())))\n                  if (AppStorage.get('Block')) {\n                    this.listSliderTags = this.listSliderTags.concat(this.listSliderTagsTemp);\n                    this.listSliderTagsTemp = [];\n                  } else {\n                    if (this.listSliderTagsTemp) {\n                      this.listSliderTags = this.listSliderTags.concat(this.listSliderTagsTemp);\n                    }\n                    if (this.listSliderTags) {\n                      this.listSliderTagsTemp = [];\n                    }\n                  }\n                }, 200)\n              }\n            })\n        }\n        .margin({ left: 16 })\n        .width('100%')\n      }\n    }\n  }\n}\n\n@Preview\n@Component\nstruct SliderBlockPreview {\n  @State isEnabled: boolean = true\n  @State value: number = 1;\n\n  build() {\n    SliderBlock({\n      title: 'SliderBlock',\n      isEnabled: $isEnabled,\n      value: $value,\n      min: 0,\n      max: 100\n    })\n  }\n}", "path": "arkui_ace_engine-master\\examples\\components\\common\\src\\main\\ets\\components\\SliderBlock.ets", "project_name": "arkui_ace_engine-master", "id": "69eeef5bb0f0d1d61a457c5c75fec13ce5eb0800515dfb9fbaf8345eb50d0441"}
{"text": "export class BlockTag {\n  public time: string = '';\n  public description: string = '';\n  constructor(nowTime: string, tagDes: string) {\n    this.time = nowTime;\n    this.description = tagDes;\n  }\n}", "path": "arkui_ace_engine-master\\examples\\components\\common\\src\\main\\ets\\model\\BlockTag.ets", "project_name": "arkui_ace_engine-master", "id": "3d4ef694797c5109ee48c84f599a602eff6f19d5fb68c5c650d5c6c26b87aed0"}
{"text": "@Entry\n@Component\nstruct Index {\n  @State message: string = 'Hello World';\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\examples\\components\\common\\src\\main\\ets\\pages\\Index.ets", "project_name": "arkui_ace_engine-master", "id": "302e861e56eb6e383192e329ffe8b3f16905d030d5cff057747a03e5959de5e0"}
{"text": "export const formatDate = (date: Date, format = 'YYYY-MM-DD HH:mm:ss') => {\n  \n  const year = String(date.getFullYear())\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n  const seconds = String(date.getSeconds()).padStart(2, '0')\n\n  \n  return format\n    .replace('YYYY', year)\n    .replace('MM', month)\n    .replace('DD', day)\n    .replace('HH', hours)\n    .replace('mm', minutes)\n    .replace('ss', seconds)\n}", "path": "arkui_ace_engine-master\\examples\\components\\common\\src\\main\\ets\\utils\\timeUtil.ets", "project_name": "arkui_ace_engine-master", "id": "4d18bfb14cecc91a16d25f608458d00ee279446fba8c5ccffa0df865bbd6c20c"}
{"text": "@Entry\n@Component\nstruct Index {\n  @State message: string = 'Hello World';\n\n  build() {\n    RelativeContainer() {\n      Text(this.message)\n        .id('HelloWorld')\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n        .alignRules({\n          center: { anchor: '__container__', align: VerticalAlign.Center },\n          middle: { anchor: '__container__', align: HorizontalAlign.Center }\n        })\n    }\n    .height('100%')\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\examples\\components\\feature\\src\\main\\ets\\pages\\Index.ets", "project_name": "arkui_ace_engine-master", "id": "16cae15186e28aa459e3aeba98afa8511c32b85879cf72f00bc8edfc4b7ab082"}
{"text": "import { LayeredDrawableDescriptor } from '@ohos.arkui.drawableDescriptor';\nimport { BusinessError } from '@ohos.base';\nimport image from '@ohos.multimedia.image';\n\nconst TITLE_ICON_SIZE: string = '20vp'\nconst TITLE_PADDING_START: string = '20vp'\nconst TITLE_ELEMENT_MARGIN_HORIZONTAL: string = '12vp'\nconst TITLE_TEXT_FONT_SIZE: string = '16fp'\nconst TITLE_TEXT_FONT_WEIGHT: string = '500px'\nconst TITLE_ROW_HEIGHT: string = '37vp'\n\n@Entry\n@Component\nstruct Index {\n  @State appLabel: string = '';\n  @State appTitle: string = '';\n  @State appLabelColor: Color = 0x66000000;\n  @State pixelMap：image.PixelMap = undefined;\n  @State iconOpacity: number = 0.4;\n\n  onWindowFocused() {\n    this.appLabelColor = 0xff000000;\n    this.iconOpacity = 1;\n  }\n\n  onWindowUnfocused() {\n    this.appLabelColor = 0x66000000;\n    this.iconOpacity = 0.4;\n  }\n\n  setAppTitle(content: string ) {\n    this.appTitle = content;\n  }\n\n  setAppIcon(pixelMap: image.PixelMap) {\n    this.pixelMap = pixelMap;\n  }\n\n  build() {\n    Row() {\n      Image(this.pixelMap)\n        .id(\"enhanceAppIcon\")\n        .height(TITLE_ICON_SIZE)\n        .width(TITLE_ICON_SIZE)\n        .interpolation(ImageInterpolation.Medium)\n        .focusable(false)\n        .margin({ left: TITLE_ELEMENT_MARGIN_HORIZONTAL, right: TITLE_ELEMENT_MARGIN_HORIZONTAL })\n        .opacity(this.iconOpacity)\n        .draggable(false)\n      Text(this.appTitle ? this.appTitle : this.appLabel)\n        .id(\"enhanceAppLabel\")\n        .fontSize(TITLE_TEXT_FONT_SIZE)\n        .fontColor(this.appLabelColor)\n        .fontWeight(TITLE_TEXT_FONT_WEIGHT)\n        .maxLines(1)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textAlign(TextAlign.Start)\n        .layoutWeight(1.0)\n        .opacity(this.iconOpacity)\n    }\n    .width('100%')\n    .height(TITLE_ROW_HEIGHT)\n    .justifyContent(FlexAlign.Start)\n    .alignItems(VerticalAlign.Center)\n    .padding({ top: 6, bottom: 6, left: 8, right: 8 })\n   }\n}", "path": "arkui_ace_engine-master\\frameworks\\core\\components_ng\\pattern\\container_modal\\source\\customtitle.ets", "project_name": "arkui_ace_engine-master", "id": "9afa3f3e62f1b4726993b3d831a44cc4ad3b035775a5c4212ffd95718afb2e1e"}
{"text": "import buttonButtonStyleTest from '../MyTest/ButtonButtonStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonButtonStyleSample {\n  @State style: ButtonStyleMode = ButtonStyleMode.NORMAL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonButtonStyleTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonButtonStyle1').buttonStyle(ButtonStyleMode.EMPHASIZED).id('buttonButtonStyle1');\n      Button('ButtonButtonStyle2').buttonStyle(this.style).id('buttonButtonStyle2').onClick(() => {\n        this.style = ButtonStyleMode.TEXTUAL;\n      });\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonButtonStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "4688ceea782d7a2a721ab7564156a9913d3cfc7ae5e6248a635167e3a37f0b93"}
{"text": "import buttonControlSizeTest from '../MyTest/ButtonControlSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonControlSizeSample {\n  @State controlSizeEnum: ControlSize = ControlSize.SMALL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonControlSizeTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonControlSize').controlSize(this.controlSizeEnum).id('buttonControlSize').onClick(() => {\n        this.controlSizeEnum = ControlSize.NORMAL\n      });\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonControlSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "3fd3dbf2a733a9dffe9780a49dd347dbe7ef7940a0defbe239d4b0ec9b331981"}
{"text": "import buttonFontColorTest from '../MyTest/ButtonFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonFontColorSample {\n  @State fontColorAll: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonFontColor1').fontColor(Color.Black).id('buttonFontColor1')\n      Button('ButtonFontColor2').fontColor(0x008000).id('buttonFontColor2')\n      Button('ButtonFontColor3').fontColor(this.fontColorAll).id('buttonFontColor3')\n        .onClick(() => {\n          this.fontColorAll = $r('sys.color.ohos_fa_palette1')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "1d051b5b14da668bc9beb90fa3435feaa4fe002a6bea45a455a32c313fc2677d"}
{"text": "import buttonFontFamilyTest from '../MyTest/ButtonFontFamilyTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport font from '@ohos.font'\n\n@Entry\n@Component\nstruct ButtonFontFamilySample {\n  @State fontFamilyTest: string | Resource = 'Arial'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonFontFamilyTest)\n\n    font.registerFont({\n      familyName: 'TESTFONT',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n  }\n\n  build() {\n    Column() {\n      Button('ButtonFontFamily').fontFamily(this.fontFamilyTest).id('buttonFontFamily').onClick(() => {\n        this.fontFamilyTest = 'TESTFONT'\n      });\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "8a71b95019a841b14fb524033a45cf522b7de9c5b335bb436b41fed08a0298cd"}
{"text": "import buttonFontSizeTest from '../MyTest/ButtonFontSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonFontSizeSample {\n  @State fontSizeText: string | Resource = '50px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonFontSize1').fontSize(30).id('buttonFontSize1')\n      Button('ButtonFontSize2').fontSize(this.fontSizeText).id('buttonFontSize2').onClick(() => {\n        this.fontSizeText = $r('app.string.font_size')\n      });\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "5a101b8d9ca390ee3bbd5772e7257c2c6699bd2a1934c86320a0f603774142dd"}
{"text": "import buttonFontStyleTest from '../MyTest/ButtonFontStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonFontStyleSample {\n  @State fontStyleTest: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonFontStyleTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonFontStyle').fontStyle(this.fontStyleTest).id('buttonFontStyle').onClick(() => {\n        this.fontStyleTest = FontStyle.Italic\n      });\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "72d7325512fced11a5aaf1c3452de44395ffdb60642159855ce71eb8e9bb00ff"}
{"text": "import buttonFontWeightTest from '../MyTest/ButtonFontWeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonFontWeightSample {\n  @State fontWeightEnum: FontWeight = FontWeight.Regular\n  @State fontWeightTest: number | string = 200\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonFontWeightTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonFontWeight1').fontWeight(FontWeight.Lighter).id('buttonFontWeight1');\n      Button('ButtonFontWeight2').fontWeight(FontWeight.Normal).id('buttonFontWeight2');\n      Button('ButtonFontWeight3').fontWeight(this.fontWeightEnum).id('buttonFontWeight3');\n      Button('ButtonFontWeight4').fontWeight(FontWeight.Bold).id('buttonFontWeight4');\n      Button('ButtonFontWeight5').fontWeight(FontWeight.Bolder).id('buttonFontWeight5');\n      Button('ButtonFontWeight6').fontWeight(this.fontWeightTest).id('buttonFontWeight6').onClick(() => {\n        this.fontWeightEnum = FontWeight.Medium\n        this.fontWeightTest = '700'\n      });\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonFontWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "751754003de7bf8c4bedebab58414c779f0f628cbbbae44394187e19c3a91bf7"}
{"text": "import buttonStateEffectTest from '../MyTest/ButtonStateEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonStateEffectSample {\n  @State stateEffectTest: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonStateEffectTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonStateEffect').stateEffect(this.stateEffectTest).id('buttonStateEffect').onClick(() => {\n        this.stateEffectTest = false\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonStateEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "e0ff7c1837df91150c33487e4335edc37ba2bdb3fd04ca1189a7aca443e7102e"}
{"text": "import buttonTypeTest from '../MyTest/ButtonTypeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ButtonTypeSample {\n  @State buttonType: ButtonType = ButtonType.Circle\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(buttonTypeTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonType1').type(ButtonType.Capsule).id('buttonType1')\n      Button('ButtonType2').type(this.buttonType).id('buttonType2')\n        .onClick(() => {\n          this.buttonType = ButtonType.Normal\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\button\\ButtonTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "19ea9bf7f8d459f97079a78c954265207a85153305082e5fd7d20bfc34e7d35b"}
{"text": "import calendarPickerEdgeAlignTest from '../MyTest/CalendarPickerEdgeAlignTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CalendarPickerEdgeAlignSample {\n  private selectedDate: Date = new Date()\n  @State pickerAlign: CalendarAlign = CalendarAlign.CENTER\n  @State pickerOffset: number | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(calendarPickerEdgeAlignTest)\n  }\n\n  build() {\n    Column() {\n      CalendarPicker({ hintRadius: 10, selected: this.selectedDate })\n        .edgeAlign(CalendarAlign.START, { dx: '10px', dy: '10px' }).id('calendarPickerEdgeAlign1')\n      CalendarPicker({ hintRadius: 10, selected: this.selectedDate })\n        .edgeAlign(this.pickerAlign, { dx: this.pickerOffset, dy: this.pickerOffset }).id('calendarPickerEdgeAlign2')\n\n      Button('CalendarPickerEdgeAlign').onClick(() => {\n        this.pickerAlign = CalendarAlign.END\n        this.pickerOffset = $r('app.string.picker_edgeOffset')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\calendar_picker\\CalendarPickerEdgeAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "56b839a0395fedf72e652cb36fa1046f711f84befbb894b8f6b8c6f7619e9f02"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct CalendarPickerHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('CalendarPickerHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'EdgeAlign', buttonUrl: 'pages/calendar_picker/CalendarPickerEdgeAlignSample' });\n        CommonButton({ buttonName: 'TextStyle', buttonUrl: 'pages/calendar_picker/CalendarPickerTextStyleSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\calendar_picker\\CalendarPickerHome.ets", "project_name": "arkui_ace_engine-master", "id": "533cfdadaa20921f4880ef6032f9773ca0a149999729c66f71fab64ffbdeade7"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct CheckboxHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('CheckboxHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'Mark', buttonUrl: 'pages/checkbox/CheckboxMarkSample' });\n        CommonButton({ buttonName: 'SelectedColor', buttonUrl: 'pages/checkbox/CheckboxSelectedColorSample' });\n        CommonButton({ buttonName: 'Select', buttonUrl: 'pages/checkbox/CheckboxSelectSample' });\n        CommonButton({ buttonName: 'Shape', buttonUrl: 'pages/checkbox/CheckboxShapeSample' });\n        CommonButton({ buttonName: 'UnselectedColor', buttonUrl: 'pages/checkbox/CheckboxUnselectedColorSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox\\CheckboxHome.ets", "project_name": "arkui_ace_engine-master", "id": "dcecba01e01c1b45c375a57b0273d7226d642de74c0dba1db68dd1bef941c81a"}
{"text": "import checkboxMarkTest from '../MyTest/CheckboxMarkTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxMarkSample {\n  @State markColor: ResourceColor = 'rgb(142, 255, 101)'\n  @State markStrok: number | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxMarkTest)\n  }\n\n  build() {\n    Flex() {\n      Column() {\n        Checkbox({ name: 'checkbox1' }).mark({\n          strokeColor: Color.Black\n        }).id('checkboxMark1')\n        Checkbox({ name: 'checkbox2' }).mark({\n          strokeColor: 0xa52a2a,\n        }).id('checkboxMark2')\n        Checkbox({ name: 'checkbox3' }).mark({\n          strokeColor: this.markColor\n        }).id('checkboxMark3')\n      }\n\n      Column() {\n        Checkbox({ name: 'checkbox4' }).mark({\n          size: '10px',\n          strokeWidth: '10px'\n        }).id('checkboxMark4')\n        Checkbox({ name: 'checkbox4' }).mark({\n          size: this.markStrok,\n          strokeWidth: this.markStrok\n        }).id('checkboxMark5')\n        Button('CheckboxMark1').onClick(() => {\n          this.markColor = $r('sys.color.ohos_fa_palette1')\n        })\n        Button('CheckboxMark2').onClick(() => {\n          this.markStrok = $r('app.string.mark_strok')\n        })\n      }\n    }.width('100%').padding(24)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox\\CheckboxMarkSample.ets", "project_name": "arkui_ace_engine-master", "id": "d3f248a1c535bbe019ead310bbae5e0990bd73da1a10b702659a845e78445df9"}
{"text": "import checkboxSelectedColorTest from '../MyTest/CheckboxSelectedColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxSelectedColorSample {\n  @State selectedColorTest: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      Checkbox({ name: 'checkbox1' }).selectedColor(Color.Black).id('checkboxSelectedColor1')\n      Checkbox({ name: 'checkbox2' }).selectedColor(0xa52a2a).id('checkboxSelectedColor2')\n      Checkbox({ name: 'checkbox3' }).selectedColor(this.selectedColorTest).id('checkboxSelectedColor3')\n\n      Button('CheckboxSelectedColor').onClick(() => {\n        this.selectedColorTest = $r('sys.color.ohos_fa_palette1')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox\\CheckboxSelectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "aa8f9bf2289e0d1481a063b7aef85aca881b1c2c46da6a393096dfe6d4b85389"}
{"text": "import checkboxSelectTest from '../MyTest/CheckboxSelectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxSelectSample {\n  @State selectTest: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxSelectTest)\n  }\n\n  build() {\n    Column() {\n      Checkbox({ name: 'checkbox1' }).select(this.selectTest).id('checkboxSelect')\n\n      Button('CheckboxSelect').onClick(() => {\n        this.selectTest = false\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox\\CheckboxSelectSample.ets", "project_name": "arkui_ace_engine-master", "id": "1bb08d15dc75d68be8285f98eb0b5904ddfd3feed1396f9c3c28aef3179818c9"}
{"text": "import checkboxShapeTest from '../MyTest/CheckboxShapeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxShapeSample {\n  @State shapeTest: CheckBoxShape = CheckBoxShape.CIRCLE\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxShapeTest)\n  }\n\n  build() {\n    Column() {\n      Checkbox({ name: 'checkbox1' }).shape(this.shapeTest).id('checkboxShape')\n\n      Button('CheckboxShape').onClick(() => {\n        this.shapeTest = CheckBoxShape.ROUNDED_SQUARE\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox\\CheckboxShapeSample.ets", "project_name": "arkui_ace_engine-master", "id": "f7aef5a6babf35671c6f32106c400c07dd3539a9b814c01bbde35195a126ac3c"}
{"text": "import checkboxUnSelectedColorTest from '../MyTest/CheckboxUnselectedColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxUnSelectedColorSample {\n  @State unSelectedCol: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxUnSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      Checkbox({ name: 'checkbox1' }).unselectedColor(Color.Black).id('checkboxUnSelectedColor1')\n      Checkbox({ name: 'checkbox2' }).unselectedColor(0xa52a2a).id('checkboxUnSelectedColor2')\n      Checkbox({ name: 'checkbox3' }).unselectedColor(this.unSelectedCol).id('checkboxUnSelectedColor3')\n\n      Button('CheckboxUnSelectedColor').onClick(() => {\n        this.unSelectedCol = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%').padding(24)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox\\CheckboxUnselectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "17ca8dbf0730d1e8c86c77336ba6d7b02c89a3948269f358501127d16ce8141b"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct CheckboxGroupHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('CheckboxGroupHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'Mark', buttonUrl: 'pages/checkbox_group/CheckboxGroupMarkSample' });\n        CommonButton({ buttonName: 'SelectAll', buttonUrl: 'pages/checkbox_group/CheckboxGroupSelectAllSample' });\n        CommonButton({\n          buttonName: 'SelectedColor',\n          buttonUrl: 'pages/checkbox_group/CheckboxGroupSelectedColorSample'\n        });\n        CommonButton({\n          buttonName: 'UnselectedColor',\n          buttonUrl: 'pages/checkbox_group/CheckboxGroupUnselectedColorSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox_group\\CheckboxGroupHome.ets", "project_name": "arkui_ace_engine-master", "id": "b4b2ecbdeec0d226263c33be2805a89d0acce3fa8e9fc9b29cf41d40cb79b7b5"}
{"text": "import checkboxGroupMarkTest from '../MyTest/CheckboxGroupMarkTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxGroupMarkSample {\n  @State markColor: ResourceColor = 'rgb(142, 255, 101)'\n  @State markStrok: number | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxGroupMarkTest)\n  }\n\n  build() {\n    Flex() {\n      Column() {\n        CheckboxGroup({ group: 'checkboxGroup1' }).mark({\n          strokeColor: Color.Black\n        }).id('checkboxGroupMark1')\n        CheckboxGroup({ group: 'checkboxGroup1' }).mark({\n          strokeColor: 0xa52a2a\n        }).id('checkboxGroupMark2')\n        CheckboxGroup({ group: 'checkboxGroup1' }).mark({\n          strokeColor: this.markColor\n        }).id('checkboxGroupMark3')\n      }\n\n      Column() {\n        CheckboxGroup({ group: 'checkboxGroup1' }).mark({\n          size: '10px',\n          strokeWidth: '10px'\n        }).id('checkboxGroupMark4')\n        CheckboxGroup({ group: 'checkboxGroup1' }).mark({\n          size: this.markStrok,\n          strokeWidth: this.markStrok\n        }).id('checkboxGroupMark5')\n        Button('CheckboxGroupMark1').onClick(() => {\n          this.markColor = $r('sys.color.ohos_fa_palette1')\n        })\n        Button('CheckboxGroupMark2').onClick(() => {\n          this.markStrok = $r('app.string.mark_strok')\n        })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox_group\\CheckboxGroupMarkSample.ets", "project_name": "arkui_ace_engine-master", "id": "2efc2b0d39b9f09784bf37a97e9975fd8794cf7f037cfa6a5a775ed86b1a5dde"}
{"text": "import checkboxGroupSelectAllTest from '../MyTest/CheckboxGroupSelectAllTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxGroupSelectAllSample {\n  @State selectAllTest: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxGroupSelectAllTest)\n  }\n\n  build() {\n    Flex() {\n      Column() {\n        CheckboxGroup({ group: 'checkboxGroup1' }).selectAll(this.selectAllTest).id('checkboxGroupSelectAll1')\n        Checkbox({ name: 'checkbox1', group: 'checkboxGroup1' }).margin({ left: 36 })\n\n        Button('CheckboxGroupSelectAll').onClick(() => {\n          this.selectAllTest = false\n        })\n      }\n\n      Column() {\n        CheckboxGroup({ group: 'checkboxGroup2' }).selectAll(true).id('checkboxGroupSelectAll2')\n        Checkbox({ name: 'checkbox2', group: 'checkboxGroup2' }).margin({ left: 36 }).select(false)\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox_group\\CheckboxGroupSelectAllSample.ets", "project_name": "arkui_ace_engine-master", "id": "45c500870165c1a0694efedcc260b82fc34a6d1777aae8cd6e26fd7cd9c28a1a"}
{"text": "import checkboxGroupSelectedColorTest from '../MyTest/CheckboxGroupSelectedColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxGroupSelectedColorSample {\n  @State selectedColorTest: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxGroupSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      CheckboxGroup({ group: 'checkboxGroup1' }).selectedColor(Color.Black).id('checkboxGroupSelectedColor1')\n      CheckboxGroup({ group: 'checkboxGroup2' }).selectedColor(0xa52a2a).id('checkboxGroupSelectedColor2')\n      CheckboxGroup({ group: 'checkboxGroup3' }).selectedColor(this.selectedColorTest).id('checkboxGroupSelectedColor3')\n\n      Button('CheckboxGroupSelectedColor').onClick(() => {\n        this.selectedColorTest = $r('sys.color.ohos_fa_palette1')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox_group\\CheckboxGroupSelectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "9e81340147e17776c7b635be0bf17e832ada883a269d45281df29cae217d2836"}
{"text": "import checkboxGroupUnSelectedColorTest from '../MyTest/CheckboxGroupUnselectedColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CheckboxGroupUnSelectedColorSample {\n  @State unSelectedCol: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(checkboxGroupUnSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      CheckboxGroup({ group: 'checkboxGroup1' }).unselectedColor(Color.Black).id('checkboxGroupUnSelectedColor1')\n      CheckboxGroup({ group: 'checkboxGroup2' }).unselectedColor(0xa52a2a).id('checkboxGroupUnSelectedColor2')\n      CheckboxGroup({ group: 'checkboxGroup3' }).unselectedColor(this.unSelectedCol).id('checkboxGroupUnSelectedColor3')\n\n      Button('CheckboxGroupUnSelectedColor').onClick(() => {\n        this.unSelectedCol = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%').padding(24)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\checkbox_group\\CheckboxGroupUnselectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "eb79fd299b6bcbd659c8ca256a6ef6c049c5cf7da5ebd0d5f131b128618ca60e"}
{"text": "import counterEnableDecTest from '../MyTest/CounterEnableDecTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CounterEnableDecSample {\n  @State value: number = 0\n  @State enableDec: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(counterEnableDecTest)\n  }\n\n  build() {\n    Row() {\n      Counter() {\n        Text(this.value.toString())\n      }\n      .margin(100)\n      .id('counterEnableDec')\n      .enableDec(this.enableDec)\n      .onInc(() => {\n        this.value++\n      })\n      .onDec(() => {\n        this.value--\n      })\n\n      Button('CounterEnableDec')\n        .onClick(() => {\n          this.enableDec = !this.enableDec\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\counter\\CounterEnableDecSample.ets", "project_name": "arkui_ace_engine-master", "id": "b3fdedda51996b99c5a7a0b3e07b001f02509a2a193615dfb50770f4c0b035a2"}
{"text": "import counterEnableIncTest from '../MyTest/CounterEnableIncTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CounterEnableIncSample {\n  @State value: number = 0\n  @State enableInc: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(counterEnableIncTest)\n  }\n\n  build() {\n    Row() {\n      Counter() {\n        Text(this.value.toString())\n      }\n      .margin(100)\n      .id('counterEnableInc')\n      .enableInc(this.enableInc)\n      .onInc(() => {\n        this.value++\n      })\n      .onDec(() => {\n        this.value--\n      })\n\n      Button('CounterEnableInc')\n        .onClick(() => {\n          this.enableInc = !this.enableInc\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\counter\\CounterEnableIncSample.ets", "project_name": "arkui_ace_engine-master", "id": "2e6550db70361f5214d60710cb77ac63e9cc212319ecb5cedc770c305abfb661"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct CounterHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('Counter')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({\n          buttonName: '@CounterEnableInc',\n          buttonUrl: 'pages/components/button_selection/counter/CounterEnableIncSample'\n        });\n        CommonButton({\n          buttonName: '@CounterEnableDec',\n          buttonUrl: 'pages/components/button_selection/counter/CounterEnableDecSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\counter\\CounterHome.ets", "project_name": "arkui_ace_engine-master", "id": "136a2ce807a06c54723f3d7ccc2e00a499f0e9cd5bb7bc0d5207be666320ce94"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct DatePickerHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('DatePickerHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'DisappearTextStyle',\n          buttonUrl: 'pages/date_picker/DatePickerDisappearTextStyleSample'\n        });\n        CommonButton({ buttonName: 'Lunar', buttonUrl: 'pages/date_picker/DatePickerLunarSample' });\n        CommonButton({\n          buttonName: 'SelectedTextStyle',\n          buttonUrl: 'pages/date_picker/DatePickerSelectedTextStyleSample'\n        });\n        CommonButton({ buttonName: 'TextStyle', buttonUrl: 'pages/date_picker/DatePickerTextStyleSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\date_picker\\DatePickerHome.ets", "project_name": "arkui_ace_engine-master", "id": "183fa8549f94c076d37b37415a098d195eb8d47701c1f3512dd76c8e49c1f578"}
{"text": "import datePickerLunarTest from '../MyTest/DatePickerLunarTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerLunarSample {\n  @State pickerLunar: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerLunarTest)\n  }\n\n  build() {\n    Column() {\n      DatePicker({\n        start: new Date('1970-1-1'),\n        end: new Date('2100-1-1'),\n      }).lunar(this.pickerLunar).id('datePickerLunar')\n\n      Button('DatePickerLunar').onClick(() => {\n        this.pickerLunar = false\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\date_picker\\DatePickerLunarSample.ets", "project_name": "arkui_ace_engine-master", "id": "889f068b2836e4639d3981c541ec6e1cc93f3caedc160e2978277674c267024d"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonButtonStyleTest() {\n  \n  defineTest('buttonButtonStyleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonButtonStyleTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonButtonStyle1: Component =\n      await driver.findComponent(Matcher.create().id('buttonButtonStyle1').enabled(true))\n    let buttonButtonStyle2: Component =\n      await driver.findComponent(Matcher.create().id('buttonButtonStyle2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonButtonStyle2').enabled(true))\n\n    let buttonStyle1: string = await buttonButtonStyle1.getInspectorInfo()\n    assertEqual(JSON.parse(buttonStyle1).$attrs.buttonStyle, 'ButtonStyleMode.EMPHASIZED')\n\n    let buttonStyle2: string = await buttonButtonStyle2.getInspectorInfo()\n    assertEqual(JSON.parse(buttonStyle2).$attrs.buttonStyle, 'ButtonStyleMode.NORMAL')\n\n    await button.tap()\n    let buttonStyle3: string = await buttonButtonStyle2.getInspectorInfo()\n    assertEqual(JSON.parse(buttonStyle3).$attrs.buttonStyle, 'ButtonStyleMode.TEXTUAL')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonButtonStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "4f98129d75c7aed56323c80c20687ec41248c5eb8f4bb35e613d334fafa950f5"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonControlSizeTest() {\n  \n  defineTest('buttonControlSizeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonControlSizeTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonControlSize: Component =\n      await driver.findComponent(Matcher.create().id('buttonControlSize').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonControlSize').enabled(true))\n\n    let controlSize1: string = await buttonControlSize.getInspectorInfo()\n    assertEqual(JSON.parse(controlSize1).$attrs.controlSize, 'ControlSize.SMALL')\n\n    await button.tap()\n    let controlSize2: string = await buttonControlSize.getInspectorInfo()\n    assertEqual(JSON.parse(controlSize2).$attrs.controlSize, 'ControlSize.NORMAL')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonControlSizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "c3af515d0d4bc52fadee53710d45a5824e6e1692c387bfc3a89328c6892cf395"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonFontColorTest() {\n  \n  defineTest('buttonFontColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonFontColorTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonFontColor1: Component = await driver.findComponent(Matcher.create().id('buttonFontColor1').enabled(true))\n    let buttonFontColor2: Component = await driver.findComponent(Matcher.create().id('buttonFontColor2').enabled(true))\n    let buttonFontColor3: Component = await driver.findComponent(Matcher.create().id('buttonFontColor3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonFontColor3').enabled(true))\n\n    let fontColor1: string = await buttonFontColor1.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor1).$attrs.fontColor.toLowerCase(), Color.Black)\n\n    let fontColor2: string = await buttonFontColor2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor2).$attrs.fontColor, '#FF008000')\n\n    let fontColor3: string = await buttonFontColor3.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor3).$attrs.fontColor, '#FF8EFF65')\n\n    await button.tap()\n    let fontColor4: string = await buttonFontColor3.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor4).$attrs.fontColor, $r('sys.color.ohos_fa_palette1'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonFontColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "411dedd2aec675ba2a4cc739e281c3c7a6316fc9e34eaede37d195fc036c3565"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonFontFamilyTest() {\n  \n  defineTest('buttonFontFamilyTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonFontFamilyTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonFontFamily: Component = await driver.findComponent(Matcher.create().id('buttonFontFamily').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonFontFamily').enabled(true))\n\n    let fontFamily1: string = await buttonFontFamily.getInspectorInfo()\n    assertEqual(JSON.parse(fontFamily1).$attrs.fontFamily, 'Arial')\n\n    await button.tap()\n    let fontFamily2: string = await buttonFontFamily.getInspectorInfo()\n    assertEqual(JSON.parse(fontFamily2).$attrs.fontFamily, 'TESTFONT')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonFontFamilyTest.ets", "project_name": "arkui_ace_engine-master", "id": "ad094595a7ed9c03d508226e575b02f58914eb264fce3244b8978efd57ce8c69"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonFontSizeTest() {\n  \n  defineTest('buttonFontSizeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonFontSizeTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonFontSize1: Component = await driver.findComponent(Matcher.create().id('buttonFontSize1').enabled(true))\n    let buttonFontSize2: Component = await driver.findComponent(Matcher.create().id('buttonFontSize2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonFontSize2').enabled(true))\n\n    let fontSize1: string = await buttonFontSize1.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize1).$attrs.fontSize, '30.00fp')\n\n    let fontSize2: string = await buttonFontSize2.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize2).$attrs.fontSize, '50.00px')\n\n    await button.tap()\n    let fontSize3: string = await buttonFontSize2.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize3).$attrs.fontSize, $r('app.string.font_size'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonFontSizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "beddf9d5da9891eab9942ffc6243c92517f6cb1ac50006743692870aff7ec17c"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonFontStyleTest() {\n  \n  defineTest('buttonFontStyleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonFontStyleTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonFontStyle: Component = await driver.findComponent(Matcher.create().id('buttonFontStyle').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonFontStyle').enabled(true))\n\n    let fontStyle1: string = await buttonFontStyle.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle1).$attrs.fontStyle, 'FontStyle.Normal')\n\n    await button.tap()\n    let fontStyle2: string = await buttonFontStyle.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle2).$attrs.fontStyle, 'FontStyle.Italic')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonFontStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "931b47cb807d586bf526fdb646085a56bff7e532ba93c0784290341a5e284031"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function buttonStateEffectTest() {\n  \n  defineTest('buttonStateEffectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonStateEffectTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonStateEffect: Component =\n      await driver.findComponent(Matcher.create().id('buttonStateEffect').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonStateEffect').enabled(true))\n\n    let effect1: string = await buttonStateEffect.getInspectorInfo()\n    assertTrue(JSON.parse(effect1).$attrs.stateEffect)\n\n    await button.tap()\n    let effect2: string = await buttonStateEffect.getInspectorInfo()\n    assertFalse(JSON.parse(effect2).$attrs.stateEffect)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonStateEffectTest.ets", "project_name": "arkui_ace_engine-master", "id": "f21951e00005132270561b587bdd0a7559eec3193e02efe32498bf7ff09ac743"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function buttonTypeTest() {\n  \n  defineTest('buttonTypeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('buttonTypeTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonType1: Component = await driver.findComponent(Matcher.create().id('buttonType1').enabled(true))\n    let buttonType2: Component = await driver.findComponent(Matcher.create().id('buttonType2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonType2').enabled(true))\n\n    let type1: string = await buttonType1.getInspectorInfo()\n    assertEqual(JSON.parse(type1).$attrs.type, 'ButtonType.Capsule')\n\n    let type2: string = await buttonType2.getInspectorInfo()\n    assertEqual(JSON.parse(type2).$attrs.type, 'ButtonType.Circle')\n\n    await button.tap()\n    let type3: string = await buttonType2.getInspectorInfo()\n    assertEqual(JSON.parse(type3).$attrs.type, 'ButtonType.Normal')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\ButtonTypeTest.ets", "project_name": "arkui_ace_engine-master", "id": "c65d511f8cc48bb73f083ebfdefe2a88e2722310ca003a53f62c809b3f2e7a6c"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function checkboxGroupSelectAllTest() {\n  \n  defineTest('checkboxGroupSelectAllTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('checkboxGroupSelectAllTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxGroupSelectAll1: Component =\n      await driver.findComponent(Matcher.create().id('checkboxGroupSelectAll1').enabled(true))\n    let checkboxGroupSelectAll2: Component =\n      await driver.findComponent(Matcher.create().id('checkboxGroupSelectAll2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('CheckboxGroupSelectAll').enabled(true))\n\n    let selectAll1: string = await checkboxGroupSelectAll1.getInspectorInfo()\n    assertTrue(JSON.parse(selectAll1).$attrs.selectAll)\n\n    let selectAll2: string = await checkboxGroupSelectAll2.getInspectorInfo()\n    assertFalse(JSON.parse(selectAll2).$attrs.selectAll)\n\n    await button.tap()\n    let selectAll3: string = await checkboxGroupSelectAll1.getInspectorInfo()\n    assertFalse(JSON.parse(selectAll3).$attrs.selectAll)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CheckboxGroupSelectAllTest.ets", "project_name": "arkui_ace_engine-master", "id": "66370318a57de88806d084d637c10a1e2412dbd12880c21f9ef6f0c98be58493"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function checkboxGroupSelectedColorTest() {\n  \n  defineTest('checkboxGroupSelectedColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('checkboxGroupSelectedColorTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxGroupSelectedColor1: Component =\n      await driver.findComponent(Matcher.create().id('checkboxGroupSelectedColor1').enabled(true))\n    let checkboxGroupSelectedColor2: Component =\n      await driver.findComponent(Matcher.create().id('checkboxGroupSelectedColor2').enabled(true))\n    let checkboxGroupSelectedColor3: Component =\n      await driver.findComponent(Matcher.create().id('checkboxGroupSelectedColor3').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('CheckboxGroupSelectedColor').enabled(true))\n\n    let selectedColor1: string = await checkboxGroupSelectedColor1.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor1).$attrs.selectedColor.toLowerCase(), Color.Black)\n\n    let selectedColor2: string = await checkboxGroupSelectedColor2.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor2).$attrs.selectedColor, '#FFA52A2A')\n\n    let selectedColor3: string = await checkboxGroupSelectedColor3.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor3).$attrs.selectedColor, '#FF8EFF65')\n\n    await button.tap()\n    let selectedColor4: string = await checkboxGroupSelectedColor3.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor4).$attrs.selectedColor, $r('sys.color.ohos_fa_palette1'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CheckboxGroupSelectedColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "b24b690d9cbb59da1bfd008e14aeaae62d3f68faed0d38d71aae6f6e51d73699"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function checkboxSelectTest() {\n  \n  defineTest('checkboxSelectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('checkboxSelectTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxSelect: Component = await driver.findComponent(Matcher.create().id('checkboxSelect').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('CheckboxSelect').enabled(true))\n\n    let select1: string = await checkboxSelect.getInspectorInfo()\n    assertTrue(JSON.parse(select1).$attrs.select)\n\n    await button.tap()\n    let select2: string = await checkboxSelect.getInspectorInfo()\n    assertFalse(JSON.parse(select2).$attrs.select)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CheckboxSelectTest.ets", "project_name": "arkui_ace_engine-master", "id": "fc3d7efb297245b0bd595272af89869843995b8ea70407bc66fe4e811a61a01a"}
{"text": "import { assertTrue, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function checkboxShapeTest() {\n  \n  defineTest('checkboxShapeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('checkboxShapeTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxShape: Component = await driver.findComponent(Matcher.create().id('checkboxShape').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('CheckboxShape').enabled(true))\n\n    let shape1: string = await checkboxShape.getInspectorInfo()\n    assertTrue(JSON.parse(shape1).$attrs.shape == CheckBoxShape.CIRCLE)\n\n    await button.tap()\n    let shape2: string = await checkboxShape.getInspectorInfo()\n    assertTrue(JSON.parse(shape2).$attrs.shape == CheckBoxShape.ROUNDED_SQUARE)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CheckboxShapeTest.ets", "project_name": "arkui_ace_engine-master", "id": "242dd24e9df5868a2eb8114ea2d0a5be84ba7bd4c5f6dceaa296db86d319bfb3"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function checkboxUnSelectedColorTest() {\n  \n  defineTest('checkboxUnSelectedColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('checkboxUnSelectedColorTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxUnSelectedColor1: Component =\n      await driver.findComponent(Matcher.create().id('checkboxUnSelectedColor1').enabled(true))\n    let checkboxUnSelectedColor2: Component =\n      await driver.findComponent(Matcher.create().id('checkboxUnSelectedColor2').enabled(true))\n    let checkboxUnSelectedColor3: Component =\n      await driver.findComponent(Matcher.create().id('checkboxUnSelectedColor3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('CheckboxUnSelectedColor').enabled(true))\n\n    let unselectedColor1: string = await checkboxUnSelectedColor1.getInspectorInfo()\n    assertEqual(JSON.parse(unselectedColor1).$attrs.unselectedColor.toLowerCase(), Color.Black)\n\n    let unselectedColor2: string = await checkboxUnSelectedColor2.getInspectorInfo()\n    assertEqual(JSON.parse(unselectedColor2).$attrs.unselectedColor, '#FFA52A2A')\n\n    let unselectedColor3: string = await checkboxUnSelectedColor3.getInspectorInfo()\n    assertEqual(JSON.parse(unselectedColor3).$attrs.unselectedColor, '#FF8EFF65')\n\n    await button.tap()\n    let unselectedColor4: string = await checkboxUnSelectedColor3.getInspectorInfo()\n    assertEqual(JSON.parse(unselectedColor4).$attrs.unselectedColor, $r('sys.color.ohos_fa_palette1'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CheckboxUnselectedColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "75fb2882a007f50ab9f4899d79ce002567478e113b8020a73ebb05323ecd5920"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function counterEnableDecTest() {\n  \n  defineTest('counterEnableDecTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('counterEnableDecTestDemo running')\n    let driver: Tester = Tester.create()\n    let counterEnableDec: Component = await driver.findComponent(Matcher.create().id('counterEnableDec').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('CounterEnableDec').enabled(true))\n\n    let enableDec1: string = await counterEnableDec.getInspectorInfo()\n    assertFalse(JSON.parse(enableDec1).$attrs.enableDec == undefined)\n    assertFalse(JSON.parse(enableDec1).$attrs.enableDec)\n\n    await button1.tap()\n    let enableDec2: string = await counterEnableDec.getInspectorInfo()\n    assertTrue(JSON.parse(enableDec2).$attrs.enableDec)\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CounterEnableDecTest.ets", "project_name": "arkui_ace_engine-master", "id": "364f17c81b91f6ca843dfdaa9a10a1e258acf4bfadef7b3d6b5a77d0474cfbc4"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function counterEnableIncTest() {\n  \n  defineTest('counterEnableIncTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('counterEnableIncTestDemo running')\n    let driver: Tester = Tester.create()\n    let counterEnableInc: Component = await driver.findComponent(Matcher.create().id('counterEnableInc').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('CounterEnableInc').enabled(true))\n\n    let enableInc1: string = await counterEnableInc.getInspectorInfo()\n    assertFalse(JSON.parse(enableInc1).$attrs.enableInc == undefined)\n    assertFalse(JSON.parse(enableInc1).$attrs.enableInc)\n\n    await button1.tap()\n    let enableInc2: string = await counterEnableInc.getInspectorInfo()\n    assertTrue(JSON.parse(enableInc2).$attrs.enableInc)\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\CounterEnableIncTest.ets", "project_name": "arkui_ace_engine-master", "id": "99b81415d2611f06e5547bd995ca71bef0181209dccb513633d35907286974d5"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function datePickerLunarTest() {\n  \n  defineTest('datePickerLunarTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('datePickerLunarTestDemo running')\n    let driver: Tester = Tester.create()\n    let datePickerLunar: Component = await driver.findComponent(Matcher.create().id('datePickerLunar').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('DatePickerLunar').enabled(true))\n\n    let lunar1: string = await datePickerLunar.getInspectorInfo()\n    assertTrue(JSON.parse(lunar1).$attrs.lunar)\n\n    await button.tap()\n    let lunar2: string = await datePickerLunar.getInspectorInfo()\n    assertFalse(JSON.parse(lunar2).$attrs.lunar)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\DatePickerLunarTest.ets", "project_name": "arkui_ace_engine-master", "id": "8010f996b34ab626244b8c16ef59ac54b30e26786298dfb7ef4713803ea5f135"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function radioCheckedTest() {\n  \n  defineTest('radioCheckedTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('radioCheckedTestDemo running')\n    let driver: Tester = Tester.create()\n    let radioChecked: Component = await driver.findComponent(Matcher.create().id('radioChecked').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('RadioChecked').enabled(true))\n\n    let checked1: boolean = await radioChecked.isChecked()\n    assertTrue(checked1)\n\n    await button.tap()\n    let checked2: boolean = await radioChecked.isChecked()\n    assertFalse(checked2)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\RadioCheckedTest.ets", "project_name": "arkui_ace_engine-master", "id": "25701892635e473c7f75c561854ad6919bf34e1a94c32bada6942b907d28d047"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function selectArrowPositionTest() {\n  \n  defineTest('selectArrowPositionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('selectArrowPositionTestDemo running')\n    let driver: Tester = Tester.create()\n    let selectArrowPosition: Component =\n      await driver.findComponent(Matcher.create().id('selectArrowPosition').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('SelectArrowPosition').enabled(true))\n\n    let arrowPosition1: string = await selectArrowPosition.getInspectorInfo()\n    assertEqual(JSON.parse(arrowPosition1).$attrs.arrowPosition, 'ArrowPosition.END')\n\n    await button.tap()\n    let arrowPosition2: string = await selectArrowPosition.getInspectorInfo()\n    assertEqual(JSON.parse(arrowPosition2).$attrs.arrowPosition, 'ArrowPosition.START')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SelectArrowPositionTest.ets", "project_name": "arkui_ace_engine-master", "id": "33005f08bf68a05ced864d43fd82a5e505133a4bfd68b2d19c556b43fe71d3bf"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function selectOptionFontColorTest() {\n  \n  defineTest('selectOptionFontColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('selectOptionFontColorTestDemo running')\n    let driver: Tester = Tester.create()\n    let selectOptionFontColor1: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionFontColor1').enabled(true))\n    let selectOptionFontColor2: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionFontColor2').enabled(true))\n    let selectOptionFontColor3: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionFontColor3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('SelectOptionFontColor').enabled(true))\n\n    let optionFontColor1: string = await selectOptionFontColor1.getInspectorInfo()\n    assertEqual(JSON.parse(optionFontColor1).$attrs.optionFontColor.toLowerCase(), Color.Blue)\n\n    let optionFontColor2: string = await selectOptionFontColor2.getInspectorInfo()\n    assertEqual(JSON.parse(optionFontColor2).$attrs.optionFontColor, '#FFFFF000')\n\n    let optionFontColor3: string = await selectOptionFontColor3.getInspectorInfo()\n    assertEqual(JSON.parse(optionFontColor3).$attrs.optionFontColor, '#FF8EFF65')\n\n    await button.tap()\n    let optionFontColor4: string = await selectOptionFontColor3.getInspectorInfo()\n    assertEqual(JSON.parse(optionFontColor4).$attrs.optionFontColor, $r('sys.color.ohos_fa_palette1'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SelectOptionFontColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "370488760e3bc8af862e8dbced3e78e535feea97756283e612477fe86bb33edf"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function selectOptionHeightTest() {\n  \n  defineTest('selectOptionHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('selectOptionHeightTestDemo running')\n    let driver: Tester = Tester.create()\n    let selectOptionHeight1: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionHeight1').enabled(true))\n    let selectOptionHeight2: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionHeight2').enabled(true))\n    let selectOptionHeight3: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionHeight3').enabled(true))\n    let selectOptionHeight4: Component =\n      await driver.findComponent(Matcher.create().id('selectOptionHeight4').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('SelectOptionHeight').enabled(true))\n\n    let optionHeight1: string = await selectOptionHeight1.getInspectorInfo()\n    assertEqual(JSON.parse(optionHeight1).$attrs.optionHeight, '100.000000')\n\n    let optionHeight2: string = await selectOptionHeight2.getInspectorInfo()\n    assertEqual(JSON.parse(optionHeight2).$attrs.optionHeight, '300.000000')\n\n    let optionHeight3: string = await selectOptionHeight3.getInspectorInfo()\n    assertEqual(JSON.parse(optionHeight3).$attrs.optionHeight, '300.000000')\n\n    let optionHeight4: string = await selectOptionHeight4.getInspectorInfo()\n    assertEqual(JSON.parse(optionHeight4).$attrs.optionHeight, '150.000000')\n\n    await button.tap()\n    let optionHeight5: string = await selectOptionHeight4.getInspectorInfo()\n    assertEqual(JSON.parse(optionHeight5).$attrs.optionHeight, $r('app.string.option_height'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SelectOptionHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "7cc880b1b9b6cb5582c5c1021248aaaa75ca3c026583f4cf84b2e82136bcb3b5"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function selectValueTest() {\n  \n  defineTest('selectValueTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('selectValueTestDemo running')\n    let driver: Tester = Tester.create()\n    let selectValue: Component = await driver.findComponent(Matcher.create().id('selectValue').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('SelectValue').enabled(true))\n\n    let value1: string = await selectValue.getInspectorInfo()\n    assertEqual(JSON.parse(value1).$attrs.value, '2')\n\n    await button.tap()\n    let value2: string = await selectValue.getInspectorInfo()\n    assertEqual(JSON.parse(value2).$attrs.value, $r('app.string.select_value'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SelectValueTest.ets", "project_name": "arkui_ace_engine-master", "id": "5ab4857ce65060cba3e0c461aee5ccda9170237c163958d55cf05814014ce784"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function sliderBlockColorTest() {\n  \n  defineTest('sliderBlockColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sliderBlockColorTestDemo running')\n    let driver: Tester = Tester.create()\n    let sliderBlockColor1: Component =\n      await driver.findComponent(Matcher.create().id('sliderBlockColor1').enabled(true))\n    let sliderBlockColor2: Component =\n      await driver.findComponent(Matcher.create().id('sliderBlockColor2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('SliderBlockColor1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('SliderBlockColor2').enabled(true))\n\n    let blockColor1: string = await sliderBlockColor1.getInspectorInfo()\n    assertEqual(JSON.parse(blockColor1).$attrs.blockColor.toLowerCase(), Color.Red)\n\n    let blockColor2: string = await sliderBlockColor2.getInspectorInfo()\n    assertEqual(JSON.parse(blockColor2).$attrs.blockColor, '#FF008000')\n\n    await button1.tap()\n    let blockColor3: string = await sliderBlockColor1.getInspectorInfo()\n    assertEqual(JSON.parse(blockColor3).$attrs.blockColor, '#FFFFFF00')\n\n    await button2.tap()\n    let blockColor4: string = await sliderBlockColor2.getInspectorInfo()\n    assertEqual(JSON.parse(blockColor4).$attrs.blockColor, $r('sys.color.ohos_fa_palette1'))\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SliderBlockColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "9a2b5a849779fd89b31b2d2d14f083b84b3e3c57276ac5898bb717ba06917e0a"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function sliderSelectedColorTest() {\n  \n  defineTest('sliderSelectedColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sliderSelectedColorTestDemo running')\n    let driver: Tester = Tester.create()\n    let sliderSelectedColor1: Component =\n      await driver.findComponent(Matcher.create().id('sliderSelectedColor1').enabled(true))\n    let sliderSelectedColor2: Component =\n      await driver.findComponent(Matcher.create().id('sliderSelectedColor2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('SliderSelectedColor1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('SliderSelectedColor2').enabled(true))\n\n    let selectedColor1: string = await sliderSelectedColor1.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor1).$attrs.selectedColor.toLowerCase(), Color.Red)\n\n    let selectedColor2: string = await sliderSelectedColor2.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor2).$attrs.selectedColor, '#FF008000')\n\n    await button1.tap()\n    let selectedColor3: string = await sliderSelectedColor1.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor3).$attrs.selectedColor, '#FFFFFF00')\n\n    await button2.tap()\n    let selectedColor4: string = await sliderSelectedColor2.getInspectorInfo()\n    assertEqual(JSON.parse(selectedColor4).$attrs.selectedColor, $r('sys.color.ohos_fa_palette1'))\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SliderSelectedColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "186b2d63a5bd6d72e082310ed77e848f3918d067a37d38e9b3293cc70dc55776"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function sliderShowStepsTest() {\n  \n  defineTest('sliderShowStepsTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sliderShowStepsTestDemo running')\n    let driver: Tester = Tester.create()\n    let sliderShowSteps: Component = await driver.findComponent(Matcher.create().id('sliderShowSteps').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('SliderShowSteps').enabled(true))\n\n    let showSteps1: string = await sliderShowSteps.getInspectorInfo()\n    assertTrue(JSON.parse(showSteps1).$attrs.showSteps)\n\n    await button.tap()\n    let showSteps2: string = await sliderShowSteps.getInspectorInfo()\n    assertFalse(JSON.parse(showSteps2).$attrs.showSteps)\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SliderShowStepsTest.ets", "project_name": "arkui_ace_engine-master", "id": "fcc64b3e03ea9451047bc3ba20df7a75855948ef6fceb5f91e234b1e83a620e6"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function sliderShowTipsTest() {\n  \n  defineTest('sliderShowTipsTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sliderShowTipsTestDemo running')\n    let driver: Tester = Tester.create()\n    let sliderShowTips1: Component = await driver.findComponent(Matcher.create().id('sliderShowTips1').enabled(true))\n    let sliderShowTips2: Component = await driver.findComponent(Matcher.create().id('sliderShowTips2').enabled(true))\n    let sliderShowTips3: Component = await driver.findComponent(Matcher.create().id('sliderShowTips3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('SliderShowTips1').enabled(true))\n\n    let showTips1: string = await sliderShowTips1.getInspectorInfo()\n    assertFalse(JSON.parse(showTips1).$attrs.showTips)\n\n    let showTips2: string = await sliderShowTips2.getInspectorInfo()\n    assertTrue(JSON.parse(showTips2).$attrs.showTips)\n    assertEqual(JSON.parse(showTips2).$attrs.showTips.content, 'hello')\n\n    let showTips3: string = await sliderShowTips3.getInspectorInfo()\n    assertTrue(JSON.parse(showTips3).$attrs.showTips)\n    assertEqual(JSON.parse(showTips3).$attrs.showTips.content, $r('app.string.app_name'))\n\n    await button.tap()\n    let showTips4: string = await sliderShowTips1.getInspectorInfo()\n    assertTrue(JSON.parse(showTips4).$attrs.showTips)\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\SliderShowTipsTest.ets", "project_name": "arkui_ace_engine-master", "id": "5b6f8cde9ef41b67336600994a5506d32d03f1281b6a0a2143cd95181504e882"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textPickerCanLoopTest() {\n  \n  defineTest('textPickerCanLoopTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textPickerCanLoopTestDemo running')\n    let driver: Tester = Tester.create()\n    let textPickerCanLoop: Component =\n      await driver.findComponent(Matcher.create().id('textPickerCanLoop').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextPickerCanLoop').enabled(true))\n\n    let canLoop1: string = await textPickerCanLoop.getInspectorInfo()\n    assertTrue(JSON.parse(canLoop1).$attrs.canLoop)\n\n    await button.tap()\n    let canLoop2: string = await textPickerCanLoop.getInspectorInfo()\n    assertFalse(JSON.parse(canLoop2).$attrs.canLoop)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\TextPickerCanLoopTest.ets", "project_name": "arkui_ace_engine-master", "id": "d34d77f3d80444e8832de113b181e1d41f8ac3c96bc949fe9057d380bea6f177"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textPickerDefaultPickerItemHeightTest() {\n  \n  defineTest('textPickerDefaultPickerItemHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textPickerDefaultPickerItemHeightTestDemo running')\n    let driver: Tester = Tester.create()\n    let textPickerDefaultPickerItemHeight: Component =\n      await driver.findComponent(Matcher.create().id('textPickerDefaultPickerItemHeight').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('TextPickerDefaultPickerItemHeight').enabled(true))\n\n    let defaultPickerItemHeight1: string = await textPickerDefaultPickerItemHeight.getInspectorInfo()\n    assertEqual(JSON.parse(defaultPickerItemHeight1).$attrs.defaultPickerItemHeight, '100.00fp')\n\n    await button.tap()\n    let defaultPickerItemHeight2: string = await textPickerDefaultPickerItemHeight.getInspectorInfo()\n    assertEqual(JSON.parse(defaultPickerItemHeight2).$attrs.defaultPickerItemHeight, '50.00px')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\TextPickerDefaultPickerItemHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "653afbfe0f1571e6733512079d04cfe64397210ea96c1b9152a3cd5ad8014cb5"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function timePickerLoopTest() {\n  \n  defineTest('timePickerLoopTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('timePickerLoopTestDemo running')\n    let driver: Tester = Tester.create()\n    let timePickerLoop: Component = await driver.findComponent(Matcher.create().id('timePickerLoop').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TimePickerLoop').enabled(true))\n\n    let loop1: string = await timePickerLoop.getInspectorInfo()\n    assertTrue(JSON.parse(loop1).$attrs.loop)\n\n    await button.tap()\n    let loop2: string = await timePickerLoop.getInspectorInfo()\n    assertFalse(JSON.parse(loop2).$attrs.loop)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\TimePickerLoopTest.ets", "project_name": "arkui_ace_engine-master", "id": "ed084ee1bd9189441f53953cf3da24fcd9e5db83d1d1e557f768efe66576d726"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function timePickerUseMilitaryTimeTest() {\n  \n  defineTest('timePickerUseMilitaryTimeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('timePickerUseMilitaryTimeTestDemo running')\n    let driver: Tester = Tester.create()\n    let timePickerUseMilitaryTime: Component =\n      await driver.findComponent(Matcher.create().id('timePickerUseMilitaryTime').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TimePickerUseMilitaryTime').enabled(true))\n\n    let useMilitaryTime1: string = await timePickerUseMilitaryTime.getInspectorInfo()\n    assertTrue(JSON.parse(useMilitaryTime1).$attrs.useMilitaryTime)\n\n    await button.tap()\n    let useMilitaryTime2: string = await timePickerUseMilitaryTime.getInspectorInfo()\n    assertFalse(JSON.parse(useMilitaryTime2).$attrs.useMilitaryTime)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\MyTest\\TimePickerUseMilitaryTimeTest.ets", "project_name": "arkui_ace_engine-master", "id": "0b753bd42d23d65926e3aca244b859e8cd5a9b912cc8f4d2e24f26c4b76cbabe"}
{"text": "import radioCheckedTest from '../MyTest/RadioCheckedTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RadioCheckedSample {\n  @State checkedTest: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(radioCheckedTest)\n  }\n\n  build() {\n    Column() {\n      Radio({ value: 'Radio1', group: 'radioGroup' }).checked(this.checkedTest).id('radioChecked')\n\n      Button('RadioChecked').onClick(() => {\n        this.checkedTest = false\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\radio\\RadioCheckedSample.ets", "project_name": "arkui_ace_engine-master", "id": "438db1a5d9bba7c972b8869363baa91e14dde2fda3fda1b00d67a94a624eb416"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct RadioHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('RadioHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'Checked', buttonUrl: 'pages/radio/RadioCheckedSample' });\n        CommonButton({ buttonName: 'RadioStyle', buttonUrl: 'pages/radio/RadioRadioStyleSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\radio\\RadioHome.ets", "project_name": "arkui_ace_engine-master", "id": "5b0dbcc556c2c77522f693cf29b703fedd60b53e7f83024ea6953c413d8594db"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct RatingHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('RatingHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'Stars', buttonUrl: 'pages/rating/RatingStarsSample' });\n        CommonButton({ buttonName: 'StarStyle', buttonUrl: 'pages/rating/RatingStarStyleSample' });\n        CommonButton({ buttonName: 'StepSize', buttonUrl: 'pages/rating/RatingStepSizeSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\rating\\RatingHome.ets", "project_name": "arkui_ace_engine-master", "id": "a0fd1ce8d4ca74d55a583f33afc643cac3abcb80846629d4a0054e58c45eae9d"}
{"text": "import ratingStarsTest from '../MyTest/RatingStarsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RatingStarsSample {\n  @State starsTest: number = 3\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ratingStarsTest)\n  }\n\n  build() {\n    Column() {\n      Rating().stars(5).id('ratingStars1')\n      Rating().stars(this.starsTest).id('ratingStars2')\n\n      Button('RatingStars').onClick(() => {\n        this.starsTest = 2\n      })\n    }.width('100%').height('100%').backgroundColor('#F1F3F5')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\rating\\RatingStarsSample.ets", "project_name": "arkui_ace_engine-master", "id": "70d2321f8ab2e9d4367d14da0d6e1034565df2de883041515b146f99a2872eea"}
{"text": "import ratingStarStyleTest from '../MyTest/RatingStarStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RatingStarStyleSample {\n  @State starStyleTest: string = '/pages/slider/StarYellow.png'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ratingStarStyleTest)\n  }\n\n  build() {\n    Column() {\n      Rating().starStyle({\n        backgroundUri: undefined,\n        foregroundUri: undefined,\n        secondaryUri: undefined\n      }).id('ratingStarStyle1')\n\n      Rating().starStyle({\n        backgroundUri: this.starStyleTest,\n        foregroundUri: undefined,\n        secondaryUri: undefined\n      }).id('ratingStarStyle2')\n\n      Rating().starStyle({\n        backgroundUri: '/pages/rating/StarBlue.png',\n        foregroundUri: '/pages/slider/StarYellow.png',\n        secondaryUri: '/pages/rating/StarOrange.png'\n      }).id('ratingStarStyle3')\n\n      Button('RatingStarStyle').onClick(() => {\n        this.starStyleTest = '/pages/slider/StarYellow.png'\n      })\n    }.width('100%').height('100%').backgroundColor('#F1F3F5')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\rating\\RatingStarStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "0404a752f0f9d197655d3aace380d6a1b831230531590835e6347a72cbc6de0b"}
{"text": "import ratingStepSizeTest from '../MyTest/RatingStepSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RatingStepSizeSample {\n  @State stepSizeTest: number = 0.2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ratingStepSizeTest)\n  }\n\n  build() {\n    Column() {\n      Rating().stars(5).stepSize(0.5).id('ratingStepSize1')\n      Rating().stars(5).stepSize(this.stepSizeTest).id('ratingStepSize2')\n\n      Button('RatingStepSize').onClick(() => {\n        this.stepSizeTest = 5\n      })\n    }.width('100%').height('100%').backgroundColor('#F1F3F5')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\rating\\RatingStepSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d2fdbb764c085c06177bdf119791c718168050bb0a733d883bd0e39a2bde1327"}
{"text": "import selectArrowPositionTest from '../MyTest/SelectArrowPositionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectArrowPositionSample {\n  @State arrowPos: ArrowPosition = ArrowPosition.END\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectArrowPositionTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'aaa' },\n        { value: 'bbb' },])\n        .arrowPosition(this.arrowPos)\n        .id('selectArrowPosition')\n\n      Button('SelectArrowPosition').onClick(() => {\n        this.arrowPos = ArrowPosition.START\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectArrowPositionSample.ets", "project_name": "arkui_ace_engine-master", "id": "a4bb0a3ce1ce383affa206a46ea9490e5f97e9dbc485d56a22c57a3f3491903a"}
{"text": "import selectFontColorTest from '../MyTest/SelectFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectFontColorSample {\n  @State text: string = \"Title\"\n  @State fontColorTest: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.text)\n        .fontColor(Color.Red)\n        .id('selectFontColor1')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.text)\n        .fontColor(0xa52a2a)\n        .id('selectFontColor2')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.text)\n        .fontColor(this.fontColorTest)\n        .id('selectFontColor3')\n\n      Button('SelectFontColor').onClick(() => {\n        this.fontColorTest = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "2d6e9553d6b19e926969d17221325634d502956779c08fc63710e2407d8c07a4"}
{"text": "import selectMenuAlignTest from '../MyTest/SelectMenuAlignTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectMenuAlignSample {\n  @State menuAlignMenu: MenuAlignType = MenuAlignType.CENTER\n  @State menuAlignNum: number = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectMenuAlignTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .menuAlign(MenuAlignType.START, { dx: 0, dy: 0 })\n        .id('selectMenuAlign1')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .menuAlign(this.menuAlignMenu, { dx: this.menuAlignNum, dy: this.menuAlignNum })\n        .id('selectMenuAlign2')\n\n      Button('SelectMenuAlign').onClick(() => {\n        this.menuAlignMenu = MenuAlignType.END;\n        this.menuAlignNum = -5\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectMenuAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "7bc2ac637013f6914159f5223f74f9dc75121e49dcc4bc43b058dce3f107c44a"}
{"text": "import selectMenuBackgroundColorTest from '../MyTest/SelectMenuBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectMenuBackgroundColorSample {\n  @State text: string = \"Title\"\n  @State fontColorTest: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectMenuBackgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.text)\n        .menuBackgroundColor(Color.Red)\n        .id('selectMenuBackgroundColor1')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.text)\n        .menuBackgroundColor(0xa52a2a)\n        .id('selectMenuBackgroundColor2')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.text)\n        .menuBackgroundColor(this.fontColorTest)\n        .id('selectMenuBackgroundColor3')\n\n      Button('SelectMenuBackgroundColor').onClick(() => {\n        this.fontColorTest = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectMenuBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "bf635e8d1999987fc71816efd1a2d221f634ef314618185db0b73e0169f9674b"}
{"text": "import selectOptionBgColorTest from '../MyTest/SelectOptionBgColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectOptionBgColorSample {\n  @State optionBgCol: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectOptionBgColorTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' },]).optionBgColor(Color.Green).id('selectOptionBgColor1')\n      Select([{ value: 'select1' },\n        { value: 'select2' },]).optionBgColor(0xa52a2a).id('selectOptionBgColor2')\n      Select([{ value: 'select1' },\n        { value: 'select2' },]).optionBgColor(this.optionBgCol).id('selectOptionBgColor3')\n\n      Button('SelectOptionBgColor').onClick(() => {\n        this.optionBgCol = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectOptionBgColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "ab8e9d49c1ff88db20a563969ad2b3da0238a2dca2a183b5edf440fea53a6093"}
{"text": "import selectOptionFontColorTest from '../MyTest/SelectOptionFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectOptionFontColorSample {\n  @State text: string = \"Title\"\n  @State optionFontCol: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectOptionFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .value(this.text)\n        .optionFontColor(Color.Blue)\n        .id('selectOptionFontColor1')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .value(this.text)\n        .optionFontColor(0xfff000)\n        .id('selectOptionFontColor2')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .value(this.text)\n        .optionFontColor(this.optionFontCol)\n        .id('selectOptionFontColor3')\n\n      Button('SelectOptionFontColor').onClick(() => {\n        this.optionFontCol = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectOptionFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "c33d5bfcf347d38969ca7ee6e749a03a9a70516da556b428ca4c0ca0824c5a6e"}
{"text": "import selectOptionHeightTest from '../MyTest/SelectOptionHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectOptionHeightSample {\n  @State optionHeightTest: Dimension = '100lpx'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectOptionHeightTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionHeight('100px')\n        .id('selectOptionHeight1')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionHeight('100vp')\n        .id('selectOptionHeight2')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionHeight('100fp')\n        .id('selectOptionHeight3')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionHeight(this.optionHeightTest)\n        .id('selectOptionHeight4')\n\n      Button('SelectOptionHeight').onClick(() => {\n        this.optionHeightTest = $r('app.string.option_height');\n      })\n\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectOptionHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "70b388826ffcf1fff434fb0036b83fe5511f68a8955cc9f7db716ad4f5e9ccbf"}
{"text": "import selectOptionWidthTest from '../MyTest/SelectOptionWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectOptionWidthSample {\n  @State optionNum: Dimension = '100lpx'\n  @State optionWidthTest: OptionWidthMode = OptionWidthMode.FIT_CONTENT\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectOptionWidthTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionWidth('100px')\n        .id('selectOptionWidth1')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionWidth('100vp')\n        .id('selectOptionWidth2')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionWidth('100fp')\n        .id('selectOptionWidth3')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionWidth(this.optionNum)\n        .id('selectOptionWidth4')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .optionWidth(this.optionWidthTest)\n        .id('selectOptionWidth5')\n\n      Button('SelectOptionWidth').onClick(() => {\n        this.optionNum = $r('app.string.option_num')\n        this.optionWidthTest = OptionWidthMode.FIT_TRIGGER;\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectOptionWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "2ad7c9200f097370b019bb341b3e27ce5eabbeb02108e3638da2134df0a1142b"}
{"text": "import selectSelectedOptionBgColorTest from '../MyTest/SelectSelectedOptionBgColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectSelectedOptionBgColorSample {\n  @State selectedOpFontCol: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectSelectedOptionBgColorTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selectedOptionBgColor(Color.Green)\n        .id('selectSelectedOptionBgColor1')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selectedOptionBgColor(0xffa500)\n        .id('selectSelectedOptionBgColor2')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selectedOptionBgColor(this.selectedOpFontCol)\n        .id('selectSelectedOptionBgColor3')\n\n      Button('SelectSelectedOptionBgColor').onClick(() => {\n        this.selectedOpFontCol = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectSelectedOptionBgColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "82f7b2a175e06186eed051b74164cc9207f7a7775ec0537b33ddf216a226d194"}
{"text": "import selectSelectedOptionFontColorTest from '../MyTest/SelectSelectedOptionFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectSelectedOptionFontColorSample {\n  @State selectedOpBgCol: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectSelectedOptionFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selectedOptionFontColor(Color.Green)\n        .id('selectSelectedOptionFontColor1')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selectedOptionFontColor(0xffa500)\n        .id('selectSelectedOptionFontColor2')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selectedOptionFontColor(this.selectedOpBgCol)\n        .id('selectSelectedOptionFontColor3')\n\n      Button('SelectSelectedOptionFontColor').onClick(() => {\n        this.selectedOpBgCol = $r('sys.color.ohos_fa_palette1')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectSelectedOptionFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "65ac711f484883a49860871e1637316cb6f9fde4552d993dc26e4b297efbf1d7"}
{"text": "import selectSelectedTest from '../MyTest/SelectSelectedTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectSelectedSample {\n  @State selectedIndex: number | Resource = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectSelectedTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selected(undefined)\n        .id('selectSelected1')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selected(null)\n        .id('selectSelected2')\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .selected(this.selectedIndex)\n        .id('selectSelected3')\n\n      Button('SelectSelected').onClick(() => {\n        this.selectedIndex = $r('app.string.selected_index')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectSelectedSample.ets", "project_name": "arkui_ace_engine-master", "id": "3e55106bed4b2c54adf752019a66275056285ded97e32222663a2c1c49ddbe4a"}
{"text": "import selectSpaceTest from '../MyTest/SelectSpaceTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectSpaceSample {\n  @State text: string = \"Title\"\n  @State selectSpace: number | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectSpaceTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .value(this.text)\n        .space('30px')\n        .id('selectSpace1')\n      Select([{ value: 'select1' },\n        { value: 'select2' },])\n        .value(this.text)\n        .space(this.selectSpace)\n        .id('selectSpace2')\n\n      Button('SelectSpace').onClick(() => {\n        this.selectSpace = $r('app.string.select_space')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectSpaceSample.ets", "project_name": "arkui_ace_engine-master", "id": "7620edb47beb0ad91d4b7546da5efcb2cf9594a4e13adc262f954b752800635d"}
{"text": "import selectValueTest from '../MyTest/SelectValueTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SelectValue {\n  @State selectValue: string | Resource = '2'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(selectValueTest)\n  }\n\n  build() {\n    Column() {\n      Select([{ value: 'select1' },\n        { value: 'select2' }])\n        .value(this.selectValue)\n        .id('selectValue')\n\n      Button('SelectValue').onClick(() => {\n        this.selectValue = $r('app.string.select_value')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\select\\SelectValueSample.ets", "project_name": "arkui_ace_engine-master", "id": "ae02e590af7fed4ad987440d80200561f7dbd8ca28f6ffcecc8c3f6bf9d3b9c3"}
{"text": "import sliderBlockBorderWidthTest from '../MyTest/SliderBlockBorderWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderBlockBorderWidthSample {\n  @State blockBorWidth: Length = 50\n  @State blockBorWid: Length = '5px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderBlockBorderWidthTest)\n  }\n\n  build() {\n    Column() {\n      Slider().blockStyle({ type: SliderBlockType.DEFAULT }).blockBorderWidth(1).id('sliderBlockBorderWidth1')\n      Slider().blockStyle({ type: SliderBlockType.IMAGE }).blockBorderWidth(2).id('sliderBlockBorderWidth2')\n      Slider()\n        .blockStyle({ type: SliderBlockType.SHAPE })\n        .blockBorderWidth(this.blockBorWidth)\n        .id('sliderBlockBorderWidth3')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockSize({ width: 40, height: 40 })\n        .blockBorderWidth(this.blockBorWid)\n        .id('sliderBlockBorderWidth4')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockSize({ width: 40, height: 40 })\n        .blockBorderWidth(this.blockBorWidth)\n        .id('sliderBlockBorderWidth5')\n\n      Button('SliderBlockBorderWidth').onClick(() => {\n        this.blockBorWidth = $r('app.string.border_width')\n        this.blockBorWid = 30\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderBlockBorderWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "10b424f055af765e39259e5df1665121f283e52dec7e6b9facd2986fb7ba2941"}
{"text": "import sliderBlockColorTest from '../MyTest/SliderBlockColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderBlockColorSample {\n  @State blockColorStatusOne: ResourceColor = Color.Red\n  @State blockColorStatusTwo: ResourceColor = 0x008000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderBlockColorTest)\n  }\n\n  build() {\n    Column() {\n      Slider().blockColor(this.blockColorStatusOne).id('sliderBlockColor1')\n      Slider().blockColor(this.blockColorStatusTwo).id('sliderBlockColor2')\n      Button('SliderBlockColor1')\n        .onClick(() => {\n          this.blockColorStatusOne = '#ffff00'\n        }).margin(10)\n      Button('SliderBlockColor2')\n        .onClick(() => {\n          this.blockColorStatusTwo = $r('sys.color.ohos_fa_palette1')\n        })\n    }\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderBlockColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "baee792e18824b3ef3798c8f0f1cc08ff0ce61bfc3157f5f9f839a5cc15c4e05"}
{"text": "import sliderBlockSizeTest from '../MyTest/SliderBlockSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderBlockSizeSample {\n  @State sliderSize: SizeOptions = { width: '60px', height: '60px' }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderBlockSizeTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockSize({ width: 40, height: 40 })\n        .id('sliderBlockSize1')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockSize({ width: 0, height: 0 })\n        .id('sliderBlockSize2')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockSize(this.sliderSize)\n        .id('sliderBlockSize3')\n\n      Button('SliderBlockSize').onClick(() => {\n        this.sliderSize = {\n          width: $r('app.string.slider_blockSize'),\n          height: $r('app.string.slider_blockSize')\n        }\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderBlockSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "f514a8abeb46ea7466857aa562e309618ebe9204e05a95b110d3694e183cff9a"}
{"text": "import sliderBlockStyleTest from '../MyTest/SliderBlockStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderBlockStyleSample {\n  @State sliderStyle: SliderBlockStyle = {\n    type: SliderBlockType.IMAGE,\n    image: \"/pages/slider/StarYellow.png\", shape: new Path({ commands: 'M60 60 M30 30 L15 56 L45 56 Z' })\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderBlockStyleTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockStyle({ type: SliderBlockType.DEFAULT, shape: new Circle({ width: 150, height: 150 }) })\n        .id('sliderBlockStyle1')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockStyle({ type: SliderBlockType.DEFAULT, shape: new Ellipse({ width: 150, height: 100 }) })\n        .id('sliderBlockStyle2')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .blockStyle(this.sliderStyle)\n        .id('sliderBlockStyle3')\n\n      Button('SliderBlockStyle').onClick(() => {\n        this.sliderStyle = {\n          type: SliderBlockType.SHAPE,\n          image: $r('app.media.startIcon'), shape: new Rect({ width: 150, height: 150 })\n        }\n      })\n\n    }.backgroundColor(Color.Gray).width('100%').height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderBlockStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "f2b9104e1725356f4bb0235e65b903bc261ca06a3ab12ce963099a1db0f828eb"}
{"text": "import sliderSelectedColorTest from '../MyTest/SliderSelectedColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderSelectedColorSample {\n  @State selectedColorStatusOne: ResourceColor = Color.Red\n  @State selectedColorStatusTwo: ResourceColor = 0x008000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      Slider()\n        .id('sliderSelectedColor1')\n        .selectedColor(this.selectedColorStatusOne)\n      Slider()\n        .id('sliderSelectedColor2')\n        .selectedColor(this.selectedColorStatusTwo)\n      Button('SliderSelectedColor1')\n        .onClick(() => {\n          this.selectedColorStatusOne = '#ffff00'\n        }).margin(10)\n      Button('SliderSelectedColor2')\n        .onClick(() => {\n          this.selectedColorStatusTwo = $r('sys.color.ohos_fa_palette1')\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderSelectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "d587c89fcaae9d948e6e464c1df2b20e46bdb0cbccf20b105da75a10f27cb39d"}
{"text": "import sliderShowStepsTest from '../MyTest/SliderShowStepsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderShowStepsSample {\n  @State showStepsStatus: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderShowStepsTest)\n  }\n\n  build() {\n    Column() {\n      Slider()\n        .showSteps(this.showStepsStatus)\n        .id('sliderShowSteps')\n\n      Button('SliderShowSteps')\n        .onClick(() => {\n          this.showStepsStatus = !this.showStepsStatus\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderShowStepsSample.ets", "project_name": "arkui_ace_engine-master", "id": "01647178224058c36b65dd110fb48a52a12e27d74a6c2dc37f86a9e3e6fd87bc"}
{"text": "import sliderShowTipsTest from '../MyTest/SliderShowTipsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderShowTipsSample {\n  @State showTipsStatus: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderShowTipsTest)\n  }\n\n  build() {\n    Column() {\n      Slider()\n        .showTips(this.showTipsStatus)\n        .id('sliderShowTips1')\n      Slider({ direction: Axis.Horizontal })\n        .showTips(true, 'hello')\n        .id('sliderShowTips2')\n      Slider({ direction: Axis.Vertical })\n        .showTips(true, $r('app.string.app_name'))\n        .height(200)\n        .id('sliderShowTips3')\n\n      Button('SliderShowTips1')\n        .onClick(() => {\n          this.showTipsStatus = true\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderShowTipsSample.ets", "project_name": "arkui_ace_engine-master", "id": "cef2ff74ab88a6554c42752c2591bbbaa95cc808f3c256a75acd9cb0348b36fa"}
{"text": "import sliderStepColorTest from '../MyTest/SliderStepColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderStepColorSample {\n  @State stepColorText: ResourceColor = Color.Red\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderStepColorTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .showSteps(true)\n        .stepColor('rgba(255, 100, 255, 0.5)')\n        .id('sliderStepColor1')\n      Slider({ style: SliderStyle.OutSet, value: 40 }).showSteps(true).stepColor(0xffffee).id('sliderStepColor2')\n      Slider({ style: SliderStyle.OutSet, value: 40 })\n        .showSteps(true)\n        .stepColor(this.stepColorText)\n        .id('sliderStepColor3')\n\n      Button('SliderStepColor').onClick(() => {\n        this.stepColorText = $r('sys.color.ohos_fa_activated')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderStepColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "16288fafbbfa8c1dfb224534838e29041dcd5b6007dcef672c12f386bc4044e0"}
{"text": "import sliderStepSizeTest from '../MyTest/SliderStepSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderStepSizeSample {\n  @State stepSize: Length = '5px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderStepSizeTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.InSet, value: 40, step: 10 })\n        .stepSize(0).stepColor(Color.Black).showSteps(true)\n        .id('sliderStepSize1')\n      Slider({ style: SliderStyle.InSet, value: 40, step: 10 })\n        .stepSize(-1).stepColor(Color.Black).showSteps(true)\n        .id('sliderStepSize2')\n      Slider({ style: SliderStyle.InSet, value: 40, step: 10 })\n        .stepSize(this.stepSize).stepColor(Color.Black).showSteps(true)\n        .id('sliderStepSize3')\n\n      Button('SliderStepSize')\n        .onClick(() => {\n          this.stepSize = $r('app.string.slider_stepSize')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderStepSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "fff90fc72fe9648a404abcf98fbaddb692ef45baaa146d643fd5ffc5afaa3e7d"}
{"text": "import sliderTrackBorderRadiusTest from '../MyTest/SliderTrackBorderRadiusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderTrackBorderRadiusSample {\n  @State trackBorRadius: Length = 20\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderTrackBorderRadiusTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.InSet, value: 40 }).trackBorderRadius('10px').id('trackBorderRadius1')\n      Slider({ style: SliderStyle.InSet, value: 40 }).trackBorderRadius(this.trackBorRadius).id('trackBorderRadius2')\n\n      Button('SliderTrackBorderRadius').onClick(() => {\n        this.trackBorRadius = $r('app.string.radius_number')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderTrackBorderRadiusSample.ets", "project_name": "arkui_ace_engine-master", "id": "a844966950a565964c019623e772079bf97c64277e66dc3259e65780a0390351"}
{"text": "import sliderTrackColorTest from '../MyTest/SliderTrackColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SliderTrackColorSample {\n  @State trackColorStatusOne: ResourceColor = Color.Red\n  @State trackColorStatusTwo: ResourceColor = 0x008000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderTrackColorTest)\n  }\n\n  build() {\n    Column() {\n      Slider()\n        .trackColor(this.trackColorStatusOne)\n        .id('sliderTrackColor1')\n      Slider()\n        .trackColor(this.trackColorStatusTwo)\n        .id('sliderTrackColor2')\n\n      Button('SliderTrackColor1')\n        .onClick(() => {\n          this.trackColorStatusOne = '#ffff00'\n        }).margin(10)\n\n      Button('SliderTrackColor2')\n        .onClick(() => {\n          this.trackColorStatusTwo = $r('sys.color.ohos_fa_palette1')\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderTrackColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "182394f34917d223dc77f3626aa78570420032fc3d8ed92159e84180f793a469"}
{"text": "import sliderTrackThicknessTest from '../MyTest/SliderTrackThicknessTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct SliderTrackThicknessSample {\n  @State trackNess: Length = 35\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sliderTrackThicknessTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.InSet, value: 40 }).trackThickness(0).id('sliderTrackThickness1')\n      Slider({ style: SliderStyle.InSet, value: 40 }).trackThickness('15px').id('sliderTrackThickness2')\n      Slider({ style: SliderStyle.InSet, value: 40 }).trackThickness(this.trackNess).id('sliderTrackThickness3')\n\n      Button('SliderTrackThickness').onClick(() => {\n        this.trackNess = $r('app.string.track_thickness')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\slider\\SliderTrackThicknessSample.ets", "project_name": "arkui_ace_engine-master", "id": "ed8e9d5e6f16bb818efad8d0e9af33b8036bb062c7573f373e6b5eae20dbb656"}
{"text": "import textPickerCanLoopTest from '../MyTest/TextPickerCanLoopTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerCanLoopSample {\n  @State pickerCanLoop: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerCanLoopTest)\n  }\n\n  private apfruits: string[] = ['apple1', 'apple2', 'apple3', 'apple4']\n\n  build() {\n    Column() {\n      TextPicker({ range: this.apfruits }).canLoop(this.pickerCanLoop).id('textPickerCanLoop');\n\n      Button('TextPickerCanLoop').onClick(() => {\n        this.pickerCanLoop = false\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\text_picker\\TextPickerCanLoopSample.ets", "project_name": "arkui_ace_engine-master", "id": "2c6c68b84ee28cb7374fb3ef291d396a7484e0c4b0618bd135062fff127a6235"}
{"text": "import textPickerDefaultPickerItemHeightTest from '../MyTest/TextPickerDefaultPickerItemHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDefaultPickerItemHeightSample {\n  @State defaultPickerHeight: number | string = 100\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDefaultPickerItemHeightTest)\n  }\n\n  private apfruits: string[] = ['apple1', 'apple2', 'apple3', 'apple4']\n\n  build() {\n    Column() {\n      TextPicker({ range: this.apfruits })\n        .defaultPickerItemHeight(this.defaultPickerHeight)\n        .id('textPickerDefaultPickerItemHeight');\n\n      Button('TextPickerDefaultPickerItemHeight').onClick(() => {\n        this.defaultPickerHeight = '50px'\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\text_picker\\TextPickerDefaultPickerItemHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "5495da73e1a80f1bc040600a0c6d274096bc069d606f1ea93c8ef3cd3d442a7c"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct TextPickerHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('TextPickerHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'CanLoop', buttonUrl: 'pages/text_picker/TextPickerCanLoopSample' });\n        CommonButton({\n          buttonName: 'DefaultPickerItemHeight',\n          buttonUrl: 'pages/text_picker/TextPickerDefaultPickerItemHeightSample'\n        });\n        CommonButton({\n          buttonName: 'DisappearTextStyle',\n          buttonUrl: 'pages/text_picker/TextPickerDisappearTextStyleSample'\n        });\n        CommonButton({ buttonName: 'SelectedIndex', buttonUrl: 'pages/text_picker/TextPickerSelectedIndexSample' });\n        CommonButton({\n          buttonName: 'SelectedTextStyle',\n          buttonUrl: 'pages/text_picker/TextPickerSelectedTextStyleSample'\n        });\n        CommonButton({ buttonName: 'TextStyle', buttonUrl: 'pages/text_picker/TextPickerTextStyleSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\text_picker\\TextPickerHome.ets", "project_name": "arkui_ace_engine-master", "id": "7047bc010226cb276f9d5f9a50185f55c03ece72027aa17be13abd3763efbbce"}
{"text": "import textPickerSelectedIndexTest from '../MyTest/TextPickerSelectedIndexTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerSelectedIndexSample {\n  @State selectedIndexText: number = 3\n  private apfruits: string[] = ['apple1', 'apple2', 'apple3', 'apple4']\n  private orfruits: string[] = ['orange1', 'orange2', 'orange3', 'orange4']\n  private multi: string[][] = [this.apfruits, this.orfruits]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerSelectedIndexTest)\n  }\n\n  build() {\n    Column() {\n      TextPicker({ range: this.apfruits }).selectedIndex(2).id('textPickerSelectedIndex1');\n      TextPicker({ range: this.multi }).selectedIndex([this.selectedIndexText, 0]).id('textPickerSelectedIndex2');\n\n      Button('TextPickerSelectedIndex').onClick(() => {\n        this.selectedIndexText = 2\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\text_picker\\TextPickerSelectedIndexSample.ets", "project_name": "arkui_ace_engine-master", "id": "ec87ac3f657ec360041753bcbb7a818f7a73572f038d3b739f3e118d49d7e04e"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct TimePickerHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('TimePickerHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'DisappearTextStyle',\n          buttonUrl: 'pages/time_picker/TimePickerDisappearTextStyleSample'\n        });\n        CommonButton({ buttonName: 'TextStyle', buttonUrl: 'pages/time_picker/TimePickerTextStyleSample' });\n        CommonButton({ buttonName: 'Loop', buttonUrl: 'pages/time_picker/TimePickerLoopSample' });\n        CommonButton({\n          buttonName: 'SelectedTextStyle',\n          buttonUrl: 'pages/time_picker/TimePickerSelectedTextStyleSample'\n        });\n        CommonButton({ buttonName: 'UseMilitaryTime', buttonUrl: 'pages/time_picker/TimePickerUseMilitaryTimeSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\time_picker\\TimePickerHome.ets", "project_name": "arkui_ace_engine-master", "id": "75ad609d2bff3315669cd0faa81937c3cc97167e37c9a791ad3e9a2971e03634"}
{"text": "import timePickerLoopTest from '../MyTest/TimePickerLoopTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerLoopSample {\n  @State timePickerLoop: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerLoopTest)\n  }\n\n  private selectedTime: Date = new Date('2022-07-22T08:00:00')\n\n  build() {\n    Column() {\n      TimePicker({ selected: this.selectedTime }).loop(this.timePickerLoop).id('timePickerLoop');\n\n      Button('TimePickerLoop').onClick(() => {\n        this.timePickerLoop = false\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\time_picker\\TimePickerLoopSample.ets", "project_name": "arkui_ace_engine-master", "id": "a08fce27a6a2d0c4e8ba6d81b14169a292fa20446425c233d4e066a7b3d2bd8b"}
{"text": "import timePickerUseMilitaryTimeTest from '../MyTest/TimePickerUseMilitaryTimeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerUseMilitaryTimeSample {\n  @State useMilTime: boolean = true\n  private selectedTime: Date = new Date('2022-07-22T08:00:00')\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerUseMilitaryTimeTest)\n  }\n\n  build() {\n    Column() {\n      TimePicker({ selected: this.selectedTime }).useMilitaryTime(this.useMilTime).id('timePickerUseMilitaryTime');\n\n      Button('TimePickerUseMilitaryTime').onClick(() => {\n        this.useMilTime = false\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\time_picker\\TimePickerUseMilitaryTimeSample.ets", "project_name": "arkui_ace_engine-master", "id": "83d982e1b37e753a5f19cbe9c0266ed4a88ed7d9864acfdabf48577c921238c9"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct ToggleHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('ToggleHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'SelectedColor', buttonUrl: 'pages/toggle/ToggleSelectedColorSample' });\n        CommonButton({ buttonName: 'SwitchPointColor', buttonUrl: 'pages/toggle/ToggleSwitchPointColorSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\toggle\\ToggleHome.ets", "project_name": "arkui_ace_engine-master", "id": "f0087ffe6df9170bc920eb75b25f1529853aeec068061e0452e22475bd6389d5"}
{"text": "import toggleSelectedColorTest from '../MyTest/ToggleSelectedColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ToggleSelectedColorSample {\n  @State fontColor: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(toggleSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      Toggle({ type: ToggleType.Switch, isOn: false }).selectedColor(Color.Black).id('toggleSelectedColor1')\n      Toggle({ type: ToggleType.Switch, isOn: false }).selectedColor(0xa52a2a).id('toggleSelectedColor2')\n      Toggle({ type: ToggleType.Switch, isOn: false }).selectedColor(this.fontColor).id('toggleSelectedColor3')\n\n      Button('ToggleSelectedColor').onClick(() => {\n        this.fontColor = $r('sys.color.ohos_fa_palette1')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\toggle\\ToggleSelectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "dd4ce828e85226a91f706df58c0a80119c056583d1650e09ea05b5c8aaca3226"}
{"text": "import toggleSwitchPointColorTest from '../MyTest/ToggleSwitchPointColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ToggleSwitchPointColorSample {\n  @State pointColor: ResourceColor = 'rgb(142, 255, 101)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(toggleSwitchPointColorTest)\n  }\n\n  build() {\n    Column() {\n      Toggle({ type: ToggleType.Switch, isOn: false }).switchPointColor(Color.Black).id('toggleSwitchPointColor1')\n      Toggle({ type: ToggleType.Switch, isOn: false }).switchPointColor(0xa52a2a).id('toggleSwitchPointColor2')\n      Toggle({ type: ToggleType.Switch, isOn: false }).switchPointColor(this.pointColor).id('toggleSwitchPointColor3')\n\n      Button('ToggleSwitchPointColor').onClick(() => {\n        this.pointColor = $r('sys.color.ohos_fa_palette1')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\pages\\toggle\\ToggleSwitchPointColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "9f0270a9a1db2ecf89d9aa56ef3f750c3e4e20720f00aacf732b8912f5a098bd"}
{"text": "import router from '@ohos.router';\n\n@Component\nexport struct CommonButton {\n  @State buttonName: string = '';\n  @State buttonUrl: string = '';\n  @State data: string = '';\n\n  build() {\n    Text(this.buttonName)\n      .id(this.buttonName)\n      .padding(px2vp(5))\n      .fontSize(px2fp(16))\n      .backgroundColor(Color.Blue)\n      .fontColor(Color.White)\n      .borderRadius(5)\n      .margin(px2vp(5))\n      .onClick(() => {\n        router.pushUrl({\n          url: this.buttonUrl,\n          params: {\n            text: this.data,\n            buttonName: this.buttonName\n          }\n        })\n      })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\main\\ets\\util\\CommonButton.ets", "project_name": "arkui_ace_engine-master", "id": "829872551e5aedffa296abd9a84c0f3106cdb63afcf11bdf1554b80a0955574b"}
{"text": "import stateTest from './State.test'\n\nexport default function testsuite() {\n  stateTest()\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\ohosTest\\ets\\test\\List.test.ets", "project_name": "arkui_ace_engine-master", "id": "0ef85025ea6419f6963c420ad31c81539883ea8a9efeec989dfd5f295138431d"}
{"text": "import hilog from '@ohos.hilog';\n\n@Entry\n@Component\nstruct Index {\n  aboutToAppear() {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'TestAbility index aboutToAppear');\n  }\n\n  @State message: string = 'Hello World'\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n        Button() {\n          Text('next page')\n            .fontSize(20)\n            .fontWeight(FontWeight.Bold)\n        }\n        .type(ButtonType.Capsule)\n        .margin({\n          top: 20\n        })\n        .backgroundColor('#0D9FFB')\n        .width('35%')\n        .height('5%')\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\button_and_selection\\entry\\src\\ohosTest\\ets\\testability\\pages\\Index.ets", "project_name": "arkui_ace_engine-master", "id": "94995ddcdc8c5c5ca4a4fa7632ccc5d422175ebbc8279e0a1742ac91e2bba0fa"}
{"text": "import { CommonButton } from '../util/CommonButton';\n\n@Entry\n@Component\nstruct Index {\n  aboutToAppear() {\n  }\n\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('common')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'CommonHome', buttonUrl: 'pages/common/CommonHome' });\n      }\n      .padding('20vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "arkui_ace_engine-master", "id": "d84b77fdf63248e30e54daf211c6350748142242d094b6b485116e767cb0113d"}
{"text": "import accessibilityDescriptionTest from '../MyTest/AccessibilityDescriptionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AccessibilityDescriptionSample {\n  @State anyString: string = ''\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(accessibilityDescriptionTest)\n  }\n\n  build() {\n    Column() {\n      DatePicker()\n        .accessibilityDescription(this.anyString)\n        .id('datePickerAccessibilityDescription1')\n      Row() {\n        Button('DatePickerAccessibilityDescription1')\n          .onClick(() => {\n            this.anyString = 'accessibilityDescription'\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AccessibilityDescriptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "6b5bd66ac781eb00dfcefe39c4423640c37a75ea00febd97c5c6aa47f8d2446c"}
{"text": "import accessibilityGroupTest from '../MyTest/AccessibilityGroupTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AccessibilityGroupSample {\n  @State change_boolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(accessibilityGroupTest)\n  }\n\n  build() {\n    Column({ space: 100 }) {\n      Column() {\n        DatePicker()\n          .accessibilityGroup(this.change_boolean)\n          .id('datePickerAccessibilityGroup1')\n      }\n\n      Button('DatePickerAccessibilityGroup1')\n        .onClick(() => {\n          this.change_boolean = !this.change_boolean\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AccessibilityGroupSample.ets", "project_name": "arkui_ace_engine-master", "id": "e42ed5dcb3db27bb1e3b96b6dd1a9e8aa1c975fbb82cd4c95d7623792334dd18"}
{"text": "import accessibilityLevelTest from '../MyTest/AccessibilityLevelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct accessibilityLevelSample {\n  @State changeString: string = \"auto\"\n  @State oneButtonColor: string = '#FFC0CB'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(accessibilityLevelTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 5, min: 1, max: 100 })\n        .accessibilityLevel(this.changeString).id('gaugeAccessibilityLevel1')\n\n      Blank()\n        .color(\"rgba(95, 255, 240, 1.00)\")\n        .height(100)\n        .width(100)\n        .accessibilityLevel(\"auto\")\n        .id('blankAccessibilityLevel1')\n\n      Button(\"ButtonAccessibilityLevel1\")\n        .onClick(() => {\n          this.changeString = \"no-hide-descendants\"\n        })\n      Button(\"ButtonAccessibilityLevel2\")\n        .onClick(() => {\n          this.changeString = \"no\"\n        })\n      Button(\"ButtonAccessibilityLevel3\")\n        .onClick(() => {\n          this.changeString = \"yes\"\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AccessibilityLevelSample.ets", "project_name": "arkui_ace_engine-master", "id": "d48ac002846b3fc56f70d8c0bb2223a2eedeb23cc32fc416f169f1efdd789090"}
{"text": "import alignRulesTest from '../MyTest/AlignRulesTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AlignRulesSample {\n  private value: string = 'AlignRules'\n  @State change_value_1: AlignRuleOption = {\n    top: { anchor: \"__container__\", align: VerticalAlign.Top },\n    bottom: { anchor: \"__container__\", align: VerticalAlign.Bottom },\n    left: { anchor: \"__container__\", align: HorizontalAlign.Start },\n    right: { anchor: \"__container__\", align: HorizontalAlign.End },\n    middle: { anchor: \"__container__\", align: HorizontalAlign.Center },\n    center: { anchor: \"__container__\", align: VerticalAlign.Center },\n    bias: { horizontal: 0, vertical: 0 }\n  }\n  @State change_value_2: AlignRuleOption = {\n    top: { anchor: \"__container__\", align: VerticalAlign.Bottom },\n    bottom: { anchor: \"__container__\", align: VerticalAlign.Top },\n    left: { anchor: \"__container__\", align: HorizontalAlign.End },\n    right: { anchor: \"__container__\", align: HorizontalAlign.Start },\n    middle: { anchor: \"__container__\", align: HorizontalAlign.Start },\n    center: { anchor: \"__container__\", align: VerticalAlign.Top },\n    bias: { horizontal: 0, vertical: 0 }\n  }\n  @State change_value_3: AlignRuleOption = {\n    top: { anchor: \"__container__\", align: VerticalAlign.Center },\n    bottom: { anchor: \"__container__\", align: VerticalAlign.Center },\n    left: { anchor: \"__container__\", align: HorizontalAlign.Center },\n    right: { anchor: \"__container__\", align: HorizontalAlign.Center },\n    middle: { anchor: \"__container__\", align: HorizontalAlign.End },\n    center: { anchor: \"__container__\", align: VerticalAlign.Bottom },\n    bias: { horizontal: 0, vertical: 0 }\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alignRulesTest)\n  }\n\n  build() {\n    Column({ space: 100 }) {\n      RelativeContainer() {\n        QRCode(this.value)\n          .alignRules(this.change_value_1)\n          .id(\"qRCodeAlignRules1\")\n      }.width(100).height(100)\n\n      RelativeContainer() {\n        QRCode(this.value)\n          .alignRules(this.change_value_3)\n          .id(\"qRCodeAlignRules2\")\n      }.width(100).height(100)\n\n      Button('ButtonAlignRules1').onClick(() => {\n        this.change_value_1 = this.change_value_2\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AlignRulesSample.ets", "project_name": "arkui_ace_engine-master", "id": "f7dd0131e24fbbe8f7da430d6cc1929a78acb2b8d5bfd08e03cbdec10983e26c"}
{"text": "import alignTest_one from '../MyTest/AlignTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AlignSample_one {\n  @State myAlignment: Alignment[] =\n    [Alignment.TopStart, Alignment.Top, Alignment.TopEnd,\n      Alignment.Start, Alignment.Center]\n  index = 0\n  @State anyAlignment: Alignment = this.myAlignment[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alignTest_one)\n  }\n\n  build() {\n    Column() {\n      Column({ space: 10 }) {\n        Stack() {\n          Text('align')\n        }\n        .width('90%')\n        .height(50)\n        .margin({ top: 5 })\n        .backgroundColor(0xFFE4C4)\n        .id('stackAlign1')\n        .align(this.anyAlignment)\n\n        Button('ButtonAlign1')\n          .onClick(() => {\n            this.index++\n            this.anyAlignment = this.myAlignment[this.index % 5]\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AlignSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "baf27648e0146bf842d7846b143c486777ba9887e18b161c30d7b7cc660d69f2"}
{"text": "import alignTest_two from '../MyTest/AlignTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AlignSample_two {\n  @State myAlignment: Alignment[] =\n    [Alignment.End, Alignment.BottomStart, Alignment.Bottom, Alignment.BottomEnd]\n  index = 0\n  @State anyAlignment: Alignment = this.myAlignment[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alignTest_two)\n  }\n\n  build() {\n    Column() {\n      Column({ space: 10 }) {\n        Stack() {\n          Text('align')\n        }\n        .width('90%')\n        .height(50)\n        .margin({ top: 5 })\n        .backgroundColor(0xFFE4C4)\n        .id('stackAlign2')\n        .align(this.anyAlignment)\n\n        Button('ButtonAlign1')\n          .onClick(() => {\n            this.index++\n            this.anyAlignment = this.myAlignment[this.index % 4]\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AlignSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "efa600a44295cf40d3bc57ea8473321afa340f96754dd138ccf8ec8ce4c5a2f4"}
{"text": "import alignSelfTest from '../MyTest/AlignSelfTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AlignSelfSample {\n  @State alignSelfCenter: ItemAlign = ItemAlign.Center\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alignSelfTest)\n  }\n\n  build() {\n    Column() {\n      Text('alignSelf').fontSize(15).fontColor(0xCCCCCC).width('90%')\n      Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Center }) {\n        Text('alignSelf Baseline')\n          .id('textAlignSelf1')\n          .alignSelf(ItemAlign.Baseline)\n          .width('33%')\n          .height(70)\n          .backgroundColor(0xF5DEB3)\n          .textAlign(TextAlign.Center)\n        Text('alignSelf End')\n          .id('textAlignSelf2')\n          .alignSelf(ItemAlign.End)\n          .width('33%')\n          .height(70)\n          .backgroundColor(0xD2B48C)\n          .textAlign(TextAlign.Center)\n        Text('alignSelf Center')\n          .id('textAlignSelf3')\n          .alignSelf(this.alignSelfCenter)\n          .width('33%')\n          .height(70)\n          .backgroundColor(0xD2B48C)\n          .textAlign(TextAlign.End)\n        Button('ButtonAlignSelf1')\n          .onClick(() => {\n            this.alignSelfCenter = ItemAlign.Auto\n          })\n        Button('ButtonAlignSelf2')\n          .onClick(() => {\n            this.alignSelfCenter = ItemAlign.Start\n          })\n        Button('ButtonAlignSelf3')\n          .onClick(() => {\n            this.alignSelfCenter = ItemAlign.Stretch\n          })\n      }.width('90%').height(120).padding(10).backgroundColor(0xAFEEEE)\n    }.width('100%').margin({ top: 5 })\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AlignSelfSample.ets", "project_name": "arkui_ace_engine-master", "id": "eee938bfed0940622ab638683f23de2e9bb2083b7545e7e2e28b7d8484f39f54"}
{"text": "import attributeModifierTest from '../MyTest/AttributeModifierTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\nclass MyButtonModifier implements AttributeModifier<ButtonAttribute> {\n  isDark: boolean = false\n\n  applyNormalAttribute(instance: ButtonAttribute): void {\n    if (this.isDark) {\n      instance.backgroundColor(Color.Black)\n    } else {\n      instance.backgroundColor(Color.Red)\n    }\n  }\n}\n\n@Entry\n@Component\nstruct AttributeModifierSample {\n  @State modifier: MyButtonModifier = new MyButtonModifier()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(attributeModifierTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"ButtonAttributeModifier\")\n          .id('buttonAttributeModifier1')\n          .attributeModifier(this.modifier)\n          .onClick(() => {\n            this.modifier.isDark = !this.modifier.isDark\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\AttributeModifierSample.ets", "project_name": "arkui_ace_engine-master", "id": "a2d619ab00bdef7510c2369a57c07ab56a425c1e0984b4e7da32deed34520996"}
{"text": "import backdropBlurTest from '../MyTest/BackdropBlurTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackdropBlurSample {\n  @State backdropNumber: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backdropBlurTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonBackdropBlur1')\n        .backdropBlur(this.backdropNumber)\n        .id('buttonBackdropBlur1')\n\n      Button('ButtonBackdropBlur2')\n        .onClick(() => {\n          this.backdropNumber = 255\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackdropBlurSample.ets", "project_name": "arkui_ace_engine-master", "id": "55887d44300db1bf0bc1834066f558978e6e9c5d68bfaa35c54f29277605a765"}
{"text": "import backgroundBlurStyleTest_two from '../MyTest/BackgroundBlurStyleTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackgroundBlurStyleSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(backgroundBlurStyleTest_two)\n  }\n\n  build() {\n    Column() {\n      Scroll() {\n        Text('backgroundBlurStyleTest9')\n      }.backgroundImage($r('app.media.app_icon'))\n      .backgroundBlurStyle(BlurStyle.COMPONENT_ULTRA_THIN)\n      .id('scrollBackgroundBlurStyle9')\n\n      Scroll() {\n        Text('backgroundBlurStyleTest10')\n      }.backgroundImage($r('app.media.app_icon'))\n      .backgroundBlurStyle(BlurStyle.COMPONENT_THIN)\n      .id('scrollBackgroundBlurStyle10')\n\n      Scroll() {\n        Text('backgroundBlurStyleTest11')\n      }.backgroundImage($r('app.media.app_icon'))\n      .backgroundBlurStyle(BlurStyle.COMPONENT_REGULAR)\n      .id('scrollBackgroundBlurStyle11')\n\n      Scroll() {\n        Text('backgroundBlurStyleTest12')\n      }.backgroundImage($r('app.media.app_icon'))\n      .backgroundBlurStyle(BlurStyle.COMPONENT_THICK)\n      .id('scrollBackgroundBlurStyle12')\n\n      Scroll() {\n        Text('backgroundBlurStyleTest13')\n      }.backgroundImage($r('app.media.app_icon'))\n      .backgroundBlurStyle(BlurStyle.COMPONENT_ULTRA_THICK)\n      .id('scrollBackgroundBlurStyle13')\n\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackgroundBlurStyleSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "98d4819cf9f4cbc9513c72a8c91217a30160da6301ba127d4d167a8b1ac7e558"}
{"text": "import backGroundBrightnessTest from '../MyTest/BackGroundBrightnessTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackGroundBrightnessSample {\n  @State backgroundBrightness_value_1: BackgroundBrightnessOptions = { rate: 0, lightUpDegree: 0 }\n  @State backgroundBrightness_value_2: BackgroundBrightnessOptions = { rate: 999, lightUpDegree: 1 }\n  @State any: BackgroundBrightnessOptions = { rate: 400, lightUpDegree: -1 }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backGroundBrightnessTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Row() {\n        Text('backgroundBrightness').fontSize(18)\n        Blank().color(Color.Yellow)\n        Toggle({ type: ToggleType.Button })\n          .margin({\n            top: 14,\n            bottom: 14,\n            left: 6,\n            right: 6\n          })\n      }\n      .width(200)\n      .height(200)\n      .position({ x: 100, y: 100 })\n      .backgroundBlurStyle(BlurStyle.Thin, {\n        colorMode: ThemeColorMode.LIGHT,\n        adaptiveColor: AdaptiveColor.DEFAULT,\n        scale: 1.0\n      })\n      .backgroundBrightness(this.any)\n      .id('rowBackgroundBrightness1')\n\n      Button('RowBackgroundBrightness1').onClick(() => {\n        this.any = this.backgroundBrightness_value_1\n      })\n      Button('RowBackgroundBrightness2').onClick(() => {\n        this.any = this.backgroundBrightness_value_2\n      })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackGroundBrightnessSample.ets", "project_name": "arkui_ace_engine-master", "id": "3b912d842a31e2b4ea1c06878c10c4f595cae2fb505dd32bfb937e78cdd953a4"}
{"text": "import backgroundColorTest from '../MyTest/BackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackgroundColorSample {\n  @State color: ResourceColor = Color.Blue\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      Text('Text1')\n        .backgroundColor(this.color)\n        .id('textAreaBackgroundColor1')\n      Button('ButtonBackgroundColor')\n        .onClick(() => {\n          this.color = 0xAFEEEE\n        })\n      Text('Text2')\n        .backgroundColor('rgba(246, 0, 0, 1.00)')\n        .id('textAreaBackgroundColor2')\n      Text('Text3')\n        .backgroundColor($r('sys.color.ohos_id_color_text_hyperlink'))\n        .id('textAreaBackgroundColor3')\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "6e80f623c7ed825ce62e74f2bb0895703c146ea049745be9b61701fd0148ac13"}
{"text": "import backGroundEffectTest from '../MyTest/BackGroundEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackGroundEffectSample {\n  @State backgroundEffectRadius: number = 100\n  @State backgroundEffectSaturation: number = 50\n  @State backgroundEffectBrightness: number = 50\n  @State backgroundEffectColor: Color = 0xa52a3a\n  @State backgroundEffectAdaptiveColor: AdaptiveColor = AdaptiveColor.DEFAULT\n  @State backgroundEffectBlurOptions: BlurOptions = { grayscale: [0, 50] }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backGroundEffectTest)\n  }\n\n  build() {\n    Column() {\n\n      Gauge({ value: 75 })\n        .backgroundEffect({\n          radius: this.backgroundEffectRadius,\n          saturation: this.backgroundEffectSaturation,\n          brightness: this.backgroundEffectBrightness,\n          color: this.backgroundEffectColor,\n          adaptiveColor: this.backgroundEffectAdaptiveColor,\n          blurOptions: this.backgroundEffectBlurOptions\n        })\n        .id('gaugeBackgroundEffect1')\n\n      Button('ButtonBackGroundEffect1')\n        .onClick(() => {\n          this.backgroundEffectColor = Color.Blue\n          this.backgroundEffectAdaptiveColor = AdaptiveColor.AVERAGE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackGroundEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "7456011d0960dc68468df1f26d6e54cb0cf1840a1adcf041c5cedc38db4cf91d"}
{"text": "import backgroundImageTest from '../MyTest/BackgroundImageTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackgroundImageSample {\n  index: number = 0\n  resourceStrArr: ResourceStr[] = ['../../../resources/base/media/b.jpg', $r('app.media.app_icon')]\n  imageRepeatArr: ImageRepeat[] = [ImageRepeat.NoRepeat, ImageRepeat.X, ImageRepeat.Y, ImageRepeat.XY]\n  @State resourceStr: ResourceStr = this.resourceStrArr[this.index]\n  @State imageRepeat: ImageRepeat = this.imageRepeatArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backgroundImageTest)\n  }\n\n  build() {\n    Column() {\n      Row()\n        .backgroundImage(this.resourceStr, this.imageRepeat)\n        .backgroundImageSize({ width: '250px', height: '140px ' })\n        .width('90%')\n        .height(500)\n        .border({ width: 1 })\n        .id('rowBackgroundImage')\n\n      Button('ButtonBackgroundImage').onClick(() => {\n        this.index++\n        this.resourceStr = this.resourceStrArr[this.index % 2]\n        this.imageRepeat = this.imageRepeatArr[this.index % 4]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackgroundImageSample.ets", "project_name": "arkui_ace_engine-master", "id": "293ea85038ebac0793b2b249af977e0f63e01fcdfa59a5363fb76b8f971f6043"}
{"text": "import backgroundImageSizeTest from '../MyTest/BackgroundImageSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackgroundImageSizeSample {\n  imageSizeArr: (SizeOptions | ImageSize)[] = [{ width: '250px', height: '140px' },\n    { width: $r('app.string.commonImage_width'), height: $r('app.string.commonImage_height') },\n    { width: 1000, height: 500 },\n    ImageSize.Auto, ImageSize.Cover, ImageSize.Contain]\n  index: number = 0\n  @State value: SizeOptions | ImageSize = this.imageSizeArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backgroundImageSizeTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Row()\n        .width('80%')\n        .backgroundImage($r('app.media.app_icon'))\n        .backgroundImageSize({ height: '140px' })\n        .height(70)\n        .id('rowBackgroundImageSize1')\n      Row()\n        .width('80%')\n        .backgroundImage($r('app.media.app_icon'))\n        .backgroundImageSize({ width: -1, height: -1 })\n        .height(70)\n        .id('rowBackgroundImageSize2')\n      Column()\n        .width('80%')\n        .height(150)\n        .backgroundImage($r('app.media.app_icon'))\n        .backgroundImageSize(this.value)\n        .id('columnBackgroundImageSize')\n      Button('ButtonBackgroundImageSize')\n        .onClick(() => {\n          this.index++\n          this.value = this.imageSizeArr[this.index % 6]\n        })\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackgroundImageSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d71c6b0354082fbc2745187dc069fc7dfee45dcd9673a1afbfe5e091aaa0e7a4"}
{"text": "import backgroundTest_one from '../MyTest/BackgroundTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackgroundSample_one {\n  @State any_Alignment: Alignment = Alignment.Top\n\n  @Builder\n  renderBackground() {\n    Text('RenderBackground')\n      .fontColor(Color.Green)\n      .width(30)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backgroundTest_one)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text(\"content\")\n          .width(100)\n          .height(40)\n          .fontColor(\"#FFF\")\n          .position({ x: 50, y: 80 })\n          .textAlign(TextAlign.Center)\n          .backgroundColor(Color.Green)\n      }\n      .width(200)\n      .height(200)\n      .background(this.renderBackground, { align: Alignment.TopStart })\n      .backgroundColor(Color.Gray)\n      .id('rowBackground1')\n\n      Row() {\n        Text(\"content\")\n          .width(100)\n          .height(40)\n          .fontColor(\"#FFF\")\n          .position({ x: 50, y: 80 })\n          .textAlign(TextAlign.Center)\n          .backgroundColor(Color.Green)\n      }\n      .width(200)\n      .height(200)\n      .background(this.renderBackground, { align: this.any_Alignment })\n      .backgroundColor(Color.Gray)\n      .id('rowBackground2')\n\n      Row() {\n        Button('ButtonBackground1')\n          .onClick(() => {\n            this.any_Alignment = Alignment.TopEnd\n          })\n        Button('ButtonBackground2')\n          .onClick(() => {\n            this.any_Alignment = Alignment.Start\n          })\n        Button('ButtonBackground3')\n          .onClick(() => {\n            this.any_Alignment = Alignment.Center\n          })\n      }\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackgroundSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "8b936e12af7aae38eddac2fe33a34ac3e332cc0970b15f7125d488dbfbf1270f"}
{"text": "import backgroundTest_two from '../MyTest/BackgroundTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BackgroundSample_two {\n  @State alignmentTop: Alignment = Alignment.BottomEnd\n\n  @Builder\n  renderBackground() {\n    Text('renderBackground')\n      .backgroundColor(Color.Green)\n      .width(30)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(backgroundTest_two)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text(\"content\")\n          .width(100)\n          .height(40)\n          .fontColor(\"#FFF\")\n          .position({ x: 50, y: 80 })\n          .textAlign(TextAlign.Center)\n          .backgroundColor(Color.Green)\n      }\n      .width(200)\n      .height(200)\n      .background(this.renderBackground, { align: this.alignmentTop })\n      .backgroundColor(Color.Gray)\n      .id('rowBackground3')\n\n      Row() {\n        Button('ButtonBackground1')\n          .onClick(() => {\n            this.alignmentTop = Alignment.End\n          })\n        Button('ButtonBackground2')\n          .onClick(() => {\n            this.alignmentTop = Alignment.BottomStart\n          })\n        Button('ButtonBackground3')\n          .onClick(() => {\n            this.alignmentTop = Alignment.Bottom\n          })\n      }\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BackgroundSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "4fffe8835e58f3c6641966dd213fbba49243fba2a3fe5e20828d2af7830c47aa"}
{"text": "import bindContentCoverTest from '../MyTest/BindContentCoverTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindContentCoverSample { \n  @State isShow: boolean = false\n  @State isShowTwo: boolean = false\n  @State isShowThree: boolean = false\n\n  @Builder\n  myBuilder3() {\n    Column() {\n      Button(\"BindContent1\")\n        .id('buttonBindContentCover1')\n        .margin(10)\n        .fontSize(20)\n        .onClick(() => {\n          this.isShowThree = !this.isShowThree;\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n\n  @Builder\n  myBuilder2() {\n    Column() {\n      Button(\"BindContent2\")\n        .id('buttonBindContentCover2')\n        .margin(10)\n        .fontSize(20)\n        .onClick(() => {\n          this.isShowTwo = !this.isShowTwo;\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n\n  @Builder\n  myBuilder() {\n    Column() {\n      Button(\"BindContent3\")\n        .id('buttonBindContentCover3')\n        .margin(10)\n        .fontSize(20)\n        .onClick(() => {\n          this.isShowTwo = !this.isShowTwo;\n        })\n        .bindContentCover(this.isShowTwo, this.myBuilder2(), {\n          modalTransition: ModalTransition.DEFAULT,\n          backgroundColor: Color.Pink\n        })\n\n      Button(\"BindContent4\")\n        .id('buttonBindContentCover4')\n        .margin(10)\n        .fontSize(20)\n        .onClick(() => {\n          this.isShowThree = !this.isShowThree;\n        })\n        .bindContentCover(this.isShowThree, this.myBuilder3(), {\n          modalTransition: ModalTransition.ALPHA,\n          backgroundColor: Color.Blue\n        })\n\n      Button(\"BindContent5\")\n        .id('buttonBindContentCover5')\n        .margin(10)\n        .fontSize(20)\n        .onClick(() => {\n          this.isShow = !this.isShow;\n        })\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindContentCoverTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"ButtonBindContent6\")\n        .onClick(() => {\n          this.isShow = !this.isShow\n        })\n        .id('buttonBindContentCover6')\n        .fontSize(20)\n        .margin(10)\n        .bindContentCover(this.isShow, this.myBuilder(), {\n          modalTransition: ModalTransition.NONE,\n          backgroundColor: Color.Orange\n        })\n    }\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor(\"#ff49c8ab\")\n    .width('100%')\n    .height('100%')\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindContentCoverSample.ets", "project_name": "arkui_ace_engine-master", "id": "d82031eacf5c4d3fd66371ad60a313fc698fa76147bbfb79f2626b370e5de4fa"}
{"text": "import bindContextMenuTest_one from '../MyTest/BindContextMenuTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindContextMenuSample_one {\n  @State thisMessage: string = 'message'\n  @State offsetPosition: string | Resource = '10px'\n  @State placement: Placement = Placement.Right\n  @State arrowOffset: string | Resource = '10px'\n  @State backgroundColorBindContextMenu: Color | string | Resource = Color.Black\n  @State backgroundBlurStyleBindContextMenu: BlurStyle = BlurStyle.Regular\n\n  @Builder\n  MenuBuilder() {\n    Flex({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n      Text('TestMenuItem1')\n        .fontSize(20)\n        .width(100)\n        .height(50)\n        .textAlign(TextAlign.Center)\n      Divider().height(10)\n      Text('Test menu item 2')\n        .fontSize(20)\n        .width(100)\n        .height(50)\n        .textAlign(TextAlign.Center)\n    }.width(100)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindContextMenuTest_one)\n  }\n\n  build() {\n    Column() {\n      Text(this.thisMessage).id('bindContextMenuText1')\n      Text('LongPress for menu')\n        .width('100%')\n        .margin({ top: 5 })\n        .id('textBindContextMenu1')\n        .bindContextMenu(this.MenuBuilder, ResponseType.RightClick, {\n          offset: { x: 1, y: 2 },\n          placement: Placement.Left,\n          arrowOffset: 100,\n          preview: MenuPreviewMode.NONE,\n          previewAnimationOptions: { scale: [0.95, 1.1] },\n          enableArrow: true,\n          onAppear: () => {\n            this.thisMessage = \"onAppear\";\n          },\n          onDisappear: () => {\n            this.thisMessage = \"onDisappear\";\n          },\n          aboutToAppear: () => {\n            this.thisMessage = \"aboutToAppear\";\n          },\n          aboutToDisappear: () => {\n            this.thisMessage = \"aboutToDisappear\";\n          },\n          backgroundColor: 0xffffff,\n          backgroundBlurStyle: BlurStyle.Thin\n        })\n\n      Row() {\n        SymbolGlyph($r('sys.symbol.ohos_lungs'))\n          .id('symbolGlyphBindContextMenu2')\n          .fontSize(96)\n          .bindContextMenu(this.MenuBuilder,\n            ResponseType.LongPress,\n            {\n              offset: { x: this.offsetPosition, y: this.offsetPosition },\n              placement: this.placement,\n              arrowOffset: this.arrowOffset,\n              preview: MenuPreviewMode.NONE\n            }\n          )\n        Button('ButtonBindContextMenu1')\n          .onClick(() => {\n            this.offsetPosition = $r(\"app.string.any_length\")\n            this.placement = Placement.Top\n            this.arrowOffset = $r(\"app.string.any_length\")\n          })\n      }\n\n      Row() {\n        SymbolGlyph($r('sys.symbol.ohos_lungs'))\n          .id('symbolGlyphBindContextMenu3')\n          .fontSize(96)\n          .bindContextMenu(this.MenuBuilder,\n            ResponseType.LongPress,\n            {\n              offset: { x: this.offsetPosition, y: this.offsetPosition },\n              placement: this.placement,\n              arrowOffset: this.arrowOffset,\n              preview: MenuPreviewMode.NONE,\n              backgroundColor: this.backgroundColorBindContextMenu,\n              backgroundBlurStyle: this.backgroundBlurStyleBindContextMenu\n            }\n          )\n      }\n\n      Button('ButtonBindContextMenu2')\n        .onClick(() => {\n          this.backgroundColorBindContextMenu = $r('app.color.start_window_background')\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.Thick\n        })\n      Button('ButtonBindContextMenu3')\n        .onClick(() => {\n          this.placement = Placement.Bottom\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.BACKGROUND_THIN\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindContextMenuSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "2545612cbe4a9faff12ed4104ef062b3e11246053407a69fb901b1e46e56b652"}
{"text": "import bindContextMenuTest_three from '../MyTest/BindContextMenuTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindContextMenuSample_three {\n  @State backgroundBlurStyleBindContextMenu: BlurStyle = BlurStyle.COMPONENT_THICK\n  @State placement: Placement = Placement.RightTop\n\n  @Builder\n  MenuBuilder() {\n    Flex({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n      Text('TestMenuItem1')\n        .fontSize(20)\n        .width(100)\n        .height(50)\n        .textAlign(TextAlign.Center)\n      Divider().height(10)\n      Text('Test menu item 2')\n        .fontSize(20)\n        .width(100)\n        .height(50)\n        .textAlign(TextAlign.Center)\n    }.width(100)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindContextMenuTest_three)\n  }\n\n  build() {\n    Column() {\n\n      Row() {\n        SymbolGlyph($r('sys.symbol.ohos_lungs'))\n          .id('symbolGlyphBindContextMenu5')\n          .fontSize(96)\n          .bindContextMenu(this.MenuBuilder,\n            ResponseType.LongPress,\n            {\n              placement: this.placement,\n              backgroundBlurStyle: this.backgroundBlurStyleBindContextMenu\n            })\n        Button('ButtonBindContextMenu1')\n          .onClick(() => {\n            this.placement = Placement.RightBottom\n            this.backgroundBlurStyleBindContextMenu = BlurStyle.COMPONENT_ULTRA_THICK\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindContextMenuSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "a4fc6c489432b22acf1331fa831fd2956bc4b28fb6635eacaf029a57f2bdb82d"}
{"text": "import bindContextMenuTest_two from '../MyTest/BindContextMenuTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindContextMenuSample_two {\n  @State backgroundBlurStyleBindContextMenu: BlurStyle = BlurStyle.BACKGROUND_REGULAR\n  @State placement: Placement = Placement.TopLeft\n\n  @Builder\n  MenuBuilder() {\n    Flex({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n      Text('TestMenuItem1')\n        .fontSize(20)\n        .width(100)\n        .height(50)\n        .textAlign(TextAlign.Center)\n      Divider().height(10)\n      Text('Test menu item 2')\n        .fontSize(20)\n        .width(100)\n        .height(50)\n        .textAlign(TextAlign.Center)\n    }.width(100)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindContextMenuTest_two)\n  }\n\n  build() {\n    Column() {\n\n      Row() {\n        SymbolGlyph($r('sys.symbol.ohos_lungs'))\n          .fontSize(96)\n          .id('symbolGlyphBindContextMenu4')\n          .bindContextMenu(this.MenuBuilder,\n            ResponseType.LongPress,\n            {\n              placement: this.placement,\n              backgroundBlurStyle: this.backgroundBlurStyleBindContextMenu\n            })\n      }\n\n      Button('ButtonBindContextMenu1')\n        .onClick(() => {\n          this.placement = Placement.TopRight\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.BACKGROUND_THICK\n        })\n\n      Button('ButtonBindContextMenu2')\n        .onClick(() => {\n          this.placement = Placement.BottomLeft\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.NONE\n        })\n\n      Button('ButtonBindContextMenu3')\n        .onClick(() => {\n          this.placement = Placement.BottomRight\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.COMPONENT_ULTRA_THIN\n        })\n\n      Button('ButtonBindContextMenu4')\n        .onClick(() => {\n          this.placement = Placement.LeftTop\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.COMPONENT_THIN\n        })\n\n      Button('ButtonBindContextMenu5')\n        .onClick(() => {\n          this.placement = Placement.LeftBottom\n          this.backgroundBlurStyleBindContextMenu = BlurStyle.COMPONENT_REGULAR\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindContextMenuSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "5a3b2b64bc6fd4e62bd0075d01c8200479ddcf80f8a781e6742442a6dcedf5d0"}
{"text": "import bindMenuTest from '../MyTest/BindMenuTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindMenuSample {\n  @State enabledBoolean: boolean = true\n  @State listData: number[] = [0, 0, 0]\n  @State thisMessage: string = 'message'\n  @State isShowBindMenu: boolean = false\n\n  @Builder\n  MenuBuilder() {\n    Text('MenuBuilder')\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindMenuTest)\n  }\n\n  build() {\n    Column() {\n      Text('click for menu')\n        .fontSize(20)\n        .margin({ top: 20 })\n        .bindMenu(this.MenuBuilder)\n\n      Text(this.thisMessage)\n        .id('bindMenuText1')\n\n      SymbolGlyph($r('sys.symbol.ohos_lungs'))\n        .id('symbolGlyphBindMenu1')\n        .bindMenu(this.isShowBindMenu, [\n          {\n            value: 'Menu1',\n            icon: $r('sys.symbol.ohos_lungs'),\n            enabled: true,\n            action: () => {\n              this.thisMessage = \"Menu1\";\n            }\n          }\n        ],\n          {\n            title: 'hello',\n            showInSubWindow: false\n          })\n      SymbolGlyph($r('sys.symbol.ohos_lungs'))\n        .id('symbolGlyphBindMenu2')\n        .bindMenu(this.isShowBindMenu, [{\n          value: 'Menu2',\n          icon: $r('sys.symbol.ohos_lungs'),\n          enabled: this.enabledBoolean,\n          action: () => {\n            this.thisMessage = \"Menu2\";\n          }\n        }])\n\n      Button('ButtonBindMenu')\n        .onClick(() => {\n          this.isShowBindMenu = true\n          this.enabledBoolean = false\n        })\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor('#f0f0f0')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindMenuSample.ets", "project_name": "arkui_ace_engine-master", "id": "bcf8f5993207f597f1943296fd98f9fd9b47275e6765bc989389d8e4a14ea28c"}
{"text": "import bindPopupTest_eight from '../MyTest/BindPopupTest_eight'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_eight {\n  @State my_boolean: boolean = true\n\n  @Builder\n  popupBuilder() {\n    Row({ space: 2 }) {\n      Image($r(\"app.media.app_icon\")).width(24).height(24)\n      Text('CustomPopup').fontSize(10)\n    }.width(100).height(50)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_eight)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n\n      Button('ButtonBindPopup')\n        .onClick(() => {\n          this.my_boolean = !this.my_boolean\n        })\n        .bindPopup(this.my_boolean, {\n          builder: this.popupBuilder,\n          mask: { color: Color.Green },\n          width: '10px',\n          arrowPointPosition: ArrowPointPosition.START,\n          arrowWidth: '10px'\n        }).id('buttonBindPopup8')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_eight.ets", "project_name": "arkui_ace_engine-master", "id": "f2d87205c81033cc982b07a367435521a8e92538791fe048c91b8cf2b6d71838"}
{"text": "import bindPopupTest_five from '../MyTest/BindPopupTest_five'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_five {\n  @State my_boolean: boolean = true\n  @State any_boolean: boolean = true\n\n  @Builder\n  popupBuilder() {\n    Row({ space: 2 }) {\n      Image($r(\"app.media.app_icon\")).width(24).height(24)\n      Text('CustomPopup').fontSize(10)\n    }.width(100).height(50)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_five)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n\n      Button('ButtonBindPopup1')\n        .onClick(() => {\n          this.my_boolean = !this.my_boolean\n        }).bindPopup(this.my_boolean, {\n        builder: this.popupBuilder,\n        placement: Placement.Left,\n        popupColor: Color.Green,\n        enableArrow: this.any_boolean,\n        autoCancel: this.any_boolean\n      })\n        .id('buttonBindPopup5')\n\n      Button('ButtonBindPopup2').onClick(() => {\n        this.any_boolean = !this.any_boolean\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_five.ets", "project_name": "arkui_ace_engine-master", "id": "a733d9b18ee104b34cf077f2f2dd526ef381f457a8fa35ecfe0e9706e9d7387e"}
{"text": "import bindPopupTest_four from '../MyTest/BindPopupTest_four'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_four {\n  @State my_boolean: boolean = true\n  @State my_shadow: ShadowOptions | ShadowStyle = ShadowStyle.OUTER_DEFAULT_XS\n  @State shadow_1: ShadowOptions = {\n    radius: 10,\n    type: ShadowType.COLOR,\n    color: Color.Blue,\n    offsetX: 1,\n    offsetY: 1,\n    fill: true\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_four)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n\n      Button('ButtonBindPopup1')\n        .onClick(() => {\n          this.my_boolean = !this.my_boolean\n        })\n        .bindPopup(this.my_boolean, {\n          message: \"bindPopup\",\n          radius: '30px',\n          shadow: this.my_shadow,\n          backgroundBlurStyle: BlurStyle.BACKGROUND_THIN,\n          arrowHeight: '100px'\n        }).id('buttonBindPopup4')\n\n      Button('ButtonBindPopup2').onClick(() => {\n        this.my_shadow = this.shadow_1\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_four.ets", "project_name": "arkui_ace_engine-master", "id": "9d9b9027fb3511b6bd2ef5a9f0c21c1c2fa2f3816131588d9ee80273782f0871"}
{"text": "import bindPopupTest_nine from '../MyTest/BindPopupTest_nine'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_nine {\n  @State my_boolean: boolean = true\n  @State any_boolean: boolean = true\n  @State onStateChange_boolean: boolean = true\n  @State my_shadow: ShadowOptions | ShadowStyle = ShadowStyle.OUTER_DEFAULT_XS\n  @State shadow_1: ShadowOptions = {\n    radius: 10,\n    type: ShadowType.COLOR,\n    color: Color.Blue,\n    offsetX: 1,\n    offsetY: 1,\n    fill: true\n  }\n\n  @Builder\n  popupBuilder() {\n    Row({ space: 2 }) {\n      Image($r(\"app.media.app_icon\")).width(24).height(24)\n      Text('CustomPopup').fontSize(10)\n    }.width(100).height(50)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_nine)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n\n      Button('ButtonBindPopup1')\n        .onClick(() => {\n          this.my_boolean = !this.my_boolean\n        })\n        .bindPopup(this.my_boolean, {\n          builder: this.popupBuilder,\n          mask: { color: Color.Green },\n          arrowHeight: '10px',\n          radius: '10px',\n          shadow: this.my_shadow,\n          backgroundBlurStyle: BlurStyle.BACKGROUND_REGULAR,\n          focusable: this.any_boolean\n        }).id('buttonBindPopup9')\n\n      Button('ButtonBindPopup2')\n        .onClick(() => {\n          this.any_boolean = !this.any_boolean\n          this.my_shadow = this.shadow_1\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_nine.ets", "project_name": "arkui_ace_engine-master", "id": "d11082255d86cfe6d10d12b1ed90f50a04fe0676aeef490acd0e56fb62307de7"}
{"text": "import bindPopupTest_one from '../MyTest/BindPopupTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_one {\n  @State any_boolean: boolean = true\n  @State my_boolean_1: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_one)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Row() {\n\n        Button('ButtonBindPopup')\n          .onClick(() => {\n            this.my_boolean_1 = !this.my_boolean_1\n          })\n          .bindPopup(this.my_boolean_1, {\n            message: \"bindPopup\",\n            placementOnTop: this.any_boolean,\n            primaryButton: {\n              value: 'confirm', action: () => {\n                this.any_boolean = !this.any_boolean\n                console.info('confirm Button click')\n              }\n            },\n            secondaryButton: {\n              value: 'cancel', action: () => {\n                this.any_boolean = !this.any_boolean\n                console.info('cancel Button click')\n              }\n            },\n            onStateChange: (e) => {\n              if (!e.isVisible) {\n                this.any_boolean = !this.any_boolean\n              }\n            }\n          }).id('buttonBindPopup1')\n        Button('enabled').enabled(this.any_boolean).id('ButtonEnabled')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "4d74109d35a90eadd5f18054d8e5ed7f655e2726405b9e78bc35616e7f742ad2"}
{"text": "import bindPopupTest_seven from '../MyTest/BindPopupTest_seven'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_seven {\n  @State my_boolean: boolean = true\n  @State any_boolean: boolean = true\n\n  @Builder\n  popupBuilder() {\n    Row({ space: 2 }) {\n      Image($r(\"app.media.app_icon\")).width(24).height(24)\n      Text('Custom Popup').fontSize(10)\n    }.width(100).height(50)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_seven)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n\n      Button('ButtonBindPopup1')\n        .onClick(() => {\n          this.my_boolean = !this.my_boolean\n        })\n        .bindPopup(this.my_boolean, {\n          builder: this.popupBuilder,\n          maskColor: 0x123abc,\n          mask: this.any_boolean,\n          targetSpace: '10px',\n          offset: { x: 1, y: 1 }\n        }).id('buttonBindPopup7')\n\n      Button('ButtonBindPopup2')\n        .onClick(() => {\n          this.any_boolean = !this.any_boolean\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_seven.ets", "project_name": "arkui_ace_engine-master", "id": "7143140580fd02e1a95d7da078b02e0d447c190a47c311b88847a48674ddc819"}
{"text": "import bindPopupTest_six from '../MyTest/BindPopupTest_six'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_six {\n  @State my_boolean: boolean = true\n  @State any_boolean: boolean = true\n  @State onStateChange_boolean: boolean = true\n\n  @Builder\n  popupBuilder() {\n    Row({ space: 2 }) {\n      Image($r(\"app.media.app_icon\")).width(24).height(24)\n      Text('Custom Popup').fontSize(10)\n    }.width(100).height(50)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_six)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n\n      Button('ButtonBindPopup1')\n        .onClick(() => {\n          this.my_boolean = !this.my_boolean\n        })\n        .bindPopup(this.my_boolean, {\n          builder: this.popupBuilder,\n          onStateChange: (e) => {\n            if (!e.isVisible) {\n              this.onStateChange_boolean = false\n            }\n          },\n          arrowOffset: '40px',\n          showInSubWindow: this.any_boolean,\n          focusable: this.any_boolean\n        })\n        .id('buttonBindPopup6')\n\n      Button('ButtonBindPopup2')\n        .onClick(() => {\n          this.any_boolean = !this.any_boolean\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_six.ets", "project_name": "arkui_ace_engine-master", "id": "204c9dcc173625d950b028a039f2d28510e762f1e3255b904a30ea3be00adf07"}
{"text": "import bindPopupTest_three from '../MyTest/BindPopupTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_three {\n  @State my_boolean_1: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_three)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Column() {\n\n        Button('ButtonBindPopup')\n          .onClick(() => {\n            this.my_boolean_1 = !this.my_boolean_1\n          })\n          .bindPopup(this.my_boolean_1, {\n            message: \"bindPopup\",\n            targetSpace: $r(\"app.string.common_value_one\"),\n            offset: { x: 1, y: 1 },\n            width: '100px',\n            arrowWidth: '10px'\n          }).id('buttonBindPopup3')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "e61ade5007a22afb5c80b5a9671ceff0427524fd08b3137a7930208ba443c7cc"}
{"text": "import bindPopupTest_two from '../MyTest/BindPopupTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindPopupSample_two {\n  @State any_boolean: boolean = true\n  @State my_boolean_1: boolean = true\n  @State any_Length: Length = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindPopupTest_two)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Row() {\n        Button('ButtonBindPopup')\n          .onClick(() => {\n            this.my_boolean_1 = !this.my_boolean_1\n          })\n          .bindPopup(this.my_boolean_1, {\n            message: \"bindPopup\",\n            arrowOffset: this.any_Length,\n            showInSubWindow: this.any_boolean,\n            mask: this.any_boolean,\n            messageOptions: {\n              textColor: Color.Blue,\n              font: { size: 10, weight: '5' }\n            }\n          }).id('buttonBindPopup2')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindPopupSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "dfaa05a145a57818250c937073e653a262585668f0e99f4af5673063216623c5"}
{"text": "import bindSheetTest_one from '../MyTest/BindSheetTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindSheetSample_one {\n  @Builder\n  myBuilder() {\n    Column() {\n      Button(\"myBuilder\")\n        .margin(10)\n        .fontSize(20)\n    }\n  }\n\n  @State any_boolean: boolean = true\n  @State my_height: Length = '100'\n  @State my_SheetSize: SheetSize = SheetSize.MEDIUM\n  @State any_detents: [(SheetSize | Length), (SheetSize | Length)?, (SheetSize | Length)?] =\n    [SheetSize.MEDIUM, SheetSize.LARGE, SheetSize.FIT_CONTENT]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindSheetTest_one)\n  }\n\n  build() {\n    Column() {\n      Button(\"BindSheet_1\")\n        .bindSheet(this.any_boolean, this.myBuilder(), {\n          height: this.my_height,\n          detents: this.any_detents,\n          shouldDismiss: ((sheetDismiss: SheetDismiss) => {\n            console.log(\"bind sheet shouldDismiss\")\n            sheetDismiss.dismiss()\n          }),\n          showClose: this.any_boolean,\n          dragBar: this.any_boolean\n        }).id('buttonBindSheet1')\n\n      Button(\"BindSheet_2\")\n        .bindSheet(this.any_boolean, this.myBuilder(), { height: this.my_SheetSize })\n        .id('buttonBindSheet2')\n\n      Row() {\n        Button(\"ButtonBindSheet1\").onClick(() => {\n          this.any_boolean = !this.any_boolean\n          this.my_height = 100\n          this.my_SheetSize = SheetSize.LARGE\n          this.any_detents = [100, '100', $r(\"app.string.common_value_two\")]\n        })\n        Button(\"ButtonBindSheet2\").onClick(() => {\n          this.my_height = $r(\"app.string.common_value_two\")\n          this.my_SheetSize = SheetSize.FIT_CONTENT\n        })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindSheetSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "8820aac3ef259cbf1cf12613f6ccbd648770f57c4fcc57cc797e7748d3967cca"}
{"text": "import bindSheetTest_three from '../MyTest/BindSheetTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindSheetSample_three {\n  @Builder\n  myBuilder() {\n    Column() {\n      Button(\"myBuilder\")\n        .margin(10)\n        .fontSize(20)\n    }\n  }\n\n  @State any_boolean: boolean = true\n  @State any_maskColor_1: ResourceColor = $r(\"app.string.common_color\")\n  @State any_maskColor_2: ResourceColor = 'rgb(192,124,3)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindSheetTest_three)\n  }\n\n  build() {\n    Column() {\n\n      Button(\"BindSheet_1\")\n        .bindSheet(true, this.myBuilder(), {\n          maskColor: this.any_maskColor_1,\n          title: { title: \"title\", subtitle: \"subtitle\" },\n          enableOutsideInteractive: this.any_boolean,\n          shouldDismiss: ((sheetDismiss: SheetDismiss) => {\n            console.log(\"bind sheet shouldDismiss\")\n            sheetDismiss.dismiss()\n          })\n        }).id('buttonBindSheet5')\n\n      Button(\"BindSheet_2\")\n        .bindSheet(true, this.myBuilder(),\n          { title: { title: $r('app.string.module_desc'), subtitle: $r('app.string.module_desc') } })\n        .id('buttonBindSheet6')\n\n      Text(\"BindSheet_3\")\n        .bindSheet(false, this.myBuilder(), {\n          maskColor: this.any_maskColor_2, title: () => {\n            this.myBuilder()\n          }\n        })\n        .id('textBindSheet7')\n\n      Button(\"ButtonBindSheet\").onClick(() => {\n        this.any_boolean = !this.any_boolean\n        this.any_maskColor_1 = Color.Black\n        this.any_maskColor_2 = 0x77fa6e\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindSheetSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "5a1a37d19217f6275d2bff614cc42f9fbfbc528f634a6bb99ee56ada2c6991ec"}
{"text": "import bindSheetTest_two from '../MyTest/BindSheetTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BindSheetSample_two {\n  @State any_boolean: boolean = true\n  @State any_preferType: SheetType.CENTER | SheetType.POPUP = SheetType.CENTER\n  @State any_blurStyle_1: BlurStyle = BlurStyle.Thin\n  @State any_blurStyle_2: BlurStyle = BlurStyle.Regular\n\n  @Builder\n  myBuilder() {\n    Column() {\n      Button(\"myBuilder\")\n        .margin(10)\n        .fontSize(20)\n    }\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(bindSheetTest_two)\n  }\n\n  build() {\n    Column() {\n      Button(\"BindSheet1\")\n        .bindSheet(true, this.myBuilder(), {\n          preferType: this.any_preferType,\n          showClose: this.any_boolean,\n          dragBar: this.any_boolean,\n          blurStyle: this.any_blurStyle_1,\n          enableOutsideInteractive: this.any_boolean,\n          title: () => {\n            this.myBuilder()\n          }\n        })\n        .id('buttonBindSheet3')\n      Button(\"BindSheet2\")\n        .bindSheet(true, this.myBuilder(), { showClose: $r('app.boolean.false'), blurStyle: this.any_blurStyle_2 })\n        .id('buttonBindSheet4')\n      Button(\"ButtonBindSheet\").onClick(() => {\n        this.any_boolean = !this.any_boolean\n        this.any_preferType = SheetType.POPUP\n        this.any_blurStyle_1 = BlurStyle.Thick\n        this.any_blurStyle_2 = BlurStyle.NONE\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BindSheetSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "eea4d52e3ee975d3452496945c416e2ba23eebb16c68c7e8b23f2879550dcd2f"}
{"text": "import blendModeTest_five from '../MyTest/BlendModeTest_five';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BlendModeSample_five {\n  scrollArr: BlendMode[] = [BlendMode.EXCLUSION, BlendMode.MULTIPLY, BlendMode.HUE, BlendMode.SATURATION,\n    BlendMode.COLOR, BlendMode.LUMINOSITY]\n  index: number = 0\n  @State scroll: BlendMode = this.scrollArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(blendModeTest_five)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Circle()\n          .width(200)\n          .height(200)\n          .fill(Color.Green)\n          .position({ x: 50, y: 50 })\n        Circle()\n          .width(200)\n          .height(200)\n          .fill(Color.Blue)\n          .position({ x: 150, y: 50 })\n      }\n      .id('rowBlendMode5')\n      .blendMode(this.scroll, BlendApplyType.OFFSCREEN)\n      .alignItems(VerticalAlign.Center)\n      .height(300)\n      .width('100%')\n\n      Button('ButtonBlendMode5').onClick(() => {\n        this.index++\n        this.scroll = this.scrollArr[this.index % 6]\n      })\n    }\n    .height('100%')\n    .width('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BlendModeSample_five.ets", "project_name": "arkui_ace_engine-master", "id": "184f3588217cc475939d342911614f5986e4ca33266b02ab6bd37d7913f9fcdd"}
{"text": "import blendModeTest_four from '../MyTest/BlendModeTest_four';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BlendModeSample_four {\n  scrollArr: BlendMode[] = [BlendMode.LIGHTEN, BlendMode.COLOR_DODGE, BlendMode.COLOR_BURN, BlendMode.HARD_LIGHT,\n    BlendMode.SOFT_LIGHT, BlendMode.DIFFERENCE]\n  index: number = 0\n  @State scroll: BlendMode = this.scrollArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(blendModeTest_four)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Circle()\n          .width(200)\n          .height(200)\n          .fill(Color.Green)\n          .position({ x: 50, y: 50 })\n        Circle()\n          .width(200)\n          .height(200)\n          .fill(Color.Blue)\n          .position({ x: 150, y: 50 })\n      }\n      .id('rowBlendMode4')\n      .blendMode(this.scroll, BlendApplyType.OFFSCREEN)\n      .alignItems(VerticalAlign.Center)\n      .height(300)\n      .width('100%')\n\n      Button('ButtonBlendMode4').onClick(() => {\n        this.index++\n        this.scroll = this.scrollArr[this.index % 6]\n      })\n    }\n    .height('100%')\n    .width('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BlendModeSample_four.ets", "project_name": "arkui_ace_engine-master", "id": "ad363eb0bce3154d9d7a4f68931bae7a66c397a8313b3b330af4a378fb16348a"}
{"text": "import blendModeTest_two from '../MyTest/BlendModeTest_two';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BlendModeSample_two {\n  scrollArr: BlendMode[] = [BlendMode.SRC_IN, BlendMode.DST_IN, BlendMode.SRC_OUT, BlendMode.DST_OUT,\n    BlendMode.SRC_ATOP, BlendMode.DST_ATOP]\n  index: number = 0\n  @State scroll: BlendMode = this.scrollArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(blendModeTest_two)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Circle()\n          .width(200)\n          .height(200)\n          .fill(Color.Green)\n          .position({ x: 50, y: 50 })\n        Circle()\n          .width(200)\n          .height(200)\n          .fill(Color.Blue)\n          .position({ x: 150, y: 50 })\n      }\n      .id('rowBlendMode2')\n      .blendMode(this.scroll, BlendApplyType.FAST)\n      .alignItems(VerticalAlign.Center)\n      .height(300)\n      .width('100%')\n\n      Button('ButtonBlendMode2').onClick(() => {\n        this.index++\n        this.scroll = this.scrollArr[this.index % 6]\n      })\n    }\n    .height('100%')\n    .width('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BlendModeSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "c8f1b49b7c58a928d68d8b81c678d66d5ff24867f92af533f792aec4c5f9df7e"}
{"text": "import blurTest from '../MyTest/BlueTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BlurSample {\n  @State blurOptions: BlurOptions = { grayscale: [0, 0] }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(blurTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .blur(5).height(50).width(50).id('imageBlur1')\n\n      Image($r('app.media.app_icon')).blur(10, this.blurOptions)\n        .height(50).width(50).id('imageBlur2')\n\n      Text(this.blurOptions.grayscale.toString())\n      Button('ButtonBlur')\n        .onClick(() => {\n          this.blurOptions = { grayscale: [20, 80] }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BlurSample.ets", "project_name": "arkui_ace_engine-master", "id": "0e0473c06450dc2e067e7b712ac91da12bd43b1ac7c9fb6951ff0a21a64a29b4"}
{"text": "import borderColorTest_one from '../MyTest/BorderColorTest_one';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderColorSample_one {\n  borderColorArr: ResourceColor[] = ['rgba(27, 0, 255, 1.00)', 0X528B8B, Color.Red,\n    $r('sys.color.ohos_id_color_text_hyperlink'),]\n  index: number = 0\n  @State bordColor: ResourceColor = this.borderColorArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderColorTest_one)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('GridItemText')\n        }\n        .width(100)\n        .height(100)\n        .borderWidth(5)\n        .borderColor(this.bordColor)\n        .id('gridItemBorderColor1')\n      }\n\n      Button('ButtonItemBorderColor1')\n        .onClick(() => {\n          this.index++\n          this.bordColor = this.borderColorArr[this.index % 4]\n        }).width(200).height(50).margin(20)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderColorSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "ed9f559b317a42e4e34be7c11f61668d6ae905cc93df9855d43269918ad6355d"}
{"text": "import borderColorTest_two from '../MyTest/BorderColorTest_two';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderColorSample_two {\n  bordColorArr: EdgeColors[] = [{\n    left: Color.Red,\n    right: Color.Blue,\n    top: Color.Red,\n    bottom: Color.Green\n  },\n    {\n      left: 0xe3bbbb,\n      right: 0xFFE4E1,\n      top: 0x00FF00,\n      bottom: 0xB658BB\n    },\n    {\n      left: $r('sys.color.ohos_id_color_text_hyperlink'),\n      right: $r('sys.color.ohos_id_color_text_hyperlink'),\n      top: $r('sys.color.ohos_id_color_text_hyperlink'),\n      bottom: $r('sys.color.ohos_id_color_text_hyperlink')\n    },\n    {\n      left: 'rgb(72 61 139)',\n      right: 'rgb(72 61 139)',\n      top: 'rgb(72 61 139)',\n      bottom: 'rgb(72 61 139)'\n    }\n  ]\n  index: number = 0\n  @State bordColor: EdgeColors = this.bordColorArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderColorTest_two)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('22')\n        }\n        .width(100)\n        .height(100)\n        .borderWidth(5)\n        .borderColor(this.bordColor)\n        .id('gridItemBorderColor2')\n      }\n\n      Button('ButtonItemBorderColor2')\n        .onClick(() => {\n          this.index++\n          this.bordColor = this.bordColorArr[this.index % 4]\n        }).width(200).height(50).margin(20)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderColorSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "1de1b8b083b8160d2b3c4f98b65f0bf8612c0757907a1585201b7e41eb197ca0"}
{"text": "import borderImageTest_one from '../MyTest/BorderImageTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderImageSample_one {\n  valueArr: RepeatMode[] = [RepeatMode.Repeat, RepeatMode.Stretch, RepeatMode.Round, RepeatMode.Space]\n  bordWidthArr: (Length | EdgeWidths)[] = ['10px', 10, $r('app.string.common_breadth'),\n    {\n      left: '8px',\n      right: '10px',\n      top: '8px',\n      bottom: '10px'\n    },\n    {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    },\n    {\n      left: $r('app.string.common_breadth'),\n      right: $r('app.string.common_breadth'),\n      top: $r('app.string.common_breadth'),\n      bottom: $r('app.string.common_breadth')\n    }\n  ]\n  index: number = 0\n  @State value: RepeatMode = this.valueArr[this.index]\n  @State bordWidth: (Length | EdgeWidths) = this.bordWidthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderImageTest_one)\n  }\n\n  build() {\n    Column() {\n      Text('This is gradient color.')\n        .textAlign(TextAlign.Center)\n        .height(50)\n        .width(200)\n        .id('textBorderImage1')\n        .borderImage({\n          source: $r('app.media.app_icon'),\n          width: {\n            top: \"10px\",\n            bottom: \"10px\",\n            left: \"10px\",\n            right: \"10px\"\n          },\n          outset: this.bordWidth,\n          repeat: this.value,\n          fill: true\n        })\n\n      Button('ButtonBorderImage1').onClick(() => {\n        this.index++\n        this.value = this.valueArr[this.index % 4]\n        this.bordWidth = this.bordWidthArr[this.index % 6]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderImageSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "a50933e60a903740f62b6683cacaf0d0e72634fb5796b15cf9505a74c7740757"}
{"text": "import borderImageTest_three from '../MyTest/BorderImageTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderImageSample_three {\n  valueArr: (string | Resource)[] = ['../../../resources/base/media/2.png', $r('app.media.app_icon')]\n  bordWidthArr: (Length | EdgeWidths)[] = ['10px', 10, $r('app.string.common_breadth'),\n    {\n      left: '8px',\n      right: '10px',\n      top: '8px',\n      bottom: '10px'\n    },\n    {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    },\n    {\n      left: $r('app.string.common_breadth'),\n      right: $r('app.string.common_breadth'),\n      top: $r('app.string.common_breadth'),\n      bottom: $r('app.string.common_breadth')\n    }\n  ];\n  index: number = 0\n  @State value: (string | Resource) = this.valueArr[this.index]\n  @State bordWidth: (Length | EdgeWidths) = this.bordWidthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderImageTest_three)\n  }\n\n  build() {\n    Column() {\n      Text('bordimageSample')\n        .id('textBorderImage3')\n        .borderImage({\n          source: this.value,\n          width: this.bordWidth,\n        })\n\n      Button('ButtonBorderImage3').onClick(() => {\n        this.index++\n        this.value = this.valueArr[this.index % 2]\n        this.bordWidth = this.bordWidthArr[this.index % 6]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderImageSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "1ad4e111ab3831ee58120ae57e40bde6a47933236a9f232038c10fdc6741d0e6"}
{"text": "import borderImageTest_two from '../MyTest/BorderImageTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderImageSample_two {\n  valueArr: GradientDirection[] = [GradientDirection.Left, GradientDirection.Top, GradientDirection.Right,\n    GradientDirection.Bottom, GradientDirection.LeftTop, GradientDirection.LeftBottom, GradientDirection.RightTop,\n    GradientDirection.RightBottom, GradientDirection.None]\n  colorArr: ResourceColor[] = ['rgb(72, 61, 139)', 0X528B8B, Color.Red, $r('sys.color.ohos_id_color_text_hyperlink')];\n  borderLengthArr: (Length | EdgeWidths)[] = ['10px', 10, $r('app.string.common_breadth'),\n    {\n      left: '8px',\n      right: '10px',\n      top: '8px',\n      bottom: '10px'\n    },\n    {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    },\n    {\n      left: $r('app.string.common_breadth'),\n      right: $r('app.string.common_breadth'),\n      top: $r('app.string.common_breadth'),\n      bottom: $r('app.string.common_breadth')\n    }\n  ]\n  index: number = 0\n  @State value: GradientDirection = this.valueArr[this.index]\n  @State color: ResourceColor = this.colorArr[this.index]\n  @State borderLength: (Length | EdgeWidths) = this.borderLengthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderImageTest_two)\n  }\n\n  build() {\n    Column() {\n      Text('This is gradient color.')\n        .textAlign(TextAlign.Center)\n        .height(50)\n        .width(200)\n        .id('textBorderImage2')\n        .borderImage({\n          source: {\n            angle: 90,\n            direction: this.value,\n            colors: [[this.color, 0.0], [0xD3E0DC, 0.3], [0xFCD1D1, 1.0]]\n          },\n          slice: this.borderLength,\n          width: {\n            top: \"10px\",\n            bottom: \"10px\",\n            left: \"10px\",\n            right: \"10px\"\n          },\n          fill: false\n        })\n\n      Button('ButtonBorderImage2').onClick(() => {\n        this.index++\n        this.value = this.valueArr[this.index % 9]\n        this.color = this.colorArr[this.index % 4]\n        this.borderLength = this.borderLengthArr[this.index % 6]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderImageSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "fb8ac3da74b46369d260f08e2ad55be635b2aa0c459fcb8fc518633f2054d115"}
{"text": "import borderRadiusTest from '../MyTest/BorderRadiusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderRadiusSample {\n  private appleFruits: string[] = ['apple1', 'apple2', 'apple3', 'apple4']\n  @State borderRadiusOne: number | Resource = 10\n  @State borderRadiusTwo: number | Resource = 30\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderRadiusTest)\n  }\n\n  build() {\n    Column() {\n      TextTimer()\n        .backgroundColor(0x00FFFF)\n        .id('textTimer1')\n        .borderRadius('10px')\n      TextTimer()\n        .backgroundColor(0xAAFFAA)\n        .id('textTimer2')\n        .borderRadius(this.borderRadiusOne)\n\n      Button('ButtonBorderRadius1')\n        .onClick((event: ClickEvent) => {\n          this.borderRadiusOne = $r('app.string.border_radius')\n        })\n\n      Row() {\n        TextPicker({ range: this.appleFruits, selected: 2 })\n          .onChange((value: string | string[], index: number | number[]) => {\n          })\n          .backgroundColor(0xa52a2a)\n          .id('textPicker1')\n          .borderRadius({\n            topLeft: '100',\n            topRight: '100',\n            bottomLeft: '100',\n            bottomRight: '100'\n          })\n\n        TextPicker({ range: this.appleFruits, selected: 1 })\n          .onChange((value: string | string[], index: number | number[]) => {\n          })\n          .backgroundColor(0x0000ff)\n          .id('textPicker2')\n          .borderRadius({\n            topLeft: this.borderRadiusTwo,\n            topRight: this.borderRadiusTwo,\n            bottomLeft: this.borderRadiusTwo,\n            bottomRight: this.borderRadiusTwo\n          })\n\n        Button('ButtonBorderRadius2')\n          .onClick((event: ClickEvent) => {\n            this.borderRadiusTwo = $r('app.string.border_radius')\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderRadiusSample.ets", "project_name": "arkui_ace_engine-master", "id": "f14a06a83b7a82f051e80ce9d0a11e9e3a4ee8c75fd201fb5455b3248481444a"}
{"text": "import borderStyleTest from '../MyTest/BorderStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderStyleSample {\n  @State valueArr: (EdgeStyles | BorderStyle)[] = [\n    BorderStyle.Dotted, BorderStyle.Dashed, BorderStyle.Solid, {\n    left: BorderStyle.Dotted,\n    right: BorderStyle.Dotted,\n    top: BorderStyle.Dotted,\n    bottom: BorderStyle.Dotted\n  },\n    {\n      left: BorderStyle.Dashed,\n      right: BorderStyle.Dashed,\n      top: BorderStyle.Dashed,\n      bottom: BorderStyle.Dashed\n    },\n    {\n      left: BorderStyle.Solid,\n      right: BorderStyle.Solid,\n      top: BorderStyle.Solid,\n      bottom: BorderStyle.Solid\n    }\n  ]\n  index: number = 0\n  @State\n  value: (EdgeStyles | BorderStyle) = this.valueArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderStyleTest)\n  }\n\n  build() {\n    Column() {\n      Text('boderstylSample')\n        .id('textBorderStyle')\n        .borderStyle(this.value)\n        .borderWidth(5)\n        .borderColor(0xAFEEEE)\n        .borderRadius(10)\n        .width(120)\n        .height(120)\n        .textAlign(TextAlign.Center)\n        .fontSize(16)\n\n      Button('ButtonBorderStyle').onClick(() => {\n        this.index++\n        this.value = this.valueArr[this.index % 6]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "0c72eac545b26bb396f63c5c1f14b11c7848487aa2dec062a3ac56cd98a1dd51"}
{"text": "import borderWidthTest from '../MyTest/BorderWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BorderWidthSample {\n  borderLengthArr: (Length | EdgeWidths)[] = ['10px', 10, $r('app.string.common_breadth'),\n    {\n      left: '8px',\n      right: '10px',\n      top: '8px',\n      bottom: '10px'\n    },\n    {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    },\n    {\n      left: $r('app.string.common_breadth'),\n      right: $r('app.string.common_breadth'),\n      top: $r('app.string.common_breadth'),\n      bottom: $r('app.string.common_breadth')\n    }\n  ];\n  index: number = 0\n  @State borderLength: (Length | EdgeWidths) = this.borderLengthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(borderWidthTest)\n  }\n\n  build() {\n    Column() {\n      Text(\"BorderWidthSample\")\n        .id('textBorderWidth')\n        .borderStyle(BorderStyle.Dashed)\n        .borderWidth(this.borderLength)\n        .borderColor(0xAFEEEE)\n        .borderRadius(10)\n\n      Button('ButtonBorderWidth').onClick(() => {\n        this.index++\n        this.borderLength = this.borderLengthArr[this.index % 6]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BorderWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "20681b786eca08b82c961782f9630285b853d0b0f1faac67cec4e14205a4f799"}
{"text": "import brightnessTest from '../MyTest/BrightnessTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BrightnessSample {\n  @State brightnessNumber: number = 2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(brightnessTest)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonBrightness1')\n        .onClick((event: ClickEvent) => {\n          this.brightnessNumber = -1\n        })\n      Canvas()\n        .id('canvasBrightness1')\n        .brightness(this.brightnessNumber)\n        .backgroundColor('#ffff00')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\BrightnessSample.ets", "project_name": "arkui_ace_engine-master", "id": "d5f605a6820b24ac2cfef0cd2ad5912f69bf1d06204d8093d3ae136d683ea3e2"}
{"text": "import clipTest from '../MyTest/ClipTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ClipSample {\n  @State any_1: boolean | PathAttribute = new Path({ width: 180, height: 180 })\n  @State any_2: boolean | EllipseAttribute = new Ellipse({ width: 100, height: 50 })\n  @State any_3: CircleAttribute | RectAttribute = new Rect({ width: '70%', height: 40 })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(clipTest)\n  }\n\n  build() {\n    Row({ space: 10 }) {\n      Image($r('app.media.app_icon'))\n        .width('180px')\n        .height('180px')\n        .clip(this.any_1)\n        .borderRadius(20)\n        .id('imageClip1')\n\n      Image($r('app.media.app_icon'))\n        .width('180px')\n        .height('180px')\n        .clip(this.any_2)\n        .borderRadius(20)\n        .id('imageClip2')\n\n      Image($r('app.media.app_icon'))\n        .width('180px')\n        .height('180px')\n        .clip(this.any_3)\n        .borderRadius(20)\n        .id('imageClip3')\n\n      Button('ButtonImageClip')\n        .onClick(() => {\n          this.any_1 = true\n          this.any_2 = false\n          this.any_3 = new Circle({ width: 60, height: 60 })\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ClipSample.ets", "project_name": "arkui_ace_engine-master", "id": "219cbfecbfe649025babf73c677ae83eb824b6af09198e5e0b2face2a0747023"}
{"text": "import constraintSizeTest from '../MyTest/ConstraintSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ConstraintSizeSample {\n  constrintSizeArr: ConstraintSizeOptions[] = [\n    {\n      minWidth: '8px',\n      maxWidth: '10px',\n      minHeight: '8px',\n      maxHeight: '10px'\n    },\n    {\n      minWidth: 5,\n      maxWidth: 10,\n      minHeight: 5,\n      maxHeight: 10\n    },\n    {\n      maxWidth: $r('app.string.common_length'),\n      minWidth: $r('app.string.common_breadth'),\n      maxHeight: $r('app.string.common_length'),\n      minHeight: $r('app.string.common_breadth')\n    }]\n  valueWidthArr: Length[] = ['8px', 11, 120]\n  valueHeightArr: Length[] = ['7px', 4, 9]\n  index: number = 0\n  @State constrintSize: ConstraintSizeOptions = this.constrintSizeArr[this.index]\n  @State valueWidth: Length = this.valueWidthArr[this.index]\n  @State valueHeight: Length = this.valueHeightArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(constraintSizeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Row()\n        .id('rowConstraintSize')\n        .constraintSize(this.constrintSize)\n        .size({ width: this.valueWidth, height: this.valueHeight })\n\n      Button('ButtonConstraintSize').onClick(() => {\n        this.index++\n        this.valueWidth = this.valueWidthArr[this.index % 3]\n        this.valueHeight = this.valueHeightArr[this.index % 3]\n        this.constrintSize = this.constrintSizeArr[this.index % 3]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ConstraintSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "0c732a41aefdbf566b0b335e400600990653429b0f827f354a1133eb70502024"}
{"text": "import contrastTest from '../MyTest/ContrastTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ContrastSample {\n  @State contrastValue: number = 2.0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(contrastTest)\n  }\n\n  build() {\n    Column() {\n      Text('contrast').fontSize(15).fontColor(0xCCCCCC).width('90%')\n      Image($r('app.media.app_icon')).width('50%').height(50).id('imageContrast1').contrast(this.contrastValue)\n      Button('ButtonContrast1')\n        .onClick(() => {\n          this.contrastValue = -1\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ContrastSample.ets", "project_name": "arkui_ace_engine-master", "id": "28f240a99d67c018228d5af07870afd07da4cbdd3b1e93cf61b6a011c6d0c377"}
{"text": "import defaultFocusTest from '../MyTest/DefaultFocusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DefaultFocusSample {\n  @State isDefaultFocus: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(defaultFocusTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Checkbox()\n        .id('checkboxDefaultFocus')\n        .focusable(true)\n        .defaultFocus(this.isDefaultFocus)\n      Button('ButtonDefaultFocus')\n        .onClick(() => {\n          this.isDefaultFocus = !this.isDefaultFocus\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\DefaultFocusSample.ets", "project_name": "arkui_ace_engine-master", "id": "7a41194a538165b89bbf95096375ca3fa850c687e22429347cfe531b59901c03"}
{"text": "import directionTest from '../MyTest/DirectionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DirectionSample {\n  @State directionLtr: Direction = Direction.Ltr\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(directionTest)\n  }\n\n  build() {\n    Column() {\n      Text('direction').fontSize(9).fontColor(0xCCCCCC).width('90%')\n\n      Row() {\n        Text('direction1').height(50).width('25%').fontSize(16).backgroundColor(0xF5DEB3)\n        Text('direction2').height(50).width('25%').fontSize(16).backgroundColor(0xD2B48C)\n        Text('direction3').height(50).width('25%').fontSize(16).backgroundColor(0xF5DEB3)\n        Text('direction4').height(50).width('25%').fontSize(16).backgroundColor(0xD2B48C)\n      }\n      .width('90%')\n      .id('rowDirection1')\n      .direction(this.directionLtr)\n\n      Button('ButtonDirection1')\n        .onClick(() => {\n          this.directionLtr = Direction.Rtl\n        })\n\n      Button('ButtonDirection2')\n        .onClick(() => {\n          this.directionLtr = Direction.Auto\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\DirectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "b934acee99c75a565678211f71babae1385c23360dda9e34200266f0b955c380"}
{"text": "import displayPriorityTest from '../MyTest/DisplayPriorityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\nclass ContainerInfo {\n  label: string = '';\n  size: string = '';\n}\n\nclass ChildInfo {\n  text: string = '';\n  priority: number = 0;\n}\n\n@Entry\n@Component\nstruct DisplayPrioritySample {\n  private container: ContainerInfo[] = [\n    { label: 'Big container', size: '40%' },\n    { label: 'Small container', size: '15%' }\n  ]\n  private children: ChildInfo[] = [\n    { text: '1\\n(priority:2)', priority: 2 },\n    { text: '2\\n(priority:1)', priority: 1 },\n  ]\n  @State currentIndex: number = 0;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(displayPriorityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Flex({ justifyContent: FlexAlign.SpaceBetween }) {\n        Text('item.text')\n          .textAlign(TextAlign.Center)\n          .backgroundColor(0xbbb2cb)\n          .id('textDisplayPriority1')\n          .displayPriority(1)\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\DisplayPrioritySample.ets", "project_name": "arkui_ace_engine-master", "id": "ada90aac0838a774cad570508d7812ae217ae78e3d1fdf8a11f7174d7c5eb2eb"}
{"text": "import draggableTest from '../MyTest/DraggableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DraggableSample {\n  @State my_boolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(draggableTest)\n  }\n\n  build() {\n    Row({ space: 20 }) {\n      QRCode('Draggable').draggable(this.my_boolean)\n        .height(150).width(150)\n        .id('qRCodeDraggable1')\n      Button('ButtonDraggable').onClick(() => {\n        this.my_boolean = !this.my_boolean\n      })\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\DraggableSample.ets", "project_name": "arkui_ace_engine-master", "id": "e1df57ba622e31c056604af2ff6c68f3598973b9ca9591637c9258b82053b9a0"}
{"text": "import dragPreviewOptionsTest from '../MyTest/DragPreviewOptionsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DragPreviewOptionsSample {\n  @State any_mode: DragPreviewOptions = { mode: DragPreviewMode.AUTO }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dragPreviewOptionsTest)\n  }\n\n  build() {\n    Row({ space: 5 }) {\n      Image($r('app.media.app_icon'))\n        .height(100)\n        .width(100)\n        .draggable(true)\n        .dragPreviewOptions(this.any_mode)\n        .id('imageDragPreviewOptions1')\n\n      Button('ButtonDragPreviewOptions')\n        .onClick(() => {\n          this.any_mode = { mode: DragPreviewMode.DISABLE_SCALE };\n        })\n    }\n  }\n}\n\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\DragPreviewOptionsSample.ets", "project_name": "arkui_ace_engine-master", "id": "2971aa5440c8ee686a549e17f0199daa87410cd6af275486dd9d15c7b171cb69"}
{"text": "import enabledTest from '../MyTest/EnabledTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EnabledSample {\n  @State change_boolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(enabledTest)\n  }\n\n  build() {\n    Flex() {\n      Button('ButtonEnabled1')\n        .enabled(this.change_boolean)\n        .id('buttonEnabled')\n\n      Button('ButtonEnabled2').onClick(() => {\n        this.change_boolean = !this.change_boolean\n      })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\EnabledSample.ets", "project_name": "arkui_ace_engine-master", "id": "1ccae8d159d108c5d9d03893378274cdb22dd3c1e47b90f9b637fa84b3188974"}
{"text": "import expandSafeAreaTest from '../MyTest/ExpandSafeAreaTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ExpandSafeAreaSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(expandSafeAreaTest)\n  }\n\n  build() {\n    Column() {\n      Marquee({ start: false, src: \"1\" })\n        .height('15%')\n        .width('100%')\n        .backgroundImage($r('app.media.app_icon'))\n        .backgroundImageSize(ImageSize.Cover)\n        .expandSafeArea([SafeAreaType.SYSTEM, SafeAreaType.CUTOUT, SafeAreaType.KEYBOARD],\n          [SafeAreaEdge.TOP, SafeAreaEdge.BOTTOM, SafeAreaEdge.START, SafeAreaEdge.END])\n        .id('marqueeExpandSafeArea1')\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ExpandSafeAreaSample.ets", "project_name": "arkui_ace_engine-master", "id": "f843161375b6032c88440c5c6d8ee0bedd1ba6aa89367b8340d9f31f467ac481"}
{"text": "import flexBasisTest from '../MyTest/FlexBasisTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FlexBasisSample {\n  @State any: number | string = 100\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(flexBasisTest)\n  }\n\n  build() {\n    Row() {\n      Image($r('app.media.app_icon')).flexBasis(this.any).id('loadingProgressFlexBasis1')\n      Button('ButtonFlexBasis').onClick(() => {\n        this.any = '200'\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FlexBasisSample.ets", "project_name": "arkui_ace_engine-master", "id": "5f2c1f0b786a205d7a86e50c4a5b9ec867a1782cb5b0ab3ee315c5bae24b245c"}
{"text": "import flexGrowTest from '../MyTest/FlexGrowTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FlexGrowSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(flexGrowTest)\n  }\n\n  build() {\n    Column() {\n      Flex() {\n        Text('Text')\n          .height('100%')\n          .flexGrow(2)\n          .border({ width: 1, color: Color.Red })\n          .id('textFlexGrow')\n      }.width('90%').height(120)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FlexGrowSample.ets", "project_name": "arkui_ace_engine-master", "id": "a29dc85d866f70969260e02b55ff6ab435dc7fadbbc0c17bf3b573b2c47ab039"}
{"text": "import flexShrinkTest from '../MyTest/FlexShrinkTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FlexShrinkSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(flexShrinkTest)\n  }\n\n  build() {\n    Flex() {\n      Menu()\n        .flexShrink(0)\n        .width('50%')\n        .backgroundColor(0xF5DEB3)\n        .id('menuFlexShrink1')\n      Menu()\n        .width('40%')\n        .flexShrink(1)\n        .backgroundColor(0xD2B48C)\n        .id('menuFlexShrink2')\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FlexShrinkSample.ets", "project_name": "arkui_ace_engine-master", "id": "1af4acc1c3f7f3366b6fc80c13e70410e5917744296cd05e5cab40aefab09fa0"}
{"text": "import focusableTest from '../MyTest/FocusableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FocusableSample {\n  @State isFocusable: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(focusableTest)\n  }\n\n  build() {\n    Column() {\n      Button()\n        .focusable(this.isFocusable)\n        .id('buttonFocusable1')\n      Button('ButtonFocusable')\n        .onClick(() => {\n          this.isFocusable = !this.isFocusable\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FocusableSample.ets", "project_name": "arkui_ace_engine-master", "id": "56857f820b5328ffcb07e099cbd5611a22317b4ca78b992379a0e904a392a3a8"}
{"text": "import focusOnTouchTest from '../MyTest/FocusOnTouchTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FocusOnTouchSample {\n  @State isFocusOnTouch: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(focusOnTouchTest)\n  }\n\n  build() {\n    Column() {\n      TextInput()\n        .focusOnTouch(this.isFocusOnTouch)\n        .id('textInputFocusOnTouch')\n      Button('ButtonFocusOnTouch')\n        .onClick(() => {\n          this.isFocusOnTouch = !this.isFocusOnTouch\n        })\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FocusOnTouchSample.ets", "project_name": "arkui_ace_engine-master", "id": "dfc534f6c1e792d66a3959623b40a03bd0ce7b9bfb85fc99e8435f2f05a4db06"}
{"text": "import fontColorTest from '../MyTest/FontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FontColorSample {\n  @State any_Color: ResourceColor = $r(\"app.string.common_color\")\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(fontColorTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n\n      Text('Color')\n        .fontColor(this.any_Color)\n        .id('textFontColor1')\n\n      Row() {\n        Button(\"ButtonFontColor1\")\n          .onClick(() => {\n            this.any_Color = Color.Red\n          })\n        Button(\"ButtonFontColor2\")\n          .onClick(() => {\n            this.any_Color = 0xaaffaa\n          })\n        Button(\"ButtonFontColor3\")\n          .onClick(() => {\n            this.any_Color = 'rgba(255, 224, 0, 1.00)'\n          })\n      }\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "961936d5449a16a286259bd2e1bb7248013c34a3929e09d9064a943fa3dffbf1"}
{"text": "import fontFamilyTest from '../MyTest/FontFamilyTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct FontFamilySample {\n  fontFamilyArr: string[] = ['Arial', 'font',]\n  index: number = 0\n  @State fontFamily: string = this.fontFamilyArr[this.index]\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'font',\n      familySrc: $rawfile('TESTFONT.TTF'),\n    })\n    loadComponentTestEntry(fontFamilyTest)\n  }\n\n  build() {\n    Column() {\n      Text(\"haha\").fontFamily(this.fontFamily)\n        .id('textFontFamily')\n      Button('ButtonFontFamily').onClick(() => {\n        this.index++\n        this.fontFamily = this.fontFamilyArr[this.index % 2]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "2a09afef01b8a1503d9756155692d2f8ac7daa8d985a8dc325c18d804767b934"}
{"text": "import fontSizeTest from '../MyTest/FontSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FontSizeSample {\n  @State any_Size: Length = $r(\"app.string.common_value_two\")\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(fontSizeTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text('it‘s fontSize')\n        .fontSize(this.any_Size)\n        .id('textFontSize1')\n\n      Button('ButtonFontSize1')\n        .onClick(() => {\n          this.any_Size = 50\n        })\n\n      Button('ButtonFontSize2')\n        .onClick(() => {\n          this.any_Size = '30'\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "5af681e14011f367acd6c8078d90616134924ab8ccffdb321512c410798db267"}
{"text": "import fontStyleTest from '../MyTest/FontStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FontStyleSample {\n  @State any_fontStyle: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(fontStyleTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text(\"fontStyle\").fontStyle(this.any_fontStyle).id('textFontStyle1')\n      Button('ButtonFontStyle1')\n        .onClick(() => {\n          this.any_fontStyle = FontStyle.Italic\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "f502190ea78e032bab20fbe268e4e8399df0fa1583ab84545949c489a91754bc"}
{"text": "import fontWeightTest from '../MyTest/FontWeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct FontWeightSample {\n  @State myFontWeight: FontWeight[] = [FontWeight.Lighter, FontWeight.Normal,\n    FontWeight.Regular, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder]\n  index = 0\n  @State anyFontWeight: FontWeight = this.myFontWeight[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(fontWeightTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .fontWeight(700)\n        .id('textAreaFontWeight1')\n\n      TextArea()\n        .fontWeight(\"500\")\n        .id('textAreaFontWeight2')\n\n      Text('hello world')\n        .fontWeight(this.anyFontWeight)\n        .id('textFontWeight3')\n\n      Button('ButtonFontWeight1')\n        .onClick(() => {\n          this.index++\n          this.anyFontWeight = this.myFontWeight[this.index % 6]\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\FontWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "95a38e7ccf1fcb911030f07946286bf3eb9f2585fe49c201d280c649758342d7"}
{"text": "import foregroundBlurStyleTest from '../MyTest/ForegroundBlurStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ForegroundBlurStyleSample {\n  ForegroundBlurStyle: BlurStyle[] = [BlurStyle.Thin, BlurStyle.Regular, BlurStyle.Thick, BlurStyle.BACKGROUND_THIN\n    , BlurStyle.BACKGROUND_REGULAR, BlurStyle.BACKGROUND_THICK, BlurStyle.BACKGROUND_ULTRA_THICK\n    , BlurStyle.NONE, BlurStyle.COMPONENT_ULTRA_THIN, BlurStyle.COMPONENT_THIN, BlurStyle.COMPONENT_REGULAR\n    , BlurStyle.COMPONENT_THICK, BlurStyle.COMPONENT_ULTRA_THICK]\n  index: number = 0\n  @State value: BlurStyle = this.ForegroundBlurStyle[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(foregroundBlurStyleTest)\n  }\n\n  build() {\n    Column() {\n\n      Image($r('app.media.app_icon'))\n        .width(300)\n        .height(350)\n        .foregroundBlurStyle(this.value, {\n          colorMode: ThemeColorMode.SYSTEM,\n          adaptiveColor: AdaptiveColor.DEFAULT,\n          blurOptions: { grayscale: [12, 103] }\n        })\n        .id('imageForegroundBlurStyle1')\n\n\n      Button('ButtonForegroundBlurStyle')\n        .onClick(() => {\n          this.index++\n          this.value = this.ForegroundBlurStyle[this.index % 13]\n        })\n\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ForegroundBlurStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "69f8628a003b992c751189ff0bb4cf9563fcbaf458ff790294dd61e723b50250"}
{"text": "import foregroundColorTest from '../MyTest/ForegroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ForegroundColorSample {\n  coloringStrategyArr: ColoringStrategy[] = [\n    ColoringStrategy.INVERT, ColoringStrategy.AVERAGE, ColoringStrategy.PRIMARY\n  ]\n  resouColorArr: ResourceColor[] =\n    ['rgb(72,61,139)', 0X528B8B, Color.Red, $r('sys.color.ohos_id_color_text_hyperlink')];\n  index: number = 0;\n  @State resouColor: ResourceColor = this.resouColorArr[this.index]\n  @State coloringStrategy: ColoringStrategy = this.coloringStrategyArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(foregroundColorTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Row() {\n        Ellipse({ width: 50, height: 30 }).foregroundColor(this.resouColor)\n          .id('rowForegroundColor1')\n      }.backgroundColor(Color.Black)\n\n      Row() {\n        Ellipse({ width: 50, height: 30 }).foregroundColor(this.coloringStrategy)\n          .id('rowForegroundColor2')\n      }.backgroundColor(Color.Black)\n\n      Button('ButtonForegroundColor')\n        .onClick(() => {\n          this.index++\n          this.resouColor = this.resouColorArr[this.index % 4]\n          this.coloringStrategy = this.coloringStrategyArr[this.index % 3]\n        }).width(200).height(50).margin(20)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ForegroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "d54d51f2a3de602452dc7d9e40a3fc1d3a79002a88d1b6f52682d0e63b5bb977"}
{"text": "import geometryTransitionTest from '../MyTest/GeometryTransitionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GeometryTransitionSample {\n  @State isShow: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(geometryTransitionTest)\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Center }) {\n      if (this.isShow) {\n        Image($r('app.media.app_icon'))\n          .width(300)\n          .height(300)\n          .geometryTransition(\"picture\")\n          .id('imageGeometryTransition1')\n      } else {\n        Column() {\n          Image($r('app.media.app_icon'))\n            .width('30%')\n            .height('30%')\n        }.width('50%')\n        .height('50%')\n      }\n    }\n    .onClick(() => {\n      animateTo({ duration: 1000 }, () => {\n        this.isShow = !this.isShow\n      })\n    })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\GeometryTransitionSample.ets", "project_name": "arkui_ace_engine-master", "id": "31c55e2fc9dfad1b34977b2c771f9e118eed037006e8507e7259591d7c10e799"}
{"text": "import grayScaleTest from '../MyTest/GrayScaleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GrayScaleSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(grayScaleTest)\n  }\n\n  @State grayScaleNumber: number = 1\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width('500px').height('280px')\n        .id('imageGrayscale1')\n        .grayscale(this.grayScaleNumber)\n\n      Button('ButtonGrayScale1')\n        .onClick(() => {\n          this.grayScaleNumber = -1\n        })\n      Button('ButtonGrayScale2')\n        .onClick(() => {\n          this.grayScaleNumber = 2\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\GrayScaleSample.ets", "project_name": "arkui_ace_engine-master", "id": "b76baff99fcabb3d72337bdefb6d1c5b95a582e77c8ef1b3df2a8a84f560520b"}
{"text": "import gridOffsetTest from '../MyTest/GridOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridOffsetSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridOffsetTest)\n  }\n\n  build() {\n    Flex() {\n      Row() {\n        Text('Center').fontSize(25)\n      }\n      .id('rowGridOffset')\n      .gridSpan(2)\n      .gridOffset(1)\n      .height(\"100%\")\n      .backgroundColor(0x66b6c5d1)\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\GridOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "5033c9ee48da8b26c0f2093e1e2b23e473bfcffa28a6492664944b6d9468355f"}
{"text": "import gridSpanTest from '../MyTest/GridSpanTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridSpanSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridSpanTest)\n  }\n\n  build() {\n    Flex() {\n      Row() {\n        Text('Center').fontSize(25)\n      }\n      .id('rowGridSpan')\n      .gridSpan(2)\n      .gridOffset(1)\n      .height(\"100%\")\n      .backgroundColor(0x66b6c5d1)\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\GridSpanSample.ets", "project_name": "arkui_ace_engine-master", "id": "fda4960dce5d9831efeaab303d54370ebcc2980d57d80cebae60aff93ab07032"}
{"text": "import groupDefaultFocusTest from '../MyTest/GroupDefaultFocusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GroupDefaultFocusSample {\n  @State isGroupDefaultFocus: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(groupDefaultFocusTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Checkbox()\n          .focusable(true)\n          .groupDefaultFocus(this.isGroupDefaultFocus)\n          .id('checkboxGroupDefaultFocus')\n        Button('ButtonGroupDefaultFocus')\n          .onClick(() => {\n            this.isGroupDefaultFocus = !this.isGroupDefaultFocus\n          })\n      }.tabIndex(1)\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\GroupDefaultFocusSample.ets", "project_name": "arkui_ace_engine-master", "id": "5772ba015b6a436508d62a81af11090919535b2cf4807ace888df2165af6b9f0"}
{"text": "import heightTest from '../MyTest/HeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct HeightSample {\n  @State num: Length = '30px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(heightTest)\n  }\n\n  build() {\n    Column() {\n      Column().width(30).height(20).backgroundColor(0xff0000)\n        .id('columnHeight1')\n      Column().width(30).height(this.num)\n        .id('columnHeight2')\n      Button('ButtonHeight')\n        .onClick(() => {\n          this.num = $r('app.string.common_height')\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\HeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "bae10fe2657bd6616305a0bc7ef1630c0345f0d9bb02244dc07e39c165081598"}
{"text": "import hitTestBehaviorTest from '../MyTest/HitTestBehaviorTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct HitTestBehaviorSample {\n  @State hitTestModeArr: HitTestMode[] = [HitTestMode.Default, HitTestMode.Block,\n    HitTestMode.Transparent, HitTestMode.None]\n  index: number = 0\n  @State hitTestMode: HitTestMode = this.hitTestModeArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(hitTestBehaviorTest)\n  }\n\n  build() {\n    Column() {\n\n      Text('Transparent')\n        .id('textHitTestBehavior')\n        .hitTestBehavior(this.hitTestMode)\n\n      Button('ButtonHitTestBehavior').onClick(() => {\n        this.index++\n        this.hitTestMode = this.hitTestModeArr[this.index % 4]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\HitTestBehaviorSample.ets", "project_name": "arkui_ace_engine-master", "id": "185aa504c9343d5914fc17194d1292b035f8615d6541cdd1d7cf49a93ac6d3c8"}
{"text": "import hoverEffectTest from '../MyTest/HoverEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct HoverEffectSample {\n  hoverEffectTypeArr: HoverEffect[] = [HoverEffect.Auto, HoverEffect.Scale, HoverEffect.Highlight, HoverEffect.None]\n  index: number = 0\n  @State hoverEffectType: HoverEffect = this.hoverEffectTypeArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(hoverEffectTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Column()\n        .width('80%')\n        .height(200)\n        .backgroundColor(Color.Gray)\n        .hoverEffect(this.hoverEffectType)\n        .id('columnHoverEffect')\n      Button('ButtonHoverEffect')\n        .onClick(() => {\n          this.index++\n          this.hoverEffectType = this.hoverEffectTypeArr[this.index % 4]\n        })\n    }\n    .width('100%').height('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\HoverEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "aa8765a5e36b186b16e1b0e511a592e4b10994829a1ae545626eb735f29bf4db"}
{"text": "import hueRotateTest from '../MyTest/HueRotateTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct HueRotateSample {\n  @State hueRotateType: number | string = 0\n  @State hueRotateType2: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(hueRotateTest)\n  }\n\n  build() {\n    Column() {\n      Circle({ width: 150, height: 150 })\n        .fill(Color.Blue)\n        .id('circle1')\n        .hueRotate(this.hueRotateType)\n        .margin({ bottom: 10 })\n      Button('ButtonHueRotate1')\n        .onClick(() => {\n          this.hueRotateType = '90deg'\n        })\n      Circle({ width: 150, height: 150 })\n        .fill(Color.Blue)\n        .id('circle2')\n        .hueRotate(10)\n        .margin({ bottom: 10 })\n\n      Circle({ width: 150, height: 150 })\n        .fill(Color.Blue)\n        .id('circle3')\n        .hueRotate(this.hueRotateType2)\n        .margin({ bottom: 10 })\n      Button('ButtonHueRotate2')\n        .onClick(() => {\n          this.hueRotateType2 += 180\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\HueRotateSample.ets", "project_name": "arkui_ace_engine-master", "id": "9d07f87461fbcd9d2c9d19c0e2c268fd795b8d5b6fb2762cc3410f812fd980ef"}
{"text": "import idTest from '../MyTest/IdTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct IdSample {\n  @State text: string = ''\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(idTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .id('imageId')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\IdSample.ets", "project_name": "arkui_ace_engine-master", "id": "4dfb6266179ee8c573fed0f6959567c52820238a64b95055200667c26dd8c17d"}
{"text": "import invertTest from '../MyTest/InvertTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct InvertSample {\n  @State value: number = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(invertTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width(50)\n        .height(50)\n        .invert(this.value)\n        .margin(20)\n        .id('imageInvert1')\n      Button('ButtonInvert1')\n        .margin(20)\n        .onClick(() => {\n          this.value = -1\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\InvertSample.ets", "project_name": "arkui_ace_engine-master", "id": "08ae3eb151f549e994940840d0e55476b85ae0bd604e8b9a23ecbc95099f5223"}
{"text": "import keyboardShortcutTest from '../MyTest/KeyboardShortcutTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct KeyboardShortcutSample {\n  @State message: string = 'Hello World'\n  @State KeyboardModifierKey: ModifierKey = ModifierKey.CTRL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(keyboardShortcutTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n\n        Text('Test short CTRL+A')\n        Button('ButtonKeyboardShortcut1')\n          .onClick((event) => {\n            this.KeyboardModifierKey = ModifierKey.SHIFT\n          })\n          .id('buttonKeyboardShortcut1')\n          .keyboardShortcut('a', [this.KeyboardModifierKey], () => {\n            this.message = \"I clicked \";\n          })\n\n        Text('FunctionKey F5')\n        Button('ButtonKeyboardShortcut1')\n          .id('buttonKeyboardShortcut2')\n          .keyboardShortcut(FunctionKey.F5, [], () => {\n            this.message = \"I clicked Button F5\";\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\KeyboardShortcutSample.ets", "project_name": "arkui_ace_engine-master", "id": "844bc84013ead845e3725be251f0f7542366da2dbdd2abb50efde569ad98bc5c"}
{"text": "import layoutWeightTest from '../MyTest/LayoutWeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LayoutWeightSample {\n  layWeightArr: (string | number)[] = [1, '2']\n  index: number = 0\n  @State layWeight: (string | number) = this.layWeightArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(layoutWeightTest)\n  }\n\n  build() {\n    Column() {\n      Search()\n        .id('searchLayoutWeight')\n        .size({ width: '30%', height: 110 })\n        .backgroundColor(0xFFEFD5)\n        .textAlign(TextAlign.Center)\n        .layoutWeight(this.layWeight)\n      Button('ButtonLayoutWeight').onClick(() => {\n        this.index++\n        this.layWeight = this.layWeightArr[this.index % 2]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\LayoutWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "466afba0e2f4cdf29fa10766ceeca81cf67fcc084d245f0afd5365d6101d681c"}
{"text": "import lightUpEffectTest from '../MyTest/LightUpEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LightUpEffectSample {\n  valueArr: number[] = [-1, 0, 0.5, 1, 1.1]\n  index: number = 0\n  @State value: number = this.valueArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lightUpEffectTest)\n  }\n\n  build() {\n    Column() {\n      Blank().width(150).height(100).lightUpEffect(this.value).id('counterLightUpEffect')\n      Button('ButtonLightUpEffect').onClick(() => {\n        this.index++\n        this.value = this.valueArr[this.index]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\LightUpEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "f90847f2a46a4012ab39c573e863645298b3ff954065632d2b9ada2c93733ffb"}
{"text": "import linearGradientBlurTest from '../MyTest/LinearGradientBlurTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LinearGradientBlurSample {\n  gradientDirectionArr: GradientDirection[] = [GradientDirection.Left,\n    GradientDirection.Top, GradientDirection.Right, GradientDirection.Bottom,\n    GradientDirection.LeftTop, GradientDirection.LeftBottom, GradientDirection.RightTop,\n    GradientDirection.RightBottom, GradientDirection.None]\n  index: number = 0\n  @State gradientDirection: GradientDirection = this.gradientDirectionArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(linearGradientBlurTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Image($r('app.media.app_icon'))\n        .linearGradientBlur(60, {\n          fractionStops: [[0, 0], [0, 0.33], [1, 0.66], [1, 1]],\n          direction: this.gradientDirection\n        })\n        .id('imageLinearGradientBlur')\n        .width(200)\n        .height(200)\n\n      Button('ButtonLinearGradientBlur').onClick(() => {\n        this.index++\n        this.gradientDirection = this.gradientDirectionArr[this.index % 9]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\LinearGradientBlurSample.ets", "project_name": "arkui_ace_engine-master", "id": "e50faf35bbe4e6f42ce7e1d201174cd20a4aa9b5b017455c32652262bee4a142"}
{"text": "import linearGradientTest_one from '../MyTest/LinearGradientTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LinearGradientSample_one {\n  @State gradientDirectionArr: GradientDirection[] =\n    [GradientDirection.Left, GradientDirection.Top, GradientDirection.Right, GradientDirection.Bottom,\n      GradientDirection.LeftTop, GradientDirection.LeftBottom, GradientDirection.RightTop,\n      GradientDirection.RightBottom, GradientDirection.None]\n  index: number = 0\n  @State type: GradientDirection = this.gradientDirectionArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(linearGradientTest_one)\n  }\n\n  build() {\n    Column() {\n      List()\n        .width('80%')\n        .height(50)\n        .id('listLinearGradient1')\n        .linearGradient({\n          angle: 90,\n          repeating: false,\n          colors: [['#ff0000', 0.2], [0x0000ff, 0.3], [$r('sys.color.ohos_id_color_text_secondary_dark'), 0.5]]\n        })\n      List()\n        .width('80%')\n        .height(50)\n        .id('listLinearGradient2')\n        .linearGradient({\n          angle: '20%',\n          repeating: true,\n          direction: this.type,\n          colors: [[Color.Red, 1.0]]\n        })\n      Button('ButtonLinearGradient1')\n        .onClick(() => {\n          this.index++\n          this.type = this.gradientDirectionArr[this.index % 9]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\LinearGradientSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "ffa54cb7387250d249d0083083a4eac126e0f289f8cf3765a188c0f682ab9eaf"}
{"text": "import linearGradientTest_two from '../MyTest/LinearGradientTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LinearGradientSample_two {\n  @State gradientDirectionArr: GradientDirection[] =\n    [GradientDirection.Left, GradientDirection.Top, GradientDirection.Right, GradientDirection.Bottom,\n      GradientDirection.LeftTop, GradientDirection.LeftBottom, GradientDirection.RightTop,\n      GradientDirection.RightBottom, GradientDirection.None]\n  index: number = 0\n  @State type: GradientDirection = this.gradientDirectionArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(linearGradientTest_two)\n  }\n\n  build() {\n    Column() {\n\n      List()\n        .width('80%')\n        .height(50)\n        .id('listLinearGradient3')\n        .linearGradient({\n          angle: '20%',\n          repeating: true,\n          direction: this.type,\n          colors: [[Color.Red, 1.0]]\n        })\n      Button('ButtonLinearGradient1')\n        .onClick(() => {\n          this.index++\n          this.type = this.gradientDirectionArr[this.index % 9]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\LinearGradientSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "4e872e6e2325f183f20e76e919f313602492d53c85bc6a2a91f50f46a696b2ab"}
{"text": "import lineHeightTest from '../MyTest/LineHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineHeightSample {\n  @State lineHeight: string | number | Resource = 20\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineHeightTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Text('This is the text with the line height set. This is the text with the line height set.')\n        .lineHeight(this.lineHeight)\n        .id('textLineHeight1')\n      Button('ButtonLineHeight1')\n        .onClick(() => {\n          this.lineHeight = '50px'\n        })\n      Button('ButtonLineHeight2')\n        .onClick(() => {\n          this.lineHeight = $r('app.string.line_height')\n        })\n      Button('ButtonLineHeight3')\n        .onClick(() => {\n          this.lineHeight = 0\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\LineHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "73e60281643c4288f94477725f2c14b78b740a828e0d27c83bf24bc1ecddf0df"}
{"text": "import marginTest_one from '../MyTest/MarginTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MarginSample_one {\n  marginWidthArr: (Length | EdgeWidths)[] = ['10px', 10, $r('app.string.common_breadth')]\n  index: number = 0\n  @State marginWidth: (Length | EdgeWidths) = this.marginWidthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(marginTest_one)\n  }\n\n  build() {\n    Column() {\n      Text('Margin sample').margin(this.marginWidth)\n        .id('textMargin1')\n      Button('ButtonTextMargin').onClick(() => {\n        this.index++\n        this.marginWidth = this.marginWidthArr[this.index % 3]\n      })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\MarginSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "92c702d044c4538dd86a985595566b3353aabc0a885e5a2569fe2c01f6377c7c"}
{"text": "import marginTest_two from '../MyTest/MarginTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MarginSample_two {\n  marginWidthArr: (Length | EdgeWidths)[] = [\n    {\n      left: '8px',\n      right: '10px',\n      top: '8px',\n      bottom: '10px'\n    },\n    {\n      left: 10,\n      right: 10,\n      top: 10,\n      bottom: 10\n    },\n    {\n      left: $r('app.string.common_breadth'),\n      right: $r('app.string.common_breadth'),\n      top: $r('app.string.common_breadth'),\n      bottom: $r('app.string.common_breadth')\n    }\n  ]\n  index: number = 0\n  @State marginWidth: (Length | EdgeWidths) = this.marginWidthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(marginTest_two)\n  }\n\n  build() {\n    Column() {\n      Text('Margin sample')\n        .margin({\n          left: '8px',\n          right: '10px',\n          top: '8px',\n          bottom: '10px'\n        })\n        .id('textMargin2')\n      Text('Margin sample')\n        .margin({\n          left: 5,\n          right: 5,\n          top: 5,\n          bottom: 5\n        })\n        .id('textMargin3')\n      Text('Margin sample')\n        .margin({\n          left: $r('app.string.common_breadth'),\n          right: $r('app.string.common_breadth'),\n          top: $r('app.string.common_breadth'),\n          bottom: $r('app.string.common_breadth')\n        })\n        .id('textMargin4')\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\MarginSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "ec94b6d90a3b7d293b168b3a583a0a8f3b11fa749cc4707427adb12d8d39da00"}
{"text": "import markAnchorTest from '../MyTest/MarkAnchorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MarkAnchorSample {\n  @State any_markAnchor: Position = { x: $r(\"app.string.common_value_one\"), y: $r(\"app.string.common_value_one\") }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(markAnchorTest)\n  }\n\n  build() {\n    Column() {\n\n      Slider()\n        .markAnchor(this.any_markAnchor)\n        .id('sliderMarkAnchor1')\n\n      Button('ButtonMarkAnchor1')\n        .onClick(() => {\n          this.any_markAnchor = { x: '2', y: '2' }\n        })\n      Button('ButtonMarkAnchor2')\n        .onClick(() => {\n          this.any_markAnchor = { x: 1, y: 1 }\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\MarkAnchorSample.ets", "project_name": "arkui_ace_engine-master", "id": "b58e542836c77bc942432daf102e3c486d45a70e426dc2552a1ddb9aa1495fe7"}
{"text": "import maskTest from '../MyTest/MaskTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MaskSample {\n  @State progress: ProgressMask = new ProgressMask(10.0, 100.0, Color.Gray);\n  @State maskType: CircleAttribute | PathAttribute | EllipseAttribute | RectAttribute = new Circle({\n    width: '500px',\n    height: '280px'\n  }).fill(Color.Gray);\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(maskTest)\n  }\n\n  build() {\n    Column() {\n      Text('progress mask')\n        .fontSize(12)\n        .width('75%')\n        .fontColor(0x000000)\n        .mask(this.progress)\n        .id('textMask1')\n      Button('ButtonTextMask1')\n        .onClick(() => {\n          this.progress = new ProgressMask(10.0, 100.0, 0xffffff)\n        })\n      Button('ButtonTextMask2')\n        .onClick(() => {\n          this.progress = new ProgressMask(10.0, 100.0, 'rgb(255, 100, 255)')\n        })\n      Button('ButtonTextMask3')\n        .onClick(() => {\n          this.progress = new ProgressMask(10.0, 100.0, $r('app.color.start_window_background'))\n        })\n      Image($r('app.media.app_icon'))\n        .width('500px')\n        .height('280px')\n        .margin({ bottom: 30 })\n        .mask(this.maskType)\n        .id('imageMask1')\n      Button('ButtonTextMask4')\n        .onClick(() => {\n          this.maskType = new Rect({ width: '500px', height: '280px' }).fill(Color.Gray)\n        })\n      Button('ButtonTextMask5')\n        .onClick(() => {\n          this.maskType = new Path({ width: '50px', height: '280px' }).fill(Color.Gray)\n        })\n      TextArea({ text: 'test' })\n        .width('500px')\n        .height('280px')\n        .margin({ bottom: 10 })\n        .mask(new Ellipse({ width: '250px', height: '280px' }).fill(Color.Gray))\n        .id('textAreaMask1')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\MaskSample.ets", "project_name": "arkui_ace_engine-master", "id": "fd961ce7a3e711be3a2ef150d056d60992ed7ab7210826806da55cc1fc687931"}
{"text": "import ArrayList from '@ohos.util.ArrayList';\nimport monopolizeEventsTest from '../MyTest/MonopolizeEventsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MonopolizeEventsSample { \n  @State message: string = 'set monopolizeEvents false'\n  @State monopolize: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(monopolizeEventsTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.message)\n      Column() {\n        Column() {\n        }\n        .id('columMonopolizeEvents1')\n        .monopolizeEvents(this.monopolize)\n        .width('100%')\n        .height('40%')\n        .backgroundColor(Color.Blue)\n        .onTouch((event: TouchEvent) => {\n          if (event.type == TouchType.Down) {\n            console.log(\"inner column touch down\")\n          }\n        })\n\n        Button('ButtonMonopolizeEvents1')\n          .onClick(() => {\n            this.monopolize = !this.monopolize\n            if (!this.monopolize) {\n              this.message = \"set monopolizeEvents false\"\n            } else {\n              this.message = \"set monopolizeEvents true\"\n            }\n          })\n      }\n      .backgroundColor(Color.Gray)\n      .height('100%')\n      .width('100%')\n      .onTouch((event) => {\n        if (event.type == TouchType.Down) {\n          console.log(\"outside column touch down\")\n        }\n      })\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\MonopolizeEventsSample.ets", "project_name": "arkui_ace_engine-master", "id": "3400158d8cd562665d62a874b273fd2e3cc59a1b82b12742e350547e385ec0dc"}
{"text": "import motionPathTest from '../MyTest/MotionPathTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MotionPathSample {\n  @State toggle: boolean = true\n  @State any_boolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(motionPathTest)\n  }\n\n  build() {\n    Column() {\n\n      Radio({ value: 'Radio1', group: 'radioGroup' })\n        .motionPath({\n          path: 'Mstart.x start.y L400 200 L200 500 Lend.x end.y',\n          from: 0.0,\n          to: 1.0,\n          rotatable: this.any_boolean\n        })\n        .onClick(() => {\n          animateTo({ duration: 4000, curve: Curve.Linear }, () => {\n            this.toggle = !this.toggle\n          })\n        }).id('radioMotionPath1')\n\n      Button('ButtonMotionPath1').onClick(() => {\n        this.any_boolean = !this.any_boolean\n      })\n\n    }.width('100%').height('100%').alignItems(this.toggle ? HorizontalAlign.Start : HorizontalAlign.Center)\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\MotionPathSample.ets", "project_name": "arkui_ace_engine-master", "id": "25288f01beb301e2787f0cc96eff48e8ddbab7f57208c9fb869138107a26bc4c"}
{"text": "import obscuredTest from '../MyTest/ObscuredTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ObscuredSample {\n  @State any_obscured: Array<ObscuredReasons> = [ObscuredReasons.PLACEHOLDER]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(obscuredTest)\n  }\n\n  build() {\n    Column() {\n      Text('obscured').obscured(this.any_obscured)\n        .id('textObscured1')\n\n      Image($r('app.media.app_icon')).width(200).height(200).obscured(this.any_obscured)\n        .id('imageObscured1')\n\n      Button('ButtonObscured')\n        .onClick(() => {\n          this.any_obscured = []\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ObscuredSample.ets", "project_name": "arkui_ace_engine-master", "id": "b1a3664ed780abfff2ac6d069ff792ccb1c864bc8eb3942cda66d03eb593e4b9"}
{"text": "import offsetTest from '../MyTest/OffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffsetSample {\n  @State any_position: Position = { x: $r(\"app.string.common_value_two\"), y: $r(\"app.string.common_value_two\") }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(offsetTest)\n  }\n\n  build() {\n    Column() {\n\n      Slider()\n        .offset(this.any_position)\n        .id('sliderOffset1')\n\n      Button('ButtonOffset1')\n        .onClick(() => {\n          this.any_position = { x: 10, y: 10 }\n        })\n\n      Button('ButtonOffset2')\n        .onClick(() => {\n          this.any_position = { x: '30', y: '30' }\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "88e2fad623a33abbaaad827b61dab2004694d9fbc8d65b6ade5f7a5e888a2261"}
{"text": "import opacityTest from '../MyTest/OpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct opacitySample {\n  @State opacityNumber: number | Resource = 0.7\n  controller: TextClockController = new TextClockController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(opacityTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width(400).height(400)\n        .opacity(this.opacityNumber)\n        .id('imageClockOpacity1')\n\n      Button('ButtonOpacity')\n        .onClick(() => {\n          this.opacityNumber = $r('app.string.common_opacity')\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "10914b071d14776f660f9e424ea8556e5d9dc5b1e6c722100a4ede7673d88b9e"}
{"text": "import outlineColorTest_one from '../MyTest/OutlineColorTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineColorSample_one {\n  @State any_Color: ResourceColor | EdgeColors = {\n    left: 0xBFAAFA,\n    right: Color.Blue,\n    top: 'rgb(255, 201, 0)',\n    bottom: $r(\"app.string.common_color\")\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineColorTest_one)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Text()\n      Row() {\n        Row({ space: 20 }) {\n          Text()\n          Menu() {\n            MenuItem({ content: \"outlineColor\", labelInfo: \"outlineColor\" })\n              .outline({ width: 2 })\n              .outlineColor(this.any_Color)\n              .id('menuItemOutlineColor1')\n            MenuItem({ content: \"outlineColor\", labelInfo: \"outlineColor\" })\n          }\n        }\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineColorSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "cf27a89ac49b67643bf62fdd4a9bb11dbd6c3474de2cec7f69a1ddd6efaa7e31"}
{"text": "import outlineColorTest_two from '../MyTest/OutlineColorTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineColorSample_two {\n  @State any_Color: ResourceColor | EdgeColors = 'rgb(255, 201, 0)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineColorTest_two)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Text()\n      Row() {\n        Row({ space: 20 }) {\n          Text()\n          Menu() {\n            MenuItem({ content: \"outlineColor\", labelInfo: \"outlineColor\" })\n              .outline({ width: 2 })\n              .outlineColor(this.any_Color)\n              .id('menuItemOutlineColor2')\n            MenuItem({ content: \"outlineColor\", labelInfo: \"outlineColor\" })\n          }\n\n          Button('ButtonOutlineColor1').onClick(() => {\n            this.any_Color = 0xBFAAFA\n          })\n          Button('ButtonOutlineColor2').onClick(() => {\n            this.any_Color = Color.Blue\n          })\n          Button('ButtonOutlineColor3').onClick(() => {\n            this.any_Color = $r(\"app.string.common_color\")\n          })\n        }\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineColorSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "9be11470f0335bfbf5bf46e366263af93472409d65b19d14574d8cda8a5b772e"}
{"text": "import outlineRadiusTest from '../MyTest/OutlineRadiusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineRadiusSample {\n  @State any_Radius: Dimension | OutlineRadiuses = {\n    topLeft: 20,\n    topRight: '40vp',\n    bottomLeft: $r(\"app.string.common_value_two\"),\n    bottomRight: 20\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineRadiusTest)\n  }\n\n  build() {\n    Column({ space: 50 }) {\n      Text('textOutlineRadius1')\n        .outlineRadius(this.any_Radius)\n        .id('textOutlineRadius1')\n\n      Button('ButtonOutlineRadius1')\n        .onClick(() => {\n          this.any_Radius = '10.00vp'\n        })\n      Button('ButtonOutlineRadius2')\n        .onClick(() => {\n          this.any_Radius = 60\n        })\n\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineRadiusSample.ets", "project_name": "arkui_ace_engine-master", "id": "a8dc1448ed0bb8e351a75a4aa298615e21f3a0b1f9d19d73a277e982e95f2968"}
{"text": "import outlineTest_one from '../MyTest/OutlineTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineSample {\n  @State any_outline: OutlineOptions =\n    {\n      width: $r(\"app.string.common_value_one\"),\n      color: 0xff0000,\n      style: {\n        left: OutlineStyle.DASHED,\n        right: OutlineStyle.DASHED,\n        top: OutlineStyle.SOLID,\n        bottom: OutlineStyle.DOTTED\n      },\n      radius: {\n        topLeft: '5px',\n        topRight: '6px',\n        bottomLeft: '7vp',\n        bottomRight: $r(\"app.string.common_value_one\")\n      }\n    }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineTest_one)\n  }\n\n  build() {\n    Column({ space: 50 }) {\n\n      TextInput()\n        .outline(this.any_outline)\n        .fontSize(30)\n        .width(300)\n        .height(80)\n        .id('textInputOutline1')\n\n      Button('ButtonOutline1')\n        .onClick(() => {\n          this.any_outline =\n            {\n              width: '5px',\n              style: OutlineStyle.DOTTED,\n              radius: 5,\n              color: $r(\"app.string.common_color\")\n            }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "269330a773d3ead7f19dd2c07ebdcda4a6dc6cd5bfe56eb5c6becf465cab4099"}
{"text": "import outlineTest_two from '../MyTest/OutlineTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineSample_two {\n  @State any_outline: OutlineOptions =\n    {\n      width: $r(\"app.string.common_value_one\"),\n      style: OutlineStyle.DOTTED,\n      radius: $r(\"app.string.common_value_one\"),\n      color: {\n        left: Color.Brown,\n        right: 0xff0000,\n        top: $r(\"app.string.common_color\"),\n        bottom: 'rgba(0, 102, 255, 1.00)'\n      }\n    }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineTest_two)\n  }\n\n  build() {\n    Column({ space: 50 }) {\n\n      TextInput()\n        .outline(this.any_outline)\n        .fontSize(30)\n        .width(300)\n        .height(80)\n        .id('textInputOutline2')\n\n      Button('ButtonOutline1')\n        .onClick(() => {\n          this.any_outline =\n            {\n              style: OutlineStyle.SOLID,\n              color: 'rgba(255, 243, 12, 1.00)'\n            }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "9eda838836a96d66359b8752ed3d19cac6ef3f1d1eb9441b524ddcc613df47ff"}
{"text": "import outlineStyleTest_one from '../MyTest/OutlineStyleTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineStyleSample_one {\n  @State any_OutlineStyle: OutlineStyle | EdgeOutlineStyles = OutlineStyle.DOTTED\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineStyleTest_one)\n  }\n\n  build() {\n    Row({ space: 30 }) {\n      Text()\n      Column({ space: 15 }) {\n\n        TextInput()\n          .height(40)\n          .width(200)\n          .outlineWidth(5)\n          .outlineStyle(this.any_OutlineStyle)\n          .id('textInputOutlineStyle1')\n\n        Button('ButtonOutlineStyle1')\n          .onClick(() => {\n            this.any_OutlineStyle = OutlineStyle.SOLID\n          })\n        Button('ButtonOutlineStyle2')\n          .onClick(() => {\n            this.any_OutlineStyle = OutlineStyle.DASHED\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineStyleSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "7060c9237ef560329fc8a1fb97bd0edafea9a0a254f2a4ad6b0bd283454bb0c6"}
{"text": "import outlineStyleTest_two from '../MyTest/OutlineStyleTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineStyleSample_two {\n  @State any_OutlineStyle: OutlineStyle | EdgeOutlineStyles = {\n    left: OutlineStyle.DOTTED,\n    right: OutlineStyle.DOTTED,\n    top: OutlineStyle.DOTTED,\n    bottom: OutlineStyle.SOLID\n  }\n  @State OutlineStyle_any_1: OutlineStyle | EdgeOutlineStyles = {\n    left: OutlineStyle.DASHED,\n    right: OutlineStyle.SOLID,\n    top: OutlineStyle.DASHED,\n    bottom: OutlineStyle.DOTTED\n  }\n  @State OutlineStyle_any_2: OutlineStyle | EdgeOutlineStyles = {\n    left: OutlineStyle.SOLID,\n    right: OutlineStyle.DASHED,\n    top: OutlineStyle.SOLID,\n    bottom: OutlineStyle.DASHED\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineStyleTest_two)\n  }\n\n  build() {\n    Row({ space: 30 }) {\n      Text()\n      Column({ space: 15 }) {\n\n        TextInput()\n          .height(40)\n          .width(200)\n          .outlineWidth(5)\n          .outlineStyle(this.any_OutlineStyle)\n          .id('textInputOutlineStyle2')\n\n        Button('ButtonOutlineStyle1')\n          .onClick(() => {\n            this.any_OutlineStyle = this.OutlineStyle_any_1\n          })\n        Button('ButtonOutlineStyle2')\n          .onClick(() => {\n            this.any_OutlineStyle = this.OutlineStyle_any_2\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineStyleSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "6b5a64ddf579a8ce2c1652f001b5a7b64307b60fc11db5c24faca4691e15c4e7"}
{"text": "import outlineWidthTest from '../MyTest/OutlineWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OutlineWidthSample {\n  @State any: Dimension | EdgeOutlineWidths = {\n    left: '5vp',\n    right: $r(\"app.string.common_value_one\"),\n    top: '15px',\n    bottom: 20\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(outlineWidthTest)\n  }\n\n  build() {\n    Row({ space: 50 }) {\n      Text()\n      Column({ space: 50 }) {\n        Text()\n        TimePicker().width(300).height(100)\n          .outlineWidth(this.any).id('timePickerOutlineWidth1')\n      }\n\n      Button('ButtonOutlineWidth1')\n        .onClick(() => {\n          this.any = '15px'\n        })\n      Button('ButtonOutlineWidth2')\n        .onClick(() => {\n          this.any = $r(\"app.string.common_value_one\")\n        })\n      Button('ButtonOutlineWidth3')\n        .onClick(() => {\n          this.any = 20\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OutlineWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "4535d6b74cb5491c78f12aef77ef3e05ae16899dc1921e6949cafa4655cb6b0b"}
{"text": "import overlayTest from '../MyTest/OverlayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OverlaySample {\n  @Builder\n  MyBuilderFunction() {\n    Text('myBuilder')\n  }\n\n  @State any_Alignments: Alignment[] = [Alignment.TopStart, Alignment.Top, Alignment.TopEnd, Alignment.Start,\n    Alignment.Center, Alignment.End, Alignment.BottomStart, Alignment.Bottom, Alignment.BottomEnd]\n  @State index: number = 0\n  @State any: Alignment = this.any_Alignments[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(overlayTest)\n  }\n\n  build() {\n    Column({ space: 25 }) {\n      Row({ space: 15 }) {\n        Image($r('app.media.app_icon'))\n          .width(80).height(80)\n          .overlay('Overlay', {\n            align: this.any[this.index],\n            offset: { x: 3, y: -1 }\n          }).id('imageOverlay1')\n\n        Image($r('app.media.app_icon'))\n          .width(80).height(80)\n          .overlay(this.MyBuilderFunction, {\n            align: this.any,\n            offset: { x: 3, y: -1 }\n          }).id('imageOverlay2')\n\n        Button('ButtonOverlay1')\n          .onClick(() => {\n            ++this.index\n            this.any = this.any_Alignments[this.index % 9]\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\OverlaySample.ets", "project_name": "arkui_ace_engine-master", "id": "a4b84880d57954c4fd4496983cab10225f4d09c937a074d21cf3f70a1552ecc9"}
{"text": "import paddingTest from '../MyTest/PaddingTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PaddingSample {\n  paddWidthArr: (Length | EdgeWidths)[] = ['10px', 10, $r('app.string.common_breadth'),\n    {\n      left: '8px',\n      right: '10px',\n      top: '8px',\n      bottom: '10px'\n    },\n    {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    },\n    {\n      left: $r('app.string.common_breadth'),\n      right: $r('app.string.common_breadth'),\n      top: $r('app.string.common_breadth'),\n      bottom: $r('app.string.common_breadth')\n    }\n  ]\n  index: number = 0\n  @State paddWidth: (Length | EdgeWidths) = this.paddWidthArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(paddingTest)\n  }\n\n  build() {\n    Column() {\n      Slider({ style: SliderStyle.OutSet, value: 40 }).id('sliderPadding').padding(this.paddWidth)\n      Button('ButtonPadding').onClick(() => {\n        this.index++\n        this.paddWidth = this.paddWidthArr[this.index % 6]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\PaddingSample.ets", "project_name": "arkui_ace_engine-master", "id": "47da4bbb66900deb733622731516aeadc161c0879f4407c98eae278de5844669"}
{"text": "import pixelRoundTest from '../MyTest/PixelRoundTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PixelRoundSample {\n  pixelRoundCalcArr: PixelRoundCalcPolicy[] =\n    [PixelRoundCalcPolicy.NO_FORCE_ROUND, PixelRoundCalcPolicy.FORCE_CEIL, PixelRoundCalcPolicy.FORCE_FLOOR]\n  index: number = 0\n  @State pixelRoundCalc: PixelRoundCalcPolicy = this.pixelRoundCalcArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pixelRoundTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Row() {\n        }\n        .width('100%')\n        .height('100%')\n        .backgroundColor(Color.Yellow)\n      }\n      .id('rowPixelRound')\n      .width('300.6px')\n      .height('300.6px')\n      .backgroundColor(Color.Red)\n      .position({ x: '200.2px', y: '100.2px' })\n      .pixelRound({\n        start: this.pixelRoundCalc,\n        top: this.pixelRoundCalc,\n        end: this.pixelRoundCalc,\n        bottom: this.pixelRoundCalc\n      })\n\n      Button('ButtonPixelRound').onClick(() => {\n        this.index++\n        this.pixelRoundCalc = this.pixelRoundCalcArr[this.index % 3]\n      })\n    }\n    .width(\"100%\")\n    .height('100%')\n    .backgroundColor('#ffe5e5e5')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\PixelRoundSample.ets", "project_name": "arkui_ace_engine-master", "id": "f1b96b7ad764608b64e9cab29e8ea65420e61fb5fa47637f6cdaa9858b4174be"}
{"text": "import pixelStretchEffectTest from '../MyTest/PixelStretchEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PixelStretchEffectSample {\n  @State value: Length[] = ['100px', 50, $r('app.string.common_breadth')];\n  @State index: number = 0\n  @State pixelStretch: PixelStretchEffectOptions = {\n    top: this.value[this.index],\n    left: this.value[this.index],\n    right: this.value[this.index],\n    bottom: this.value[this.index]\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pixelStretchEffectTest)\n  }\n\n  build() {\n    Column({ space: 100 }) {\n      Text('This is the text content with letterSpacing 0.')\n        .id('textPixelStretchEffect')\n        .clip(false)\n        .border({ width: 1 })\n        .pixelStretchEffect(this.pixelStretch)\n        .margin({ top: 100 })\n      Button('ButtonPixelStretchEffect').onClick(() => {\n        this.index++\n        this.pixelStretch = {\n          top: this.value[this.index % 3],\n          left: this.value[this.index % 3],\n          right: this.value[this.index % 3],\n          bottom: this.value[this.index % 3]\n        }\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\PixelStretchEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "ac42a6f67ff55b763770857460ca3b1dede94c61d763b8f8eae1f8f99660c5a0"}
{"text": "import positionTest from '../MyTest/PositionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PositionSample {\n  @State any_Position: Position = { x: '1', y: \"1\" }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(positionTest)\n  }\n\n  build() {\n    Column() {\n      Slider().position(this.any_Position)\n      RelativeContainer().position(this.any_Position)\n        .height(100).width(100)\n        .id('relativeContainerPosition1')\n\n      Button('ButtonPosition1')\n        .onClick(() => {\n          this.any_Position = { x: 2, y: 2 }\n        })\n      Button('ButtonPosition2')\n        .onClick(() => {\n          this.any_Position = { x: $r(\"app.string.common_value_one\"), y: $r(\"app.string.common_value_one\") }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\PositionSample.ets", "project_name": "arkui_ace_engine-master", "id": "3ee14a56d5ec572455c79e070fd29f0c417ba2a1a62c8ef30c5020fa5228e67c"}
{"text": "import progressMaskTest from '../MyTest/ProgressMaskTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressMaskSample {\n  index: number = 0\n  progressArr: ProgressMask[] = [new ProgressMask(10.0, 100.0, 'rgb(72 61 139)'),\n    new ProgressMask(10.0, 100.0, 0X528B8B),\n    new ProgressMask(10.0, 100.0, Color.Red),\n    new ProgressMask(10.0, 100.0, $r('sys.color.ohos_id_color_text_hyperlink'))]\n  @State progress: ProgressMask = this.progressArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressMaskTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Image($r('app.media.app_icon'))\n        .id('imageProgressMask')\n        .width(100)\n        .height(100)\n        .mask(this.progress)\n        .animation({\n          duration: 2000,\n          curve: Curve.Linear,\n          delay: 0,\n          iterations: 1,\n          playMode: PlayMode.Normal\n        })\n\n      Button('ButtonProgressMask')\n        .onClick(() => {\n          this.index++\n          this.progress = this.progressArr[this.index % 4]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ProgressMaskSample.ets", "project_name": "arkui_ace_engine-master", "id": "4429e32d223c71b7452b31df09100b332695d5380a9bea1d4d1a352ddc86c17d"}
{"text": "import radialGradientTest_one from '../MyTest/RadialGradientTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RadialGradientSample_one {\n  @State my_boolean: boolean = true\n  @State any_Radius: number | string = -15\n  @State any_Colors: Array<[ResourceColor, number]> =\n    [[$r(\"app.string.common_color\"), 0.0], [$r(\"app.string.common_color\"), 0.3], [$r(\"app.string.common_color\"), 1.0]]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(radialGradientTest_one)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text()\n      Row({ space: 5 }) {\n        Text()\n        Column()\n          .width(150)\n          .height(200)\n          .radialGradient({\n            center: [50, 50],\n            radius: this.any_Radius,\n            colors: this.any_Colors,\n            repeating: this.my_boolean\n          }).id('columnRadialGradient1')\n\n        Button('ButtonRadialGradient1')\n          .onClick(() => {\n            this.my_boolean = !this.my_boolean;\n            this.any_Colors = [[0xffaaaa, 0.0], [Color.Green, 0.3], [Color.Pink, 1.0]]\n            this.any_Radius = '60'\n          })\n      }\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RadialGradientSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "6d4601f3fc96fb201502ad9a900b2a4119e44322a0c7b0d4914cb22962ca599b"}
{"text": "import radialGradientTest_two from '../MyTest/RadialGradientTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RadialGradientSample_two {\n  @State my_boolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(radialGradientTest_two)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text()\n      Row({ space: 5 }) {\n        Text()\n        Column()\n          .width(150)\n          .height(200)\n          .radialGradient({\n            center: [50, 50],\n            radius: 60,\n            colors: [['rgba(8, 0, 255, 1.00)', 0.0], ['rgba(122, 119, 119, 1.00)', 0.3],\n              ['rgba(255, 0, 0, 1.00)', 1.0]],\n            repeating: this.my_boolean\n          }).id('columnRadialGradient2')\n\n        Button('ButtonRadialGradient1')\n          .onClick(() => {\n            this.my_boolean = !this.my_boolean;\n          })\n      }\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RadialGradientSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "62b1758faf706b38dd2141b16385395280f5ce1b7ad6202765a83b2e349299d1"}
{"text": "import renderFitTest_one from '../MyTest/RenderFitTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RenderFitSample_one {\n  @State widthOne: number = 100;\n  @State heightTwo: number = 30;\n  flag: boolean = true;\n  @State renderFitOne: RenderFit = RenderFit.BOTTOM;\n  @State renderFitTwo: RenderFit = RenderFit.LEFT;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(renderFitTest_one)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text(\"RenderFit\")\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .textAlign(TextAlign.Start)\n          .renderFit(RenderFit.CENTER)\n          .margin(20)\n          .id('textRenderFit1')\n        Text(\"RenderFit\")\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .textAlign(TextAlign.Start)\n          .renderFit(RenderFit.TOP)\n          .margin(20)\n          .id('textRenderFit2')\n      }\n\n      Row() {\n        Circle({ width: 3, height: 3 })\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(this.renderFitOne)\n          .margin(20)\n          .id('circleRenderFit1')\n\n        Circle({ width: 3, height: 3 })\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(this.renderFitTwo)\n          .margin(20)\n          .id('circleRenderFit2')\n      }\n\n      Button('ButtonCircleRenderFit1')\n        .onClick(() => {\n          this.renderFitOne = RenderFit.RIGHT\n        })\n      Button('ButtonCircleRenderFit2')\n        .onClick(() => {\n          this.renderFitTwo = RenderFit.TOP_LEFT\n        })\n      Button(\"ButtonRenderFit3\")\n        .onClick(() => {\n          animateTo({ curve: Curve.Ease }, () => {\n            if (this.flag) {\n              this.widthOne = 150;\n              this.heightTwo = 50;\n            } else {\n              this.widthOne = 100;\n              this.heightTwo = 30;\n            }\n            this.flag = !this.flag;\n          })\n        })\n    }.width(\"100%\").height(\"100%\").alignItems(HorizontalAlign.Center)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RenderFitSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "eb2cbcfff019cc44358405b315a33af69398ab53d8425f43d8551e7b4c906a08"}
{"text": "import renderFitTest_three from '../MyTest/RenderFitTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RenderFitSample_three {\n  @State widthOne: number = 100;\n  @State heightTwo: number = 30;\n  flag: boolean = true;\n  @State renderFitOne: RenderFit = RenderFit.RESIZE_COVER;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(renderFitTest_three)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Polygon({ width: 100, height: 30 })\n          .points([[0, 0], [30, 30], [100, 0]])\n          .fill(Color.Green)\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(RenderFit.RESIZE_CONTAIN_BOTTOM_RIGHT)\n          .margin(20)\n          .id('polygonRenderFit1')\n        Polygon({ width: 100, height: 30 })\n          .points([[0, 0], [30, 30], [100, 0]])\n          .fill(Color.Green)\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(this.renderFitOne)\n          .margin(20)\n          .id('polygonRenderFit2')\n      }\n\n      Button('ButtonPolygonRenderFit1')\n        .onClick(() => {\n          this.renderFitOne = RenderFit.RESIZE_COVER_TOP_LEFT\n        })\n      Button('ButtonPolygonRenderFit2')\n        .onClick(() => {\n          this.renderFitOne = RenderFit.RESIZE_COVER_BOTTOM_RIGHT\n        })\n\n      Button(\"ButtonPolygonRenderFit3\")\n        .onClick(() => {\n          animateTo({ curve: Curve.Ease }, () => {\n            if (this.flag) {\n              this.widthOne = 150;\n              this.heightTwo = 50;\n            } else {\n              this.widthOne = 100;\n              this.heightTwo = 30;\n            }\n            this.flag = !this.flag;\n          })\n        })\n    }.width(\"100%\").height(\"100%\").alignItems(HorizontalAlign.Center)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RenderFitSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "20e50634c3164cce501403fe8ecaf0c253bcda4042440b9db35920eff1ad67c4"}
{"text": "import renderFitTest_two from '../MyTest/RenderFitTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RenderFitSample_two {\n  @State widthOne: number = 100;\n  @State heightTwo: number = 30;\n  flag: boolean = true;\n  @State renderFitOne: RenderFit = RenderFit.BOTTOM_RIGHT;\n  @State renderFitTwo: RenderFit = RenderFit.RESIZE_FILL;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(renderFitTest_two)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Ellipse({ width: 3, height: 2 })\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(RenderFit.TOP_RIGHT)\n          .margin(20)\n          .id('ellipseRenderFit1')\n        Ellipse({ width: 3, height: 2 })\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(RenderFit.BOTTOM_LEFT)\n          .margin(20)\n          .id('ellipseRenderFit2')\n      }\n\n      Row() {\n        Ellipse({ width: 3, height: 2 })\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(this.renderFitOne)\n          .margin(20)\n          .id('ellipseRenderFit3')\n\n        Ellipse({ width: 3, height: 2 })\n          .width(this.widthOne)\n          .height(this.heightTwo)\n          .borderWidth(1)\n          .renderFit(this.renderFitTwo)\n          .margin(20)\n          .id('ellipseRenderFit4')\n      }\n\n      Button('ButtonEllipseRenderFit1')\n        .onClick(() => {\n          this.renderFitOne = RenderFit.RESIZE_CONTAIN\n        })\n      Button('ButtonEllipseRenderFit2')\n        .onClick(() => {\n          this.renderFitTwo = RenderFit.RESIZE_CONTAIN_TOP_LEFT\n        })\n      Button(\"ButtonEllipseRenderFit3\")\n        .onClick(() => {\n          animateTo({ curve: Curve.Ease }, () => {\n            if (this.flag) {\n              this.widthOne = 150;\n              this.heightTwo = 50;\n            } else {\n              this.widthOne = 100;\n              this.heightTwo = 30;\n            }\n            this.flag = !this.flag;\n          })\n        })\n    }.width(\"100%\").height(\"100%\").alignItems(HorizontalAlign.Center)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RenderFitSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "db19271b81f163afa1b266dd87e14fb45fed54ab439d4dcee367e54f8801bc79"}
{"text": "import renderGroupTest from '../MyTest/RenderGroupTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Component\nstruct RenderGroup {\n  @Prop renderGroupValue: boolean;\n\n  build() {\n    Row() {\n      Row() {\n        Button()\n      }\n      .width(150)\n      .height(150)\n      .justifyContent(FlexAlign.Center)\n      .opacity(0.6)\n      .renderGroup(this.renderGroupValue)\n      .id('rowRenderGroup1')\n    }\n    .backgroundColor(Color.Pink)\n    .width(200)\n    .height(200)\n    .justifyContent(FlexAlign.Center)\n    .opacity(1)\n  }\n}\n\n@Entry\n@Component\nstruct RenderGroupSample {\n  @State boolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(renderGroupTest)\n  }\n\n  build() {\n    Column() {\n      RenderGroup({ renderGroupValue: this.boolean })\n        .margin(20)\n      Button('ButtonRenderGroup1')\n        .onClick(() => {\n          this.boolean = !this.boolean\n        })\n    }\n    .width(\"100%\")\n    .height(\"100%\")\n    .alignItems(HorizontalAlign.Center)\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RenderGroupSample.ets", "project_name": "arkui_ace_engine-master", "id": "655f202c8d742968a2876f63fab9be3cd04305726643611a60813df9306a6d4a"}
{"text": "import requestFocusTest from '../MyTest/RequestFocusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RequestFocusSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(requestFocusTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('ButtonRequestFocus')\n        .id('buttonRequestFocus1')\n        .onClick(() => {\n          focusControl.requestFocus('RequestFocus')\n        })\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RequestFocusSample.ets", "project_name": "arkui_ace_engine-master", "id": "b666790a555865ad498e0ce184777b938e8a8c3dda9849944f18ae1642c9549d"}
{"text": "import responseRegionTest from '../MyTest/ResponseRegionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ResponseRegionSample {\n  @State responseRegionRectangle: Array<Rectangle> | Rectangle = {\n    x: '0px',\n    y: '0px',\n    width: '50px',\n    height: '100px'\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(responseRegionTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"Button1\")\n        .responseRegion({\n          x: 0,\n          y: 0,\n          width: 50,\n          height: 100\n        })\n        .id('buttonResponseRegion1')\n      Button(\"Button2\")\n        .responseRegion([\n          {\n            x: 100,\n            y: 0,\n            width: 50,\n            height: 100\n          },\n          {\n            x: 0,\n            y: 0,\n            width: '50',\n            height: '100'\n          }\n        ])\n        .id('buttonResponseRegion2')\n\n      Button(\"button3\")\n        .responseRegion(this.responseRegionRectangle)\n        .id('buttonResponseRegion3')\n      Button('ButtonResponseRegion')\n        .onClick(() => {\n          this.responseRegionRectangle = {\n            x: $r('app.string.commonPosition_length'),\n            y: $r('app.string.commonPosition_length'),\n            width: $r('app.string.commonImage_width'),\n            height: $r('app.string.commonImage_height')\n          }\n        })\n    }.width('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ResponseRegionSample.ets", "project_name": "arkui_ace_engine-master", "id": "de814facc6bf80db712805e4dc2105561a222ee03de267d0084f735f3a2ec202"}
{"text": "import restoreIdTest from '../MyTest/RestoreIdTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RestoreIdSample {\n  private arr: number[] = [0, 1]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(restoreIdTest)\n  }\n\n  build() {\n    Column() {\n      List({ space: 20 }) {\n        ForEach(this.arr, (item: number) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(100)\n              .backgroundColor(Color.Pink)\n          }\n        }, (item: number) => (item.toString()))\n      }\n      .id('listRestoreId1')\n      .restoreId(1)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\RestoreIdSample.ets", "project_name": "arkui_ace_engine-master", "id": "0278698b810f4478d2395cb4a940cdd40fa95953088a4e23d30c950d232c5d2f"}
{"text": "import reuseIdTest from '../MyTest/ReuseIdTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ReuseIdSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(reuseIdTest)\n  }\n\n  build() {\n    Column() {\n      Checkbox()\n        .id('checkboxReuseId')\n        .reuseId('checkboxReuseId')\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ReuseIdSample.ets", "project_name": "arkui_ace_engine-master", "id": "5374dae4abb2e654a8eb4ec165ce92142e000a5ee6c9820b66249db3d00ce6c0"}
{"text": "import saturateTest from '../MyTest/SaturateTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SaturateSample {\n  @State saturateNumber: number = 20\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(saturateTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width('500px').height('280px')\n        .id('imageSaturate1')\n        .saturate(this.saturateNumber)\n      Button('ButtonSaturate')\n        .onClick(() => {\n          this.saturateNumber = -1\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SaturateSample.ets", "project_name": "arkui_ace_engine-master", "id": "cbfb89f7d204b1084667fab36a5a9bbfaf9baa948cdbedc6fa94680e761312f2"}
{"text": "import scaleTest from '../MyTest/ScaleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ScaleSample {\n  @State centerXNumber: number | string = 2\n  @State centerYNumber: number | string = 2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(scaleTest)\n  }\n\n  build() {\n    Column() {\n      Progress({ value: 10, type: ProgressType.Eclipse })\n        .id('progressScale1')\n        .scale({\n          x: 2,\n          y: 0.5,\n          z: 3,\n          centerX: 2,\n          centerY: 30\n        })\n      Progress({ value: 10, type: ProgressType.Eclipse })\n        .id('progressScale2')\n        .scale({\n          x: 2,\n          y: 0.5,\n          z: 3,\n          centerX: this.centerXNumber,\n          centerY: this.centerYNumber\n        })\n\n      Button('ButtonProgressScale1')\n        .onClick((event: ClickEvent) => {\n          this.centerXNumber = '80%'\n          this.centerYNumber = '80%'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ScaleSample.ets", "project_name": "arkui_ace_engine-master", "id": "53f8e4194191fbbbec0ec6564b917399819b90ea5013a0e034dcdc80b3d21dcf"}
{"text": "import sepiaTest from '../MyTest/SepiaTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SepiaSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(sepiaTest)\n  }\n\n  @State SepiaNumber: number = 1\n\n  build() {\n    Column() {\n      Button('Sepia1', { type: ButtonType.Normal, stateEffect: true })\n        .backgroundColor(Color.Blue)\n        .id('buttonSepia1')\n        .sepia(this.SepiaNumber)\n      Button('ButtonSepia2')\n        .onClick(() => {\n          this.SepiaNumber = 0\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SepiaSample.ets", "project_name": "arkui_ace_engine-master", "id": "75af92e6115b0defa7fe309f68b123f8978f86a67fcbe7230586095bb71ce038"}
{"text": "import pointer from '@ohos.multimodalInput.pointer';\nimport setCursorTest_eight from '../MyTest/SetCursorTest_eight'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SetCursorSample_eight {\n  @State text: string = ''\n  @State cursorOne: PointerStyle = pointer.PointerStyle.LOADING\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(setCursorTest_eight)\n  }\n\n  build() {\n    Column() {\n      Row()\n        .height(50)\n        .width(50)\n        .backgroundColor(Color.Black)\n        .position({ x: 50, y: 0 })\n        .id('rowSetCursor29')\n        .onHover((flag) => {\n          if (flag) {\n            cursorControl.setCursor(pointer.PointerStyle.LOADING)\n          } else {\n            cursorControl.restoreDefault()\n          }\n        })\n      Row()\n        .height(50)\n        .width(50)\n        .backgroundColor(Color.Green)\n        .position({ x: 100, y: 0 })\n        .id('rowSetCursor30')\n        .onHover((flag) => {\n          if (flag) {\n            cursorControl.setCursor(this.cursorOne)\n          } else {\n            cursorControl.restoreDefault()\n          }\n        })\n      Button('ButtonSetCursor1')\n        .onClick(() => {\n          this.cursorOne = pointer.PointerStyle.RUNNING\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SetCursorSample_eight.ets", "project_name": "arkui_ace_engine-master", "id": "90aafce2a9b51459e86881f6759fa82ccfaf31d33c0ab35da2d6eb5a2dbfd0af"}
{"text": "import setKeyboardAvoidModeTest from '../MyTest/SetKeyboardAvoidModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SetKeyboardAvoidModeSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(setKeyboardAvoidModeTest)\n  }\n\n  build() {\n    Column() {\n      Row().height(\"30%\").width(\"100%\").backgroundColor(Color.Gray)\n      TextArea().width(\"100%\").borderWidth(1)\n        .id('setKeyboardAvoidModeTextArea1')\n      Text(\"I can see the text of the page\")\n        .width(\"100%\")\n        .layoutWeight(1)\n        .textAlign(TextAlign.Center)\n        .backgroundColor(Color.Pink)\n    }.width('100%').height(\"100%\")\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SetKeyboardAvoidModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "6aef475a35cbeef0ffc0757206efb5a4e6b39bc9607f3d3a00e50ed6b8501e53"}
{"text": "import shadowTest_one from '../MyTest/ShadowTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShadowSample_one {\n  @State radiusNumber: Resource | number = 20\n  @State colorColor: Color | string | Resource | ColoringStrategy = 0x0000ff\n  @State offsetXNumber: number | Resource = 50\n  @State offsetYNumber: number | Resource = 50\n  @State fillBoolean: boolean = false\n  @State shadowStyle: ShadowStyle = ShadowStyle.OUTER_DEFAULT_XS\n  private selectedDate: Date = new Date()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shadowTest_one)\n  }\n\n  build() {\n    Column() {\n      CalendarPicker({ hintRadius: 10, selected: this.selectedDate })\n        .id('calendarPicker1')\n        .shadow({\n          radius: this.radiusNumber,\n          type: ShadowType.COLOR,\n          color: this.colorColor,\n          offsetX: this.offsetXNumber,\n          offsetY: this.offsetYNumber,\n          fill: this.fillBoolean\n        })\n\n      CalendarPicker({ hintRadius: 10, selected: this.selectedDate })\n        .id('calendarPicker2')\n        .shadow({\n          radius: 50,\n          type: ShadowType.BLUR,\n          color: (\"#FFF12525\"),\n          offsetX: $r(\"app.string.any_offset\"),\n          offsetY: $r(\"app.string.any_offset\"),\n          fill: true\n        })\n\n      Button('ButtonShadow1').onClick(() => {\n        this.colorColor = $r('app.color.start_window_background');\n        this.radiusNumber = $r('app.string.any_offset')\n        this.offsetXNumber = $r(\"app.string.any_offset\")\n        this.offsetYNumber = $r(\"app.string.any_offset\")\n        this.fillBoolean = true\n      })\n\n      Button('ButtonShadow2').onClick(() => {\n        this.colorColor = ColoringStrategy.INVERT;\n      })\n      Button('ButtonShadow3').onClick(() => {\n        this.colorColor = ColoringStrategy.AVERAGE;\n      })\n      Button('ButtonShadow4').onClick(() => {\n        this.colorColor = ColoringStrategy.PRIMARY;\n      })\n      Button('ButtonShadow5').onClick(() => {\n        this.colorColor = 0x0000ff;\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ShadowSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "4fd3950357f7f2319976a24e17f9beb1b7e419f2ad9deee751fed6067a0b03f1"}
{"text": "import shadowTest_two from '../MyTest/ShadowTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShadowSample_two {\n  @State shadowStyle: ShadowStyle = ShadowStyle.OUTER_DEFAULT_XS\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shadowTest_two)\n  }\n\n  build() {\n    Column() {\n      DataPanel({ values: [25] }).width(20).height(20)\n        .id('dataPanel1')\n        .shadow(this.shadowStyle)\n      Button('ButtonShadow1')\n        .onClick(() => {\n          this.shadowStyle = ShadowStyle.OUTER_DEFAULT_SM\n        })\n      Button('ButtonShadow2')\n        .onClick(() => {\n          this.shadowStyle = ShadowStyle.OUTER_DEFAULT_MD\n        })\n      Button('ButtonShadow3')\n        .onClick(() => {\n          this.shadowStyle = ShadowStyle.OUTER_DEFAULT_LG\n        })\n      Button('ButtonShadow4')\n        .onClick(() => {\n          this.shadowStyle = ShadowStyle.OUTER_FLOATING_SM\n        })\n      Button('ButtonShadow5')\n        .onClick(() => {\n          this.shadowStyle = ShadowStyle.OUTER_FLOATING_MD\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ShadowSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "4e29caa2c25d598268f75aeb5340e732e79aa94d15abf7140416bb9abbbb3f10"}
{"text": "import sharedTransitionTest from '../MyTest/SharedTransitionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SharedTransitionSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(sharedTransitionTest)\n  }\n\n  build() {\n    Navigator({ target: 'pages/MyTest/SharedTransitionTargetPage' }) {\n      Rect({ width: '90%', height: 50 })\n        .width(50)\n        .height(50)\n        .fill(Color.Pink)\n        .id('rectSharedTransition1')\n        .sharedTransition('sharedTransitionRect', {\n          duration: 800,\n          curve: Curve.Linear,\n          delay: 10,\n          motionPath: {\n            path: 'Mstart.x start.y L300 200 L300 500 Lend.x end.y',\n            from: 0.0,\n            to: 1.0,\n            rotatable: true\n          },\n          zIndex: 10,\n          type: SharedTransitionEffectType.Static\n        })\n    }\n    .padding({ left: 20, top: 20 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SharedTransitionSample.ets", "project_name": "arkui_ace_engine-master", "id": "b49b35d11eb9724aea1774ba42bd7f0e37218b3ec2d4d0ed2544b95758481293"}
{"text": "import sizeTest from '../MyTest/SizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SizeSample {\n  valueArr: Length[] = ['100px', 50, $r('app.string.common_breadth')];\n  index: number = 0\n  @State value: Length = this.valueArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sizeTest)\n  }\n\n  build() {\n    Column() {\n      Row()\n        .id('rowSize').size({ width: this.value, height: this.value }).backgroundColor(Color.Yellow)\n\n      Button('ButtonSize').onClick(() => {\n        this.index++\n        this.value = this.valueArr[this.index % 3]\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "1f0b10506a44a558726fe58706f788572b0628bd4635871b3783836ed92c32ba"}
{"text": "import sphericalEffectTest from '../MyTest/SphericalEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SphericalEffectSample {\n  valueArr: number[] = [-1, 0, 0.5, 1, 1.1]\n  index: number = 0\n  @State value: number = this.valueArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sphericalEffectTest)\n  }\n\n  build() {\n    Column() {\n      Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start }) {\n        Row({ space: 5 }) {\n\n          Image($r('app.media.app_icon'))\n            .sphericalEffect(this.value)\n            .id('imageSphericalEffect')\n        }.width(400).height(400)\n\n        Button('ButtonSphericalEffect').onClick(() => {\n          this.index++\n          this.value = this.valueArr[this.index]\n        }).width(200).height(50).margin(20)\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\SphericalEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "f86a26ddc692ac3d98b740f107b4dcc0cda7492e24ca1121a672f3d2239bf5df"}
{"text": "import tabIndexTest from '../MyTest/TabIndexTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabIndexSample {\n  @State index: number = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabIndexTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .focusable(true)\n        .tabIndex(this.index)\n        .id('textAreaTabIndex')\n      Button('ButtonTabIndex')\n        .onClick(() => {\n          this.index = -1\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\TabIndexSample.ets", "project_name": "arkui_ace_engine-master", "id": "807a792c5b39785a2d1f7c5159bf7fb2c416adb4c788beb53bb3a87d72450011"}
{"text": "import transFormTest from '../MyTest/TransFormTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport M1 from '@ohos.matrix4'\n\nlet M2 = M1.init([1.0, 0.0, 0.0, 0.0,\n  0.0, 1.0, 0.0, 0.0,\n  0.0, 0.0, 1.0, 0.0,\n  0.0, 0.0, 0.0, 1.0])\n\n@Entry\n@Component\nstruct TransFormSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(transFormTest)\n  }\n\n  build() {\n    Row({ space: 10 }) {\n      Text()\n      Column({ space: 30 }) {\n        PatternLock()\n          .width(150)\n          .height(200)\n          .transform(M2)\n          .id('patternLockTransform')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\TransFormSample.ets", "project_name": "arkui_ace_engine-master", "id": "7500b118b4fdc3e4a9b068c07fd6a0248e76ac46d9355b5ad0fb014928cc061d"}
{"text": "import transitionTest_one from '../MyTest/TransitionTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TransitionSample_one {\n  @State flag: boolean = true;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(transitionTest_one)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonTransition')\n        .onClick(() => {\n          this.flag = !this.flag;\n        })\n      if (this.flag) {\n        Image($r('app.media.app_icon')).width(200).height(200)\n          .transition({\n            opacity: 1,\n            translate: { x: 10, y: 10, z: 10 },\n            scale: {\n              x: 1,\n              y: 1,\n              z: 1,\n              centerX: 1,\n              centerY: 1\n            },\n            rotate: {\n              x: 1,\n              y: 1,\n              z: 1,\n              angle: 90,\n              centerX: 1,\n              centerY: 1,\n              centerZ: 1,\n              perspective: 1\n            }\n          })\n          .id('imageTransition1')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\TransitionSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "482a8a55f9f08ec5f83e79429710d595002ad9533d686cc748669efe1995f0ab"}
{"text": "import transitionTest_two from '../MyTest/TransitionTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TransitionSample_two {\n  @State flag: boolean = true;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(transitionTest_two)\n  }\n\n  build() {\n    Column() {\n      Button('ButtonTransition')\n        .onClick(() => {\n          this.flag = !this.flag;\n        })\n      if (this.flag) {\n        Image($r('app.media.app_icon'))\n          .width(200)\n          .height(200)\n          .transition(TransitionEffect.asymmetric(TransitionEffect.move(TransitionEdge.START),\n            TransitionEffect.move(TransitionEdge.END))\n            .combine(TransitionEffect.translate({ x: 100 }).animation({ duration: 1000 })))\n          .id('imageTransition2')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\TransitionSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "451ba159745ccbe0922d0ec6ba7d787360c270fda757caaea43f706b33b119a3"}
{"text": "import translateTest from '../MyTest/TranslateTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TranslateSample {\n  @State translateOptions: number | string = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(translateTest)\n  }\n\n  build() {\n    Column() {\n\n      Radio({ value: 'Radio1', group: 'radioGroup' })\n        .height(50)\n        .width(50)\n        .id('radio1')\n        .translate({ x: this.translateOptions, y: this.translateOptions, z: this.translateOptions })\n\n      Button('ButtonTranslate')\n        .onClick((event: ClickEvent) => {\n          this.translateOptions = '80%'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\TranslateSample.ets", "project_name": "arkui_ace_engine-master", "id": "f5763b7cec3172b2163e368991b8d2e55772aaa6dcba58a1fa35fe7325ddc3b3"}
{"text": "import updateColorTest from '../MyTest/UpdateColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct UpdateColorSample {\n  @State progressFlag1: boolean = true;\n  @State progress: ProgressMask = new ProgressMask(10.0, 100.0, Color.Gray);\n  @State updateColorValue: ResourceColor = 0x9fff0000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(updateColorTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width('500px').height('280px')\n        .id('progressUpdateColor1')\n        .mask(this.progress)\n\n      Button('ButtonUpdateColor1')\n        .onClick((event?: ClickEvent) => {\n          if (this.progressFlag1) {\n            this.progress.updateColor(this.updateColorValue);\n          } else {\n            this.progress.updateColor(Color.Brown);\n          }\n          this.progressFlag1 = !this.progressFlag1\n        }).width(200).height(50).margin(20)\n\n      Button('ButtonUpdateColor2')\n        .onClick(() => {\n          this.progress.updateColor('#99182431');\n        })\n      Button('ButtonUpdateColor3')\n        .onClick(() => {\n          this.progress.updateColor($r('sys.color.ohos_id_color_text_hyperlink'))\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\UpdateColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "d049f78b4ca5873661705f799ee366374c6fe51a719bcdb762b4d5d818d068d4"}
{"text": "import updateProgressTest from '../MyTest/UpdateProgressTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct UpdateProgressSample {\n  @State progressFlag1: boolean = true;\n  @State progress: ProgressMask = new ProgressMask(10.0, 100.0, Color.Gray);\n  @State value: number = 10.0;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(updateProgressTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width('500px').height('280px')\n        .id('imageUpdateProgress1')\n        .mask(this.progress)\n\n      Button('ButtonUpdateProgress')\n        .onClick((event?: ClickEvent) => {\n          this.value += 10;\n          this.progress.updateProgress(this.value);\n        }).width(200).height(50).margin(20)\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\UpdateProgressSample.ets", "project_name": "arkui_ace_engine-master", "id": "cf317f3efd8d30f21ce62edcef09245b2b85014f1e4df7e1133c81837e01fad1"}
{"text": "import useEffectTest from '../MyTest/UseEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct UseEffectSample {\n  @State bool: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(useEffectTest)\n  }\n\n  build() {\n    Stack() {\n      Image($r(\"app.media.app_icon\"))\n        .autoResize(true)\n      Column() {\n        Text(\"Normal text with useEffect blur\")\n          .backgroundColor(Color.Grey)\n          .useEffect(this.bool)\n          .width('90%')\n          .height('48')\n          .id('textUseEffect')\n        Button('ButtonUseEffect')\n          .onClick(() => {\n            this.bool = !this.bool\n          })\n      }\n      .width('100%')\n    }\n  }\n}\n\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\UseEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "fecd67f5c4e6c154161fdcdc5a0f91df03ada7f393d4fc6c9e7f3d3ed3366a1e"}
{"text": "import useShadowBatchingTest from '../MyTest/UseShadowBatchingTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct UseShadowBatchingSample {\n  @State useShadowBoolean: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(useShadowBatchingTest)\n  }\n\n  build() {\n    Column() {\n      Column({ space: 10 }) {\n        Stack() {\n        }\n        .width('90%')\n        .height(50)\n        .margin({ top: 100 })\n        .backgroundColor(0xFFE4C4)\n        .shadow({ radius: 200, color: Color.Green })\n\n        Stack() {\n        }\n        .width('90%')\n        .height(50)\n        .margin({ top: 40 })\n        .backgroundColor(0xFFE4C4)\n        .shadow({ radius: 200, color: Color.Red })\n\n      }\n      .useShadowBatching(this.useShadowBoolean)\n      .id('columUseShadowBatching1')\n\n      Button('ButtonUseShadowBatching1')\n        .onClick(() => {\n          if (this.useShadowBoolean) {\n            this.useShadowBoolean = false;\n          } else {\n            this.useShadowBoolean = true;\n          }\n        })\n    }\n    .width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\UseShadowBatchingSample.ets", "project_name": "arkui_ace_engine-master", "id": "c504923df8173aeb4f225d888333d2040affbd6f2b6d97636768b7a946a1abda"}
{"text": "import visibilityTest from '../MyTest/VisibilityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VisibilitySample {\n  @State visibilityType: Visibility = Visibility.Hidden\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(visibilityTest)\n  }\n\n  build() {\n    Column() {\n      Column() {\n        Circle({ width: 150, height: 150 })\n          .fillOpacity(0)\n          .visibility(Visibility.Visible)\n          .id('circleVisibility1')\n          .backgroundColor(0xAFEEEE)\n        Circle({ width: 150, height: 150 })\n          .fillOpacity(0)\n          .visibility(this.visibilityType)\n          .backgroundColor(0xAFEEEE)\n          .id('circleVisibility2')\n        Button('ButtonVisibility')\n          .onClick(() => {\n            this.visibilityType = Visibility.None\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\VisibilitySample.ets", "project_name": "arkui_ace_engine-master", "id": "7dcdbda6e3a72e3b922be650274e2d1f4b6be7bf079ff0ba5ec9734c70e3e80e"}
{"text": "import widthTest from '../MyTest/WidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct WidthSample {\n  @State len: Length = '100px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(widthTest)\n  }\n\n  build() {\n    Column() {\n      Column().width(20).height(20).backgroundColor(0xAFEEEE).id('columnWidth')\n      Rect({ width: '90%', height: 50 }).width(this.len).id('rectWidth')\n      Button('ButtonWidth')\n        .onClick(() => {\n          this.len = $r('app.string.common_width')\n        })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\WidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "5643ed1b982517f0475dd7761ac971edd4fc792e3579367f5364c156f9432b48"}
{"text": "import zIndexTest from '../MyTest/ZIndexTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ZIndexSample {\n  @State zIndexNumber: number = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(zIndexTest)\n  }\n\n  build() {\n    Column() {\n      Stack() {\n        Text('textZIndex1')\n          .size({ width: '40%', height: '30%' }).backgroundColor(0xbbb2cb)\n          .zIndex(2)\n          .id('textZIndex1')\n        Text('textZIndex2')\n          .size({ width: '70%', height: '50%' })\n          .backgroundColor(0xd2cab3)\n          .align(Alignment.TopStart)\n          .zIndex(this.zIndexNumber)\n          .id('textZIndex2')\n      }.width('100%').height(200)\n\n      Button('ButtonZIndex1')\n        .onClick(() => {\n          this.zIndexNumber = 3\n        })\n    }.width('100%').height(200)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\common\\ZIndexSample.ets", "project_name": "arkui_ace_engine-master", "id": "8fc96ff1fe6afeebbc381838898ee18a0dbd06e602898344cf4e4051d89d3e94"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function accessibilityDescriptionTest() {\n  \n  defineTest('accessibilityDescriptionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('accessibilityDescriptionTestDemo running')\n    let driver: Tester = Tester.create()\n    let datePicker1: Component =\n      await driver.findComponent(Matcher.create().id('datePickerAccessibilityDescription1').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('DatePickerAccessibilityDescription1').enabled(true))\n    let accessibilityDescription1: string = await datePicker1.getInspectorInfo()\n    assertFalse(JSON.parse(accessibilityDescription1).$attrs.accessibilityDescription == undefined)\n    assertEqual(JSON.parse(accessibilityDescription1).$attrs.accessibilityDescription, '')\n    await button1.tap()\n    let accessibilityDescription2: string = await datePicker1.getInspectorInfo()\n    assertEqual(JSON.parse(accessibilityDescription2).$attrs.accessibilityDescription, \"accessibilityDescription\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AccessibilityDescriptionTest.ets", "project_name": "arkui_ace_engine-master", "id": "1c95079f0ef906f36a28984e479d6e0ccb5d4b62f6217c9fc91670cd4d178572"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function accessibilityGroupTest() {\n  \n  defineTest('accessibilityGroupTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('accessibilityGroupTestDemo running')\n    let driver: Tester = Tester.create()\n    let datePicker1: Component =\n      await driver.findComponent(Matcher.create().id('datePickerAccessibilityGroup1').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('DatePickerAccessibilityGroup1').enabled(true))\n    let accessibilityGroup1: string = await datePicker1.getInspectorInfo()\n    assertFalse(JSON.parse(accessibilityGroup1).$attrs.accessibilityGroup == undefined)\n    assertTrue(JSON.parse(accessibilityGroup1).$attrs.accessibilityGroup)\n\n    await button1.tap()\n    let accessibilityGroup2: string = await datePicker1.getInspectorInfo()\n    assertFalse(JSON.parse(accessibilityGroup2).$attrs.accessibilityGroup)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AccessibilityGroupTest.ets", "project_name": "arkui_ace_engine-master", "id": "120885af36959e463b86461fad555333852955800ae7ae7dbf7a70160cdafa1e"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function accessibilityTextTest() {\n  \n  defineTest('accessibilityTextTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('accessibilityTextTestDemo running')\n    let driver: Tester = Tester.create()\n    let text1: Component = await driver.findComponent(Matcher.create().id('textAccessibilityText1').enabled(true))\n    let accessibilityText1: string = await text1.getInspectorInfo()\n    assertFalse(JSON.parse(accessibilityText1).$attrs.accessibilityText == undefined)\n    assertEqual(JSON.parse(accessibilityText1).$attrs.accessibilityText, \"accessibilityTextText\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AccessibilityTextTest.ets", "project_name": "arkui_ace_engine-master", "id": "b56bddf3b74a1705789b82bba0edaf55b23fe0381b1c6a69bd5b2a8c6421ccc6"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function accessibilityVirtualNodeTest() {\n  \n  defineTest('accessibilityVirtualNodeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"accessibilityVirtualNodeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textAccessibilityVirtualNode1: Component =\n      await driver.findComponent(Matcher.create().id('textAccessibilityVirtualNode1').enabled(true))\n    let accessibilityVirtualNode1: string = await textAccessibilityVirtualNode1.getInspectorInfo()\n    assertFalse(JSON.parse(accessibilityVirtualNode1).$attrs.accessibilityVirtualNode == undefined)\n    assertEqual(JSON.parse(accessibilityVirtualNode1).$attrs.accessibilityVirtualNode, 'customAccessibilityNode')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AccessibilityVirtualNodeTest.ets", "project_name": "arkui_ace_engine-master", "id": "c939be6523b170069aede52bf31a75ecdf187ad4315db63673b6a420d3f0ef24"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function alignSelfTest() {\n  \n  defineTest('alignSelfTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"alignSelfTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textAlignSelf1: Component = await driver.findComponent(Matcher.create().id('textAlignSelf1').enabled(true))\n    let textAlignSelf2: Component = await driver.findComponent(Matcher.create().id('textAlignSelf2').enabled(true))\n    let textAlignSelf3: Component = await driver.findComponent(Matcher.create().id('textAlignSelf3').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonAlignSelf1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonAlignSelf2').enabled(true))\n    let button3: Component = await driver.findComponent(Matcher.create().text('ButtonAlignSelf3').enabled(true))\n    let alignSelf1: string = await textAlignSelf1.getInspectorInfo()\n    assertEqual(JSON.parse(alignSelf1).$attrs.alignSelf, 'ItemAlign.Baseline')\n\n    let alignSelf2: string = await textAlignSelf2.getInspectorInfo()\n    assertEqual(JSON.parse(alignSelf2).$attrs.alignSelf, 'ItemAlign.End')\n\n    let alignSelf3: string = await textAlignSelf3.getInspectorInfo()\n    assertEqual(JSON.parse(alignSelf3).$attrs.alignSelf, 'ItemAlign.Center')\n\n    await button1.tap()\n    let alignSelf4: string = await textAlignSelf3.getInspectorInfo()\n    assertEqual(JSON.parse(alignSelf4).$attrs.alignSelf, 'ItemAlign.Auto')\n\n    await button2.tap()\n    let alignSelf5: string = await textAlignSelf3.getInspectorInfo()\n    assertEqual(JSON.parse(alignSelf5).$attrs.alignSelf, 'ItemAlign.Start')\n\n    await button3.tap()\n    let alignSelf6: string = await textAlignSelf3.getInspectorInfo()\n    assertEqual(JSON.parse(alignSelf6).$attrs.alignSelf, 'ItemAlign.Stretch')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AlignSelfTest.ets", "project_name": "arkui_ace_engine-master", "id": "eb103258f50a4a5ba7633ed1378a5f235d5eb942359eb4353f786dd3ef70f641"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function alignTest_one() {\n  \n  defineTest('alignTest_oneDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"alignTest_oneDemo running\")\n    let driver: Tester = Tester.create()\n    let stackAlign1: Component = await driver.findComponent(Matcher.create().id('stackAlign1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonAlign1').enabled(true))\n    let align1: string = await stackAlign1.getInspectorInfo()\n    assertEqual(JSON.parse(align1).$attrs.align, 'Alignment.TopStart')\n\n    await button1.tap()\n    let align2: string = await stackAlign1.getInspectorInfo()\n    assertEqual(JSON.parse(align2).$attrs.align, 'Alignment.Top')\n\n    await button1.tap()\n    let align3: string = await stackAlign1.getInspectorInfo()\n    assertEqual(JSON.parse(align3).$attrs.align, 'Alignment.TopEnd')\n\n    await button1.tap()\n    let align4: string = await stackAlign1.getInspectorInfo()\n    assertEqual(JSON.parse(align4).$attrs.align, 'Alignment.Start')\n\n    await button1.tap()\n    let align5: string = await stackAlign1.getInspectorInfo()\n    assertEqual(JSON.parse(align5).$attrs.align, 'Alignment.Center')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AlignTest_one.ets", "project_name": "arkui_ace_engine-master", "id": "8c4b7a819117b7c3ed471327d1e572eb3b6510d3df413dd40fafde2d9754a21e"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function aspectRatioTest() {\n  \n  defineTest('aspectRatioTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"aspectRatioTestDemo running\")\n    let driver: Tester = Tester.create()\n    let menuAspectRatio1: Component = await driver.findComponent(Matcher.create().id('menuAspectRatio1').enabled(true))\n    let aspectRatio2: string = await menuAspectRatio1.getInspectorInfo()\n    assertEqual(JSON.parse(aspectRatio2).$attrs.aspectRatio, 5)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\AspectRatioTest.ets", "project_name": "arkui_ace_engine-master", "id": "54badaf2aca1da275751a869f4583f232a239b04639cdb6edd8973c6147a9eab"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function backdropBlurTest() {\n  \n  defineTest('backdropBlurTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"backdropBlurTestDemo running\")\n    let driver: Tester = Tester.create()\n    let button1: Component = await driver.findComponent(Matcher.create().id('buttonBackdropBlur1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonBackdropBlur2').enabled(true))\n    let backdropBlur1: string = await button1.getInspectorInfo()\n    assertEqual(JSON.parse(backdropBlur1).$attrs.backdropBlur, 0)\n\n    await button2.tap()\n    let backdropBlur2: string = await button1.getInspectorInfo()\n    assertEqual(JSON.parse(backdropBlur2).$attrs.backdropBlur, 255)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BackdropBlurTest.ets", "project_name": "arkui_ace_engine-master", "id": "1e181c1648c38cdf465a3d69eea41dcd2379c8980c4da128c2ad01768c602321"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function backgroundTest_two() {\n  \n  defineTest('backgroundTest_twoDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('ackgroundTest_twoDemo running')\n    let driver: Tester = Tester.create()\n    let rowBackground3: Component = await driver.findComponent(Matcher.create().id('rowBackground3').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonBackground1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonBackground2').enabled(true))\n    let button3: Component = await driver.findComponent(Matcher.create().text('ButtonBackground3').enabled(true))\n\n    let background1: string = await rowBackground3.getInspectorInfo()\n    assertFalse(JSON.parse(background1).$attrs.background == undefined)\n    assertEqual(JSON.parse(background1).$attrs.background.align, 'Alignment.TopStart')\n\n    await button1.tap()\n    let background2: string = await rowBackground3.getInspectorInfo()\n    assertEqual(JSON.parse(background2).$attrs.background.align, 'Alignment.TopEnd')\n\n    await button2.tap()\n    let background3: string = await rowBackground3.getInspectorInfo()\n    assertEqual(JSON.parse(background3).$attrs.background.align, 'Alignment.Start')\n\n    await button3.tap()\n    let background4: string = await rowBackground3.getInspectorInfo()\n    assertEqual(JSON.parse(background4).$attrs.background.align, 'Alignment.Center')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BackgroundTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "dcd3b7553994cef2912f1aa920e78d8b600d5e3bfb51db32554734e9bcc57e74"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function bindPopupTest_eight() {\n  \n  defineTest('bindPopupTest_eightDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('bindPopupTest_eightDemo running')\n    let driver: Tester = Tester.create()\n    let buttonBindPopup8: Component = await driver.findComponent(Matcher.create().id('buttonBindPopup8').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonBindPopup').enabled(true))\n    let bindPopup1: string = await buttonBindPopup8.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup1).$attrs.bindPopup == undefined)\n    assertTrue(JSON.parse(bindPopup1).$attrs.bindPopup.show)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .mask\n      .color, Color.Green)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .width, '10px')\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .arrowPointPosition, ArrowPointPosition.START)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .arrowWidth, '10px')\n    await button1.tap()\n    let bindPopup2: string = await buttonBindPopup8.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup2).$attrs.BindPopup.show)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BindPopupTest_eight.ets", "project_name": "arkui_ace_engine-master", "id": "adc550de43d755e4a19e6b913f1af1a21e1d0e6924436d5ebdbc6198a0c634b6"}
{"text": "import { assertEqual, assertFalse, assertTrue, MatchType } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function bindPopupTest_five() {\n  \n  defineTest('bindPopupTest_fiveDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('bindPopupTest_fiveDemo running')\n    let driver: Tester = Tester.create()\n    let customPopup: Component = await driver.findComponent(Matcher.create().text('CustomPopup').enabled(true))\n    let popupBuilder: string = await customPopup.getType()\n    assertEqual(popupBuilder, 'Text')\n    let buttonBindPopup5: Component = await driver.findComponent(Matcher.create().id('buttonBindPopup5').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('ButtonBindPopup1', MatchType.EQUALS).enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonBindPopup2').enabled(true))\n    let bindPopup1: string = await buttonBindPopup5.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup1).$attrs.BindPopup == undefined)\n    assertTrue(JSON.parse(bindPopup1).$attrs.BindPopup.show)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .placement, Placement.Left)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .popupColor, Color.Green)\n    assertTrue(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .enableArrow)\n    assertTrue(JSON.parse(bindPopup1)\n      .$attrs\n      .BindPopup\n      .popup\n      .autoCancel)\n\n    await button1.tap()\n    let bindPopup2: string = await buttonBindPopup5.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup2).$attrs.BindPopup.show)\n\n    await button2.tap()\n    let bindPopup3: string = await buttonBindPopup5.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup3)\n      .$attrs\n      .BindPopup\n      .popup\n      .enableArrow)\n    assertFalse(JSON.parse(bindPopup3)\n      .$attrs\n      .BindPopup\n      .popup\n      .autoCancel)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BindPopupTest_five.ets", "project_name": "arkui_ace_engine-master", "id": "751504333aa01394c36b4796a7b3aefcfec9e51d7648b35333a5df52ac353d1c"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function bindPopupTest_three() {\n  \n  defineTest('bindPopupTest_threeDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('bindPopupTest_threeDemo running')\n    let driver: Tester = Tester.create()\n    let buttonBindPopup3: Component = await driver.findComponent(Matcher.create().id('buttonBindPopup3').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonBindPopup').enabled(true))\n    let bindPopup1: string = await buttonBindPopup3.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup1).$attrs.bindPopup == undefined)\n    assertTrue(JSON.parse(bindPopup1).$attrs.bindPopup.show)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .bindPopup\n      .popup\n      .message, \"bindPopup\")\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .bindPopup\n      .popup\n      .targetSpace, $r(\"app.string.common_value_one\"))\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .bindPopup\n      .popup\n      .offset\n      .x, 1)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .bindPopup\n      .popup\n      .offset\n      .y, 1)\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .bindPopup\n      .popup\n      .width, '100px')\n    assertEqual(JSON.parse(bindPopup1)\n      .$attrs\n      .bindPopup\n      .popup\n      .arrowWidth, '10px')\n    await button1.tap()\n    let bindPopup3: string = await buttonBindPopup3.getInspectorInfo()\n    assertFalse(JSON.parse(bindPopup3).$attrs.bindPopup.show)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BindPopupTest_three.ets", "project_name": "arkui_ace_engine-master", "id": "8f234f27a4b753c47fc3bb427c7a3cd34ead40a8ae4137255020d8dd9d0d2df2"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function borderColorTest_one() {\n  \n  defineTest('borderColorTest_oneDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('borderColorTest_oneDemo running')\n    let driver: Tester = Tester.create()\n    let gridItemBorderColor1: Component =\n      await driver.findComponent(Matcher.create().id('gridItemBorderColor1').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonItemBorderColor1').enabled(true))\n\n    let borderColor1: string = await gridItemBorderColor1.getInspectorInfo()\n    assertEqual(JSON.parse(borderColor1).$attrs.borderColor, '#FF1B00FF')\n\n    await button.tap()\n    let borderColor2: string = await gridItemBorderColor1.getInspectorInfo()\n    assertEqual(JSON.parse(borderColor2).$attrs.borderColor, '#FF528B8B')\n\n    await button.tap()\n    let borderColor3: string = await gridItemBorderColor1.getInspectorInfo()\n    assertEqual(JSON.parse(borderColor3).$attrs.borderColor.toLowerCase(), Color.Red)\n\n    await button.tap()\n    let borderColor4: string = await gridItemBorderColor1.getInspectorInfo()\n    assertEqual(JSON.parse(borderColor4).$attrs.borderColor, $r('sys.color.ohos_id_color_text_hyperlink'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BorderColorTest_one.ets", "project_name": "arkui_ace_engine-master", "id": "0c1aab9f93b1b3b277aab26470c4162faf8562a940030c01fcee89cd529b9801"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function brightnessTest() {\n  \n  defineTest('brightnessTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"brightnessTestDemo running\")\n    let driver: Tester = Tester.create()\n    let canvas1: Component = await driver.findComponent(Matcher.create().id('canvasBrightness1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonBrightness1').enabled(true))\n    let brightness1: string = await canvas1.getInspectorInfo()\n    assertEqual(JSON.parse(brightness1).$attrs.brightness, 2)\n    await button1.tap()\n    let brightness2: string = await canvas1.getInspectorInfo()\n    assertEqual(JSON.parse(brightness2).$attrs.brightness, -1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\BrightnessTest.ets", "project_name": "arkui_ace_engine-master", "id": "ec0f139e638b89cd0cb1ad8a381dba29be45ced64f36e3d35b095b17bda2d588"}
{"text": "import { assertEqual, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function clickEffectTest() {\n  \n  defineTest('clickEffectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"clickEffectTestDemo running\")\n    let driver: Tester = Tester.create()\n    let menuClickEffect1: Component = await driver.findComponent(Matcher.create().id('menuClickEffect1').enabled(true))\n    let menuClickEffect2: Component = await driver.findComponent(Matcher.create().id('menuClickEffect2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonClickEffect1').enabled(true))\n    let clickEffect1: string = await menuClickEffect1.getInspectorInfo()\n    assertEqual(JSON.parse(clickEffect1).$attrs.clickEffect.level, \"-1\")\n    let clickEffect2: string = await menuClickEffect2.getInspectorInfo()\n    assertEqual(JSON.parse(clickEffect2).$attrs.clickEffect.level, '1')\n\n    await button1.tap()\n    let clickEffect3: string = await menuClickEffect2.getInspectorInfo()\n    assertTrue(JSON.parse(clickEffect3).$attrs.clickEffect.level == ClickEffectLevel.LIGHT)\n\n    await button1.tap()\n    let clickEffect4: string = await menuClickEffect2.getInspectorInfo()\n    assertTrue(JSON.parse(clickEffect4).$attrs.clickEffect.level == ClickEffectLevel.MIDDLE)\n\n    await button1.tap()\n    let clickEffect5: string = await menuClickEffect2.getInspectorInfo()\n    assertTrue(JSON.parse(clickEffect5).$attrs.clickEffect.level == ClickEffectLevel.HEAVY)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\ClickEffectTest.ets", "project_name": "arkui_ace_engine-master", "id": "b656edc764af63d7470d8e318b1ef63ceee55454dca5b2b26863f9b271e0af7c"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function contrastTest() {\n  \n  defineTest('contrastTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"contrastTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageContrast1: Component = await driver.findComponent(Matcher.create().id('imageContrast1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonContrast1').enabled(true))\n    let contrast1: string = await imageContrast1.getInspectorInfo()\n    assertEqual(JSON.parse(contrast1).$attrs.contrast, 2)\n    await button1.tap()\n    let contrast2: string = await imageContrast1.getInspectorInfo()\n    assertEqual(JSON.parse(contrast2).$attrs.contrast, 0)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\ContrastTest.ets", "project_name": "arkui_ace_engine-master", "id": "c13ff69e153da2ffd1cccb0b16a0f10716263764010e1f7f3379624e4065f3bc"}
{"text": "import { assertTrue, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function defaultFocusTest() {\n  \n  defineTest('defaultFocusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('defaultFocusTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxDefaultFocus: Component =\n      await driver.findComponent(Matcher.create().id('checkboxDefaultFocus').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonDefaultFocus').enabled(true))\n    let defaultFocus1: string = await checkboxDefaultFocus.getInspectorInfo()\n    assertFalse(JSON.parse(defaultFocus1).$attrs.defaultFocus)\n    await button.tap()\n\n    let defaultFocus2: string = await checkboxDefaultFocus.getInspectorInfo()\n    assertTrue(JSON.parse(defaultFocus2).$attrs.defaultFocus)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\DefaultFocusTest.ets", "project_name": "arkui_ace_engine-master", "id": "030dee247cbb269d2a8328305c95f5baa871868132fd4224fa9da6287eebf92e"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function directionTest() {\n  \n  defineTest('directionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"directionTestDemo running\")\n    let driver: Tester = Tester.create()\n    let rowDirection1: Component = await driver.findComponent(Matcher.create().id('rowDirection1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonDirection1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonDirection2').enabled(true))\n    let direction1: string = await rowDirection1.getInspectorInfo()\n    assertEqual(JSON.parse(direction1).$attrs.direction, 'Direction.Ltr')\n\n    await button1.tap()\n    let direction2: string = await rowDirection1.getInspectorInfo()\n    assertEqual(JSON.parse(direction2).$attrs.direction, 'Direction.Rtl')\n\n    await button2.tap()\n    let direction3: string = await rowDirection1.getInspectorInfo()\n    assertEqual(JSON.parse(direction3).$attrs.direction, 'Direction.Auto')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\DirectionTest.ets", "project_name": "arkui_ace_engine-master", "id": "7e7a48ab4bf70ac5f35eed90f816e480db5d05b728df64c19b240373e109d585"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function displayPriorityTest() {\n  \n  defineTest('displayPriorityTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"displayPriorityTestDemo running\")\n    let driver: Tester = Tester.create()\n    let text1: Component = await driver.findComponent(Matcher.create().id('textDisplayPriority1').enabled(true))\n    let displayPriority1: string = await text1.getInspectorInfo()\n    assertEqual(JSON.parse(displayPriority1).$attrs.displayPriority, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\DisplayPriorityTest.ets", "project_name": "arkui_ace_engine-master", "id": "de8f3df043ff5720526be409d36f29dcaa4f7f0ddb3d6131345fb8d2994468b7"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function dragPreviewOptionsTest() {\n  \n  defineTest('dragPreviewOptionsTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('dragPreviewOptionsTestDemo running')\n    let driver: Tester = Tester.create()\n    let imageDragPreviewOptions1: Component =\n      await driver.findComponent(Matcher.create().id('imageDragPreviewOptions1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonDragPreviewOptions').enabled(true))\n    let dragPreviewOptions1: string = await imageDragPreviewOptions1.getInspectorInfo()\n    assertFalse(JSON.parse(dragPreviewOptions1).$attrs.dragPreviewOptions == undefined)\n    assertEqual(JSON.parse(dragPreviewOptions1)\n      .$attrs\n      .dragPreviewOptions\n      .mode, DragPreviewMode.AUTO)\n\n    await button1.tap()\n    let dragPreviewOptions2: string = await imageDragPreviewOptions1.getInspectorInfo()\n    assertEqual(JSON.parse(dragPreviewOptions2)\n      .$attrs\n      .dragPreviewOptions\n      .mode, DragPreviewMode.DISABLE_SCALE)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\DragPreviewOptionsTest.ets", "project_name": "arkui_ace_engine-master", "id": "59951d5a621aad00db9a8da10ce09ee623f9e3a3f0f2620985df0ef5d64828b4"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function dragPreviewTest() {\n  \n  defineTest('dragPreviewTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('dragPreviewTestDemo running')\n    let driver: Tester = Tester.create()\n    let imageDragPreview1: Component =\n      await driver.findComponent(Matcher.create().id('imageDragPreview1').enabled(true))\n    let imageDragPreview2: Component =\n      await driver.findComponent(Matcher.create().id('imageDragPreview2').enabled(true))\n    let imageDragPreview3: Component =\n      await driver.findComponent(Matcher.create().id('imageDragPreview3').enabled(true))\n    let dragPreview1: string = await imageDragPreview1.getInspectorInfo()\n    assertFalse(JSON.parse(dragPreview1).$attrs.dragPreview == undefined)\n\n    await imageDragPreview1.press()\n    let findText1: Component = await driver.findComponent(Matcher.create().text(\"menu item 1\"))\n    let text1: string = await findText1.getType()\n    assertTrue(text1 == \"Text\")\n\n    await driver.tap(1, 1)\n    await imageDragPreview2.press()\n    let findText2: Component = await driver.findComponent(Matcher.create().text(\"menu item 1\"))\n    let text2: string = await findText2.getType()\n    assertTrue(text2 == \"Text\")\n\n    await driver.tap(1, 1)\n    await imageDragPreview3.press()\n    let findText3: Component = await driver.findComponent(Matcher.create().text(\"menu item 1\"))\n    let text3: string = await findText3.getType()\n    assertTrue(text3 == \"Text\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\DragPreviewTest.ets", "project_name": "arkui_ace_engine-master", "id": "072985b14a4d8625703667c2a1649ee8b14e83c38233678b8c64e6db39398118"}
{"text": "import { assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function enabledTest() {\n  \n  defineTest('enabledTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('enabledTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonEnabled: Component = await driver.findComponent(Matcher.create().id('buttonEnabled').enabled(true))\n    let buttonClick: Component = await driver.findComponent(Matcher.create().text('ButtonEnabled2').enabled(true))\n    let enabled1: boolean = await buttonEnabled.isEnabled()\n    assertTrue(enabled1)\n\n    await buttonClick.tap()\n    let enabled2: boolean = await buttonEnabled.isEnabled()\n    assertFalse(enabled2)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\EnabledTest.ets", "project_name": "arkui_ace_engine-master", "id": "1b7d91e76560b29776faa3a8e8c2d840a5a3bc92cd53b7a7f5442a253cdaf3f9"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function expandSafeAreaTest() {\n  \n  defineTest('expandSafeAreaTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('expandSafeAreaTestDemo running')\n    let driver: Tester = Tester.create()\n    let marqueeExpandSafeArea1: Component =\n      await driver.findComponent(Matcher.create().id('marqueeExpandSafeArea1').enabled(true))\n    let expandSafeArea1: string = await marqueeExpandSafeArea1.getInspectorInfo()\n    assertFalse(JSON.parse(expandSafeArea1).$attrs.expandSafeArea == undefined)\n    assertEqual(JSON.parse(expandSafeArea1).$attrs.expandSafeArea,\n      [SafeAreaType.SYSTEM, SafeAreaType.CUTOUT, SafeAreaType.KEYBOARD])\n    assertEqual(JSON.parse(expandSafeArea1).$attrs.expandSafeArea,\n      [SafeAreaEdge.TOP, SafeAreaEdge.BOTTOM, SafeAreaEdge.START, SafeAreaEdge.END])\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\ExpandSafeAreaTest.ets", "project_name": "arkui_ace_engine-master", "id": "5e4e49d215be25429e148c4305b6506571b6f05e68cab2bbb38c2f82e2ca61e1"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function flexBasisTest() {\n  \n  defineTest('flexBasisTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('flexBasisTestDemo running')\n    let driver: Tester = Tester.create()\n    let loadingProgressFlexBasis1: Component =\n      await driver.findComponent(Matcher.create().id('loadingProgressFlexBasis1').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('ButtonFlexBasis').enabled(true))\n    let flexBasis1: string = await loadingProgressFlexBasis1.getInspectorInfo()\n    assertEqual(JSON.parse(flexBasis1).$attrs.flexBasis, '100.00vp')\n\n    await button1.tap()\n    let flexBasis2: string = await loadingProgressFlexBasis1.getInspectorInfo()\n    assertEqual(JSON.parse(flexBasis2).$attrs.flexBasis, '200.00vp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\FlexBasisTest.ets", "project_name": "arkui_ace_engine-master", "id": "3a8bb132b05711a491336154106cc6da7b99357e55eb7d8e222ffdbe071843db"}
{"text": "import { assertTrue, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function focusableTest() {\n  \n  defineTest('focusableTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('focusableTestDemo running')\n    let driver: Tester = Tester.create()\n    let buttonFocusable1: Component = await driver.findComponent(Matcher.create().id('buttonFocusable1').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonFocusable').enabled(true))\n    let focusable1: string = await buttonFocusable1.getInspectorInfo()\n    assertFalse(JSON.parse(focusable1).$attrs.focusable)\n\n    await button.tap()\n    let focusable2: string = await buttonFocusable1.getInspectorInfo()\n    assertTrue(JSON.parse(focusable2).$attrs.focusable)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\FocusableTest.ets", "project_name": "arkui_ace_engine-master", "id": "4974ebbcd213ff6317dc8cdee3915bd8364c23b57583649f7e6c6f80e83ac4b9"}
{"text": "import { assertTrue, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function focusOnTouchTest() {\n  \n  defineTest('focusOnTouchTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('focusOnTouchTestDemo running')\n    let driver: Tester = Tester.create()\n    let textInputFocusOnTouch: Component =\n      await driver.findComponent(Matcher.create().id('textInputFocusOnTouch').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonFocusOnTouch').enabled(true))\n    let focusOnTouch1: string = await textInputFocusOnTouch.getInspectorInfo()\n    assertFalse(JSON.parse(focusOnTouch1).$attrs.focusOnTouch)\n    await button.tap()\n    let focusOnTouch2: string = await textInputFocusOnTouch.getInspectorInfo()\n    assertTrue(JSON.parse(focusOnTouch2).$attrs.focusOnTouch)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\FocusOnTouchTest.ets", "project_name": "arkui_ace_engine-master", "id": "0fd458efbac0f10abb0a239e12c71b73eb9de234885fb7be83fbcef594aa3761"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function fontSizeTest() {\n  \n  defineTest('fontSizeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('fontSizeTestDemo running')\n    let driver: Tester = Tester.create()\n    let textFontSize1: Component = await driver.findComponent(Matcher.create().id('textFontSize1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonFontSize1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonFontSize2').enabled(true))\n    let fontSize1: string = await textFontSize1.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize1).$attrs.fontSize, $r(\"app.string.common_value_two\"))\n\n    await button1.tap()\n    let fontSize2: string = await textFontSize1.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize2).$attrs.fontSize, '50.00fp')\n\n    await button2.tap()\n    let fontSize3: string = await textFontSize1.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize3).$attrs.fontSize, '30.00fp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\FontSizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "c283f68f9ad0a29af79f09171ccecf9a46c9101958d73e4edf1eb2261edb5bb4"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function fontStyleTest() {\n  \n  defineTest('fontStyleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('fontStyleTestDemo running')\n    let driver: Tester = Tester.create()\n    let textFontStyle1: Component = await driver.findComponent(Matcher.create().id('textFontStyle1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonFontStyle1').enabled(true))\n    let fontStyle1: string = await textFontStyle1.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle1).$attrs.fontStyle, 'FontStyle.Normal')\n\n    await button1.tap()\n    let fontStyle2: string = await textFontStyle1.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle2).$attrs.fontStyle, 'FontStyle.Italic')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\FontStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "6e7f55522abab306726d2f8a6d7f706f9d1aa9587c94515b39149424fff6954e"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function geometryTransitionTest() {\n  \n  defineTest('geometryTransitionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"geometryTransitionTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageGeometryTransition1: Component =\n      await driver.findComponent(Matcher.create().id('imageGeometryTransition1').enabled(true))\n    let geometryTransition1: string = await imageGeometryTransition1.getInspectorInfo()\n    assertFalse(JSON.parse(geometryTransition1).$attrs.geometryTransition == undefined)\n    assertEqual(JSON.parse(geometryTransition1).$attrs.geometryTransition, \"picture\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\GeometryTransitionTest.ets", "project_name": "arkui_ace_engine-master", "id": "dc657feb6b0236cbdb7ebd733464870f64a149de469443841404216f60b22560"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function grayScaleTest() {\n  \n  defineTest('grayScaleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"grayScaleTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageGrayscale1: Component = await driver.findComponent(Matcher.create().id('imageGrayscale1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonGrayScale1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonGrayScale2').enabled(true))\n    let grayscale1: string = await imageGrayscale1.getInspectorInfo()\n    assertEqual(JSON.parse(grayscale1).$attrs.grayscale, 1)\n    await button1.tap()\n    let grayscale2: string = await imageGrayscale1.getInspectorInfo()\n    assertEqual(JSON.parse(grayscale2).$attrs.grayscale, 0)\n    await button2.tap()\n    let grayscale3: string = await imageGrayscale1.getInspectorInfo()\n    assertEqual(JSON.parse(grayscale3).$attrs.grayscale, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\GrayScaleTest.ets", "project_name": "arkui_ace_engine-master", "id": "710f62cc6655f666ae79d81f06556cd1c8dfb279fceae2b0937ad497a2a65985"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\n\nexport default async function gridOffsetTest() {\n  defineTest('gridOffsetTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridOffsetTestDemo running')\n    let driver: Tester = Tester.create()\n    let row1: Component = await driver.findComponent(Matcher.create().id('rowGridOffset').enabled(true))\n    let gridOffset1: string = await row1.getInspectorInfo()\n    assertEqual(JSON.parse(gridOffset1).$attrs.gridOffset, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\GridOffsetTest.ets", "project_name": "arkui_ace_engine-master", "id": "0db82f1588c9deaf14b26f6da13e4dec782e6b2f091c799f09c6a501b50ddf33"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function gridSpanTest() {\n  \n  defineTest('gridSpanTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridSpanTestDemo running')\n    let driver: Tester = Tester.create()\n    let row1: Component = await driver.findComponent(Matcher.create().id('rowGridSpan').enabled(true))\n    let gridSpan1: string = await row1.getInspectorInfo()\n    assertEqual(JSON.parse(gridSpan1).$attrs.gridSpan, 2)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\GridSpanTest.ets", "project_name": "arkui_ace_engine-master", "id": "e9d8d3a0a6d5ba164db37453c43d5a88a483c4ace9d64084de482120cb76f55f"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function hitTestBehaviorTest() {\n  \n  defineTest('hitTestBehaviorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('hitTestBehaviorTestDemo running')\n    let driver: Tester = Tester.create()\n    let textHitTestBehavior: Component =\n      await driver.findComponent(Matcher.create().id('textHitTestBehavior').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonHitTestBehavior').enabled(true))\n    let hitTestBehavior1: string = await textHitTestBehavior.getInspectorInfo()\n    assertEqual(JSON.parse(hitTestBehavior1).$attrs.hitTestBehavior, 'HitTestMode.Default')\n\n    await button.tap()\n    let hitTestBehavior2: string = await textHitTestBehavior.getInspectorInfo()\n    assertEqual(JSON.parse(hitTestBehavior2).$attrs.hitTestBehavior, 'HitTestMode.Block')\n\n    await button.tap()\n    let hitTestBehavior3: string = await textHitTestBehavior.getInspectorInfo()\n    assertEqual(JSON.parse(hitTestBehavior3).$attrs.hitTestBehavior, 'HitTestMode.Transparent')\n\n    await button.tap()\n    let hitTestBehavior4: string = await textHitTestBehavior.getInspectorInfo()\n    assertEqual(JSON.parse(hitTestBehavior4).$attrs.hitTestBehavior, 'HitTestMode.None')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\HitTestBehaviorTest.ets", "project_name": "arkui_ace_engine-master", "id": "5ad9facabc77b189ab9df62aa27f2c217fcf965cece7964355cc3bf4f9c797d5"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function hoverEffectTest() {\n  \n  defineTest('hoverEffectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('hoverEffectTestDemo running')\n    let driver: Tester = Tester.create()\n    let columnHoverEffect: Component =\n      await driver.findComponent(Matcher.create().id('columnHoverEffect').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonHoverEffect').enabled(true))\n    let hoverEffect1: string = await columnHoverEffect.getInspectorInfo()\n    assertEqual(JSON.parse(hoverEffect1).$attrs.hoverEffect, 'HoverEffect.Auto')\n\n    await button.tap()\n    let hoverEffect2: string = await columnHoverEffect.getInspectorInfo()\n    assertEqual(JSON.parse(hoverEffect2).$attrs.hoverEffect, 'HoverEffect.Scale')\n\n    await button.tap()\n    let hoverEffect3: string = await columnHoverEffect.getInspectorInfo()\n    assertEqual(JSON.parse(hoverEffect3).$attrs.hoverEffect, 'HoverEffect.Highlight')\n\n    await button.tap()\n    let hoverEffect4: string = await columnHoverEffect.getInspectorInfo()\n    assertEqual(JSON.parse(hoverEffect4).$attrs.hoverEffect, 'HoverEffect.None')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\HoverEffectTest.ets", "project_name": "arkui_ace_engine-master", "id": "ecf1b176f78b4dc003e155e7f0fff82c2e441374edd92aeea8721afad1bda009"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function idTest() {\n  \n  defineTest('idTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"idTest running\")\n    let driver: Tester = Tester.create()\n    let image: Component = await driver.findComponent(Matcher.create().type('Image').enabled(true))\n    let id1: string = await image.getId()\n    assertEqual(id1, 'imageId')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\IdTest.ets", "project_name": "arkui_ace_engine-master", "id": "da84d8989e34fc941ce5c26ec6b7a9101b671a90eded0d8206b0abe4128a7003"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function lightUpEffectTest() {\n  \n  defineTest('lightUpEffectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('lightUpEffectTestDemo running')\n    let driver: Tester = Tester.create()\n    let counterLightUpEffect: Component =\n      await driver.findComponent(Matcher.create().id('counterLightUpEffect').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonLightUpEffect').enabled(true))\n\n    let lightUpEffect1: string = await counterLightUpEffect.getInspectorInfo()\n    assertEqual(JSON.parse(lightUpEffect1).$attrs.lightUpEffect, 0)\n\n    await button.tap()\n    let lightUpEffect2: string = await counterLightUpEffect.getInspectorInfo()\n    assertEqual(JSON.parse(lightUpEffect2).$attrs.lightUpEffect, 0)\n\n    await button.tap()\n    let lightUpEffect3: string = await counterLightUpEffect.getInspectorInfo()\n    assertEqual(JSON.parse(lightUpEffect3).$attrs.lightUpEffect, 0.5)\n\n    await button.tap()\n    let lightUpEffect4: string = await counterLightUpEffect.getInspectorInfo()\n    assertEqual(JSON.parse(lightUpEffect4).$attrs.lightUpEffect, 1)\n\n    await button.tap()\n    let lightUpEffect5: string = await counterLightUpEffect.getInspectorInfo()\n    assertEqual(JSON.parse(lightUpEffect5).$attrs.lightUpEffect, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\LightUpEffectTest.ets", "project_name": "arkui_ace_engine-master", "id": "b5e4d0b8a73fe299eb35e442f118869d801269e9430dc89d70eb9095c02c4fd8"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function lineHeightTest() {\n  \n  defineTest('lineHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"lineHeightTestDemo running\")\n    let driver: Tester = Tester.create()\n    let text1: Component = await driver.findComponent(Matcher.create().id('textLineHeight1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonLineHeight1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonLineHeight2').enabled(true))\n    let button3: Component = await driver.findComponent(Matcher.create().text('ButtonLineHeight3').enabled(true))\n    let lineHeight1: string = await text1.getInspectorInfo()\n    assertEqual(JSON.parse(lineHeight1).$attrs.lineHeight, '20.00fp')\n\n    await button3.tap()\n    let lineHeight4: string = await text1.getInspectorInfo()\n    assertEqual(JSON.parse(lineHeight4).$attrs.lineHeight, '0.00fp')\n\n    await button1.tap()\n    let lineHeight2: string = await text1.getInspectorInfo()\n    assertEqual(JSON.parse(lineHeight2).$attrs.lineHeight, '50.00px')\n\n    await button2.tap()\n    let lineHeight3: string = await text1.getInspectorInfo()\n    assertEqual(JSON.parse(lineHeight3).$attrs.lineHeight, $r('app.string.line_height'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\LineHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "9519674882e3a2d63e7a2a44b3319b5ee6cc68e3909597dd250d51db4ab1b2f8"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function markAnchorTest() {\n  \n  defineTest('markAnchorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('markAnchorTestDemo running')\n    let driver: Tester = Tester.create()\n    let sliderMarkAnchor1: Component =\n      await driver.findComponent(Matcher.create().id('sliderMarkAnchor1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonMarkAnchor1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonMarkAnchor2').enabled(true))\n    let markAnchor1: string = await sliderMarkAnchor1.getInspectorInfo()\n    assertEqual(JSON.parse(markAnchor1).$attrs.markAnchor.x, $r(\"app.string.common_value_one\"))\n    assertEqual(JSON.parse(markAnchor1).$attrs.markAnchor.y, $r(\"app.string.common_value_one\"))\n\n    await button1.tap()\n    let markAnchor2: string = await sliderMarkAnchor1.getInspectorInfo()\n    assertEqual(JSON.parse(markAnchor2)\n      .$attrs\n      .markAnchor\n      .x, '2.00vp')\n    assertEqual(JSON.parse(markAnchor2)\n      .$attrs\n      .markAnchor\n      .y, '2.00vp')\n\n    await button2.tap()\n    let markAnchor3: string = await sliderMarkAnchor1.getInspectorInfo()\n    assertEqual(JSON.parse(markAnchor3)\n      .$attrs\n      .markAnchor\n      .x, '1.00vp')\n    assertEqual(JSON.parse(markAnchor3)\n      .$attrs\n      .markAnchor\n      .y, '1.00vp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\MarkAnchorTest.ets", "project_name": "arkui_ace_engine-master", "id": "d993df3e53793402ad00d602ca1650ef09779edd4bf58198e53cc2b331385796"}
{"text": "import { assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function monopolizeEventsTest() {\n  \n  defineTest('monopolizeEventsTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"monopolizeEventsTest running\")\n    let driver: Tester = Tester.create()\n    let columMonopolizeEvents1: Component =\n      await driver.findComponent(Matcher.create().id('columMonopolizeEvents1').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonMonopolizeEvents1').enabled(true))\n    let monopolizeEvents1: string = await columMonopolizeEvents1.getInspectorInfo()\n    assertFalse(JSON.parse(monopolizeEvents1).$attrs.monopolizeEvents)\n\n    await button.tap()\n    let monopolizeEvents2: string = await columMonopolizeEvents1.getInspectorInfo()\n    assertTrue(JSON.parse(monopolizeEvents2).$attrs.monopolizeEvents)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\MonopolizeEventsTest.ets", "project_name": "arkui_ace_engine-master", "id": "5f41122a6ff27b312ca86cb97f399e5f57119b39fcb88bba38df0acf13f44e36"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function motionPathTest() {\n  \n  defineTest('motionPathTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('motionPathTestDemo running')\n    let driver: Tester = Tester.create()\n    let radioMotionPath1: Component = await driver.findComponent(Matcher.create().id('radioMotionPath1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonMotionPath1').enabled(true))\n    let motionPath1: string = await radioMotionPath1.getInspectorInfo()\n    assertFalse(JSON.parse(motionPath1).$attrs.motionPath == undefined)\n\n    assertEqual(JSON.parse(motionPath1)\n      .$attrs\n      .motionPath\n      .path, 'Mstart.x start.y L400 200 L200 500 Lend.x end.y')\n    assertEqual(JSON.parse(motionPath1)\n      .$attrs\n      .motionPath\n      .from, 0.0)\n    assertEqual(JSON.parse(motionPath1)\n      .$attrs\n      .motionPath\n      .to, 1.0)\n    assertTrue(JSON.parse(motionPath1)\n      .$attrs\n      .motionPath\n      .rotatable)\n    await button1.tap()\n    let motionPath2: string = await radioMotionPath1.getInspectorInfo()\n    assertFalse(JSON.parse(motionPath2)\n      .$attrs\n      .motionPath\n      .rotatable)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\MotionPathTest.ets", "project_name": "arkui_ace_engine-master", "id": "6a8ec770908feeda3f6b541e30e8b40fd7c256d6a09760945d7d8c22b6a1daa5"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function offsetTest() {\n  \n  defineTest('offsetTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('offsetTestDemo running')\n    let driver: Tester = Tester.create()\n    let sliderOffset1: Component = await driver.findComponent(Matcher.create().id('sliderOffset1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonOffset1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonOffset2').enabled(true))\n    let enabled1: string = await sliderOffset1.getInspectorInfo()\n    assertEqual(JSON.parse(enabled1)\n      .$attrs\n      .offset\n      .x, $r(\"app.string.common_value_two\"))\n    assertEqual(JSON.parse(enabled1)\n      .$attrs\n      .offset\n      .y, $r(\"app.string.common_value_two\"))\n\n    await button1.tap()\n    let enabled2: string = await sliderOffset1.getInspectorInfo()\n    assertEqual(JSON.parse(enabled2)\n      .$attrs\n      .offset\n      .x, '10.00vp')\n    assertEqual(JSON.parse(enabled2)\n      .$attrs\n      .offset\n      .y, '10.00vp')\n    await button2.tap()\n    let enabled3: string = await sliderOffset1.getInspectorInfo()\n    assertEqual(JSON.parse(enabled3)\n      .$attrs\n      .offset\n      .x, '30.00vp')\n    assertEqual(JSON.parse(enabled3)\n      .$attrs\n      .offset\n      .y, '30.00vp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\OffsetTest.ets", "project_name": "arkui_ace_engine-master", "id": "32ebfd1c5fee9c84a9603344bf81dcaa096df0b99f23caf6b096d0405c360e88"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function opacityTest() {\n  \n  defineTest('opacityTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('opacityTestDemo running')\n    let driver: Tester = Tester.create()\n    let image1: Component =\n      await driver.findComponent(Matcher.create().id('imageClockOpacity1'))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonOpacity').enabled(true))\n    let opacity1: string = await image1.getInspectorInfo()\n    assertEqual(JSON.parse(opacity1).$attrs.opacity, 0.7)\n    await button.tap()\n    let opacity2: string = await image1.getInspectorInfo()\n    assertEqual(String(JSON.parse(opacity2).$attrs.opacity), $r('app.string.common_opacity'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\OpacityTest.ets", "project_name": "arkui_ace_engine-master", "id": "0b495b219330723e128fa645d3beea5efa986bfa0fb1765d313dd31d56ba6219"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function outlineColorTest_one() {\n  \n  defineTest('outlineColorTest_oneDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('outlineColorTest_oneDemo running')\n    let driver: Tester = Tester.create()\n    let menuItemOutlineColor1: Component =\n      await driver.findComponent(Matcher.create().id('menuItemOutlineColor1').enabled(true))\n    let outlineColor1: string = await menuItemOutlineColor1.getInspectorInfo()\n    assertEqual(JSON.parse(outlineColor1)\n      .$attrs\n      .outlineColor\n      .left, '#FFBFAAFA')\n    assertEqual(JSON.parse(outlineColor1)\n      .$attrs\n      .outlineColor\n      .right\n      .toLowerCase(), Color.Blue)\n    assertEqual(JSON.parse(outlineColor1)\n      .$attrs\n      .outlineColor\n      .top, '#FFFFC900')\n    assertEqual(JSON.parse(outlineColor1)\n      .$attrs\n      .outlineColor\n      .bottom, $r(\"app.string.common_color\"))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\OutlineColorTest_one.ets", "project_name": "arkui_ace_engine-master", "id": "785ae59dd5980979d420c4bebcca7d16867f7af4edf0c74f8ca72a73d152dbb1"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function outlineRadiusTest() {\n  \n  defineTest('outlineRadiusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('outlineRadiusTestDemo running')\n    let driver: Tester = Tester.create()\n    let textOutlineRadius1: Component =\n      await driver.findComponent(Matcher.create().id('textOutlineRadius1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonOutlineRadius1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonOutlineRadius2').enabled(true))\n    let outlineRadius1: string = await textOutlineRadius1.getInspectorInfo()\n    assertEqual(JSON.parse(outlineRadius1)\n      .$attrs\n      .outlineRadius\n      .topLeft, '20.00vp')\n    assertEqual(JSON.parse(outlineRadius1)\n      .$attrs\n      .outlineRadius\n      .topRight, '40.00vp')\n    assertEqual(JSON.parse(outlineRadius1)\n      .$attrs\n      .outlineRadius\n      .bottomLeft, $r(\"app.string.common_value_two\"))\n    assertEqual(JSON.parse(outlineRadius1)\n      .$attrs\n      .outlineRadius\n      .bottomRight, '20.00vp')\n\n    await button1.tap()\n    let outlineRadius2: string = await textOutlineRadius1.getInspectorInfo()\n    assertEqual(JSON.parse(outlineRadius2)\n      .$attrs\n      .outlineRadius, '10.00vp')\n\n    await button2.tap()\n    let outlineRadius3: string = await textOutlineRadius1.getInspectorInfo()\n    assertEqual(JSON.parse(outlineRadius3)\n      .$attrs\n      .outlineRadius, $r(\"app.string.common_value_two\"))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\OutlineRadiusTest.ets", "project_name": "arkui_ace_engine-master", "id": "9511878609cdf94ed72c68ceb85ca0b0d8f6ee8bb6db326813fe2c536e4c8adb"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function positionTest() {\n  \n  defineTest('positionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('positionTestDemo running')\n    let driver: Tester = Tester.create()\n    let relativeContainerPosition1: Component =\n      await driver.findComponent(Matcher.create().id('relativeContainerPosition1').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('ButtonPosition1').enabled(true))\n    let button2: Component =\n      await driver.findComponent(Matcher.create().text('ButtonPosition2').enabled(true))\n    let position1: string = await relativeContainerPosition1.getInspectorInfo()\n    assertEqual(JSON.parse(position1)\n      .$attrs\n      .position\n      .x, '1.00vp')\n    assertEqual(JSON.parse(position1)\n      .$attrs\n      .position\n      .y, '1.00vp')\n\n    await button1.tap()\n    let position2: string = await relativeContainerPosition1.getInspectorInfo()\n    assertEqual(JSON.parse(position2)\n      .$attrs\n      .position\n      .x, '2.00vp')\n    assertEqual(JSON.parse(position2)\n      .$attrs\n      .position\n      .y, '2.00vp')\n\n    await button2.tap()\n    let position3: string = await relativeContainerPosition1.getInspectorInfo()\n    assertEqual(JSON.parse(position3)\n      .$attrs\n      .position\n      .x, $r(\"app.string.common_value_one\"))\n    assertEqual(JSON.parse(position3)\n      .$attrs\n      .position\n      .y, $r(\"app.string.common_value_one\"))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\PositionTest.ets", "project_name": "arkui_ace_engine-master", "id": "fd1af37c331b12a80b427efc7c3772041e68ff64b833d47f5ed47a14f4812270"}
{"text": "import { assertEqual, assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function radialGradientTest_two() {\n  \n  defineTest('radialGradientSample_twoDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('radialGradientSample_twoDemo running')\n    let driver: Tester = Tester.create()\n    let columnRadialGradient2: Component =\n      await driver.findComponent(Matcher.create().id('columnRadialGradient2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonRadialGradient1').enabled(true))\n    let radialGradient1: string = await columnRadialGradient2.getInspectorInfo()\n    assertEqual(JSON.parse(radialGradient1)\n      .$attrs\n      .radialGradient\n      .colors[0][0], '#FF0800FF')\n    assertEqual(JSON.parse(radialGradient1)\n      .$attrs\n      .radialGradient\n      .colors[1][0], '#FF7A7777')\n    assertEqual(JSON.parse(radialGradient1)\n      .$attrs\n      .radialGradient\n      .colors[2][0], '#FFFF0000')\n    assertTrue(JSON.parse(radialGradient1)\n      .$attrs\n      .radialGradient\n      .repeating)\n    await button1.tap()\n    let radialGradient2: string = await columnRadialGradient2.getInspectorInfo()\n    assertFalse(JSON.parse(radialGradient2)\n      .$attrs\n      .radialGradient\n      .repeating)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\RadialGradientTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "1f64fb79ed9cdfadc02dc7733236ca21983fcc1b9a0917b2918ffa7e00a12ecd"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function renderFitTest_two() {\n  \n  defineTest('renderFitTest_twoDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"renderFitTest_twoDemo running\")\n    let driver: Tester = Tester.create()\n    let ellipseRenderFit1: Component =\n      await driver.findComponent(Matcher.create().id('ellipseRenderFit1').enabled(true))\n    let ellipseRenderFit2: Component =\n      await driver.findComponent(Matcher.create().id('ellipseRenderFit2').enabled(true))\n    let ellipseRenderFit3: Component =\n      await driver.findComponent(Matcher.create().id('ellipseRenderFit3').enabled(true))\n    let ellipseRenderFit4: Component =\n      await driver.findComponent(Matcher.create().id('ellipseRenderFit4').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonEllipseRenderFit1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonEllipseRenderFit2').enabled(true))\n    let renderFit1: string = await ellipseRenderFit1.getInspectorInfo()\n    assertEqual(JSON.parse(renderFit1).$attrs.renderFit, 'RenderFit.TOP_RIGHT')\n    let renderFit2: string = await ellipseRenderFit2.getInspectorInfo()\n    assertEqual(JSON.parse(renderFit2).$attrs.renderFit, 'RenderFit.BOTTOM_LEFT')\n    let renderFit3: string = await ellipseRenderFit3.getInspectorInfo()\n    assertEqual(JSON.parse(renderFit3).$attrs.renderFit, 'RenderFit.BOTTOM_RIGHT')\n    let renderFit4: string = await ellipseRenderFit4.getInspectorInfo()\n    assertEqual(JSON.parse(renderFit4).$attrs.renderFit, 'RenderFit.RESIZE_FILL')\n    await button1.tap()\n    let renderFit5: string = await ellipseRenderFit3.getInspectorInfo()\n    assertEqual(JSON.parse(renderFit5).$attrs.renderFit, 'RenderFit.RESIZE_CONTAIN')\n    await button2.tap()\n    let renderFit6: string = await ellipseRenderFit4.getInspectorInfo()\n    assertEqual(JSON.parse(renderFit6).$attrs.renderFit, 'RenderFit.RESIZE_CONTAIN_TOP_LEFT')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\RenderFitTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "bb3b4dfb2f8f2da2005eb5f675d055dc293fca29940dff0f4198e0aa58c500d0"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function restoreIdTest() {\n  \n  defineTest('restoreIdTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"restoreIdTest running\")\n    let driver: Tester = Tester.create()\n    let listRestoreId1: Component = await driver.findComponent(Matcher.create().id('listRestoreId1').enabled(true))\n    let restoreId1: string = await listRestoreId1.getInspectorInfo()\n    assertFalse(JSON.parse(restoreId1).$attrs.restoreId == undefined)\n    assertEqual(JSON.parse(restoreId1).$attrs.restoreId.valve, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\RestoreIdTest.ets", "project_name": "arkui_ace_engine-master", "id": "382a58fe46135ee6399e566df29cfac7c9edafdf0107a6a4c4501e1ff79aef9d"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function reuseIdTest() {\n  \n  defineTest('reuseIdTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('reuseIdTestDemo running')\n    let driver: Tester = Tester.create()\n    let checkboxReuseId: Component = await driver.findComponent(Matcher.create().id('checkboxReuseId').enabled(true))\n    let reuseId: string = await checkboxReuseId.getInspectorInfo()\n    assertFalse(JSON.parse(reuseId).$attrs.reuseId == undefined)\n    assertEqual(JSON.parse(reuseId).$attrs.reuseId, 'checkboxReuseId')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\ReuseIdTest.ets", "project_name": "arkui_ace_engine-master", "id": "805437778e47d75974a5c53034f1d30a5934b98341854e02c17aa9479ed5415b"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function saturateTest() {\n  \n  defineTest('saturateTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"saturateTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageSaturate1: Component = await driver.findComponent(Matcher.create().id('imageSaturate1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonSaturate').enabled(true))\n    let saturate1: string = await imageSaturate1.getInspectorInfo()\n    assertEqual(JSON.parse(saturate1).$attrs.saturate, 20)\n    await button1.tap()\n    let saturate2: string = await imageSaturate1.getInspectorInfo()\n    assertEqual(JSON.parse(saturate2).$attrs.saturate, 0)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SaturateTest.ets", "project_name": "arkui_ace_engine-master", "id": "6523aa40e2600af49600940aa4179f37446755f49a6cb7d2a03e89d61f4f1935"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function sepiaTest() {\n  \n  defineTest('sepiaTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"sepiaTestDemo running\")\n    let driver: Tester = Tester.create()\n    let buttonSepia1: Component = await driver.findComponent(Matcher.create().id('buttonSepia1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonSepia2').enabled(true))\n    let sepia1: string = await buttonSepia1.getInspectorInfo()\n    assertEqual(JSON.parse(sepia1).$attrs.sepia, 1)\n    await button2.tap()\n    let sepia2: string = await buttonSepia1.getInspectorInfo()\n    assertEqual(JSON.parse(sepia2).$attrs.sepia, 0)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SepiaTest.ets", "project_name": "arkui_ace_engine-master", "id": "37bb05e507821af425c74775f272f17f14b4b348ab1dd78891c3f35a002d24f4"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\nimport pointer from '@ohos.multimodalInput.pointer';\n\nexport default async function setCursorTest_eight() {\n  \n  defineTest('setCursorTest_eightDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"setCursorTest_eightDemo running\")\n    let driver: Tester = Tester.create()\n    let rowSetCursor29: Component = await driver.findComponent(Matcher.create().id('rowSetCursor29').enabled(true))\n    let rowSetCursor30: Component = await driver.findComponent(Matcher.create().id('rowSetCursor30').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonSetCursor1').enabled(true))\n    let setCursor1: string = await rowSetCursor29.getInspectorInfo()\n    assertFalse(JSON.parse(setCursor1)\n      .$attrs\n      .setCursor == undefined)\n    assertEqual(JSON.parse(setCursor1)\n      .$attrs\n      .onHover\n      .setCursor\n      .value, pointer.PointerStyle.LOADING)\n    let setCursor2: string = await rowSetCursor30.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor2)\n      .$attrs\n      .onHover\n      .setCursor\n      .value, pointer.PointerStyle.LOADING)\n    await button1.tap()\n    let setCursor5: string = await rowSetCursor30.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor5).$attrs.clickEffect.value, pointer.PointerStyle.RUNNING)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SetCursorTest_eight.ets", "project_name": "arkui_ace_engine-master", "id": "d6bf7a4f4c57cb9a3e2f35b071a63b7680a735498503d3be4dd61dbef7cd813f"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\nimport pointer from '@ohos.multimodalInput.pointer';\n\nexport default async function setCursorTest_five() {\n  \n  defineTest('setCursorTest_fiveDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"setCursorTest_fiveDemo running\")\n    let driver: Tester = Tester.create()\n    let row1: Component = await driver.findComponent(Matcher.create().id('rowSetCursor17').enabled(true))\n    let row2: Component = await driver.findComponent(Matcher.create().id('rowSetCursor18').enabled(true))\n    let row3: Component = await driver.findComponent(Matcher.create().id('rowSetCursor19').enabled(true))\n    let row4: Component = await driver.findComponent(Matcher.create().id('rowSetCursor20').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonSetCursor1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonSetCursor2').enabled(true))\n    let setCursor1: string = await row1.getInspectorInfo()\n    assertFalse(JSON.parse(setCursor1)\n      .$attrs\n      .onHover == undefined)\n    assertEqual(JSON.parse(setCursor1)\n      .$attrs\n      .onHover\n      .setCursor\n      .value, pointer.PointerStyle.SCREENSHOT_CHOOSE)\n    let setCursor2: string = await row2.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor2)\n      .$attrs\n      .onHover\n      .setCursor\n      .value, pointer.PointerStyle.SCREENSHOT_CURSOR)\n    let setCursor3: string = await row3.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor3)\n      .$attrs\n      .onHover\n      .setCursor\n      .value, pointer.PointerStyle.TEXT_CURSOR)\n    let setCursor4: string = await row4.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor4)\n      .$attrs\n      .onHover\n      .setCursor\n      .value, pointer.PointerStyle.ZOOM_IN)\n    await button1.tap()\n    let setCursor5: string = await row3.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor5).$attrs.clickEffect.value, pointer.PointerStyle.ZOOM_OUT)\n    await button2.tap()\n    let setCursor6: string = await row4.getInspectorInfo()\n    assertEqual(JSON.parse(setCursor6).$attrs.clickEffect.value, pointer.PointerStyle.MIDDLE_BTN_EAST)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SetCursorTest_five.ets", "project_name": "arkui_ace_engine-master", "id": "cd4ab201ec10886a3387ffcbce1b81d3d8275647c71dc25115008d32020829e6"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function setKeyboardAvoidModeTest() {\n  \n  defineTest('setKeyboardAvoidModeDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"setKeyboardAvoidModeDemo running\")\n    let driver: Tester = Tester.create()\n    let setKeyboardAvoidModeTextArea1: Component =\n      await driver.findComponent(Matcher.create().id('setKeyboardAvoidModeTextArea1').enabled(true))\n    await setKeyboardAvoidModeTextArea1.tap()\n    let text1: Component =\n      await driver.findComponent(Matcher.create().text('I can see the text of the page').enabled(true))\n    let getType: string = await text1.getType()\n    assertEqual(getType, 'Text')\n    assertFalse(getType == 'Text')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SetKeyboardAvoidModeTest.ets", "project_name": "arkui_ace_engine-master", "id": "365bbd1f3dd40c27110be1ef80c0b1e810cd1043b27bcd758736554e5a129c4a"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function shadowTest_two() {\n  \n  defineTest('ShadowTest_two', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"ShadowTest_two running\")\n    let driver: Tester = Tester.create()\n    let dataPanel1: Component = await driver.findComponent(Matcher.create().id('dataPanel1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonShadow1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonShadow2').enabled(true))\n    let button3: Component = await driver.findComponent(Matcher.create().text('ButtonShadow3').enabled(true))\n    let button4: Component = await driver.findComponent(Matcher.create().text('ButtonShadow4').enabled(true))\n    let button5: Component = await driver.findComponent(Matcher.create().text('ButtonShadow5').enabled(true))\n\n    let shadow1: string = await dataPanel1.getInspectorInfo()\n    assertEqual(JSON.parse(shadow1).$attrs.shadow, 'ShadowStyle.OuterDefaultXS')\n    await button1.tap()\n    let shadow2: string = await dataPanel1.getInspectorInfo()\n    assertEqual(JSON.parse(shadow2).$attrs.shadow, 'ShadowStyle.OuterDefaultSM')\n    await button2.tap()\n    let shadow3: string = await dataPanel1.getInspectorInfo()\n    assertEqual(JSON.parse(shadow3).$attrs.shadow, 'ShadowStyle.OuterDefaultMD')\n    await button3.tap()\n    let shadow4: string = await dataPanel1.getInspectorInfo()\n    assertEqual(JSON.parse(shadow4).$attrs.shadow, 'ShadowStyle.OuterDefaultLG')\n    await button4.tap()\n    let shadow5: string = await dataPanel1.getInspectorInfo()\n    assertEqual(JSON.parse(shadow5).$attrs.shadow, 'ShadowStyle.OuterFloatingSM')\n    await button5.tap()\n    let shadow6: string = await dataPanel1.getInspectorInfo()\n    assertEqual(JSON.parse(shadow6).$attrs.shadow, 'ShadowStyle.OuterFloatingMD')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\ShadowTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "143d1764ca12b6c6744921ac9c69f9d329e7b04c11fc5202b53a1e435a3135c3"}
{"text": "@Entry\n@Component\nstruct SharedTransitionTargetPage {\n  build() {\n    Column() {\n      Column() {\n        Rect().width(100).height(100)\n          .id('rectSharedTransition2')\n          .sharedTransition('sharedTransitionRect', { curve: 1, type: SharedTransitionEffectType.Exchange })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SharedTransitionTargetPage.ets", "project_name": "arkui_ace_engine-master", "id": "b984e5c1357e070e46ab9ae5653ebb2591a27fe4777b9917cf646ff0b2322498"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function sizeTest() {\n  \n  defineTest('sizeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sizeTestDemo running')\n    let driver: Tester = Tester.create()\n    let rowSize: Component = await driver.findComponent(Matcher.create().id('rowSize').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonSize').enabled(true))\n\n    let size1: string = await rowSize.getInspectorInfo()\n    assertEqual(JSON.parse(size1).$attrs.size.width, '100.00px')\n    assertEqual(JSON.parse(size1).$attrs.size.height, '100.00px')\n\n    await button.tap()\n    let size2: string = await rowSize.getInspectorInfo()\n    assertEqual(JSON.parse(size2).$attrs.size.width, '50.00vp')\n    assertEqual(JSON.parse(size2).$attrs.size.height, '50.00vp')\n\n    await button.tap()\n    let size3: string = await rowSize.getInspectorInfo()\n    assertEqual(JSON.parse(size3).$attrs.size.width, $r('app.string.common_breadth'))\n    assertEqual(JSON.parse(size3).$attrs.size.height, $r('app.string.common_breadth'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "3cb277d63b3353edadc691d44c31982a6444c173b26a7be3894c7965c39c3530"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function sphericalEffectTest() {\n  \n  defineTest('sphericalEffectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sphericalEffectTestDemo running')\n    let driver: Tester = Tester.create()\n    let imageSphericalEffect: Component =\n      await driver.findComponent(Matcher.create().id('imageSphericalEffect').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ButtonSphericalEffect').enabled(true))\n\n    let information1: string = await imageSphericalEffect.getInspectorInfo()\n    assertEqual(JSON.parse(information1).$attrs.sphericalEffect, 0)\n\n    await button.tap()\n    let information2: string = await imageSphericalEffect.getInspectorInfo()\n    assertEqual(JSON.parse(information2).$attrs.sphericalEffect, 0)\n\n    await button.tap()\n    let information3: string = await imageSphericalEffect.getInspectorInfo()\n    assertEqual(JSON.parse(information3).$attrs.sphericalEffect, 0.5)\n\n    await button.tap()\n    let information4: string = await imageSphericalEffect.getInspectorInfo()\n    assertEqual(JSON.parse(information4).$attrs.sphericalEffect, 1)\n\n    await button.tap()\n    let information5: string = await imageSphericalEffect.getInspectorInfo()\n    assertEqual(JSON.parse(information5).$attrs.sphericalEffect, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\SphericalEffectTest.ets", "project_name": "arkui_ace_engine-master", "id": "b5a95eeaa77929bceccbde030e49f5d46d432456de8b5407a860a9def1786d0d"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\nimport M1 from '@ohos.matrix4'\n\nlet M2 = M1.init([1.000000, 0.000000, 0.000000, 0.000000,\n  0.000000, 1.000000, 0.000000, 0.000000,\n  0.000000, 0.000000, 1.000000, 0.000000,\n  0.000000, 0.000000, 0.000000, 1.000000])\n\nexport default async function transFormTest() {\n  \n  defineTest('transFormTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('transFormTestDemo running')\n    let driver: Tester = Tester.create()\n    let patternLockTransform: Component =\n      await driver.findComponent(Matcher.create().id('patternLockTransform').enabled(true))\n    let transform1: string = await patternLockTransform.getInspectorInfo()\n    assertEqual(JSON.parse(transform1)\n      .$attrs\n      .transform\n      .matrix,\n      '1.000000,0.000000,0.000000,' +\n        '0.000000,0.000000,1.000000,' +\n        '0.000000,0.000000,0.000000,' +\n        '0.000000,1.000000,0.000000,' +\n        '0.000000,0.000000,0.000000,' +\n        '1.000000,')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\TransFormTest.ets", "project_name": "arkui_ace_engine-master", "id": "6d2c7c39ba04e979478c4c015ac32fc8d80206fadd72058047317d0ed5eaa61c"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function transitionTest_two() {\n  \n  defineTest('transitionTest_twoDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"transitionTest_twoDemo running\")\n    let driver: Tester = Tester.create()\n    let image: Component = await driver.findComponent(Matcher.create().id('imageTransition2').enabled(true))\n    let transition1: string = await image.getInspectorInfo()\n    assertFalse(JSON.parse(transition1).$attrs.transition == undefined)\n\n    assertEqual(JSON.parse(transition1)\n      .$attrs\n      .transition\n      .asymmetric\n      .appear\n      .move, TransitionEdge.START)\n    assertEqual(JSON.parse(transition1)\n      .$attrs\n      .transition\n      .asymmetric\n      .disappear\n      .move, TransitionEdge.END)\n    assertEqual(JSON.parse(transition1)\n      .$attrs\n      .transition\n      .combine\n      .translate\n      .x, 100)\n    assertEqual(JSON.parse(transition1)\n      .$attrs\n      .transition\n      .combine\n      .animation\n      .duration, 1000)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\TransitionTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "8298a4a9df9c6ab0b23af9f15d474f4b49b4523f1ab3a1938770caf97d04d048"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function translateTest() {\n  \n  defineTest('translateTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"translateTestDemo running\")\n    let driver: Tester = Tester.create()\n    let radio1: Component = await driver.findComponent(Matcher.create().id('radio1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonTranslate').enabled(true))\n    let translate1: string = await radio1.getInspectorInfo()\n    assertEqual(JSON.parse(translate1)\n      .$attrs\n      .translate\n      .x, '50.00vp')\n    let translate2: string = await radio1.getInspectorInfo()\n    assertEqual(JSON.parse(translate2)\n      .$attrs\n      .translate\n      .y, '50.00vp')\n    let translate3: string = await radio1.getInspectorInfo()\n    assertEqual(JSON.parse(translate3)\n      .$attrs\n      .translate\n      .z, '50.00vp')\n    await button1.tap()\n    let translate4: string = await radio1.getInspectorInfo()\n    assertEqual(JSON.parse(translate4)\n      .$attrs\n      .translate\n      .x, '80.00%')\n    let translate5: string = await radio1.getInspectorInfo()\n    assertEqual(JSON.parse(translate5)\n      .$attrs\n      .translate\n      .y, '80.00%')\n    let translate6: string = await radio1.getInspectorInfo()\n    assertEqual(JSON.parse(translate6)\n      .$attrs\n      .translate\n      .z, '80.00%')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\TranslateTest.ets", "project_name": "arkui_ace_engine-master", "id": "56369ecd4cb545635e529967e334b8526e2f1de4efaa038861300e279886ce44"}
{"text": "import { assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function useShadowBatchingTest() {\n  \n  defineTest('UseShadowBatchingTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"UseShadowBatchingTest running\")\n    let driver: Tester = Tester.create()\n    let columUseShadowBatching1: Component =\n      await driver.findComponent(Matcher.create().id('columUseShadowBatching1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonUseShadowBatching1').enabled(true))\n    let useShadowBatching1: string = await columUseShadowBatching1.getInspectorInfo()\n    assertTrue(JSON.parse(useShadowBatching1).$attrs.useShadowBatching)\n    await button1.tap()\n    let useShadowBatching2: string = await columUseShadowBatching1.getInspectorInfo()\n    assertFalse(JSON.parse(useShadowBatching2).$attrs.useShadowBatching)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\UseShadowBatchingTest.ets", "project_name": "arkui_ace_engine-master", "id": "3ba5329d4a9d30b94d2ac18de9adaa0a9d39b34cabe0fa3caa251f967e137d2b"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function zIndexTest() {\n  \n  defineTest('zIndexTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"zIndexTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textZIndex1: Component = await driver.findComponent(Matcher.create().id('textZIndex1').enabled(true))\n    let textZIndex2: Component = await driver.findComponent(Matcher.create().id('textZIndex2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonZIndex1').enabled(true))\n    let zIndex1: string = await textZIndex1.getInspectorInfo()\n    assertEqual(JSON.parse(zIndex1).$attrs.zIndex, 2)\n    let zIndex2: string = await textZIndex2.getInspectorInfo()\n    assertEqual(JSON.parse(zIndex2).$attrs.zIndex, 1)\n    await button1.tap()\n    let zIndex3: string = await textZIndex2.getInspectorInfo()\n    assertEqual(JSON.parse(zIndex3).$attrs.zIndex, 3)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common\\entry\\src\\main\\ets\\pages\\MyTest\\ZIndexTest.ets", "project_name": "arkui_ace_engine-master", "id": "e7fc6e9ed1ffe95aa2f5ee479c08ed0a41250f5a1a0fdd5889dbcd6c09005c8b"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct ColumnHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('ColumnHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'ColumnAlignItems',\n          buttonUrl: 'pages/column/ColumnAlignItemsSample'\n        });\n        CommonButton({\n          buttonName: 'ColumnJustifyContent',\n          buttonUrl: 'pages/column/ColumnJustifyContentSample'\n        });\n\n\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\column\\ColumnHome.ets", "project_name": "arkui_ace_engine-master", "id": "fefcbf2758e1f30c6c586ca8b4123dc303a4885f1fe83a66a66d5e718b4ee80d"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct ColumnSplitHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('ColumnSplitHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'ColumnSplitDivider',\n          buttonUrl: 'pages/column_split/ColumnSplitDividerSample'\n        });\n        CommonButton({\n          buttonName: 'ColumnSplitResizeable',\n          buttonUrl: 'pages/column_split/ColumnSplitResizeableSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\column_split\\ColumnSplitHome.ets", "project_name": "arkui_ace_engine-master", "id": "7d8e5ef253db66caea5c4d09970d6faadb47f8510d91809e7ba910c67dd94a87"}
{"text": "import columnSplitResizeableTest from '../MyTest/ColumnSplitResizeableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ColumnSplitResizeableSample {\n  @State columnSplitResizeable: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(columnSplitResizeableTest)\n  }\n\n  build() {\n    Column() {\n      ColumnSplit() {\n        Text('ColumnSplitText1').width('100%').height(50).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n        Text('ColumnSplitText2').width('100%').height(50).backgroundColor(0xD2B48C).textAlign(TextAlign.Center)\n        Text('ColumnSplitText3').width('100%').height(50).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n        Text('ColumnSplitText4').width('100%').height(50).backgroundColor(0xD2B48C).textAlign(TextAlign.Center)\n        Text('ColumnSplitText5').width('100%').height(50).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n      }\n      .id('columnSplitResizeable1')\n      .borderWidth(1)\n      .resizeable(this.columnSplitResizeable)\n      .width('90%')\n      .height('60%')\n\n      Button('ColumnSplitResizeable').onClick(() => {\n        this.columnSplitResizeable = !this.columnSplitResizeable\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\column_split\\ColumnSplitResizeableSample.ets", "project_name": "arkui_ace_engine-master", "id": "1dfc731d9f2df9c5935896062fd4d7a994a794c7c0a6066f766b9f71beb0915a"}
{"text": "import GridColGridColOffsetTest from '../MyTest/GridColGridColOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridColGridColOffsetSample {\n  @State gridColOffsetStatus: number | GridColColumnOption = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(GridColGridColOffsetTest)\n  }\n\n  build() {\n    Column() {\n      GridRow() {\n        GridCol() {\n          Text('gridColOffset')\n        }\n        .gridColOffset(this.gridColOffsetStatus)\n        .borderColor(Color.Orange)\n        .borderWidth(2)\n        .width(\"100%\")\n        .height(\"30%\")\n      }\n      .id('gridColOffset')\n      .height(\"15%\")\n      .backgroundColor(Color.Red)\n      .borderWidth(2)\n      .width(\"100%\")\n\n      Button('GridColOffset').onClick(() => {\n        this.gridColOffsetStatus = {\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 5,\n          xxl: 6\n        }\n      })\n    }\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\grid_col\\GridColGridColOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "754045d5830a27cfc6ef3654879262781f681a771c9d88c13009e7d1568d1638"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct GridColHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('GridColHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'GridColSpan', buttonUrl: 'pages/grid_col/GridColSpanSample' });\n        CommonButton({ buttonName: 'GridColGridColOffset', buttonUrl: 'pages/grid_col/GridColGridColOffsetSample' });\n        CommonButton({ buttonName: 'GridColOrder', buttonUrl: 'pages/grid_col/GridColOrderSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\grid_col\\GridColHome.ets", "project_name": "arkui_ace_engine-master", "id": "f51250756f0f5bf4d970624e8c25d5a3e6ee893f7afffaf4e460527d763ef64d"}
{"text": "import GridColOrderTest from '../MyTest/GridColOrderTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridColOrderSample {\n  @State gridColOrderStatus: number | GridColColumnOption = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(GridColOrderTest)\n  }\n\n  build() {\n    Column() {\n      GridRow() {\n        GridCol() {\n          Text('gridColOrder1')\n        }\n        .id('gridColOrder1')\n        .order(this.gridColOrderStatus)\n        .borderColor(Color.Orange)\n        .borderWidth(2)\n        .width(\"100%\")\n        .height(\"30%\")\n\n        GridCol() {\n          Text('gridColOrder2')\n        }\n        .id('gridColOrder2')\n        .order(2)\n        .borderColor(Color.Orange)\n        .borderWidth(2)\n        .width(\"100%\")\n        .height(\"30%\")\n      }\n      .height(\"15%\")\n      .alignItems(ItemAlign.Start)\n      .backgroundColor(Color.Red)\n      .width(\"100%\")\n\n      Button('GridColOrder').onClick(() => {\n        this.gridColOrderStatus = {\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 5,\n          xxl: 6\n        }\n      })\n\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\grid_col\\GridColOrderSample.ets", "project_name": "arkui_ace_engine-master", "id": "f53b73f99b771cffd0d50bdee429ee34ed282493a2f56d635c031e35f0e90e0e"}
{"text": "import GridColSpanTest from '../MyTest/GridColSpanTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridColSpanSample {\n  @State gridColSpanStatus: number | GridColColumnOption = 3\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(GridColSpanTest)\n  }\n\n  build() {\n    Column() {\n      GridRow() {\n        GridCol() {\n          Text('GridColSpan')\n        }\n        .id('gridColSpan')\n        .span(this.gridColSpanStatus)\n        .borderColor(Color.Orange)\n        .borderWidth(2)\n        .width(\"100%\")\n        .height(\"30%\")\n      }\n      .height(\"15%\")\n      .alignItems(ItemAlign.Start)\n      .backgroundColor(Color.Red)\n      .width(\"100%\")\n\n      Button('GridColSpan').onClick(() => {\n        this.gridColSpanStatus = {\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 5,\n          xxl: 6\n        }\n      })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\grid_col\\GridColSpanSample.ets", "project_name": "arkui_ace_engine-master", "id": "e194a2590ff5ff89b2a47d04ce65eeb48789e472c4dad17e2faeae50a49cd633"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct GridRowHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('GridRowHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'GridRowAlignStart', buttonUrl: 'pages/grid_row/GridRowItemAlignSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\grid_row\\GridRowHome.ets", "project_name": "arkui_ace_engine-master", "id": "7dd55cbba6cdbd6be13ce4e6567cccd0a79f923379f1566c2943db4eb1b64723"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function columnJustifyContentTest() {\n  \n  defineTest('columnAlignItemsTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('columnAlignItemsTestDemo running')\n    let driver: Tester = Tester.create()\n    let columnJustifyContent1: Component = await driver.findComponent(Matcher.create()\n      .id('columnJustifyContent1')\n      .enabled(true))\n    let columnJustifyContent2: Component = await driver.findComponent(Matcher.create()\n      .id('columnJustifyContent2')\n      .enabled(true))\n    let columnJustifyContent3: Component = await driver.findComponent(Matcher.create()\n      .id('columnJustifyContent3')\n      .enabled(true))\n    let columnJustifyContent4: Component = await driver.findComponent(Matcher.create()\n      .id('columnJustifyContent4')\n      .enabled(true))\n    let columnJustifyContent5: Component = await driver.findComponent(Matcher.create()\n      .id('columnJustifyContent5')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create().text('ColumnJustifyContent').enabled(true)))\n\n    let justifyContent1: string = await columnJustifyContent1.getInspectorInfo()\n    assertEqual(JSON.parse(justifyContent1).$attrs.justifyContent, 'FlexAlign.Start')\n\n    let justifyContent2: string = await columnJustifyContent2.getInspectorInfo()\n    assertEqual(JSON.parse(justifyContent2).$attrs.justifyContent, 'FlexAlign.Center')\n\n    let justifyContent3: string = await columnJustifyContent3.getInspectorInfo()\n    assertEqual(JSON.parse(justifyContent3).$attrs.justifyContent, 'FlexAlign.End')\n\n    let justifyContent4: string = await columnJustifyContent4.getInspectorInfo()\n    assertEqual(JSON.parse(justifyContent4).$attrs.justifyContent, 'FlexAlign.SpaceBetween')\n\n    let justifyContent5: string = await columnJustifyContent5.getInspectorInfo()\n    assertEqual(JSON.parse(justifyContent5).$attrs.justifyContent, 'FlexAlign.SpaceAround')\n    await button.tap()\n    let justifyContent6: string = await columnJustifyContent5.getInspectorInfo()\n    assertEqual(JSON.parse(justifyContent6).$attrs.justifyContent, 'FlexAlign.SpaceEvenly')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\ColumnJustifyContentTest.ets", "project_name": "arkui_ace_engine-master", "id": "2f6d2450a8f63fb0e2d062f817e428efdd39a5cc6fe48c6b0b1d6f521fd8f2c9"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function columnSplitResizeableTest() {\n  \n  defineTest('columnSplitResizeableTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('columnSplitResizeableTestDemo running')\n    let driver: Tester = Tester.create()\n    let columnSplitResizeable1: Component = await driver.findComponent(Matcher.create()\n      .id('columnSplitResizeable1')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create().text('ColumnSplitResizeable').enabled(true)))\n\n    let resizeable1: string = await columnSplitResizeable1.getInspectorInfo()\n    assertTrue(JSON.parse(resizeable1).$attrs.resizeable)\n    await button.tap()\n    let resizeable2: string = await columnSplitResizeable1.getInspectorInfo()\n    assertFalse(JSON.parse(resizeable2).$attrs.resizeable)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\ColumnSplitResizeableTest.ets", "project_name": "arkui_ace_engine-master", "id": "f721afe4c7563b3ad95aed3babd78dc13393a7e1dae03a8ef7e8eab3b3537fd7"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function GridRowItemAlignTest() {\n  \n  defineTest('GridRowItemAlignTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridRowItemAlignTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridRow1: Component = await driver.findComponent(Matcher.create().id('gridRowItemAlign1').enabled(true))\n    let gridRow2: Component = await driver.findComponent(Matcher.create().id('gridRowItemAlign2').enabled(true))\n    let gridRow3: Component = await driver.findComponent(Matcher.create().id('gridRowItemAlign3').enabled(true))\n    let gridRow4: Component = await driver.findComponent(Matcher.create().id('gridRowItemAlign4').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('GridRowItemAlign1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('GridRowItemAlign2').enabled(true))\n\n    let itemAlign1: string = await gridRow1.getInspectorInfo()\n    assertEqual(JSON.parse(itemAlign1).$attrs.itemAlign, 'ItemAlign.Center')\n\n    let itemAlign2: string = await gridRow2.getInspectorInfo()\n    assertEqual(JSON.parse(itemAlign2).$attrs.itemAlign, 'ItemAlign.Baseline')\n\n    let itemAlign3: string = await gridRow3.getInspectorInfo()\n    assertEqual(JSON.parse(itemAlign3).$attrs.itemAlign, 'ItemAlign.Auto')\n\n    let itemAlign4: string = await gridRow4.getInspectorInfo()\n    assertEqual(JSON.parse(itemAlign4).$attrs.itemAlign, 'ItemAlign.End')\n\n    await button1.tap()\n    let itemAlign5: string = await gridRow1.getInspectorInfo()\n    assertEqual(JSON.parse(itemAlign5).$attrs.itemAlign, 'ItemAlign.Start')\n\n    await button2.tap()\n    let itemAlign6: string = await gridRow1.getInspectorInfo()\n    assertEqual(JSON.parse(itemAlign6).$attrs.itemAlign, 'ItemAlign.Stretch')\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridRowItemAlignTest.ets", "project_name": "arkui_ace_engine-master", "id": "99ed79cf149a0c78e68e1416a20b0a44fb1790b4e989538ffd2edd4331dd7862"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function rowSplitResizeableTest() {\n  \n  defineTest('rowSplitResizeableTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('rowSplitResizeableTestDemo running')\n    let driver: Tester = Tester.create()\n    let rowSplitResizeable1: Component = await driver.findComponent(Matcher.create()\n      .id('rowSplitResizeable1')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create().text('RowSplitResizeable').enabled(true)))\n\n    let resizeable1: string = await rowSplitResizeable1.getInspectorInfo()\n    assertFalse(JSON.parse(resizeable1).$attrs.resizeable)\n    await button.tap()\n    let resizeable2: string = await rowSplitResizeable1.getInspectorInfo()\n    assertTrue(JSON.parse(resizeable2).$attrs.resizeable)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\RowSplitResizeableTest.ets", "project_name": "arkui_ace_engine-master", "id": "10ac9eae7f11a8974fb3cd8dacf03f621a05dd4bec5b0aad29394a3af50ab504"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function sideBarContainerAutoHideTest() {\n  \n  defineTest('sideBarContainerAutoHideTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sideBarContainerAutoHideTestDemo running')\n    let driver: Tester = Tester.create()\n    let sideBarContainerAutoHide1: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerAutoHide1')\n      .enabled(true))\n    let sideBarContainerAutoHide2: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerAutoHide2')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create()\n      .text('SideBarContainerAutoHide')\n      .enabled(true)))\n\n    let autoHide1: string = await sideBarContainerAutoHide1.getInspectorInfo()\n    assertTrue(JSON.parse(autoHide1).$attrs.autoHide)\n\n    let autoHide2: string = await sideBarContainerAutoHide2.getInspectorInfo()\n    assertFalse(JSON.parse(autoHide2).$attrs.autoHide)\n    await button.tap()\n    let autoHide3: string = await sideBarContainerAutoHide2.getInspectorInfo()\n    assertTrue(JSON.parse(autoHide3).$attrs.autoHide)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\SideBarContainerAutoHideTest.ets", "project_name": "arkui_ace_engine-master", "id": "71102f51cf19b78d89245e17add0fa76c3767f49e1bdf7b2b2496c1ae1e3cc96"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function sideBarContainerDividerTest() {\n  \n  defineTest('sideBarContainerDividerTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sideBarContainerDividerTestDemo running')\n    let driver: Tester = Tester.create()\n\n    let sideBarContainerDivider1: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerDivider1')\n      .enabled(true))\n    let sideBarContainerDivider2: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerDivider2')\n      .enabled(true))\n    let sideBarContainerDivider3: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerDivider3')\n      .enabled(true))\n    let sideBarContainerDivider4: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerDivider4')\n      .enabled(true))\n    let sideBarContainerDivider5: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerDivider5')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create()\n      .text('SideBarContainerDivider')\n      .enabled(true)))\n\n    let divider1: string = await sideBarContainerDivider1.getInspectorInfo()\n    assertEqual(JSON.parse(divider1).$attrs.divider,\n      '{\"strokeWidth\":\"20.00px\",\"startMargin\":\"20.00px\",\"endMargin\":\"20.00px\",\"color\":\"#FFFF0000\"}')\n\n    let divider2: string = await sideBarContainerDivider2.getInspectorInfo()\n    assertEqual(JSON.parse(divider2).$attrs.divider,\n      '{\"strokeWidth\":\"20.00px\",\"startMargin\":\"20.00px\",\"endMargin\":\"20.00px\",\"color\":\"#08000000\"}')\n\n    let divider3: string = await sideBarContainerDivider3.getInspectorInfo()\n    assertEqual(JSON.parse(divider3).$attrs.divider,\n      '{\"strokeWidth\":\"20.00px\",\"startMargin\":\"20.00px\",\"endMargin\":\"20.00px\",\"color\":\"#FF3F56EA\"}')\n\n    let divider4: string = await sideBarContainerDivider4.getInspectorInfo()\n    assertEqual(JSON.parse(divider4).$attrs.divider,\n      '{\"strokeWidth\":\"1.00vp\",\"startMargin\":\"0.00vp\",\"endMargin\":\"0.00vp\",\"color\":\"#08000000\"}')\n\n    let divider5: string = await sideBarContainerDivider5.getInspectorInfo()\n    assertEqual(JSON.parse(divider5).$attrs.divider,\n      '{\"strokeWidth\":\"5.00vp\",\"startMargin\":\"10.00vp\",\"endMargin\":\"10.00vp\",\"color\":\"#FFFF0000\"}')\n\n    await button.tap()\n    let divider6: string = await sideBarContainerDivider5.getInspectorInfo()\n    assertEqual(JSON.parse(divider6).$attrs.divider,\n      '{\"strokeWidth\":\"5.00px\",\"startMargin\":\"10.00px\",\"endMargin\":\"10.00px\",\"color\":\"#FF0000FF\"}')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\SideBarContainerDividerTest.ets", "project_name": "arkui_ace_engine-master", "id": "cbcb0063680f30e14ac75e4927e174d6f62df12b5cf860a09e6d0a4e5118177e"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\nimport { logLibrary } from '@kit.PerformanceAnalysisKit'\n\nexport default async function sideBarContainerShowControlButtonTest() {\n  \n  defineTest('sideBarContainerShowControlButtonTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sideBarContainerShowControlButtonTestDemo running')\n    let driver: Tester = Tester.create()\n    let sideBarContainerShowControlButton1: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerShowControlButton1')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create()\n      .text('SideBarContainerShowControlButton')\n      .enabled(true)))\n\n    let showControlButton1: string = await sideBarContainerShowControlButton1.getInspectorInfo()\n    assertTrue(JSON.parse(showControlButton1).$attrs.showControlButton)\n\n    await button.tap()\n    let showControlButton2: string = await sideBarContainerShowControlButton1.getInspectorInfo()\n    assertFalse(JSON.parse(showControlButton2).$attrs.showControlButton)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\SideBarContainerShowControlButtonTest.ets", "project_name": "arkui_ace_engine-master", "id": "f6ee46404c5a7c38522ad8ca0726ada8bdb3ecdeead4f44b62c6e656a0e32f6b"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function sideBarContainerSideBarPositionTest() {\n  \n  defineTest('sideBarContainerSideBarPositionTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('sideBarContainerSideBarPositionTestDemo running')\n    let driver: Tester = Tester.create()\n    let sideBarContainerSideBarPosition1: Component = await driver.findComponent(Matcher.create()\n      .id('sideBarContainerSideBarPosition1')\n      .enabled(true))\n    let button: Component = await driver.findComponent((Matcher.create()\n      .text('SideBarContainerSideBarPosition')\n      .enabled(true)))\n\n    let sideBarPosition1: string = await sideBarContainerSideBarPosition1.getInspectorInfo()\n    assertEqual(JSON.parse(sideBarPosition1).$attrs.sideBarPosition, 'SideBarPosition.Start')\n    await button.tap()\n    let sideBarPosition2: string = await sideBarContainerSideBarPosition1.getInspectorInfo()\n    assertEqual(JSON.parse(sideBarPosition2).$attrs.sideBarPosition, 'SideBarPosition.End')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\MyTest\\SideBarContainerSideBarPositionTest.ets", "project_name": "arkui_ace_engine-master", "id": "2f9bc0dd6e88fd2a0b42157f0456168c2f651b45e129d4d695ba862ba6cda01c"}
{"text": "import rowAlignItemsTest from '../MyTest/RowAlignItemsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RowAlignItemsSample {\n  @State rowAlignItems: VerticalAlign = VerticalAlign.Center\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rowAlignItemsTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text('alignItems(Top)').width('90%')\n      Row() {\n        Row().width('30%').height(50).backgroundColor(0xAFEEEE)\n        Row().width('30%').height(50).backgroundColor(0x00FFFF)\n      }\n      .id('rowAlignItems1')\n      .width('90%')\n      .alignItems(VerticalAlign.Top)\n      .height('15%')\n      .border({ width: 1 })\n\n      Row() {\n        Row().width('30%').height(50).backgroundColor(0xAFEEEE)\n        Row().width('30%').height(50).backgroundColor(0x00FFFF)\n      }\n      .id('rowAlignItems2')\n      .width('90%')\n      .alignItems(this.rowAlignItems)\n      .height('15%')\n      .border({ width: 1 })\n\n      Button('RowAlignItems').onClick(() => {\n        this.rowAlignItems = VerticalAlign.Bottom\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\row\\RowAlignItemsSample.ets", "project_name": "arkui_ace_engine-master", "id": "acdc28fc3344cbf68815972d384af51af5eb9fa422e482ce5b8770ed83213d07"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct ColumnHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('ColumnHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'RowAlignItems',\n          buttonUrl: 'pages/row/RowAlignItemsSample'\n        });\n        CommonButton({\n          buttonName: 'RowJustifyContent',\n          buttonUrl: 'pages/row/RowJustifyContentSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\row\\RowHome.ets", "project_name": "arkui_ace_engine-master", "id": "f7aeb27d22273da147c7605aa0fd8cc3891adccc056dca15cb960160db6d422d"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct RowSplitHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('RowSplitHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'RowSplitResizeable',\n          buttonUrl: 'pages/row_split/RowSplitResizeableSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\row_split\\RowSplitHome.ets", "project_name": "arkui_ace_engine-master", "id": "10589e207618906c3e720146bb4cad7ec97ca1b1d4673295ce1037006a65254e"}
{"text": "import rowSplitResizeableTest from '../MyTest/RowSplitResizeableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RowSplitResizeableSample {\n  @State rowSplitResizeable: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rowSplitResizeableTest)\n  }\n\n  build() {\n    Column() {\n      RowSplit() {\n        Text('RowSplitText1').width('10%').height(100).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n        Text('RowSplitText2').width('10%').height(100).backgroundColor(0xD2B48C).textAlign(TextAlign.Center)\n        Text('RowSplitText3').width('10%').height(100).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n        Text('RowSplitText4').width('10%').height(100).backgroundColor(0xD2B48C).textAlign(TextAlign.Center)\n        Text('RowSplitText5').width('10%').height(100).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n      }\n      .id('rowSplitResizeable1')\n      .resizeable(this.rowSplitResizeable)\n      .width('90%').height(100)\n\n      Button('RowSplitResizeable').onClick(() => {\n        this.rowSplitResizeable = !this.rowSplitResizeable\n      })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\row_split\\RowSplitResizeableSample.ets", "project_name": "arkui_ace_engine-master", "id": "490955dbe20fb0e10831e82c6ee09527b0443c03e52f9d9a45348943a41e5271"}
{"text": "import sideBarContainerControlButtonTest from '../MyTest/SideBarContainerControlButtonTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SideBarContainerControlButtonSample {\n  @State controlButtonPosition: number = 150\n  @State controlButtonSize: number = 150\n  @State controlButtonIconState: string | PixelMap | Resource = '../../../resources/base/media/icon.png'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sideBarContainerControlButtonTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Column() {\n          SideBarContainer() {\n            Column() {\n              Text('SideBar').fontSize(8)\n            }\n            .backgroundColor(Color.Green)\n            .width(20)\n\n            Column() {\n              Text('SideBarContainer content text1').fontSize(15)\n              Text('SideBarContainer content text2').fontSize(15)\n            }\n          }\n          .id('sideBarContainerControlButton1')\n          .controlButton({\n            left: this.controlButtonPosition,\n            top: this.controlButtonPosition,\n            width: this.controlButtonSize,\n            height: this.controlButtonSize,\n            icons: {\n              shown: this.controlButtonIconState,\n              hidden: this.controlButtonIconState,\n              switching: this.controlButtonIconState\n            }\n          })\n        }\n        .borderWidth(1)\n        .width('30%')\n\n        Button('SideBarContainerControlButton').onClick(() => {\n          this.controlButtonPosition = 80\n          this.controlButtonSize = 80\n          this.controlButtonIconState = $r('app.media.startIcon')\n        })\n      }\n      .width('100%')\n      .height('30%')\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\side_bar_container\\SideBarContainerControlButtonSample.ets", "project_name": "arkui_ace_engine-master", "id": "6d098ba1e778868aeeee60177fde58e8914f8438857ce8a5d4269783af45be45"}
{"text": "import sideBarContainerShowControlButtonTest from '../MyTest/SideBarContainerShowControlButtonTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SideBarContainerShowControlButtonSample {\n  @State showControlButton: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sideBarContainerShowControlButtonTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        SideBarContainer() {\n          Column() {\n            Text('SideBar').fontSize(8)\n          }\n          .backgroundColor(Color.Green)\n          .width(20)\n\n          Column() {\n            Text('SideBarContainer content text1').fontSize(15)\n            Text('SideBarContainer content text2').fontSize(15)\n          }\n        }\n        .id('sideBarContainerShowControlButton1')\n        .showControlButton(this.showControlButton)\n      }\n      .width('100%')\n      .height('50%')\n\n      Button('SideBarContainerShowControlButton').onClick(() => {\n        this.showControlButton = !this.showControlButton\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\side_bar_container\\SideBarContainerShowControlButtonSample.ets", "project_name": "arkui_ace_engine-master", "id": "e616a0fb7534f28fab905ab7cb06571e4fd40924064cedddd5fa306ab1c2788e"}
{"text": "import sideBarContainerShowSideBarTest from '../MyTest/SideBarContainerShowSideBarTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SideBarContainerShowSideBarSample {\n  @State showSideBar: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sideBarContainerShowSideBarTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        SideBarContainer() {\n          Column() {\n            Text('SideBar').fontSize(8)\n          }\n          .backgroundColor(Color.Green)\n          .width(20)\n\n          Column() {\n            Text('SideBarContainer content text1').fontSize(15)\n            Text('SideBarContainer content text2').fontSize(15)\n          }\n        }\n        .id('sideBarContainerShowSideBar1')\n        .showSideBar(this.showSideBar)\n      }\n      .height('50%')\n\n      Button('SideBarContainerShowSideBar').onClick(() => {\n        this.showSideBar = !this.showSideBar\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\side_bar_container\\SideBarContainerShowSideBarSample.ets", "project_name": "arkui_ace_engine-master", "id": "e0287266d14d3f9b85a209ba91f0d50ccc2c37ced8a1119c68003370d2e978ce"}
{"text": "import sideBarContainerSideBarPositionTest from '../MyTest/SideBarContainerSideBarPositionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SideBarContainerSideBarPositionSample {\n  @State sideBarContainerSideBarPosition: SideBarPosition = SideBarPosition.Start\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(sideBarContainerSideBarPositionTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Column() {\n          SideBarContainer() {\n            Column() {\n              Text('SideBar').fontSize(8)\n            }\n            .backgroundColor(Color.Green)\n\n            Column() {\n              Text('SideBarContainer content text1').fontSize(15)\n              Text('SideBarContainer content text2').fontSize(15)\n            }\n          }\n          .id('sideBarContainerSideBarPosition1')\n          .showSideBar(true)\n          .sideBarWidth('50px')\n          .sideBarPosition(this.sideBarContainerSideBarPosition)\n        }\n        .borderWidth(1)\n        .width('50%')\n\n        Button('SideBarContainerSideBarPosition').onClick(() => {\n          this.sideBarContainerSideBarPosition = SideBarPosition.End\n        })\n      }\n      .width('100%')\n      .height('30%')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\side_bar_container\\SideBarContainerSideBarPositionSample.ets", "project_name": "arkui_ace_engine-master", "id": "18b7ccb43d6095253d1fabf35bd9cdff40b99c9c90f968eeb8591f2478ecc345"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct StackHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('StackHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'StackAlignmentTopStart', buttonUrl: 'pages/stack/StackAlignContentSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\common_container\\entry\\src\\main\\ets\\pages\\stack\\StackHome.ets", "project_name": "arkui_ace_engine-master", "id": "fcdefffb35fe5e4f703787f5a46532e4e0d33c63e697e8865e39b0e123ea84f9"}
{"text": "import canvasCanvasRenderingContext2DFillStyleTest from '../MyTest/CanvasCanvasRenderingContext2DFillStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasCanvasRenderingContext2DFillStyleSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasCanvasRenderingContext2DFillStyleTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('50%')\n        .height('50%')\n        .backgroundColor('#ffff00')\n        .id('canvasFillStyle')\n        .onReady(() => {\n          this.context.fillStyle = 0xff0000\n          this.context.fillRect(170, 100, 150, 100)\n        })\n      Button('CanvasFillStyle')\n        .onClick(() => {\n          this.context.fillStyle = 'rgb(0,0,255)'\n          this.context.fillRect(20, 20, 150, 100)\n        })\n        .margin({ top: 30, bottom: 50 })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DFillStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "9bff494d958f450f88462afc005f384a7c228f6a0fa9e8befc3de3a70de27fc4"}
{"text": "import canvasRenderingContext2DGlobalAlphaTest from '../MyTest/CanvasRenderingContext2DGlobalAlphaTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DGlobalAlphaSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DGlobalAlphaTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasGlobalAlpha')\n        .onReady(() => {\n          this.context.fillStyle = 'rgb(0,0,255)'\n          this.context.fillRect(0, 0, 50, 50)\n          this.context.globalAlpha = 0.4\n          this.context.fillStyle = 'rgb(0,0,255)'\n          this.context.fillRect(50, 50, 50, 50)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DGlobalAlphaSample.ets", "project_name": "arkui_ace_engine-master", "id": "a78e95f0f086a4959b831c76914961bce73756db06046ee11740a6e66cfbf06e"}
{"text": "import canvasRenderingContext2DHeightTest from '../MyTest/CanvasRenderingContext2DHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DHeightSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private myHeight: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DHeightTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width(500)\n        .height(500)\n        .backgroundColor('#ffff00')\n        .id('canvasHeight')\n        .onReady(() => {\n          let h = this.context.height\n          this.context.fillRect(0, 0, 100, h / 2)\n          this.myHeight = h / 2\n          this.context.fillRect(0, 0, 100, 100)\n        })\n      Button('CanvasHeight')\n        .onClick(() => {\n          this.myHeight += 100;\n          this.context.fillRect(0, 0, 300, this.myHeight)\n          this.context.fillStyle = ('rgb(255,0,0)')\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "a05116b907112fd38ac337140ec227220d970bfadc75d41eb8112b1fc29030c1"}
{"text": "import canvasRenderingContext2DImageBitmapTest from '../MyTest/CanvasRenderingContext2DImageBitmapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasImageBitmapSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private img: ImageBitmap = new ImageBitmap(\"../image_bitmap/image.jpg\")\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DImageBitmapTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasImageBitmap')\n        .onReady(() => {\n          this.context.drawImage(this.img, 0, 0, 500, 500, 0, 0, 400, 200)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DImageBitmapSample.ets", "project_name": "arkui_ace_engine-master", "id": "37923c8e78e60a26d9fe7df900fac1a2fc98f925c93a1526daf7d9e0c482a592"}
{"text": "import canvasRenderingContext2DImageSmoothingEnabledTest\n  from '../MyTest/CanvasRenderingContext2DImageSmoothingEnabledTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DImageSmoothingEnabledSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private img: ImageBitmap = new ImageBitmap(\"../image_bitmap/image.jpg\")\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DImageSmoothingEnabledTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasImageSmoothingEnabled')\n        .onReady(() => {\n          this.context.imageSmoothingEnabled = false\n          this.context.drawImage(this.img, 0, 0, 400, 200)\n        })\n      Button('CanvasImageSmoothingEnabled')\n        .onClick(() => {\n          this.context.imageSmoothingEnabled = true\n          this.context.drawImage(this.img, 500, 0, 400, 200)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DImageSmoothingEnabledSample.ets", "project_name": "arkui_ace_engine-master", "id": "c0dcd781572c2c04f7f7b497ad57c681b69bd76dff9d54a65588b1211525d6d9"}
{"text": "import canvasRenderingContext2DImageSmoothingQualityTest\n  from '../MyTest/CanvasRenderingContext2DImageSmoothingQualityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DImageSmoothingQualitySample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private img: ImageBitmap = new ImageBitmap(\"../image_bitmap/image.jpg\")\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DImageSmoothingQualityTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasImageSmoothingQuality')\n        .onReady(() => {\n          let ctx = this.context\n          ctx.imageSmoothingEnabled = true\n          ctx.imageSmoothingQuality = 'high'\n          ctx.drawImage(this.img, 0, 0, 400, 200)\n        })\n      Button('CanvasImageSmoothingQuality1')\n        .onClick(() => {\n          this.context.imageSmoothingEnabled = true\n          this.context.imageSmoothingQuality = 'medium'\n          this.context.drawImage(this.img, 0, 500, 400, 200)\n        })\n      Button('CanvasImageSmoothingQuality2')\n        .onClick(() => {\n          this.context.imageSmoothingEnabled = true\n          this.context.imageSmoothingQuality = 'low'\n          this.context.drawImage(this.img, 0, 1100, 400, 200)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DImageSmoothingQualitySample.ets", "project_name": "arkui_ace_engine-master", "id": "14516c1b2113eda519929346d7b198b3a5db83a3c799846cb6da41f41117a17e"}
{"text": "import canvasRenderingContext2DLineDashOffsetTest from '../MyTest/CanvasRenderingContext2DLineDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DLineDashOffset {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DLineDashOffsetTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasLineDashOffset')\n        .onReady(() => {\n          this.context.arc(100, 75, 50, 0, 6.28)\n          this.context.setLineDash([10, 20])\n          this.context.lineDashOffset = 10.0\n          this.context.stroke()\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DLineDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "7c141b486e71550e073bd82ee6fe026246e4767eb07742a7bba0c240868dd76d"}
{"text": "import canvasRenderingContext2DLineWidthTest from '../MyTest/CanvasRenderingContext2DLineWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DLineWidthSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DLineWidthTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasLineWidth')\n        .onReady(() => {\n          this.context.lineWidth = 5\n          this.context.strokeRect(25, 25, 85, 105)\n        })\n      Button('CanvasLineWidth')\n        .onClick(() => {\n          this.context.lineWidth = -15\n          this.context.strokeRect(25, 25, 85, 105)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DLineWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "d98ab69d0f9dccda78e7b38bdb3ab4cb2d5ce63b2b843850a08928321f8f25d6"}
{"text": "import canvasRenderingContext2DShadowColorTest from '../MyTest/CanvasRenderingContext2DShadowColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DShadowColor {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DShadowColorTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasShadowColor')\n        .onReady(() => {\n          this.context.shadowBlur = 30\n          this.context.shadowColor = 'rgb(0,0,255)'\n          this.context.fillStyle = 'rgb(255,0,0)'\n          this.context.fillRect(30, 30, 100, 100)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DShadowColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "7abe9320b739042258e2d91d0c197ebb72d07ca0367ef9b66e2e5486ae2b64a8"}
{"text": "import canvasRenderingContext2DShadowOffsetXTest from '../MyTest/CanvasRenderingContext2DShadowOffsetXTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DShadowOffsetX {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DShadowOffsetXTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasShadowOffsetX')\n        .onReady(() => {\n          this.context.shadowBlur = 10\n          this.context.shadowOffsetX = 20\n          this.context.shadowColor = 'rgb(0,0,0)'\n          this.context.fillStyle = 'rgb(255,0,0)'\n          this.context.fillRect(20, 20, 100, 80)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DShadowOffsetXSample.ets", "project_name": "arkui_ace_engine-master", "id": "d746f01065b59f94f77aae4d879356f56c286295afd863842845fdd65a3cff4a"}
{"text": "import canvasRenderingContext2DShadowOffsetYTest from '../MyTest/CanvasRenderingContext2DShadowOffsetYTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DShadowOffsetY {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DShadowOffsetYTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasShadowOffsetY')\n        .onReady(() => {\n          this.context.shadowBlur = 10\n          this.context.shadowOffsetY = 20\n          this.context.shadowColor = 'rgb(0,0,0)'\n          this.context.fillStyle = 'rgb(255,0,0)'\n          this.context.fillRect(30, 30, 100, 100)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DShadowOffsetYSample.ets", "project_name": "arkui_ace_engine-master", "id": "0a941ff8f55874f3b6424356516284437d0842fdec801216d144e80bb15a3409"}
{"text": "import canvasRenderingContext2DStrokeStyleTest from '../MyTest/CanvasRenderingContext2DStrokeStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CanvasRenderingContext2DStrokeStyleSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(canvasRenderingContext2DStrokeStyleTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('canvasStrokeStyle')\n        .onReady(() => {\n          this.context.lineWidth = 10\n          this.context.strokeStyle = 0x0000ff\n          this.context.strokeRect(25, 25, 155, 105)\n        })\n      Button('CanvasStrokeStyle')\n        .onClick(() => {\n          this.context.strokeStyle = 'rgb(0,255,0)'\n          this.context.strokeRect(200, 150, 155, 105)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\canvas_rendering_context2D\\CanvasRenderingContext2DStrokeStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "f1c37ffd8959eabb6ba5c1272ef2fdd87b365cc8662d25f66e336a87e726d155"}
{"text": "import circleAntiAliasTest from '../MyTest/CircleAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleAntiAliasSample {\n  @State private antiAliasBool: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .antiAlias(this.antiAliasBool)\n        .id('circleAntiAlias')\n      Button('CircleAntiAlias')\n        .onClick(() => {\n          this.antiAliasBool = !this.antiAliasBool\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "4abcbd2ed331cb8822f2a8b2a0f0dd35c99e56dcd7c5ff48b8c7876d6b225ba8"}
{"text": "import circleFillOpacityTest from '../MyTest/CircleFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleFillOpacitySample {\n  @State private fillOpacityValue1: number | string = 0.2\n  @State private fillOpacityValue2: number | Resource = -0.2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleFillOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .fill(Color.Red)\n        .fillOpacity(this.fillOpacityValue2)\n        .id('circleFillOpacity1')\n      Button('CircleFillOpacity1')\n        .onClick(() => {\n          this.fillOpacityValue2 = $r('app.string.fill_opacity')\n        })\n      Circle({ width: 150, height: 150 })\n        .fill(Color.Red)\n        .fillOpacity(this.fillOpacityValue1)\n        .id('circleFillOpacity2')\n      Button('CircleFillOpacity2')\n        .onClick(() => {\n          this.fillOpacityValue1 = '10px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "82edbad7521dfeacd9681b253e44c38a3fe564dc6a13ed7d8a6b592cc5da71b5"}
{"text": "import circleFillTest from '../MyTest/CircleFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleFillSample {\n  @State private fillColorValue1: ResourceColor = 0xff0000\n  @State private fillColorValue2: ResourceColor = $r('sys.color.ohos_id_color_text_hyperlink')\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleFillTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .fill(this.fillColorValue1)\n        .id('circleFill1')\n      Button('CircleFill1')\n        .onClick(() => {\n          this.fillColorValue1 = '#FFF07DDF'\n        })\n      Circle({ width: 150, height: 150 })\n        .fill(this.fillColorValue2)\n        .id('circleFill2')\n      Button('CircleFill2')\n        .onClick(() => {\n          this.fillColorValue2 = Color.Blue\n        })\n    }.width('100%')\n  }\n}\n\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "5b38ddc5b8d962edd3de1be3441fb193dd47cbfd88bb5332ac86150aca25e3a6"}
{"text": "import circleStrokeDashArrayTest from '../MyTest/CircleStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleStrokeDashArraySample {\n  @State private circleStrokeDashArray: Array<number> = [1, 2]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleStrokeDashArrayTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .stroke(Color.Green)\n        .strokeDashArray(this.circleStrokeDashArray)\n        .id('circleStrokeDashArray')\n      Button('CircleStrokeDashArray')\n        .onClick(() => {\n          this.circleStrokeDashArray = [10, 20]\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "4f9193e8482d47085032026d0f551117ab6ba021b23ae60a2d61925962b023fa"}
{"text": "import circleStrokeDashOffsetTest from '../MyTest/CircleStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleStrokeDashOffsetSample {\n  @State private circleStrokeDashOffsetValue: number | string = 12\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle()\n        .width(150)\n        .height(200)\n        .stroke(Color.Red)\n        .strokeDashArray([5, 7])\n        .strokeDashOffset(this.circleStrokeDashOffsetValue)\n        .id('circleStrokeDashOffset')\n      Button('CircleStrokeDashOffset')\n        .onClick(() => {\n          this.circleStrokeDashOffsetValue = '-21'\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "505df9fb5286e2c25ac5f3ff0d0d912add5e8a9fa079635865336ceb4a144654"}
{"text": "import circleStrokeLineCapTest from '../MyTest/CircleStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleStrokeLineCapSample {\n  @State circleStrokeLineCapType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .stroke(Color.Green)\n        .strokeWidth(2)\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('circleStrokeLineCap1')\n      Circle({ width: 150, height: 150 })\n        .stroke(Color.Green)\n        .strokeWidth(2)\n        .strokeLineCap(this.circleStrokeLineCapType)\n        .id('circleStrokeLineCap2')\n      Button('CircleStrokeLineCap')\n        .onClick(() => {\n          this.circleStrokeLineCapType = LineCapStyle.Square\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "9216b7f7e0456dbd126bef083ab1b53717c6667e5a963872326a0f75138886ec"}
{"text": "import circleStrokeOpacityTest from '../MyTest/CircleStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleStrokeOpacitySample {\n  @State circleStrokeOpacityValue: number | string | Resource = -5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .strokeWidth(2)\n        .strokeOpacity(this.circleStrokeOpacityValue)\n        .id('circleStrokeOpacity')\n      Button('CircleStrokeOpacity1')\n        .onClick(() => {\n          this.circleStrokeOpacityValue = $r('app.string.stroke_opacity')\n        })\n      Button('CircleStrokeOpacity2')\n        .onClick(() => {\n          this.circleStrokeOpacityValue = '10px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "37df6b7d9414a9d16d5051dd03e158239ae445d8f5b55117afab9323c411f7eb"}
{"text": "import circleStrokeColorTest from '../MyTest/CircleStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleStrokeSample {\n  @State circleStrokeColorValue1: number | Color = 0x0000ff\n  @State circleStrokeColorValue2: Resource | string = 'rgb(0,0,255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleStrokeColorTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .stroke(this.circleStrokeColorValue1)\n        .id('circleStrokeColor1')\n      Button('CircleStrokeColor1')\n        .onClick(() => {\n          this.circleStrokeColorValue1 = Color.Red\n        })\n      Circle({ width: 150, height: 150 })\n        .stroke(this.circleStrokeColorValue2)\n        .id('circleStrokeColor2')\n      Button('CircleStrokeColor2')\n        .onClick(() => {\n          this.circleStrokeColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "32c9ac68c3a5ce504b66e9b9e17b99934698800b408f86195eb25268af01a4ad"}
{"text": "import circleStrokeWidthTest from '../MyTest/CircleStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct CircleStrokeWidthSample {\n  @State circleStrokeWidthValue: string | Resource = '10px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(circleStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Circle({ width: 150, height: 150 })\n        .fill(Color.White)\n        .stroke(Color.Black)\n        .strokeWidth(10)\n        .id('circleStrokeWidth1')\n      Circle({ width: 150, height: 150 })\n        .fill(Color.White)\n        .stroke(Color.Black)\n        .strokeWidth(this.circleStrokeWidthValue)\n        .id('circleStrokeWidth2')\n      Button('CircleStrokeWidth')\n        .onClick(() => {\n          this.circleStrokeWidthValue = $r('app.string.stroke_width')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\circle\\CircleStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "a93fe9aba5051a6ea6f4a8bcd2b57c802ab67002983fbad23778ee5c7d408ad9"}
{"text": "import ellipseAntiAliasTest from '../MyTest/EllipseAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseAntiAliasSample {\n  @State ellipseAntiAliasValue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .antiAlias(this.ellipseAntiAliasValue)\n        .id('ellipseAntiAlias')\n      Button('EllipseAntiAlias')\n        .onClick(() => {\n          this.ellipseAntiAliasValue = !this.ellipseAntiAliasValue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "1cf79a861500202dfbfb985a5018961df2a141bc58cbe9424fe968e4bff72d66"}
{"text": "import ellipseFillOpacityTest from '../MyTest/EllipseFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseFillOpacitySample {\n  @State ellipseFillOpacityValue: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseFillOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .fill(Color.Red)\n        .fillOpacity(0.5)\n        .id('ellipseFillOpacity1')\n      Ellipse({ width: 150, height: 90 })\n        .fill(Color.Red)\n        .fillOpacity(this.ellipseFillOpacityValue)\n        .id('ellipseFillOpacity2')\n      Button('EllipseFillOpacity')\n        .onClick(() => {\n          this.ellipseFillOpacityValue = '20px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "474c97488c974f0d46dee255bc5b4bb7c2bd9a155188dc9e6016b32f683bce6d"}
{"text": "import ellipseFillColorTest from '../MyTest/EllipseFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseFillSample {\n  @State ellipseFillColorValue1: Color | number = Color.Red\n  @State ellipseFillColorValue2: Resource | string = $r('app.color.color_red')\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseFillColorTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 80 })\n        .fill(this.ellipseFillColorValue1)\n        .id('ellipseFill1')\n      Button('EllipseFill1')\n        .onClick(() => {\n          this.ellipseFillColorValue1 = 0x0000ff\n        })\n      Ellipse({ width: 150, height: 80 })\n        .fill(this.ellipseFillColorValue2)\n        .id('ellipseFill2')\n      Button('EllipseFill2')\n        .onClick(() => {\n          this.ellipseFillColorValue2 = 'rgb(0,0,255)'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "0efad18ee7575cdcd0161dde489987f80cf51606f46f689e620b03e3bdb5343a"}
{"text": "import ellipseStrokeDashArrayTest from '../MyTest/EllipseStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseStrokeDashArraySample {\n  @State ellipseStrokeDashArrayValue: Array<number> = [1, 2]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseStrokeDashArrayTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeDashArray(this.ellipseStrokeDashArrayValue)\n        .strokeDashOffset(10)\n        .id('ellipseStrokeDashArray')\n      Button('EllipseStrokeDashArray')\n        .onClick(() => {\n          this.ellipseStrokeDashArrayValue = [5, 10]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "b2b0b1daf245dee73b0e82bf279999a85c93d8cf54ecbd1cf7a48fa8f6124e26"}
{"text": "import ellipseStrokeDashOffsetTest from '../MyTest/EllipseStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseStrokeDashOffsetSample {\n  @State ellipseStrokeDashOffsetValue: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeDashArray([1, 2])\n        .strokeDashOffset(this.ellipseStrokeDashOffsetValue)\n        .id('ellipseStrokeDashOffset')\n      Button('EllipseStrokeDashOffset')\n        .onClick(() => {\n          this.ellipseStrokeDashOffsetValue = '5'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "fa564950f79a315e17d570c6362f0424715d4617192ae3bb3f8254dec72e57ed"}
{"text": "import ellipseStrokeLineCapTest from '../MyTest/EllipseStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseStrokeLineCapSample {\n  @State ellipseStrokeLineCapType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('ellipseStrokeLineCapt1')\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeLineCap(this.ellipseStrokeLineCapType)\n        .id('ellipseStrokeLineCapt2')\n      Button('EllipseStrokeLineCapt')\n        .onClick(() => {\n          this.ellipseStrokeLineCapType = LineCapStyle.Square\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "37b2684e7c75baa8476793cc9a12c95b80d8bc9da0d0d9bbe28672bb75db6e84"}
{"text": "import ellipseStrokeOpacityTest from '../MyTest/EllipseStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseStrokeOpacitySample {\n  @State ellipseStrokeOpacityValue: string | Resource = '10px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeOpacity(-10)\n        .id('ellipseStrokeOpacity1')\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeOpacity(this.ellipseStrokeOpacityValue)\n        .id('ellipseStrokeOpacity2')\n      Button('EllipseStrokeOpacity1')\n        .onClick(() => {\n          this.ellipseStrokeOpacityValue = $r('app.string.stroke_opacity')\n        })\n      Button('EllipseStrokeOpacity2')\n        .onClick(() => {\n          this.ellipseStrokeOpacityValue = '-10px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "704d47fc0b1b04cc65ae8a679b8c5bda53304e90eb3b404c6cac4b469ffd1e25"}
{"text": "import ellipseStrokeTest from '../MyTest/EllipseStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseStrokeSample {\n  @State ellipseStrokeColorValue1: Color | number = Color.Red\n  @State ellipseStrokeColorValue2: Resource | string = $r('app.color.color_red')\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseStrokeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .stroke(this.ellipseStrokeColorValue1)\n        .id('ellipseStroke1')\n      Button('EllipseStroke1')\n        .onClick(() => {\n          this.ellipseStrokeColorValue1 = 0x0000ff\n        })\n      Ellipse({ width: 150, height: 90 })\n        .stroke(this.ellipseStrokeColorValue2)\n        .id('ellipseStroke2')\n      Button('EllipseStroke2')\n        .onClick(() => {\n          this.ellipseStrokeColorValue2 = 'rgb(0,0,255)'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "cec16d74d9c20051e173622554c8db2a59e1e0e22390e053e384b6ab2c086fd0"}
{"text": "import ellipseStrokeWidthTest from '../MyTest/EllipseStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct EllipseStrokeWidthSample {\n  @State ellipseStrokeWidthValue: Resource | string = $r('app.string.stroke_width')\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(ellipseStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeWidth(2)\n        .id('ellipseStrokeWidth1')\n      Ellipse({ width: 150, height: 90 })\n        .stroke(Color.Blue)\n        .strokeWidth(this.ellipseStrokeWidthValue)\n        .id('ellipseStrokeWidth2')\n      Button('EllipseStrokeWidth')\n        .onClick(() => {\n          this.ellipseStrokeWidthValue = '1px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\ellipse\\EllipseStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "c67df9ce0c587558e24f13c941d8d0999200fd9a852dc66fe3a21011518a4673"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct ImageBitmapHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('textHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({\n          buttonName: 'ImageBitmap',\n          buttonUrl: 'pages/image_bitmap/ImageBitmapSample'\n        })\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\image_bitmap\\ImageBitmapHome.ets", "project_name": "arkui_ace_engine-master", "id": "174efb538f511a31a8993ce5bfb2810de92a15e68442a0af4ded63806cd975dc"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct ImageDataHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('textHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'ImageData', buttonUrl: 'pages/image_data/ImageDataSample' })\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\image_data\\ImageDataHome.ets", "project_name": "arkui_ace_engine-master", "id": "88dc0e33375e183274fc2a99828cac6c81c4a2572b0998db339d1818955f9f1f"}
{"text": "import imageDataTest from '../MyTest/ImageDataTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageDataSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private img: ImageBitmap = new ImageBitmap(\"../image_bitmap/image.jpg\")\n  private ImageDataWidthValue: number = 130\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageDataTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .onReady(() => {\n          this.context.drawImage(this.img, 0, 0, this.ImageDataWidthValue, 130)\n          let imageData = this.context.getImageData(50, 50, 130, 130)\n          this.context.putImageData(imageData, 150, 150)\n        })\n        .id('imageData')\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\image_data\\ImageDataSample.ets", "project_name": "arkui_ace_engine-master", "id": "5cdb3ee496161ee30cbc31e1b41945521cd82f9c308fd7a3e3426c9823af0318"}
{"text": "import lineAntiAliasTest from '../MyTest/LineAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineAntiAliasSample {\n  @State lineAntiAliasValue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line({ width: 200, height: 150 })\n        .startPoint([0, 0])\n        .endPoint([50, 100])\n        .antiAlias(this.lineAntiAliasValue)\n        .stroke(Color.Black)\n        .strokeWidth(10)\n        .id('lineAntiAlias')\n      Button('LineAntiAlias')\n        .onClick(() => {\n          this.lineAntiAliasValue = !this.lineAntiAliasValue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "1bf79f081ed9bff2004648e71b4482b65f626406047600e214f4813b1bcdf773"}
{"text": "import lineEndPointTest from '../MyTest/LineEndPointTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineEndPointSample {\n  @State lineEndPointValue: Array<number> = [200, 200]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineEndPointTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint([0, 0])\n        .endPoint(this.lineEndPointValue)\n        .stroke(Color.Black)\n        .strokeWidth(10)\n        .id('lineEndPoint')\n      Button('LineEndPoint')\n        .onClick(() => {\n          this.lineEndPointValue = [100, 300]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineEndPointSample.ets", "project_name": "arkui_ace_engine-master", "id": "85df70d561c6a9361e1328cd36f6f4ea5adb332847fce1e7b6be78e9a65608ed"}
{"text": "import lineStartPointTest from '../MyTest/LineStartPointTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStartPointSample {\n  @State lineStartPointValue: Array<number> = [0, 0]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStartPointTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint(this.lineStartPointValue)\n        .endPoint([50, 100])\n        .stroke(Color.Black)\n        .strokeWidth(10)\n        .id('lineStartPoint')\n      Button('LineStartPoint')\n        .onClick(() => {\n          this.lineStartPointValue = [100, 100]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStartPointSample.ets", "project_name": "arkui_ace_engine-master", "id": "22c9439330803f75e66522c48d688ce9144c4e77c80053ebac5c0363485fedd0"}
{"text": "import lineStrokeDashArrayTest from '../MyTest/LineStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStrokeDashArraySample {\n  @State LineStrokeDashArray: Array<number> = [50, 10, 20, 30]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStrokeDashArrayTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(300)\n        .height(30)\n        .startPoint([50, 20])\n        .endPoint([300, 20])\n        .stroke(Color.Black)\n        .strokeWidth(10)\n        .strokeDashArray(this.LineStrokeDashArray)\n        .strokeDashOffset(5)\n        .id('lineStrokeDashArray')\n      Button('LineStrokeDashArray')\n        .onClick(() => {\n          this.LineStrokeDashArray = [60, 20, 30, 40]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "cdd187f9bad7e8bc44e755cfef41230612634b40852f0e721985d549cb2f2d90"}
{"text": "import lineStrokeDashOffsetTest from '../MyTest/LineStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStrokeDashOffsetSample {\n  @State lineStrokeDashOffsetValue: number | string = -5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint([0, 0])\n        .endPoint([100, 100])\n        .stroke(Color.Black)\n        .strokeWidth(3)\n        .strokeDashArray([50, 10, 20, 30])\n        .strokeDashOffset(this.lineStrokeDashOffsetValue)\n        .id('lineStrokeDashOffset')\n      Button('LineStrokeDashOffset')\n        .onClick(() => {\n          this.lineStrokeDashOffsetValue = '5'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "17e72f6cf077ef11050a35bfb9a532a07ed484f86d20c66316f3da235520bb50"}
{"text": "import lineStrokeLineCapTest from '../MyTest/LineStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStrokeLineCapSample {\n  @State lineStrokeLineCapType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(100)\n        .height(200)\n        .startPoint([50, 50])\n        .endPoint([50, 200])\n        .stroke(Color.Blue)\n        .strokeWidth(20)\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('lineStrokeLineCap1')\n      Line()\n        .width(100)\n        .height(200)\n        .startPoint([50, 50])\n        .endPoint([50, 200])\n        .stroke(Color.Blue)\n        .strokeWidth(20)\n        .strokeLineCap(this.lineStrokeLineCapType)\n        .id('lineStrokeLineCap2')\n      Button('LineStrokeLineCap')\n        .onClick(() => {\n          this.lineStrokeLineCapType = LineCapStyle.Square\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "1e921a47f5d230795c5dce5d516997fbfac2800fc95663dbd651c428b07b9070"}
{"text": "import lineStrokeOpacityTest from '../MyTest/LineStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStrokeOpacitySample {\n  @State lineStrokeOpacityValue: string | Resource = '10px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint([50, 50])\n        .endPoint([150, 150])\n        .strokeWidth(5)\n        .stroke(Color.Orange)\n        .strokeOpacity(-10)\n        .id('lineStrokeOpacity1')\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint([50, 50])\n        .endPoint([150, 150])\n        .strokeWidth(5)\n        .stroke(Color.Orange)\n        .strokeOpacity(this.lineStrokeOpacityValue)\n        .id('lineStrokeOpacity2')\n      Button(\"LineStrokeOpacity1\")\n        .onClick(() => {\n          this.lineStrokeOpacityValue = $r('app.string.stroke_opacity')\n        })\n      Button(\"LineStrokeOpacity2\")\n        .onClick(() => {\n          this.lineStrokeOpacityValue = '-10px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "668b3366db9d0b62fd9fca8f4ca174034b0de1650253625bb038e49a52dc417d"}
{"text": "import lineStrokeTest from '../MyTest/LineStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStrokeSample {\n  @State lineStrokeColorValue1: string | number = '#FFFFFF00'\n  @State lineStrokeColorValue2: Color | Resource = Color.Blue\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStrokeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line({ width: 150, height: 90 })\n        .startPoint([0, 0])\n        .endPoint([50, 100])\n        .stroke(this.lineStrokeColorValue1)\n        .strokeWidth(5)\n        .id('lineStroke1')\n      Button('LineStroke1')\n        .onClick(() => {\n          this.lineStrokeColorValue1 = 0xff0000\n        })\n      Line({ width: 150, height: 90 })\n        .startPoint([0, 0])\n        .endPoint([50, 100])\n        .stroke(this.lineStrokeColorValue2)\n        .strokeWidth(5)\n        .id('lineStroke2')\n      Button('LineStroke2')\n        .onClick(() => {\n          this.lineStrokeColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "6b72c5b3b2bf8f34940d34ddd86e19fffeddc0594561374dc9592d5b56b174fb"}
{"text": "import lineStrokeWidthTest from '../MyTest/LineStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LineStrokeWidthSample {\n  @State lineStrokeWidthValue: number | string = 2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(lineStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint([50, 50])\n        .endPoint([150, 150])\n        .stroke(Color.Black)\n        .strokeWidth(this.lineStrokeWidthValue)\n        .id('lineStrokeWidth1')\n      Button('LineStrokeWidth1')\n        .onClick(() => {\n          this.lineStrokeWidthValue = '10px'\n        })\n      Button('LineStrokeWidth2')\n        .onClick(() => {\n          this.lineStrokeWidthValue = '50%'\n        })\n      Line()\n        .width(200)\n        .height(150)\n        .startPoint([50, 50])\n        .endPoint([150, 150])\n        .stroke(Color.Black)\n        .strokeWidth($r('app.string.stroke_width'))\n        .id('lineStrokeWidth2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\line\\LineStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "f211a579c32dae4c829de44ea52c7c3c70cdc1ed03f4c235147b1bf4c8a9e219"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct Matrix2DHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('textHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'Matrix2DScaleX', buttonUrl: 'pages/matrix2D/Matrix2DScaleXSample' })\n        CommonButton({ buttonName: 'Matrix2DScaleY', buttonUrl: 'pages/matrix2D/Matrix2DScaleYSample' })\n        CommonButton({ buttonName: 'Matrix2DRotateX', buttonUrl: 'pages/matrix2D/Matrix2DRotateXSample' })\n        CommonButton({ buttonName: 'Matrix2DRotateY', buttonUrl: 'pages/matrix2D/Matrix2DRotateYSample' })\n        CommonButton({ buttonName: 'Matrix2DTranslateX', buttonUrl: 'pages/matrix2D/Matrix2DTranslateXSample' })\n        CommonButton({ buttonName: 'Matrix2DTranslateY', buttonUrl: 'pages/matrix2D/Matrix2DTranslateYSample' })\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DHome.ets", "project_name": "arkui_ace_engine-master", "id": "d0f9503091782e866aa1eecc70b658ea49bbb2df20af6751cb91c1da96595576"}
{"text": "import matrix2DRotateXTest from '../MyTest/Matrix2DRotateXTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct Matrix2DRotateXSample {\n  @State message: string = 'Matrix2D RotateX'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(matrix2DRotateXTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(20)\n          .fontWeight(FontWeight.Bold)\n        Button(\"Matrix2DRotateX\")\n          .onClick(() => {\n            let matrix: Matrix2D = new Matrix2D()\n            matrix.rotateX = Math.sin(45 / Math.PI)\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DRotateXSample.ets", "project_name": "arkui_ace_engine-master", "id": "2c8a4e1501e519db30afa00090979e1b3eff2ee180cf07f7783f351db419b24e"}
{"text": "import matrix2DRotateYTest from '../MyTest/Matrix2DRotateYTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct Matrix2DRotateYSample {\n  @State message: string = 'Matrix2D RotateY'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(matrix2DRotateYTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(20)\n          .fontWeight(FontWeight.Bold)\n        Button(\"Matrix2DRotateY\")\n          .onClick(() => {\n            let matrix: Matrix2D = new Matrix2D()\n            matrix.rotateY = Math.cos(45 / Math.PI)\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DRotateYSample.ets", "project_name": "arkui_ace_engine-master", "id": "a6e5118ab81ca68360778b6cb575b6f6f4d7e0957ac4be9a6a2fc7d31a4c0c3a"}
{"text": "import matrix2DScaleXTest from '../MyTest/Matrix2DScaleXTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct Matrix2DScaleXSample {\n  @State message: string = 'Matrix2D ScaleX'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(matrix2DScaleXTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(20)\n          .fontWeight(FontWeight.Bold)\n        Button(\"Matrix2DScaleX\")\n          .onClick(() => {\n            let matrix: Matrix2D = new Matrix2D()\n            matrix.scaleX = 1\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DScaleXSample.ets", "project_name": "arkui_ace_engine-master", "id": "fb9b97488ab4285b9b9576222fb93ff7300cd9fc1b107a25581795a0638dcf60"}
{"text": "import matrix2DScaleYTest from '../MyTest/Matrix2DScaleYTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct Matrix2DScaleYSample {\n  @State message: string = 'Matrix2D ScaleY'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(matrix2DScaleYTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(20)\n          .fontWeight(FontWeight.Bold)\n        Button(\"Matrix2DScaleY\")\n          .onClick(() => {\n            let matrix: Matrix2D = new Matrix2D()\n            matrix.scaleY = 1\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DScaleYSample.ets", "project_name": "arkui_ace_engine-master", "id": "9107f3d87595daf701e1f8be639fa1320d9f9837efcee0c2198a3a29c935033f"}
{"text": "import matrix2DTranslateXTest from '../MyTest/Matrix2DTranslateXTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct Matrix2DTranslateXSample {\n  @State message: string = 'Matrix2D TranslateX'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(matrix2DTranslateXTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(20)\n          .fontWeight(FontWeight.Bold)\n        Button(\"Matrix2DTranslateX\")\n          .onClick(() => {\n            let matrix: Matrix2D = new Matrix2D()\n            matrix.translateX = 10\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DTranslateXSample.ets", "project_name": "arkui_ace_engine-master", "id": "2bd82f899a1694e1b0fe68bad4ce542b14f6f6fba22dec959c7dc515bc1f8248"}
{"text": "import matrix2DTranslateYTest from '../MyTest/Matrix2DTranslateYTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct Matrix2DTranslateYSample {\n  @State message: string = 'Matrix2D TranslateY'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(matrix2DTranslateYTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(20)\n          .fontWeight(FontWeight.Bold)\n        Button(\"Matrix2DTranslateY\")\n          .onClick(() => {\n            let matrix: Matrix2D = new Matrix2D()\n            matrix.translateY = 10\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\matrix2D\\Matrix2DTranslateYSample.ets", "project_name": "arkui_ace_engine-master", "id": "3c47e394a0059a8d8deb38c21908b788cd7358aabae8961fd523bda0e9e8e8b9"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function canvasRenderingContext2DFontTest() {\n  \n  defineTest('canvasRenderingContext2DFontTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"canvasRenderingContext2DFontTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let canvas: Component = await driver.findComponent(Matcher.create().id('canvasFont').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('CanvasFont1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('CanvasFont2').enabled(true))\n    let button3: Component = await driver.findComponent(Matcher.create().text('CanvasFont3').enabled(true))\n    let button4: Component = await driver.findComponent(Matcher.create().text('CanvasFont4').enabled(true))\n    let button5: Component = await driver.findComponent(Matcher.create().text('CanvasFont5').enabled(true))\n\n    let font1: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(font1).$attrs.font, '30px sans-serif')\n\n    await button1.tap()\n    let font2: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(font2).$attrs.font, 'normal normal 14px sans-serif')\n\n    await button2.tap()\n    let font3: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(font3).$attrs.font, 'italic bold 14px serif')\n\n    await button3.tap()\n    let font4: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(font4).$attrs.font, 'normal bolder 14px monospace')\n\n    await button4.tap()\n    let font5: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(font5).$attrs.font, 'normal lighter 14px monospace')\n\n    await button5.tap()\n    let font6: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(font6).$attrs.font, 'normal 100 14px serif')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\CanvasRenderingContext2DFontTest.ets", "project_name": "arkui_ace_engine-master", "id": "e80c160ef97bbea07d9f1519a479d1ee074bed18a4ed8745d81c5deae689076e"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function canvasRenderingContext2DHeightTest() {\n  \n  defineTest('canvasRenderingContext2DHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"canvasRenderingContext2DHeightTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let canvas: Component = await driver.findComponent(Matcher.create().id('canvasHeight').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('CanvasHeight').enabled(true))\n\n    let height1: string = await canvas.getInspectorInfo()\n    assertFalse(JSON.parse(height1).$attrs.fillRect == undefined)\n    assertEqual(JSON.parse(height1).$attrs.fillRect.h, 250)\n\n    await button.tap()\n    let height2: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(height2).$attrs.fillRect.h, 350)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\CanvasRenderingContext2DHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "fe14cf7982596e1d5c94e0a77cef98345b12b06e60e2ed8b948b7ae032cf6ce3"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\n\nexport default async function canvasRenderingContext2DImageSmoothingQualityTest() {\n  \n  defineTest('canvasRenderingContext2DImageSmoothingQualityImageSmoothingQualityTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"canvasRenderingContext2DImageSmoothingQualityImageSmoothingQualityTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let canvas: Component = await driver.findComponent(Matcher.create().id('canvasImageSmoothingQuality').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('CanvasImageSmoothingQuality1').enabled(true))\n    let button2: Component =\n      await driver.findComponent(Matcher.create().text('CanvasImageSmoothingQuality2').enabled(true))\n\n    let imageSmoothingQuality1: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(imageSmoothingQuality1).$attrs.imageSmoothingQuality, 'high')\n\n    await button1.tap()\n    let imageSmoothingQuality2: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(imageSmoothingQuality2).$attrs.imageSmoothingQuality, 'medium')\n\n    await button2.tap()\n    let imageSmoothingQuality3: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(imageSmoothingQuality3).$attrs.imageSmoothingQuality, 'low')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\CanvasRenderingContext2DImageSmoothingQualityTest.ets", "project_name": "arkui_ace_engine-master", "id": "5a6fbd98303f5bdd8f98ae92a4988b6b153cf9024ff861b7a378c3897655b839"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function canvasRenderingContext2DLineDashOffsetTest() {\n  \n  defineTest('canvasRenderingContext2DLineDashOffsetTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"canvasRenderingContext2DLineDashOffsetTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let canvas: Component = await driver.findComponent(Matcher.create().id('canvasLineDashOffset').enabled(true))\n\n    let lineDashOffset: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(lineDashOffset).$attrs.lineDashOffset, 10.0)\n\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\CanvasRenderingContext2DLineDashOffsetTest.ets", "project_name": "arkui_ace_engine-master", "id": "411522ec107f005a5feb2d08714b46115b319932f3cf0f8b8367f54c0d9da395"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function canvasRenderingContext2DLineJoinTest() {\n  \n  defineTest('canvasRenderingContext2DLineJoinCanvasLineJoinTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"canvasRenderingContext2DLineJoinCanvasLineJoinTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let canvas: Component = await driver.findComponent(Matcher.create().id('canvasLineJoin').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('CanvasLineJoin1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('CanvasLineJoin2').enabled(true))\n\n    let lineJoin1: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(lineJoin1).$attrs.lineJoin, 'bevel')\n\n    await button1.tap()\n    let lineJoin2: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(lineJoin2).$attrs.lineJoin, 'round')\n\n    await button2.tap()\n    let lineJoin3: string = await canvas.getInspectorInfo()\n    assertEqual(JSON.parse(lineJoin3).$attrs.lineJoin, 'miter')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\CanvasRenderingContext2DLineJoin.ets", "project_name": "arkui_ace_engine-master", "id": "da026e260fd633929777d73a29d7b7953297c4b67a34eaac30f65c8705b8441a"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function imageBitmapTest() {\n  \n  defineTest('imageBitmapTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageBitmapTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageBitmap: Component = await driver.findComponent(Matcher.create().id('imageBitmap').enabled(true))\n\n    let imageBitmap1: string = await imageBitmap.getInspectorInfo()\n    assertTrue(false)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\ImageBitmapTest.ets", "project_name": "arkui_ace_engine-master", "id": "42a46cc2675bf663ba98cbaa9424a91028c4c4fafcf0a7c1cccfb7be13784d40"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function imageDataTest() {\n  \n  defineTest('imageDataTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageDataTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageData: Component = await driver.findComponent(Matcher.create().id('imageData').enabled(true))\n\n    let imageData1: string = await imageData.getInspectorInfo()\n    assertTrue(false)\n\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\ImageDataTest.ets", "project_name": "arkui_ace_engine-master", "id": "017f42dc74e587d80a18130de7469178a5515170c17597634572d34ca252873c"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function lineEndPointArrayTest() {\n  \n  defineTest('lineEndPointArrayTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"lineEndPointArrayTestDemo running\")\n    let driver: Tester = Tester.create()\n    let line: Component = await driver.findComponent(Matcher.create().id('Line').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('LineEndPointArray').enabled(true))\n\n    let endPoint1: string = await line.getInspectorInfo()\n    assertEqual(JSON.parse(endPoint1).$attrs.endPoint, [200, 200])\n\n    await button.tap()\n    let endPoint2: string = await line.getInspectorInfo()\n    assertEqual(JSON.parse(endPoint2).$attrs.endPoint, [100, 300])\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\LineEndPointArrayTest.ets", "project_name": "arkui_ace_engine-master", "id": "c06174822318206b9b7b1ae495cbc5386b067572216c6df799d63a0c1324bfd9"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function lineEndPointTest() {\n  \n  defineTest('lineEndPointTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"lineEndPointTestDemo running\")\n    let driver: Tester = Tester.create()\n    let line: Component = await driver.findComponent(Matcher.create().id('lineEndPoint').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('LineEndPoint').enabled(true))\n\n    let endPoint1: string = await line.getInspectorInfo()\n    assertEqual(JSON.parse(endPoint1).$attrs.endPoint[0], 200)\n    assertEqual(JSON.parse(endPoint1).$attrs.endPoint[1], 200)\n\n    await button.tap()\n    let endPoint2: string = await line.getInspectorInfo()\n    assertEqual(JSON.parse(endPoint2).$attrs.endPoint[0], 100)\n    assertEqual(JSON.parse(endPoint2).$attrs.endPoint[1], 300)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\LineEndPointTest.ets", "project_name": "arkui_ace_engine-master", "id": "693c4fd40b3fbcdb522cd282c6b9cc7c1e5049ab8f08ef6cced563538a47b87e"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function lineStartPointTest() {\n  \n  defineTest('lineStartPointTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"lineStartPointTestDemo running\")\n    let driver: Tester = Tester.create()\n    let line: Component = await driver.findComponent(Matcher.create().id('lineStartPoint').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('LineStartPoint').enabled(true))\n\n    let startPoint1: string = await line.getInspectorInfo()\n    assertEqual(JSON.parse(startPoint1).$attrs.startPoint[0], 0)\n    assertEqual(JSON.parse(startPoint1).$attrs.startPoint[1], 0)\n\n    await button.tap()\n    let startPoint2: string = await line.getInspectorInfo()\n    assertEqual(JSON.parse(startPoint2).$attrs.startPoint[0], 100)\n    assertEqual(JSON.parse(startPoint2).$attrs.startPoint[1], 100)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\LineStartPointTest.ets", "project_name": "arkui_ace_engine-master", "id": "4e51eed164ff6d9c8990abf8e55be0f7a043aa29e4c3bef62053d4d66b72051b"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function lineStrokeLineCapTest() {\n  \n  defineTest('lineStrokeLineCapTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"lineStrokeLineCapTestDemo running\")\n    let driver: Tester = Tester.create()\n    let line1: Component = await driver.findComponent(Matcher.create().id('lineStrokeLineCap1').enabled(true))\n    let line2: Component = await driver.findComponent(Matcher.create().id('lineStrokeLineCap2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('LineStrokeLineCap').enabled(true))\n\n    let strokeLineCap1: string = await line1.getInspectorInfo()\n    assertEqual(JSON.parse(strokeLineCap1).$attrs.strokeLineCap, 'LineCapStyle.Butt')\n\n    let strokeLineCap2: string = await line2.getInspectorInfo()\n    assertEqual(JSON.parse(strokeLineCap2).$attrs.strokeLineCap, 'LineCapStyle.Round')\n\n    await button.tap()\n    let strokeLineCap3: string = await line2.getInspectorInfo()\n    assertEqual(JSON.parse(strokeLineCap3).$attrs.strokeLineCap, 'LineCapStyle.Square')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\LineStrokeLineCapTest.ets", "project_name": "arkui_ace_engine-master", "id": "c8d81bfcce1be8565222e3d10bd697ea86b37d749615f469f45779950735b650"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function matrix2DRotateXTest() {\n  \n  defineTest('matrix2DRotateXTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"matrix2DRotateXTestDemo running\")\n    let driver: Tester = Tester.create()\n    let button: Component = await driver.findComponent(Matcher.create().text('Matrix2DRotateX').enabled(true))\n    await button.tap()\n    assertTrue(false)\n\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\Matrix2DRotateXTest.ets", "project_name": "arkui_ace_engine-master", "id": "86af6cc9d8c261b93ab9b5977247fa65f3696e0a7c1998457712886649510d3b"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function matrix2DTranslateYTest() {\n  \n  defineTest('matrix2DTranslateYTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"matrix2DTranslateYTestDemo running\")\n    let driver: Tester = Tester.create()\n    let button: Component = await driver.findComponent(Matcher.create().text('Matrix2DTranslateY').enabled(true))\n    await button.tap()\n    assertTrue(false)\n\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\Matrix2DTranslateYTest.ets", "project_name": "arkui_ace_engine-master", "id": "cbea281768286c76238b3b5f8e93a9111f723331fa392973479403898657eb5d"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function offScreenCanvasHeightTest() {\n  \n  defineTest('offScreenCanvasHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"offScreenCanvasHeightTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let offScreenCanvas: Component =\n      await driver.findComponent(Matcher.create().id('offScreenCanvasHeight').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('OffScreenCanvasHeight').enabled(true))\n\n    let offCanvasHeight1: string = await offScreenCanvas.getInspectorInfo()\n    assertFalse(JSON.parse(offCanvasHeight1).$attrs.fillRect == undefined)\n    assertEqual(JSON.parse(offCanvasHeight1).$attrs.fillRect.height, 100)\n\n    await button.tap()\n    let offCanvasHeight2: string = await offScreenCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(offCanvasHeight2).$attrs.fillRect.height, 200)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\OffScreenCanvasHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "36e4ee85ca32663ac1084578d815b268a2fe0c00caa1ff5d8df10674bc6baaa9"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function offScreenCanvasRenderingContext2DFontTest() {\n  \n  defineTest('offScreenCanvasRenderingContext2DFontTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"offScreenCanvasRenderingContext2DFontTestDemo running\")\n    let driver: Tester = Tester.create()\n    let offCanvas: Component =\n      await driver.findComponent(Matcher.create().id('offCanvasRenderingContext2DFont').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('OffCanvasRenderingContext2DFont1').enabled(true))\n    let button2: Component =\n      await driver.findComponent(Matcher.create().text('OffCanvasRenderingContext2DFont2').enabled(true))\n\n    let offFont1: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(offFont1).$attrs.font, '30px')\n\n    await button1.tap()\n    let offFont2: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(offFont2).$attrs.font, '30px,bolder,100')\n\n    await button2.tap()\n    let offFont3: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(offFont3).$attrs.font, '30px,100,200')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\OffScreenCanvasRenderingContext2DFontTest.ets", "project_name": "arkui_ace_engine-master", "id": "7bf9e5f08990b9fe75490907dbcba4a8e4bc59df709309baa44b5657d1005953"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function offScreenCanvasRenderingContext2DLineDashOffsetTest() {\n  \n  defineTest('offScreenCanvasRenderingContext2DLineDashOffsetTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"offScreenCanvasRenderingContext2DLineDashOffsetTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let offCanvas: Component =\n      await driver.findComponent(Matcher.create().id('offScreenCanvasRenderingContext2DLineDashOffset').enabled(true))\n\n    let lineDashOffset: string = await offCanvas.getInspectorInfo()\n    assertFalse(JSON.parse(lineDashOffset).$attrs.lineDashOffset == undefined)\n    assertEqual(JSON.parse(lineDashOffset).$attrs.lineDashOffset, 10.0)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\OffScreenCanvasRenderingContext2DLineDashOffsetTest.ets", "project_name": "arkui_ace_engine-master", "id": "10c9bd7fe96fad9ed12c1c366109261d14b89a75f6e3bfe587b8a9f13a9bf267"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function offScreenCanvasRenderingContext2DLineWidthTest() {\n  \n  defineTest('offScreenCanvasRenderingContext2DLineWidthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"offScreenCanvasRenderingContext2DLineWidthTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let offCanvas: Component =\n      await driver.findComponent(Matcher.create().id('offScreenCanvasRenderingContext2DLineWidth').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('OffScreenCanvasRenderingContext2DLineWidth').enabled(true))\n\n    let lineWidth1: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(lineWidth1).$attrs.lineWidth, 5)\n\n    await button.tap()\n    let lineWidth2: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(lineWidth2).$attrs.lineWidth, 10)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\OffScreenCanvasRenderingContext2DLineWidthTest.ets", "project_name": "arkui_ace_engine-master", "id": "218ba4d52e1e71b5584950e17ad1c736480f1f8ce5ceee7e98952723dc816109"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function OffScreenCanvasRenderingContext2DShadowColorTest() {\n  \n  defineTest('OffScreenCanvasRenderingContext2DShadowColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"OffScreenCanvasRenderingContext2DShadowColorTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let offCanvas: Component =\n      await driver.findComponent(Matcher.create().id('offScreenCanvasRenderingContext2DShadowColor').enabled(true))\n\n    let shadowColor: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(shadowColor).$attrs.shadowColor, 'rgb(0,0,255)')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\OffScreenCanvasRenderingContext2DShadowColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "5f5d5e338a95ec2110e598b17042ce0d36370c3aa7a57f212f21babb33098d3d"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function offScreenCanvasRenderingContext2DShadowOffsetYTest() {\n  \n  defineTest('offScreenCanvasRenderingContext2DShadowOffsetYTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"offScreenCanvasRenderingContext2DShadowOffsetYTestDemo running\")\n\n    let driver: Tester = Tester.create()\n    let offCanvas: Component =\n      await driver.findComponent(Matcher.create().id('offScreenCanvasRenderingContext2DShadowOffsetY').enabled(true))\n\n    let shadowOffsetY: string = await offCanvas.getInspectorInfo()\n    assertEqual(JSON.parse(shadowOffsetY).$attrs.shadowOffsetY, 20)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\OffScreenCanvasRenderingContext2DShadowOffsetYTest.ets", "project_name": "arkui_ace_engine-master", "id": "b4d24387b7ad8a10eb14e7125096f3f0a2560a9bdf8b3e9f09bc392aaa530631"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function pathAntiAliasTest() {\n  \n  defineTest('pathAntiAliasTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"pathAntiAliasTestDemo running\")\n    let driver: Tester = Tester.create()\n    let path: Component = await driver.findComponent(Matcher.create().id('pathAntiAlias').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PathAntiAlias').enabled(true))\n\n    let antiAlias1: string = await path.getInspectorInfo()\n    assertTrue(JSON.parse(antiAlias1).$attrs.antiAlias)\n\n    await button.tap()\n    let antiAlias2: string = await path.getInspectorInfo()\n    assertFalse(JSON.parse(antiAlias2).$attrs.antiAlias)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\PathAntiAliasTest.ets", "project_name": "arkui_ace_engine-master", "id": "6d8cb5ded90566c59a95192900b2638aef936f34d0b18a94384a07cc549b87a4"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function pathCommandsTest() {\n  \n  defineTest('pathCommandsTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"pathCommandsTestDemo running\")\n    let driver: Tester = Tester.create()\n    let path: Component = await driver.findComponent(Matcher.create().id('pathCommands').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PathCommands').enabled(true))\n\n    let commands1: string = await path.getInspectorInfo()\n    assertEqual(JSON.parse(commands1).$attrs.commands, 'M0 0 L600 0')\n\n    await button.tap()\n    let commands2: string = await path.getInspectorInfo()\n    assertEqual(JSON.parse(commands2).$attrs.commands, 'M0 0 H200 V200 H0 Z')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\PathCommandsTest.ets", "project_name": "arkui_ace_engine-master", "id": "fa7a156cb20d9efa2a41711f6b5f7cc9b79b3665cf866d04017090052a28403e"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function polygonFillOpacityTest() {\n  \n  defineTest('polygonFillOpacityTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"polygonFillOpacityTestDemo running\")\n    let driver: Tester = Tester.create()\n    let polygon1: Component = await driver.findComponent(Matcher.create().id('polygonFillOpacity1').enabled(true))\n    let polygon2: Component = await driver.findComponent(Matcher.create().id('polygonFillOpacity2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PolygonFillOpacity').enabled(true))\n\n    let fillOpacity1: string = await polygon1.getInspectorInfo()\n    assertEqual(JSON.parse(fillOpacity1).$attrs.fillOpacity, '0.000000')\n\n    await button.tap()\n    let fillOpacity2: string = await polygon1.getInspectorInfo()\n    assertEqual(JSON.parse(fillOpacity2).$attrs.fillOpacity, '1.000000')\n\n    let fillOpacity3: string = await polygon2.getInspectorInfo()\n    assertEqual(JSON.parse(fillOpacity3).$attrs.fillOpacity, $r('app.string.fill_opacity'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\PolygonFillOpacityTest.ets", "project_name": "arkui_ace_engine-master", "id": "fb8bc27da45585d082c43fcca12d4273627a7794fb543eed65d7805529531712"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function polygonStrokeLineJoinTest() {\n  \n  defineTest('polygonStrokeLineJoinTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"polygonStrokeLineJoinTestDemo running\")\n    let driver: Tester = Tester.create()\n    let polygon1: Component = await driver.findComponent(Matcher.create().id('polygonStrokeLineJoin1').enabled(true))\n    let polygon2: Component = await driver.findComponent(Matcher.create().id('polygonStrokeLineJoin2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PolygonStrokeLineJoin').enabled(true))\n\n    let strokeLineJoin1: string = await polygon1.getInspectorInfo()\n    assertEqual(JSON.parse(strokeLineJoin1).$attrs.strokeLineJoin, 'LineJoinStyle.Miter')\n\n    let strokeLineJoin2: string = await polygon2.getInspectorInfo()\n    assertEqual(JSON.parse(strokeLineJoin2).$attrs.strokeLineJoin, 'LineJoinStyle.Round')\n\n    await button.tap()\n    let strokeLineJoin3: string = await polygon2.getInspectorInfo()\n    assertEqual(JSON.parse(strokeLineJoin3).$attrs.strokeLineJoin, 'LineJoinStyle.Bevel')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\PolygonStrokeLineJoinTest.ets", "project_name": "arkui_ace_engine-master", "id": "4c5f96819c1ba0a285fcbab8a1b8e43e1ccfeb6a4c8e2fb34aaefcf7a3a268b1"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function rectRadiusTest() {\n  \n  defineTest('rectRadiusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"rectRadiusTestDemo running\")\n    let driver: Tester = Tester.create()\n    let rect1: Component = await driver.findComponent(Matcher.create().id('rectRadius1').enabled(true))\n    let rect2: Component = await driver.findComponent(Matcher.create().id('rectRadius2').enabled(true))\n    let rect3: Component = await driver.findComponent(Matcher.create().id('rectRadius3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('RectRadius').enabled(true))\n\n    let radius1: string = await rect1.getInspectorInfo()\n    assertEqual(JSON.parse(radius1).$attrs.radius, 20)\n\n    await button.tap()\n    let radius2: string = await rect1.getInspectorInfo()\n    assertEqual(JSON.parse(radius2).$attrs.radius, '50')\n\n    let radius3: string = await rect2.getInspectorInfo()\n    assertEqual(JSON.parse(radius3).$attrs.radius, [['40', '40'], ['20', ' 20'], ['40', ' 40'], ['20', '20']])\n\n    let radius4: string = await rect3.getInspectorInfo()\n    assertEqual(JSON.parse(radius4).$attrs.radius, [[40, 40], [20, 20], [40, 40], [20, 20]])\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\RectRadiusTest.ets", "project_name": "arkui_ace_engine-master", "id": "aed7568dc69bbf9ccaa5d3aef14224ffc5275175d11180e58188ac09941ba5b4"}
{"text": "import {\n  assertContain,\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function rectStrokeTest() {\n  \n  defineTest('rectStrokeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"rectStrokeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let rect1: Component = await driver.findComponent(Matcher.create().id('rectStroke1').enabled(true))\n    let rect2: Component = await driver.findComponent(Matcher.create().id('rectStroke2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('RectStroke1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('RectStroke2').enabled(true))\n\n    let stroke1: string = await rect1.getInspectorInfo()\n    assertEqual(JSON.parse(stroke1).$attrs.stroke.toLowerCase(), Color.Red)\n\n    await button1.tap()\n    let stroke2: string = await rect1.getInspectorInfo()\n    assertEqual(JSON.parse(stroke2).$attrs.stroke, '#FFFF0000')\n\n    let stroke3: string = await rect2.getInspectorInfo()\n    assertEqual(JSON.parse(stroke3).$attrs.stroke, '#FFFF0000')\n\n    await button2.tap()\n    let stroke4: string = await rect2.getInspectorInfo()\n    assertEqual(JSON.parse(stroke4).$attrs.stroke, $r('app.color.color_red'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\RectStrokeTest.ets", "project_name": "arkui_ace_engine-master", "id": "78369eff500156de5363d3e38a954eadf538a996ee05dbb5b8597c7852a24281"}
{"text": "import { assertEqual, assertContain, assertFalse, assertTrue } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function shapeStrokeMiterLimitTest() {\n  \n  defineTest('shapeStrokeMiterLimitTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"shapeStrokeMiterLimitTestDemo running\")\n    let driver: Tester = Tester.create()\n    let shape: Component = await driver.findComponent(Matcher.create().id('shapeStrokeMiterLimit').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ShapeStrokeMiterLimit1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ShapeStrokeMiterLimit2').enabled(true))\n\n    let strokeMiterLimit1: string = await shape.getInspectorInfo()\n    assertEqual(JSON.parse(strokeMiterLimit1).$attrs.strokeMiterLimit, '5.000000')\n\n    await button1.tap()\n    let strokeMiterLimit2: string = await shape.getInspectorInfo()\n    assertEqual(JSON.parse(strokeMiterLimit2).$attrs.strokeMiterLimit, '4.000000')\n\n    await button2.tap()\n    let strokeMiterLimit3: string = await shape.getInspectorInfo()\n    assertEqual(JSON.parse(strokeMiterLimit3).$attrs.strokeMiterLimit, '1.000000')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\MyTest\\ShapeStrokeMiterLimitTest.ets", "project_name": "arkui_ace_engine-master", "id": "607e642763e134f22c967d2cb8e2f389f6c7fb2b193ff615546da336863304aa"}
{"text": "import offScreenCanvasHeightTest from '../MyTest/OffScreenCanvasHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffScreenCanvasHeightSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private offCanvas: OffscreenCanvas = new OffscreenCanvas(200, 300)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(offScreenCanvasHeightTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Start, justifyContent: FlexAlign.Start }) {\n      Column() {\n        Canvas(this.context)\n          .width('100%')\n          .height('100%')\n          .borderWidth(5)\n          .borderColor('#057D02')\n          .backgroundColor('#FFFFFF')\n          .id('offScreenCanvasHeight')\n          .onReady(() => {\n            this.context.fillStyle = '#CDCDCD'\n            this.context.fillRect(10, 0, 100, this.offCanvas.height = 100)\n          })\n        Button('OffScreenCanvasHeight')\n          .onClick(() => {\n            this.context.fillStyle = '#CDCDCD'\n            this.context.fillRect(150, 0, 100, this.offCanvas.height = 200)\n          })\n      }\n    }.width('100%').height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas\\OffscreenCanvasHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "9d9407fdc997bba96bdad29e131ce74cab6b172d60e9cee4f71d43d1bfcf429d"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct OffScreenCanvasHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('textHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({\n          buttonName: 'OffScreenCanvasWidthSample',\n          buttonUrl: 'pages/offscreen_canvas/OffscreenCanvasWidthSample'\n        })\n        CommonButton({\n          buttonName: 'OffScreenCanvasHeightSample',\n          buttonUrl: 'pages/offscreen_canvas/OffscreenCanvasHeightSample'\n        })\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas\\OffscreenCanvasHome.ets", "project_name": "arkui_ace_engine-master", "id": "4d711c92f95be2bdd1db0b918bac57a4b7f846d33c5457b0207210534318c3e9"}
{"text": "import SampleTest from '../MyTest/OffScreenCanvasWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffScreenCanvasWidthSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private offCanvas: OffscreenCanvas = new OffscreenCanvas(200, 300)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(SampleTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Start, justifyContent: FlexAlign.Start }) {\n      Column() {\n        Canvas(this.context)\n          .width('100%')\n          .height('100%')\n          .borderWidth(5)\n          .borderColor('#057D02')\n          .backgroundColor('#FFFFFF')\n          .id('offScreenCanvasWidth')\n          .onReady(() => {\n            this.context.fillStyle = '#CDCDCD'\n            this.context.fillRect(10, 0, this.offCanvas.width = 100, 100)\n          })\n        Button('OffScreenCanvasWidth')\n          .onClick(() => {\n            this.context.fillStyle = '#CDCDCD'\n            this.context.fillRect(10, 150, this.offCanvas.width = 200, 100)\n          })\n      }\n    }.width('100%').height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas\\OffscreenCanvasWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "a56a55972e39653a74664b78b7e938d3f16aa2b5e8b62309bd384566f2f7d99b"}
{"text": "import offScreenCanvasRenderingContext2DFillStyleStringTest\n  from '../MyTest/OffScreenCanvasRenderingContext2DFillStyleStringTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffScreenCanvasRenderingContext2DFillStyleSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private offCanvas: OffscreenCanvas = new OffscreenCanvas(600, 600)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(offScreenCanvasRenderingContext2DFillStyleStringTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('offScreenCanvasRenderingContext2DFillStyle')\n        .onReady(() => {\n          let offContext = this.offCanvas.getContext(\"2d\", this.settings)\n          offContext.fillStyle = '#0000ff'\n          offContext.fillRect(20, 20, 150, 150)\n          let image = this.offCanvas.transferToImageBitmap()\n          this.context.transferFromImageBitmap(image)\n        })\n      Button('OffScreenCanvasRenderingContext2DFillStyle')\n        .onClick(() => {\n          let offContext = this.offCanvas.getContext(\"2d\", this.settings)\n          offContext.fillStyle = 0xFFC1C1\n          offContext.fillRect(200, 20, 150, 150)\n          let image = this.offCanvas.transferToImageBitmap()\n          this.context.transferFromImageBitmap(image)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas_rendering_context2D\\OffscreenCanvasRenderingContext2DFillStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "bb1ac402266242bd2f0970e914aefaa497553418f5999d5ce2224ca95d2a9a2c"}
{"text": "import offScreenCanvasRenderingContext2DFontTest from '../MyTest/OffScreenCanvasRenderingContext2DFontTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n\n@Entry\n@Component\nstruct OffScreenCanvasRenderingContext2DFontSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private offCanvas: OffscreenCanvas = new OffscreenCanvas(600, 600)\n  private offScreenCanvasRenderingContext2DFont: string = '30px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(offScreenCanvasRenderingContext2DFontTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('offCanvasRenderingContext2DFont')\n        .onReady(() => {\n          let offContext = this.offCanvas.getContext(\"2d\", this.settings)\n          offContext.font = this.offScreenCanvasRenderingContext2DFont\n          offContext.fillText(\"Hello px\", 20, 60)\n          let image = this.offCanvas.transferToImageBitmap()\n          this.context.transferFromImageBitmap(image)\n        })\n      Button('OffCanvasRenderingContext2DFont1')\n        .onClick(() => {\n          this.offScreenCanvasRenderingContext2DFont = '30px,bolder,100'\n          let offContext = this.offCanvas.getContext(\"2d\", this.settings)\n          offContext.font = this.offScreenCanvasRenderingContext2DFont\n          offContext.fillText(\"Hello px\", 70, 60)\n          let image = this.offCanvas.transferToImageBitmap()\n          this.context.transferFromImageBitmap(image)\n        })\n      Button('OffCanvasRenderingContext2DFont2')\n        .onClick(() => {\n          this.offScreenCanvasRenderingContext2DFont = '30px,100,200'\n          let offContext = this.offCanvas.getContext(\"2d\", this.settings)\n          offContext.font = this.offScreenCanvasRenderingContext2DFont\n          offContext.fillText(\"Hello px\", 150, 60)\n          let image = this.offCanvas.transferToImageBitmap()\n          this.context.transferFromImageBitmap(image)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas_rendering_context2D\\OffscreenCanvasRenderingContext2DFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "6ae2fcc62dc04a2065bc46925b5a8c578069e8c8cf654f4841930fbccbe0147b"}
{"text": "import offScreenCanvasRenderingContext2DImageSmoothingEnabledTest\n  from '../MyTest/OffScreenCanvasRenderingContext2DImageSmoothingEnabledTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffScreenCanvasRenderingContext2DImageSmoothingEnabledSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private img: ImageBitmap = new ImageBitmap(\"../image_bitmap/image.jpg\")\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(offScreenCanvasRenderingContext2DImageSmoothingEnabledTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('offCanvasRenderingContext2DImageSmoothingEnabled')\n        .onReady(() => {\n          this.context.imageSmoothingEnabled = false\n          this.context.drawImage(this.img, 0, 0, 400, 200)\n        })\n      Button('OffCanvasRenderingContext2DImageSmoothingEnabled')\n        .onClick(() => {\n          this.context.imageSmoothingEnabled = true\n          this.context.drawImage(this.img, 500, 0, 400, 200)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas_rendering_context2D\\OffscreenCanvasRenderingContext2DImageSmoothingEnabledSample.ets", "project_name": "arkui_ace_engine-master", "id": "e43cfe1f2489d2c7512d272af30d4566ca20de41fc21dd06903502af0096d6a8"}
{"text": "import offScreenCanvasRenderingContext2DLineWidthTest from '../MyTest/OffScreenCanvasRenderingContext2DLineWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffScreenCanvasRenderingContext2DLineWidthSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(offScreenCanvasRenderingContext2DLineWidthTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('offScreenCanvasRenderingContext2DLineWidth')\n        .onReady(() => {\n          this.context.lineWidth = 5\n          this.context.strokeRect(25, 25, 85, 105)\n        })\n      Button('OffScreenCanvasRenderingContext2DLineWidth')\n        .onClick(() => {\n          this.context.lineWidth = 10\n          this.context.strokeRect(200, 25, 85, 105)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas_rendering_context2D\\OffscreenCanvasRenderingContext2DLineWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "4a46cdbb642d5b6d4a9a28fcee04618258461e498de92a6d5ec615402aa9dc77"}
{"text": "import OffScreenCanvasRenderingContext2DStrokeStyleTest\n  from '../MyTest/OffScreenCanvasRenderingContext2DStrokeStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct OffScreenCanvasRenderingContext2DStrokeStyleSample {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private offCanvas: OffscreenCanvas = new OffscreenCanvas(600, 600)\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(OffScreenCanvasRenderingContext2DStrokeStyleTest)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      Canvas(this.context)\n        .width('100%')\n        .height('100%')\n        .backgroundColor('#ffff00')\n        .id('offScreenCanvasRenderingContext2DStrokeStyle')\n        .onReady(() => {\n          this.context.strokeStyle = 0x0000ff\n          this.context.strokeRect(25, 25, 155, 105)\n        })\n      Button('OffScreenCanvasRenderingContext2DStrokeStyle')\n        .onClick(() => {\n          this.context.strokeStyle = '#c12c1f'\n          this.context.strokeRect(25, 150, 155, 105)\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\offscreen_canvas_rendering_context2D\\OffscreenCanvasRenderingContext2DStrokeStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "3b02fe2162e3e9b49daed307ea4a20da1989dcea421bb7e8a9c92c4fdbb6143f"}
{"text": "import pathAntiAliasTest from '../MyTest/PathAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathAntiAliasSample {\n  @State pathAntiAliasValue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Black)\n        .strokeWidth(3)\n        .antiAlias(this.pathAntiAliasValue)\n        .id('pathAntiAlias')\n      Button('PathAntiAlias')\n        .onClick(() => {\n          this.pathAntiAliasValue = !this.pathAntiAliasValue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "5e17d22b36dbc19ffc34b7a1c4257081e8943ea120e1a85f6bf8c9df85fd620c"}
{"text": "import pathCommandsTest from '../MyTest/PathCommandsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathCommandsSample {\n  @State pathCommandsValue: string = 'M0 0 L600 0'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathCommandsTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('600px')\n        .height('10px')\n        .commands(this.pathCommandsValue)\n        .stroke(Color.Black)\n        .strokeWidth(5)\n        .id('pathCommands')\n      Button('PathCommands')\n        .onClick(() => {\n          this.pathCommandsValue = 'M0 0 H200 V200 H0 Z'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathCommandsSample.ets", "project_name": "arkui_ace_engine-master", "id": "57d64fec4171bd24a6e119a077c3b67f6d655bb4adb69f8d2f2f92b389d3a8f7"}
{"text": "import pathFillOpacityTest from '../MyTest/PathFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathFillOpacitySample {\n  @State pathFillOpacity: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathFillOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .fillOpacity(this.pathFillOpacity)\n        .id('pathFillOpacity1')\n      Button('PathFillOpacity')\n        .onClick(() => {\n          this.pathFillOpacity = '10px'\n        })\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .fillOpacity($r('app.string.fill_opacity'))\n        .id('pathFillOpacity2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "8bf6aab50538f162c57400ab0a3383e083cb0b2c9ee29feba4923ca1fde74ab1"}
{"text": "import PathFillTest from '../MyTest/PathFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathFillSample {\n  @State pathFillColorValue1: Color | number = Color.Blue\n  @State pathFillColorValue2: string | Resource = 'rgb(0,0,255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(PathFillTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .fill(this.pathFillColorValue1)\n        .id('pathFill1')\n      Button('PathFill1')\n        .onClick(() => {\n          this.pathFillColorValue1 = 0xff0000\n        })\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .fill(this.pathFillColorValue2)\n        .id('pathFill2')\n      Button('PathFill2')\n        .onClick(() => {\n          this.pathFillColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "3ec8314f3da6902706a6460fe957fe706f56bba24b91f8d6f732cdb1e5528fd6"}
{"text": "import pathStrokeDashArrayTest from '../MyTest/PathStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeDashArraySample {\n  @State pathStrokeDashArrayValue: Array<number> = [1]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeDashArrayTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeDashArray(this.pathStrokeDashArrayValue)\n        .strokeDashOffset(-5)\n        .id('pathStrokeDashArray')\n      Button('PathStrokeDashArray')\n        .onClick(() => {\n          this.pathStrokeDashArrayValue = [5]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "73086dedfda442bf520cac0e97c265db5574776ae6c3d3e31e7a2d11942881b6"}
{"text": "import pathStrokeDashOffsetTest from '../MyTest/PathStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeDashOffsetSample {\n  @State pathStrokeDashOffsetValue: number | string = -5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeDashArray([10])\n        .strokeDashOffset(this.pathStrokeDashOffsetValue)\n        .id('pathStrokeDashOffset')\n      Button('PathStrokeDashOffset')\n        .onClick(() => {\n          this.pathStrokeDashOffsetValue = 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "16c5884424f206e5a01395e948b0477094c33183b3c1da2e386b472c4afce476"}
{"text": "import pathStrokeLineCapTest from '../MyTest/PathStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeLineCapSample {\n  @State pathStrokeLineCapType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('pathStrokeLineCap1')\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeLineCap(this.pathStrokeLineCapType)\n        .id('pathStrokeLineCap2')\n      Button('PathStrokeLineCap')\n        .onClick(() => {\n          this.pathStrokeLineCapType = LineCapStyle.Square\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "28eac296a0c4d5b5cba804c2148c3406814f00347be5d905470eed4c23ec56c8"}
{"text": "import pathStrokeLineJoinTest from '../MyTest/PathStrokeLineJoinTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeLineJoinSample {\n  @State pathStrokeLineJoinType: LineJoinStyle = LineJoinStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeLineJoinTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeLineJoin(LineJoinStyle.Bevel)\n        .id('pathStrokeLineJoin1')\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeLineJoin(this.pathStrokeLineJoinType)\n        .id('pathStrokeLineJoin2')\n      Button('PathStrokeLineJoin')\n        .onClick(() => {\n          this.pathStrokeLineJoinType = LineJoinStyle.Miter\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeLineJoinSample.ets", "project_name": "arkui_ace_engine-master", "id": "68a08c92536fa5808b5a0c8a70e3e8ad33f47428478e12e1e413be4f42e2dbd1"}
{"text": "import pathStrokeMiterLimitTest from '../MyTest/PathStrokeMiterLimitTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeMiterLimitSample {\n  @State PathStrokeMiterLimitValue: number | string = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeMiterLimitTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeLineJoin(LineJoinStyle.Miter)\n        .strokeMiterLimit(this.PathStrokeMiterLimitValue)\n        .id('pathStrokeMiterLimit')\n      Button('PathStrokeMiterLimit')\n        .onClick(() => {\n          this.PathStrokeMiterLimitValue = '15'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeMiterLimitSample.ets", "project_name": "arkui_ace_engine-master", "id": "f007a0c95366e0ff79edb27b5f9abfbae5b6a78d4df44c85eecdc7603aa99369"}
{"text": "import pathStrokeOpacityTest from '../MyTest/PathStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeOpacitySample {\n  @State pathStrokeOpacityValue: number | string = -5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M0 100 A30 20 20 0 0 200 100 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeOpacity(this.pathStrokeOpacityValue)\n        .id('pathStrokeOpacity1')\n      Button('PathStrokeOpacity')\n        .onClick(() => {\n          this.pathStrokeOpacityValue = '5px'\n        })\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M0 100 A30 20 20 0 0 200 100 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeOpacity($r('app.string.stroke_opacity'))\n        .id('pathStrokeOpacity2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "c04affbfe32492d71ed8279422422d39557ee0eb3e7614d27543eb165e5c0e67"}
{"text": "import pathStrokeTest from '../MyTest/PathStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeSample {\n  @State pathStrokeColorValue1: Color | string = Color.Red\n  @State pathStrokeColorValue2: number | Resource = 0x0000ff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(this.pathStrokeColorValue1)\n        .id('pathStroke1')\n      Button('PathStroke1')\n        .onClick(() => {\n          this.pathStrokeColorValue1 = 'rgb(0,0,255)'\n        })\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(this.pathStrokeColorValue2)\n        .id('pathStroke2')\n      Button('PathStroke2')\n        .onClick(() => {\n          this.pathStrokeColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d5a1561482606ca23e1470a8c13eaa1a43ee85c7620600a29fc79e8649ab9935"}
{"text": "import pathStrokeWidthTest from '../MyTest/PathStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PathStrokeWidthSample {\n  @State pathStrokeWidthValue: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(pathStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth(this.pathStrokeWidthValue)\n        .id('pathStrokeWidth1')\n      Button('PathStrokeWidth')\n        .onClick(() => {\n          this.pathStrokeWidthValue = '10px'\n        })\n      Path()\n        .width('210px')\n        .height('310px')\n        .commands('M100 0 L200 240 L0 240 Z')\n        .stroke(Color.Blue)\n        .strokeWidth($r('app.string.stroke_width'))\n        .id('pathStrokeWidth2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\path\\PathStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "6d5fd8fc7ea8a36c33b171a49b19a25c0799a4b82ada2190ad6db7ad2a20403c"}
{"text": "import polygonAntiAliasTest from '../MyTest/PolygonAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonAntiAliasSample {\n  @State polygonAntiAliasValue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[50, 0], [0, 50], [20, 100], [80, 100], [100, 50]])\n        .antiAlias(this.polygonAntiAliasValue)\n        .id('polygonAntiAlias')\n      Button('PolygonAntiAlias')\n        .onClick(() => {\n          this.polygonAntiAliasValue = !this.polygonAntiAliasValue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "568d633a0be3db2674cc44911fe97f52c86336ef1ec7eec5e1d3d9e0b698a819"}
{"text": "import SampleTest from '../MyTest/PolygonFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonFillOpacitySample {\n  @State polygonFillOpacityValue: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(SampleTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .fillOpacity(this.polygonFillOpacityValue)\n        .id('polygonFillOpacity1')\n      Button('PolygonFillOpacity')\n        .onClick(() => {\n          this.polygonFillOpacityValue = '10px'\n        })\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .fill(Color.Green)\n        .fillOpacity($r('app.string.fill_opacity'))\n        .id('polygonFillOpacity2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "766ce2075a6eb8f99c6d36df5dd57761bdb03e9827f952aebd20c83ccd8167d4"}
{"text": "import polygonFillTest from '../MyTest/PolygonFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonFillSample {\n  @State polygonFillColorValue: Color | number = Color.Green\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonFillTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon({ width: 100, height: 100 })\n        .points([[0, 0], [50, 100], [100, 0]])\n        .fill(this.polygonFillColorValue)\n        .id('polygonFill1')\n      Button('PolygonFill')\n        .onClick(() => {\n          this.polygonFillColorValue = 0xff0000\n        })\n      Polygon({ width: 100, height: 100 })\n        .points([[0, 0], [50, 100], [100, 0]])\n        .fill('rgb(0,255,0)')\n        .id('polygonFill2')\n      Polygon({ width: 100, height: 100 })\n        .points([[0, 0], [50, 100], [100, 0]])\n        .fill($r('app.color.color_red'))\n        .id('polygonFill3')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "02aa9f0db625bc9ed7a0a9450a38de9aeedf0e23a3b14fc02d2a9603f1f905ad"}
{"text": "import polygonPointsTest from '../MyTest/PolygonPointsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonPointsSample {\n  @State polygonPointsValueX: number = 5\n  @State polygonPointsValueY: number = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonPointsTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon({ width: 100, height: 100 })\n        .points([[this.polygonPointsValueX, this.polygonPointsValueY], [50, 100], [100, 0]])\n        .id('polygonPoints')\n      Button('PolygonPoints')\n        .onClick(() => {\n          this.polygonPointsValueX = 10\n          this.polygonPointsValueY = 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonPointsSample.ets", "project_name": "arkui_ace_engine-master", "id": "7b2af8ca49b4d044bb932b167785e0d10a2b42e8186d50ebfa87ef8034ef39a6"}
{"text": "import polygonStrokeDashArrayTest from '../MyTest/PolygonStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeDashArraySample {\n  @State polygonStrokeDashArrayNumber: number = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeDashArrayTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon({ width: 100, height: 100 })\n        .points([[0, 0], [50, 100], [100, 0]])\n        .stroke(Color.Blue)\n        .strokeDashArray([this.polygonStrokeDashArrayNumber])\n        .id('polygonStrokeDashArray')\n      Button('PolygonStrokeDashArray')\n        .onClick(() => {\n          this.polygonStrokeDashArrayNumber = 10\n        })\n    }\n\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "2c6de3ae7b69dee01ff14bb54514b60a085ca3092129449034b83cfd8146ab16"}
{"text": "import polygonStrokeDashOffsetTest from '../MyTest/PolygonStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeDashOffsetSample {\n  @State private PolygonStrokeDashOffsetValue: number | string = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .stroke(Color.Blue)\n        .strokeDashOffset(this.PolygonStrokeDashOffsetValue)\n        .id('polygonStrokeDashOffset')\n      Button('PolygonStrokeDashOffset')\n        .onClick(() => {\n          this.PolygonStrokeDashOffsetValue = '10'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "d7d18ad6ae0936a17200411e2c1271ce7431e31462d1555a6ec1eade875ab4f7"}
{"text": "import polygonStrokeLineCapTest from '../MyTest/PolygonStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeLineCapSample {\n  @State private polygonStrokeLineCapType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(5)\n        .stroke(Color.Blue)\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('polygonStrokeLineCap1')\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(5)\n        .stroke(Color.Blue)\n        .strokeLineCap(this.polygonStrokeLineCapType)\n        .id('polygonStrokeLineCap2')\n      Button('PolygonStrokeLineCap')\n        .onClick(() => {\n          this.polygonStrokeLineCapType = LineCapStyle.Square\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "a7ed178b934e905e5cc49f89a34941c7082c2b4565daacf28b508e0a11d7b3f7"}
{"text": "import polygonStrokeLineJoinTest from '../MyTest/PolygonStrokeLineJoinTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeLineJoinSample {\n  @State private polygonStrokeLineJoinType: LineJoinStyle = LineJoinStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeLineJoinTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(5)\n        .stroke(Color.Blue)\n        .strokeLineJoin(LineJoinStyle.Miter)\n        .id('polygonStrokeLineJoin1')\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(5)\n        .stroke(Color.Blue)\n        .strokeLineJoin(this.polygonStrokeLineJoinType)\n        .id('polygonStrokeLineJoin2')\n      Button('PolygonStrokeLineJoin')\n        .onClick(() => {\n          this.polygonStrokeLineJoinType = LineJoinStyle.Bevel\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeLineJoinSample.ets", "project_name": "arkui_ace_engine-master", "id": "f4d5e529f67271617488971e9fd3430007cd3c67db061bc46c1ae777d6281f03"}
{"text": "import polygonStrokeMiterLimitTest from '../MyTest/PolygonStrokeMiterLimitTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeMiterLimitSample {\n  @State PolygonStrokeMiterLimitValue: number | string = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeMiterLimitTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .stroke(Color.Blue)\n        .strokeWidth(3)\n        .strokeLineJoin(LineJoinStyle.Miter)\n        .strokeMiterLimit(this.PolygonStrokeMiterLimitValue)\n        .id('polygonStrokeMiterLimit')\n      Button('PolygonStrokeMiterLimit1')\n        .onClick(() => {\n          this.PolygonStrokeMiterLimitValue = '0.5'\n        })\n      Button('PolygonStrokeMiterLimit2')\n        .onClick(() => {\n          this.PolygonStrokeMiterLimitValue = -10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeMiterLimitSample.ets", "project_name": "arkui_ace_engine-master", "id": "a9cd98561982b419e61e94eeb9b602c89da3e451d50ad5ddde4d43d8fb54c36c"}
{"text": "import polygonStrokeOpacityTest from '../MyTest/PolygonStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeOpacitySample {\n  @State polygonStrokeOpacityValue: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(5)\n        .stroke(Color.Blue)\n        .strokeOpacity(this.polygonStrokeOpacityValue)\n        .id('polygonStrokeOpacity1')\n      Button('PolygonStrokeOpacity')\n        .onClick(() => {\n          this.polygonStrokeOpacityValue = '10px'\n        })\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(5)\n        .stroke(Color.Blue)\n        .strokeOpacity($r('app.string.stroke_opacity'))\n        .id('polygonStrokeOpacity2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "4a8b5a9d3f3fceb67a7618fbbd18027f7aedaf4fc525cc9182d39903d90c994f"}
{"text": "import polygonStrokeTest from '../MyTest/PolygonStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeSample {\n  @State polygonStrokeColorValue: Color | string = Color.Blue\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .stroke(this.polygonStrokeColorValue)\n        .id('polygonStroke1')\n      Button('PolygonStroke')\n        .onClick(() => {\n          this.polygonStrokeColorValue = 'rgb(255,0,0)'\n        })\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .stroke(0x00FF00)\n        .id('polygonStroke2')\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .stroke($r('app.color.color_blue'))\n        .id('polygonStroke3')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "f2d7959f1aff7bd9cf97c7eaca861831687ca490a7e900fa3105d532e668d922"}
{"text": "import polygonStrokeWidthTest from '../MyTest/PolygonStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolygonStrokeWidthSample {\n  @State polygonStrokeWidth: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polygonStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth(this.polygonStrokeWidth)\n        .stroke(Color.Blue)\n        .id('polygonStrokeWidth1')\n      Button('PolygonStrokeWidth')\n        .onClick(() => {\n          this.polygonStrokeWidth = '5px'\n        })\n      Polygon()\n        .width(100)\n        .height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .strokeWidth($r('app.string.stroke_width'))\n        .stroke(Color.Blue)\n        .id('polygonStrokeWidth2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polygon\\PolygonStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "3533404032af99bc082f46b0a52fe032ccc1bad1213b37053ed28654f8983ec9"}
{"text": "import polylineAntiAliasTest from '../MyTest/PolylineAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineAntiAliasSample {\n  @State polylineAntiAliasValue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline()\n        .width(100)\n        .height(100)\n        .antiAlias(this.polylineAntiAliasValue)\n        .id('polylineAntiAlias')\n      Button('PolylineAntiAlias')\n        .onClick(() => {\n          this.polylineAntiAliasValue = !this.polylineAntiAliasValue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "176e7cb7bf193e2e4d20d915738161e17e8a6ee3dcc3111512188079f503c9e5"}
{"text": "import polylineFillOpacityTest from '../MyTest/PolylineFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineFillOpacitySample {\n  @State polylineFillOpacityValue: number | string = -10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineFillOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .fillOpacity(this.polylineFillOpacityValue)\n        .id('polylineFillOpacity1')\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .fillOpacity($r('app.string.fill_opacity'))\n        .id('polylineFillOpacity2')\n      Button('PolylineFillOpacity')\n        .onClick(() => {\n          this.polylineFillOpacityValue = '10px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "69cbcdae924537712aed6a3ea7521682168e614cf4fbcdcc19898d552c1bd151"}
{"text": "import polylineFillTest from '../MyTest/PolylineFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineFillSample {\n  @State polylineFillOpacityColorValue1: number | Color = 0xff0000\n  @State polylineFillOpacityColorValue2: Resource | string = 'rgba(0, 0,255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineFillTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .fill(this.polylineFillOpacityColorValue1)\n        .id('polylineFill1')\n      Button('PolylineFill1')\n        .onClick(() => {\n          this.polylineFillOpacityColorValue1 = Color.Blue\n        })\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .fill(this.polylineFillOpacityColorValue2)\n        .id('polylineFill2')\n      Button('PolylineFill2')\n        .onClick(() => {\n          this.polylineFillOpacityColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "f5c6461f1aabf68a2966862be84ed1bd319233e02c6f1e1f5396c534458811a2"}
{"text": "import polylinePointsTest from '../MyTest/PolylinePointsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylinePointsSample {\n  @State polylinePointsArrayX: number = 0\n  @State polylinePointsArrayY: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylinePointsTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[this.polylinePointsArrayX, this.polylinePointsArrayY], [20, 60], [100, 100]])\n        .id('polylinePoints')\n      Button('PolylinePoints')\n        .onClick(() => {\n          this.polylinePointsArrayX = 10\n          this.polylinePointsArrayY = 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylinePointsArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "6bb8df5504ee77a2750b51c114ee9a709b4f02eaf906d2cb07411db60828569f"}
{"text": "import polylineStrokeDashArrayTest from '../MyTest/PolylineStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeDashArraySample {\n  @State private polylineStrokeDashArrayNumber: number = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeDashArrayTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline()\n        .width(100)\n        .height(100)\n        .stroke(Color.Red)\n        .strokeWidth(5)\n        .strokeDashArray([this.polylineStrokeDashArrayNumber])\n        .strokeDashOffset(-10)\n        .points([[0, 0], [50, 100], [100, 0]])\n        .id('polylineStrokeDashArray')\n      Button('PolylineStrokeDashArray')\n        .onClick(() => {\n          this.polylineStrokeDashArrayNumber = 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "0e38f4901c6c9e70222e13b5a91217269a099f85b6c9e63d5f5055cf01ca3066"}
{"text": "import polylineStrokeDashOffsetTest from '../MyTest/PolylineStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeDashOffsetSample {\n  @State polylineStrokeDashOffsetValue: number | string = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(Color.Blue)\n        .strokeDashArray([1, 2])\n        .strokeDashOffset(this.polylineStrokeDashOffsetValue)\n        .id('polylineStrokeDashOffset')\n      Button('PolylineStrokeDashOffset')\n        .onClick(() => {\n          this.polylineStrokeDashOffsetValue = '-5'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "d560413885417f67a60cd7b723424af97428f1c7d830c855e6033ebd21ffdd9b"}
{"text": "import polylineStrokeLineCapTest from '../MyTest/PolylineStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeLineCapSample {\n  @State polylineStrokeLineCapType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline()\n        .width(100)\n        .height(100)\n        .stroke(Color.Red)\n        .strokeWidth(8)\n        .points([[20, 0], [0, 100], [100, 90]])\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('polylineStrokeLineCap1')\n      Polyline()\n        .width(100)\n        .height(100)\n        .stroke(Color.Red)\n        .strokeWidth(8)\n        .points([[20, 0], [0, 100], [100, 90]])\n        .strokeLineCap(this.polylineStrokeLineCapType)\n        .id('polylineStrokeLineCap2')\n      Button('PolylineStrokeLineCap')\n        .onClick(() => {\n          this.polylineStrokeLineCapType = LineCapStyle.Square\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "d0b6cb4953c95b8a10bd19b9c7ec350694b96edcfda4a3ec94213fa67a716a3c"}
{"text": "import polylineStrokeLineJoinTest from '../MyTest/PolylineStrokeLineJoinTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeLineJoinSample {\n  @State PolylineStrokeLineJoinType: LineJoinStyle = LineJoinStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeLineJoinTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline()\n        .width(100)\n        .height(100)\n        .stroke(Color.Red)\n        .strokeWidth(8)\n        .points([[20, 0], [0, 100], [100, 90]])\n        .strokeLineJoin(LineJoinStyle.Bevel)\n        .id('polylineStrokeLineJoin1')\n      Polyline()\n        .width(100)\n        .height(100)\n        .stroke(Color.Red)\n        .strokeWidth(8)\n        .points([[20, 0], [0, 100], [100, 90]])\n        .strokeLineJoin(this.PolylineStrokeLineJoinType)\n        .id('polylineStrokeLineJoin2')\n      Button('PolylineStrokeLineJoin')\n        .onClick(() => {\n          this.PolylineStrokeLineJoinType = LineJoinStyle.Miter\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeLineJoinSample.ets", "project_name": "arkui_ace_engine-master", "id": "0ac7039c97778230a57eb58d5021e871a178162ab2dd9a1e8698ca3590a2e16c"}
{"text": "import polylineStrokeMiterLimitTest from '../MyTest/PolylineStrokeMiterLimitTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeMiterLimitSample {\n  @State PolylineStrokeMiterLimitValue: number | string = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeMiterLimitTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .strokeWidth(3)\n        .strokeLineJoin(LineJoinStyle.Miter)\n        .strokeMiterLimit(this.PolylineStrokeMiterLimitValue)\n        .id('polylineStrokeMiterLimit')\n      Button('PolylineStrokeMiterLimit')\n        .onClick(() => {\n          this.PolylineStrokeMiterLimitValue = '-10'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeMiterLimitSample.ets", "project_name": "arkui_ace_engine-master", "id": "82e4e278dcf9c6647ea1dd7a5f5ddd0589aedc0a47bebd3ba76539b7c825872c"}
{"text": "import polylineStrokeOpacityTest from '../MyTest/PolylineStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeOpacitySample {\n  @State polylineStrokeOpacityValue: number | string = -3\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeOpacityTest)\n  }\n\n  build() {\n    Column() {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(Color.Red)\n        .strokeOpacity(this.polylineStrokeOpacityValue)\n        .id('polylineStrokeOpacity1')\n      Button('PolylineStrokeOpacity')\n        .onClick(() => {\n          this.polylineStrokeOpacityValue = '10px'\n        })\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(Color.Red)\n        .strokeOpacity($r('app.string.stroke_opacity'))\n        .id('polylineStrokeOpacity2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "743836c758dca455f668a56e8e8cbad6b0aca3e5924ca37631efd548b84e71c3"}
{"text": "import polylineStrokeTest from '../MyTest/PolylineStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeSample {\n  @State polylineStrokeColorValue1: number | Color = 0x0000ff\n  @State polylineStrokeColorValue2: string | Resource = 'rgb(0,0,255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(this.polylineStrokeColorValue1)\n        .id('polylineStroke1')\n      Button('PolylineStroke1')\n        .onClick(() => {\n          this.polylineStrokeColorValue1 = Color.Red\n        })\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(this.polylineStrokeColorValue2)\n        .id('polylineStroke2')\n      Button('PolylineStroke2')\n        .onClick(() => {\n          this.polylineStrokeColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "cb5e4aa113927907747d91cc37c89995c45c9fbf1d051d65e85ab8f329d49153"}
{"text": "import polylineStrokeWidthTest from '../MyTest/PolylineStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PolylineStrokeWidthSample {\n  @State polylineStrokeWidthValue: number | string = '3px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(polylineStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(Color.Blue)\n        .strokeWidth($r('app.string.stroke_width'))\n        .id('polylineStrokeWidth1')\n      Polyline({ width: 100, height: 100 })\n        .points([[0, 0], [20, 60], [100, 100]])\n        .stroke(Color.Blue)\n        .strokeWidth(this.polylineStrokeWidthValue)\n        .id('polylineStrokeWidth2')\n      Button('PolylineStrokeWidth')\n        .onClick(() => {\n          this.polylineStrokeWidthValue = -5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\polyline\\PolylineStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "ba364bfe56adf4d92ca3a6cb0d12da0037d50952261a7fbffe2ee0c5f31d12d9"}
{"text": "import SampleTest from '../MyTest/RectAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectAntiAliasSample {\n  @State rectAntiAliasBool: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(SampleTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .antiAlias(this.rectAntiAliasBool)\n        .id('rectAntiAlias')\n      Button('RectAntiAlias')\n        .onClick(() => {\n          this.rectAntiAliasBool = !this.rectAntiAliasBool\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "8ce1250b20f8f0bbdd6f06e12fd92d55bb50081e996db09b11c541061fb18cee"}
{"text": "import rectFillOpacityTest from '../MyTest/RectFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectFillOpacitySample {\n  @State fillOpacityValue: Length = '0.2px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectFillOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .fill(Color.Pink)\n        .fillOpacity(0.5)\n        .id('rectFillOpacity1')\n      Rect()\n        .width('90%')\n        .height(50)\n        .fill(Color.Pink)\n        .fillOpacity(this.fillOpacityValue)\n        .id('rectFillOpacity2')\n      Button('RectFillOpacity')\n        .onClick(() => {\n          this.fillOpacityValue = $r('app.string.fill_opacity')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "c72cb1ed4b5e8d6ae90650e2ed23cd40fff871a86314344a3de133f6af1dc6dd"}
{"text": "import rectFillTest from '../MyTest/RectFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectFillSample {\n  @State rectFillColorValue1: ResourceColor = $r('app.color.color_blue')\n  @State rectFillColorValue2: ResourceColor = 'rgb(255,203,233)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectFillTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect({ width: '90%', height: 50 })\n        .fill(this.rectFillColorValue1)\n        .id('rectFill1')\n      Button('RectFill1')\n        .onClick(() => {\n          this.rectFillColorValue1 = 0xffc0e6\n        })\n      Rect({ width: '90%', height: 50 })\n        .fill(this.rectFillColorValue2)\n        .id('rectFill2')\n      Button('RectFill2')\n        .onClick(() => {\n          this.rectFillColorValue2 = Color.Pink\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "ae7a5a5f5fd7654f08e22fe1bc0e3737bad7b607f7ab0f309276320247fa5b47"}
{"text": "import rectRadiusHeightTest from '../MyTest/RectRadiusHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectRadiusHeightSample {\n  @State radiusHeightValue: number | string = 20\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectRadiusHeightTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect({ width: '90%', height: 80 })\n        .radiusHeight(this.radiusHeightValue)\n        .id('rectRadiusHeight')\n      Button('RectRadiusHeight')\n        .onClick(() => {\n          this.radiusHeightValue = '50'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectRadiusHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "5bcb0bfda8755791cdaa59590693bcfc2cbb10165f7fc2810277f76b80b21e43"}
{"text": "import rectRadiusTest from '../MyTest/RectRadiusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectRadiusSample {\n  @State radiusValue: string | number | Array<string | number> = 20\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectRadiusTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect({ width: '90%', height: 80 })\n        .radius(this.radiusValue)\n        .id('rectRadius1')\n      Button('RectRadius')\n        .onClick(() => {\n          this.radiusValue = '50'\n        })\n      Rect({ width: '90%', height: 80 })\n        .radius([['40', '40'], ['20', ' 20'], ['40', ' 40'], ['20', '20']])\n        .id('rectRadius2')\n      Rect({ width: '90%', height: 80 })\n        .radius([[40, 40], [20, 20], [40, 40], [20, 20]])\n        .id('rectRadius3')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectRadiusSample.ets", "project_name": "arkui_ace_engine-master", "id": "cd0e87419a1af6eda0632bbccc03118bf1e56084e841e5aac34eff07d1a5b22a"}
{"text": "import rectRadiusWidthTest from '../MyTest/RectRadiusWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectRadiusWidthSample {\n  @State radiusWidthValue: number | string = 40\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectRadiusWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect({ width: '90%', height: 80 })\n        .radiusWidth(this.radiusWidthValue)\n        .id('rectRadiusWidth')\n      Button('RectRadiusWidth')\n        .onClick(() => {\n          this.radiusWidthValue = '50'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectRadiusWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "528950b70f9b1f4310c09c770ca82f24c3a3a83db06f4cb4d40dbce4468ad127"}
{"text": "import SampleTest from '../MyTest/RectStrokeDashArrayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeDashArraySample {\n  @State strokeDashArrayValue: Array<Length> = [1, 2]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(SampleTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeDashArray(this.strokeDashArrayValue)\n        .strokeDashOffset(-5)\n        .id('rectStrokeDashArray')\n      Button('RectStrokeDashArray')\n        .onClick(() => {\n          this.strokeDashArrayValue = ['5', '6']\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeDashArraySample.ets", "project_name": "arkui_ace_engine-master", "id": "61f6558dd8ce1fd233ebf94b6c221ced745dc15c7ae816d1b554c9f61e9d10a0"}
{"text": "import rectStrokeDashOffsetTest from '../MyTest/RectStrokeDashOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeDashOffsetSample {\n  @State strokeDashOffsetValue: string | number = -5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeDashOffsetTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeDashArray([1, 2])\n        .strokeDashOffset(this.strokeDashOffsetValue)\n        .id('rectStrokeDashOffset')\n      Button('RectStrokeDashOffset')\n        .onClick(() => {\n          this.strokeDashOffsetValue = '-10'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeDashOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "68079eb1ea8ee77e93ded2a97429d15b0b0d3c5e3260fab9cf28d93428ef2544"}
{"text": "import rectStrokeLineCapTest from '../MyTest/RectStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeLineCapSample {\n  @State lineCapStyleType: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeLineCap(LineCapStyle.Butt)\n        .id('rectStrokeLineCap1')\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeLineCap(this.lineCapStyleType)\n        .id('rectStrokeLineCap2')\n      Button('RectStrokeLineCap')\n        .onClick(() => {\n          this.lineCapStyleType = LineCapStyle.Square\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "ded70827f7d67f0efc1645f21f18ea1291c9d9729884005f4eb129129716f7b5"}
{"text": "import rectStrokeLineJoinTest from '../MyTest/RectStrokeLineJoinTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeLineJoinSample {\n  @State rectStrokeLineJoinType: LineJoinStyle = LineJoinStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeLineJoinTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeWidth(5)\n        .strokeLineJoin(LineJoinStyle.Bevel)\n        .id('rectStrokeLineJoin1')\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeWidth(5)\n        .strokeLineJoin(this.rectStrokeLineJoinType)\n        .id('rectStrokeLineJoin2')\n      Button('RectStrokeLineJoin')\n        .onClick(() => {\n          this.rectStrokeLineJoinType = LineJoinStyle.Miter\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeLineJoinSample.ets", "project_name": "arkui_ace_engine-master", "id": "fafa448b9144ba3de7ab4913b4253b9b666e30773b7491d17b7abd6ef4e4c085"}
{"text": "import rectStrokeMiterLimitTest from '../MyTest/RectStrokeMiterLimitTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeMiterLimitSample {\n  @State strokeMiterLimitValue: number | string = 0.8\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeMiterLimitTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeLineJoin(LineJoinStyle.Miter)\n        .strokeMiterLimit(this.strokeMiterLimitValue)\n        .id('rectStrokeMiterLimit')\n      Button('RectStrokeMiterLimit1')\n        .onClick(() => {\n          this.strokeMiterLimitValue = '10'\n        })\n      Button('RectStrokeMiterLimit2')\n        .onClick(() => {\n          this.strokeMiterLimitValue = '-100'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeMiterLimitSample.ets", "project_name": "arkui_ace_engine-master", "id": "5cb0c383d09df40954f585af4736a6bfc5b7211d3a98252f1bedddc541bee908"}
{"text": "import rectStrokeOpacityTest from '../MyTest/RectStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeOpacitySample {\n  @State strokeOpacityValue: number | string = -5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeOpacity(this.strokeOpacityValue)\n        .id('rectStrokeOpacity1')\n      Button('RectStrokeOpacity')\n        .onClick(() => {\n          this.strokeOpacityValue = '5px'\n        })\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeOpacity($r('app.string.stroke_opacity'))\n        .id('rectStrokeOpacity2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "f765da971560a4c7bb3ef4374a3f85ec47599bd3889a83e4817caf0893c86fcc"}
{"text": "import rectStrokeTest from '../MyTest/RectStrokeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeSample {\n  @State rectStrokeColorValue1: ResourceColor = Color.Red\n  @State rectStrokeColorValue2: ResourceColor = 'rgb(255,0,0)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(this.rectStrokeColorValue1)\n        .id('rectStroke1')\n      Button('RectStroke1')\n        .onClick(() => {\n          this.rectStrokeColorValue1 = 0xff0000\n        })\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(this.rectStrokeColorValue2)\n        .id('rectStroke2')\n      Button('RectStroke2')\n        .onClick(() => {\n          this.rectStrokeColorValue2 = $r('app.color.color_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d94b3593ddd75b572aab0b4cca32d10aab3907b8e8f8cbe83b327c97171da7a8"}
{"text": "import rectStrokeWidthTest from '../MyTest/RectStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct RectStrokeWidthSample {\n  @State rectStrokeWidthValue: Length = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(rectStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeWidth(this.rectStrokeWidthValue)\n        .id('rectStrokeWidth1')\n      Button('RectStrokeWidth')\n        .onClick(() => {\n          this.rectStrokeWidthValue = '10px'\n        })\n      Rect()\n        .width('90%')\n        .height(50)\n        .stroke(Color.Red)\n        .strokeWidth($r('app.string.stroke_width'))\n        .id('rectStrokeWidth2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\rect\\RectStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "ab8c6043910acd1fa3608288fe43ce2f445df1ee142b7b10ce014384ef1b68d6"}
{"text": "import shapeAntiAliasTest from '../MyTest/ShapeAntiAliasTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeAntiAliasSample {\n  @State shapeAntiAliasBool: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeAntiAliasTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(80)\n      .viewPort({\n        x: 0,\n        y: 0,\n        width: 320,\n        height: 70\n      })\n      .antiAlias(this.shapeAntiAliasBool)\n      .id('shapeAntiAlias')\n\n      Button('ShapeAntiAlias')\n        .onClick(() => {\n          this.shapeAntiAliasBool = !this.shapeAntiAliasBool\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeAntiAliasSample.ets", "project_name": "arkui_ace_engine-master", "id": "307891766a2e6374b18680a0444c0b3346e909fea001fba8d581d2613b6d27e6"}
{"text": "import shapeFillOpacityTest from '../MyTest/ShapeFillOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeFillOpacitySample {\n  @State ShapeFillOpacity: number | string = -0.5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeFillOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill(0x317AF7)\n      .fillOpacity(this.ShapeFillOpacity)\n      .id('shapeFillOpacity1')\n\n      Button('ShapeFillOpacity')\n        .onClick(() => {\n          this.ShapeFillOpacity = '0.2px'\n        })\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill(0x317AF7)\n      .fillOpacity($r('app.string.fill_opacity'))\n      .id('shapeFillOpacity2')\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeFillOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "49b157de5d29dbc7d6c9db02b931924905ff04867aca6bdf9cfad59fd4b67595"}
{"text": "import shapeFillTest from '../MyTest/ShapeFillTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeFillSample {\n  @State shapeFillValue: number | string = 0x317AF7\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeFillTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill(this.shapeFillValue)\n      .id('shapeFill1')\n\n      Button('ShapeFill')\n        .onClick(() => {\n          this.shapeFillValue = 'rgb(0,255,0)'\n        })\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill(Color.Blue)\n      .id('shapeFill2')\n\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill($r('app.color.color_red'))\n      .id('shapeFill3')\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "bddcbe43431bf2571a5d6128c9d6933927269d31901ca07a0a8047a07b7be4d6"}
{"text": "import shapeMeshTest from '../MyTest/ShapeMeshTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeMeshSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeMeshTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(80)\n      .viewPort({\n        x: -5,\n        y: -5,\n        width: 320,\n        height: 70\n      })\n      .fill(0x317AF7)\n      .stroke(Color.Black)\n      .strokeWidth(10)\n      .mesh([0, 0, 10, 0, 0, 10, 10, 10], 2, 2)\n      .id('shapeMesh')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeMeshSample.ets", "project_name": "arkui_ace_engine-master", "id": "a637f550e501ac529426aad4d6deab321027db7e312b756db2482bd7e31d27c5"}
{"text": "import shapeStrokeLineCapTest from '../MyTest/ShapeStrokeLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeStrokeLineCapSample {\n  @State shapeLineCapStyle: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeStrokeLineCapTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0').offset({ x: 0, y: 120 })\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill(0x317AF7)\n      .stroke(Color.Black)\n      .strokeWidth(4)\n      .strokeLineCap(this.shapeLineCapStyle)\n      .id('shapeStrokeLineCap1')\n\n      Button('ShapeStrokeLineCap')\n        .onClick(() => {\n          this.shapeLineCapStyle = LineCapStyle.Square\n        })\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0').offset({ x: 0, y: 120 })\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: -2,\n        y: -2,\n        width: 304,\n        height: 130\n      })\n      .fill(0x317AF7)\n      .stroke(Color.Blue)\n      .strokeWidth(4)\n      .strokeLineCap(LineCapStyle.Butt)\n      .id('shapeStrokeLineCap2')\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeStrokeLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "9c4b9c247059da4247eec205eae8ca67d6b3c46989bf0fb8da1ae1d359cbe58f"}
{"text": "import shapeStrokeLineJoinTest from '../MyTest/ShapeStrokeLineJoinTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeStrokeLineJoinSample {\n  @State shapeLineJoinStyle: LineJoinStyle = LineJoinStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeStrokeLineJoinTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z')\n      }\n      .width(300)\n      .height(200)\n      .viewPort({\n        x: -20,\n        y: -5,\n        width: 310,\n        height: 90\n      })\n      .fill(0x317AF7)\n      .stroke(0xEE8443)\n      .strokeWidth(10)\n      .strokeLineJoin(LineJoinStyle.Miter)\n      .id('shapeStrokeLineJoin1')\n\n      Shape() {\n        Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z')\n      }\n      .width(300)\n      .height(200)\n      .viewPort({\n        x: -20,\n        y: -5,\n        width: 310,\n        height: 90\n      })\n      .fill(0x317AF7)\n      .stroke(0xEE8443)\n      .strokeWidth(10)\n      .strokeLineJoin(this.shapeLineJoinStyle)\n      .id('shapeStrokeLineJoin2')\n\n      Button('ShapeStrokeLineJoin')\n        .onClick(() => {\n          this.shapeLineJoinStyle = LineJoinStyle.Bevel\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeStrokeLineJoinSample.ets", "project_name": "arkui_ace_engine-master", "id": "488579c5ac8b9a8b64734b65c1ac355f2851ef0a9a70c6aeb092ccf3386f7faf"}
{"text": "import shapeStrokeMiterLimitTest from '../MyTest/ShapeStrokeMiterLimitTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeStrokeMiterLimitSample {\n  @State shapeStrokeMiterLimitValue: number | string = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeStrokeMiterLimitTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z')\n      }\n      .width(300)\n      .height(200)\n      .viewPort({\n        x: -20,\n        y: -5,\n        width: 310,\n        height: 90\n      })\n      .stroke(0xEE8443)\n      .strokeWidth(10)\n      .strokeLineJoin(LineJoinStyle.Miter)\n      .strokeMiterLimit(this.shapeStrokeMiterLimitValue)\n      .id('shapeStrokeMiterLimit')\n\n      Button('ShapeStrokeMiterLimit1')\n        .onClick(() => {\n          this.shapeStrokeMiterLimitValue = '-10'\n        })\n      Button('ShapeStrokeMiterLimit2')\n        .onClick(() => {\n          this.shapeStrokeMiterLimitValue = 0.5\n        })\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeStrokeMiterLimitSample.ets", "project_name": "arkui_ace_engine-master", "id": "025cb60121a100357f4fe71354048c63911e46131e7caaa411a1639e0da161d0"}
{"text": "import shapeStrokeOpacityTest from '../MyTest/ShapeStrokeOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeStrokeOpacitySample {\n  @State shapeStrokeOpacityValue: number | string = '5px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeStrokeOpacityTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0')\n      }\n      .width(350)\n      .height(20)\n      .viewPort({\n        x: 0,\n        y: -5,\n        width: 300,\n        height: 20\n      })\n      .stroke(0xEE8443)\n      .strokeWidth(10)\n      .strokeOpacity(this.shapeStrokeOpacityValue)\n      .id('shapeStrokeOpacity1')\n\n      Button('ShapeStrokeOpacity')\n        .onClick(() => {\n          this.shapeStrokeOpacityValue = -10\n        })\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0')\n      }\n      .width(350)\n      .height(20)\n      .viewPort({\n        x: 0,\n        y: -5,\n        width: 300,\n        height: 20\n      })\n      .stroke(0xEE8443)\n      .strokeWidth(10)\n      .strokeOpacity($r('app.string.stroke_opacity'))\n      .id('shapeStrokeOpacity2')\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeStrokeOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "173ad39aa43f08e79dce8d8eaaa55c8659097600c22dc29d3854a985189e9c9f"}
{"text": "import shapeStrokeWidthTest from '../MyTest/ShapeStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeStrokeWidthSample {\n  @State shapeStrokeWidthValue: number | string = 5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(80)\n      .viewPort({\n        x: 0,\n        y: 0,\n        width: 320,\n        height: 70\n      })\n      .fill(0x317AF7)\n      .stroke(Color.Black)\n      .strokeWidth(this.shapeStrokeWidthValue)\n      .id('shapeStrokeWidth')\n\n      Button('ShapeStrokeWidth')\n        .onClick(() => {\n          this.shapeStrokeWidthValue = '3'\n        })\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "1c19959bab702c36e2525884508e9742a7815ba3f7d0474b32c4d2608f84c1d3"}
{"text": "import shapeViewPortTest from '../MyTest/ShapeViewPortTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ShapeViewPortSample {\n  @State shapeViewPortValueX: number | string = -2\n  @State shapeViewPortValueY: number | string = -2\n  @State shapeViewPortMyWidth: number | string = 304\n  @State shapeViewPortMyHeight: number | string = 130\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(shapeViewPortTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Shape() {\n        Rect().width(300).height(50)\n      }\n      .width(350)\n      .height(140)\n      .viewPort({\n        x: this.shapeViewPortValueX,\n        y: this.shapeViewPortValueY,\n        width: this.shapeViewPortMyWidth,\n        height: this.shapeViewPortMyHeight\n      })\n      .id('shapeViewPort')\n\n      Button('ShapeViewPort').onClick(() => {\n        this.shapeViewPortValueX = '2'\n        this.shapeViewPortValueY = '2'\n        this.shapeViewPortMyWidth = '400'\n        this.shapeViewPortMyHeight = '200'\n      })\n    }.width('100%').margin({ top: 15 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\graphic_drawing\\entry\\src\\main\\ets\\pages\\shape\\ShapeViewPortSample.ets", "project_name": "arkui_ace_engine-master", "id": "2b0f761026c70dfbbc7166eab691d5373be67d27141591c80468b44a7d8d087a"}
{"text": "import { CommonButton } from '../util/CommonButton';\n\n@Entry\n@Component\nstruct Index {\n  aboutToAppear() {\n  }\n\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('image_video_and_media')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'Video', buttonUrl: 'pages/video/VideoHome' });\n        CommonButton({ buttonName: 'Image', buttonUrl: 'pages/image/ImageHome' });\n        CommonButton({ buttonName: 'ImageAnimator', buttonUrl: 'pages/image_animator/ImageAnimatorHome' });\n      }\n      .padding('20vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "arkui_ace_engine-master", "id": "3347d0ef9ceca83c3218be8e29cb26b0748fa8c5b8d193f85a70dded3ef7670e"}
{"text": "import imageAutoResizeTest from '../MyTest/ImageAutoResizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAutoResizeSample {\n  @State autoResize: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAutoResizeTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Button('ImageAutoResize1')\n          .onClick(() => {\n            this.autoResize = !this.autoResize\n          })\n      }\n\n      Image($r('app.media.city_icon'))\n        .width(200)\n        .height(200)\n        .margin(15)\n        .autoResize(this.autoResize)\n        .id('imageAutoResize')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageAutoResizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "c8253657e8d066408718eb8ccd6633f7228ce6c2c649733fe90b91870c9d7c06"}
{"text": "import imageColorFilter from '../MyTest/ImageColorFilterTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageColorFilterSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageColorFilter)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width('40%')\n        .colorFilter(\n          [1, 1, 1, 1, 1,\n            0, 1, 0, 0, 0,\n            1, 0, 1, 0, 0,\n            0, 0, 0, 1, 0])\n        .id('imageColorFilter')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageColorFilterSample.ets", "project_name": "arkui_ace_engine-master", "id": "d421cd6424a1cef67decb0c64feea439a1008e457cc3b97a76ae1baeabe65013"}
{"text": "import imageCopyOptionTest from '../MyTest/ImageCopyOptionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageCopyOptionSample {\n  @State copyOption: CopyOptions = CopyOptions.None\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageCopyOptionTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      Image($r('app.media.run_icon'))\n        .width(110)\n        .height(110)\n        .margin(5)\n        .copyOption(this.copyOption)\n        .id('imageCopyOption1')\n      Button('ImageCopyOption1')\n        .onClick(() => {\n          this.copyOption = CopyOptions.InApp\n        })\n      Image($r('app.media.city_icon'))\n        .width(220)\n        .height(220)\n        .margin(5)\n        .copyOption(CopyOptions.LocalDevice)\n        .id('imageCopyOption2')\n      Image($r('app.media.city_icon'))\n        .width(220)\n        .height(220)\n        .margin(5)\n        .copyOption(CopyOptions.CROSS_DEVICE)\n        .id('imageCopyOption3')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageCopyOptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "6fa8789e3240aaa10bf60a466d065ca6d33720817f372c63c25d5dd0573f8836"}
{"text": "import imageDraggableTest from '../MyTest/ImageDraggableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageDraggableSample {\n  @State dragGable: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageDraggableTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Button('ImageDraggable1')\n          .onClick(() => {\n            this.dragGable = !this.dragGable\n          })\n      }\n\n      Image($r('app.media.app_icon'))\n        .width(110)\n        .height(110)\n        .margin(15)\n        .draggable(this.dragGable)\n        .id('imageDraggable')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageDraggableSample.ets", "project_name": "arkui_ace_engine-master", "id": "ea5316070c4e1f60f51b7477b9f810ff5511f1c590103e8c357a37f59bad2393"}
{"text": "import image from '@ohos.multimedia.image'\nimport imageEnableAnalyzerTest from '../MyTest/ImageEnableAnalyzerTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageEnableAnalyzerSample {\n  @State imagePixelMap: image.PixelMap | undefined = undefined\n  @State enableAnalyzer: boolean = true\n\n  async aboutToAppear() {\n    this.imagePixelMap = await this.getPixmapFromMedia($r('app.media.app_icon'))\n    loadComponentTestEntry(imageEnableAnalyzerTest)\n  }\n\n  build() {\n    Column() {\n      Image(this.imagePixelMap)\n        .enableAnalyzer(this.enableAnalyzer)\n        .width(200)\n        .height(200)\n        .id('imageEnableAnalyzer')\n      Button('ImageEnableAnalyzer')\n        .onClick(() => {\n          this.enableAnalyzer = !this.imagePixelMap\n        })\n    }\n  }\n\n  private async getPixmapFromMedia(resource: Resource) {\n    let unit8Array = await getContext(this)?.resourceManager?.getMediaContent({\n      bundleName: resource.bundleName,\n      moduleName: resource.moduleName,\n      id: resource.id\n    })\n    let imageSource = image.createImageSource(unit8Array.buffer.slice(0, unit8Array.buffer.byteLength))\n    let createPixelMap: image.PixelMap = await imageSource.createPixelMap({\n      desiredPixelFormat: image.PixelMapFormat.RGBA_8888\n    })\n    await imageSource.release()\n    return createPixelMap\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageEnableAnalyzerSample.ets", "project_name": "arkui_ace_engine-master", "id": "d6c0bcdebc0479699b640d40abae125769d94c5e6335ef666b535e4f43aeb5f3"}
{"text": "import imageFillColorTest from '../MyTest/ImageFillColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageFillColorSample {\n  @State fillColor: ResourceColor = Color.Green\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageFillColorTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageFillColor1')\n        .onClick(() => {\n          this.fillColor = '#0000ff'\n        })\n      Button('ImageFillColor2')\n        .onClick(() => {\n          this.fillColor = 0x000000\n        })\n      Image($r('sys.media.ohos_ic_public_play_last'))\n        .width('40%')\n        .height(150)\n        .margin(15)\n        .fillColor(this.fillColor)\n        .id('imageFillColor1')\n      Image($r('sys.media.ohos_ic_public_play_last'))\n        .width('40%')\n        .height(150)\n        .margin(15)\n        .fillColor($r(\"app.color.image_fill_color\"))\n        .id('imageFillColor2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageFillColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "31ea04b8a337a518e68b3bf99ddbe7addb150dcc618f06e0ad1103a79927eb0b"}
{"text": "import imageFitOriginalSizeTest from '../MyTest/ImageFitOriginalSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageFitOriginalSizeTest {\n  @State fitOriginalSize: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageFitOriginalSizeTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageFitOriginalSize1')\n        .onClick(() => {\n          this.fitOriginalSize = !this.fitOriginalSize\n        })\n      Image($r('app.media.app_icon'))\n        .margin(20)\n        .fitOriginalSize(this.fitOriginalSize)\n        .id('imageFitOriginalSize')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageFitOriginalSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "b1b4c1985d150519b4dc065c361355cb9517c7831f9718c86b234310b611d324"}
{"text": "import imageInterpolationTest from '../MyTest/ImageInterpolationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageInterpolationSample {\n  @State interpolation: ImageInterpolation = ImageInterpolation.None\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageInterpolationTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageInterpolation1')\n        .onClick(() => {\n          this.interpolation = ImageInterpolation.Low\n        })\n      Button('ImageInterpolation2')\n        .onClick(() => {\n          this.interpolation = ImageInterpolation.Medium\n        })\n      Button('ImageInterpolation3')\n        .onClick(() => {\n          this.interpolation = ImageInterpolation.High\n        })\n      Image($r('app.media.test_image'))\n        .width(100)\n        .height(100)\n        .margin(5)\n        .interpolation(this.interpolation)\n        .id('imageInterpolation')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageInterpolationSample.ets", "project_name": "arkui_ace_engine-master", "id": "8966c2474c8ec5c6404dc922e8a3f576cd546d6589735866f09ddcd3ddc67205"}
{"text": "import imageMatchTextDirectionTest from '../MyTest/ImageMatchTextDirectionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageMatchTextDirectionSample {\n  @State matchTextDirection: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageMatchTextDirectionTest)\n  }\n\n  build() {\n    Row() {\n      Image($r('app.media.test_image'))\n        .width(110)\n        .height(110)\n        .margin(15)\n        .matchTextDirection(this.matchTextDirection)\n        .id('imageMatchTextDirection')\n      Button('ImageMatchTextDirection')\n        .onClick(() => {\n          this.matchTextDirection = false\n        })\n    }.direction(Direction.Rtl)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageMatchTextDirectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "92704d8762ce9f2246842dd1235042a84362ca6a918c4fc0f1b0fc02acc083b9"}
{"text": "import imageObjectFitTest from '../MyTest/ImageObjectFitTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageObjectFitSample {\n  @State objectFitImageFit: ImageFit = ImageFit.Auto\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageObjectFitTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Button('ImageObjectFit1')\n          .onClick(() => {\n            this.objectFitImageFit = ImageFit.Fill\n          })\n        Button('ImageObjectFit2')\n          .onClick(() => {\n            this.objectFitImageFit = ImageFit.None\n          })\n        Button('ImageObjectFit3')\n          .onClick(() => {\n            this.objectFitImageFit = ImageFit.Contain\n          })\n      }\n\n      Button('ImageObjectFit4')\n        .onClick(() => {\n          this.objectFitImageFit = ImageFit.ScaleDown\n        })\n      Button('ImageObjectFit5')\n        .onClick(() => {\n          this.objectFitImageFit = ImageFit.Cover\n        })\n      Image($r('app.media.test_image'))\n        .objectFit(this.objectFitImageFit)\n        .id('imageObjectFit')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageObjectFitSample.ets", "project_name": "arkui_ace_engine-master", "id": "bf2b2a24c7af523522475ed3ca2deff96d34caa7e2614c6de24b28afa87badd9"}
{"text": "import imageObjectFitTest from '../MyTest/ImageObjectRepeatTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageObjectRepeatSample {\n  @State objectRepeat: ImageRepeat = ImageRepeat.NoRepeat\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageObjectFitTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageObjectRepeat1')\n        .onClick(() => {\n          this.objectRepeat = ImageRepeat.X\n        })\n      Button('ImageObjectRepeat2')\n        .onClick(() => {\n          this.objectRepeat = ImageRepeat.Y\n        })\n      Image($r('app.media.app_icon'))\n        .width(110)\n        .height(110)\n        .margin(15)\n        .objectRepeat(this.objectRepeat)\n        .objectFit(ImageFit.ScaleDown)\n        .id('imageObjectRepeat1')\n      Image($r('app.media.app_icon'))\n        .width(110)\n        .height(110)\n        .margin(15)\n        .objectRepeat(ImageRepeat.XY)\n        .objectFit(ImageFit.ScaleDown)\n        .id('imageObjectRepeat2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageObjectRepeatSample.ets", "project_name": "arkui_ace_engine-master", "id": "f38443adc0f9d2016da10b04fc3c9382fb419bbd6cb6be78799294c34a858c76"}
{"text": "import imageRenderModeTest from '../MyTest/ImageRenderModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageRenderModeSample {\n  @State renderMode: ImageRenderMode = ImageRenderMode.Original\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageRenderModeTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageRenderMode1')\n        .onClick(() => {\n          this.renderMode = ImageRenderMode.Template\n        })\n      Image($r('app.media.test_image'))\n        .width(100)\n        .height(100)\n        .margin(20)\n        .renderMode(this.renderMode)\n        .id('imageRenderMode')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageRenderModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "ddf897bf5233ef7c7b304ff4f955eb41babd0e8c90f0c5c5b2736242b355a438"}
{"text": "import imageResizableTest from '../MyTest/ImageResizableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageResizableSample {\n  @State resizable: ResizableOptions = {\n    slice: {\n      top: 30,\n      left: 30,\n      bottom: 30,\n      right: 30\n    }\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageResizableTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.run_icon'))\n        .width(100)\n        .height(100)\n      Image($r('app.media.run_icon'))\n        .width(100)\n        .height(100)\n        .resizable(this.resizable)\n        .objectFit(ImageFit.Contain)\n        .id('imageResizeable')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageResizableSample.ets", "project_name": "arkui_ace_engine-master", "id": "332bb2f9f960aa09ae99d9cc3b8ef7615ae73d414db197aab00b4b460c88aff3"}
{"text": "import imageSourceSizeTest from '../MyTest/ImageSourceSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageSourceSizeSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageSourceSizeTest)\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.app_icon'))\n        .width(100)\n        .height(100)\n        .sourceSize({\n          width: 10,\n          height: 10\n        })\n        .id('imageSourceSize1')\n        .objectFit(ImageFit.ScaleDown)\n\n      Image($r('app.media.app_icon'))\n        .width(100)\n        .height(100)\n        .sourceSize({\n          width: 10,\n          height: 10\n        })\n        .id('imageSourceSize2')\n        .objectFit(ImageFit.Fill)\n\n      Image($r('app.media.app_icon'))\n        .width(100)\n        .height(100)\n        .sourceSize({\n          width: 1000,\n          height: 1000\n        })\n        .id('imageSourceSize3')\n        .objectFit(ImageFit.ScaleDown)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image\\ImageSourceSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "e6bcdd8aec699ec2b70be454a93556d52fb799d79aa67723b5da496d34649a2c"}
{"text": "import imageAnimatorDurationTest from '../MyTest/ImageAnimatorDurationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorDurationSample {\n  @State duration: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorDurationTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          }\n        ])\n        .state(AnimationStatus.Running)\n        .duration(this.duration)\n        .width(200)\n        .height(200)\n        .id('imageAnimatorDuration')\n      Button('ImageAnimatorDuration')\n        .onClick(() => {\n          this.duration = 1000\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorDurationSample.ets", "project_name": "arkui_ace_engine-master", "id": "6e485230b5a17647d10a5d11659bd2cf45d3cd26b40081739d042b24ebe2bd16"}
{"text": "import imageAnimatorFillModeTest from '../MyTest/ImageAnimatorFillModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorFillModeSample {\n  @State fillMode: FillMode = FillMode.None\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorFillModeTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Button('ImageAnimatorFillMode1').onClick(() => {\n          this.fillMode = FillMode.Forwards\n        })\n        Button('ImageAnimatorFillMode2').onClick(() => {\n          this.fillMode = FillMode.Backwards\n        })\n      }\n\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          }\n        ])\n        .state(AnimationStatus.Running)\n        .fillMode(this.fillMode)\n        .width(150)\n        .height(150)\n        .margin(10)\n        .id('imageAnimatorFillMode1')\n\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          }\n        ])\n        .state(AnimationStatus.Running)\n        .fillMode(FillMode.Both)\n        .width(150)\n        .height(150)\n        .margin(10)\n        .id('imageAnimatorFillMode2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorFillModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "a0cf0fa46c78332b4f301661c4a8c6d7489ece8f118b851a1ad3b67332b783ed"}
{"text": "import imageAnimatorFixedSizeTest from '../MyTest/ImageAnimatorFixedSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorFixedSizeSample {\n  @State fixedSize: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorFixedSizeTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageAnimatorFixedSize1')\n        .onClick(() => {\n          this.fixedSize = !this.fixedSize\n        })\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image'),\n            width: 100,\n            height: 100,\n            top: 10,\n            left: 10\n          },\n          {\n            src: $r('app.media.test_icon'),\n            width: 200,\n            height: 100,\n            top: 15,\n            left: 15\n          },\n          {\n            src: $r('app.media.run_icon'),\n            width: 300,\n            height: 100,\n            top: 20,\n            left: 20\n          }\n        ])\n        .state(AnimationStatus.Running)\n        .fixedSize(this.fixedSize)\n        .id('imageAnimatorFixedSize')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorFixedSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "4965993886197dc30d45fa0f82316fe39559f3ece187284f2c069b9fb5c392ca"}
{"text": "import imageAnimatorImagesTest from '../MyTest/ImageAnimatorImagesTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorImagesSample {\n  @State images: Array<ImageFrameInfo> = [{\n    src: 'pages/imageAnimator/imageAnimator_one.png',\n    width: '200px',\n    height: '200px',\n    top: '10px',\n    left: '10px',\n    duration: 2000\n  }]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorImagesTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageAnimatorImages')\n        .onClick(() => {\n          this.images = [{\n            src: $r('app.media.city_icon'),\n            width: 400,\n            height: 200,\n            top: 10,\n            left: 10,\n            duration: 2000\n          }]\n        })\n      ImageAnimator()\n        .images(this.images)\n        .fixedSize(false)\n        .width(500)\n        .height(500)\n        .id('imageAnimatorImages')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorImagesSample.ets", "project_name": "arkui_ace_engine-master", "id": "34302f46ecfe22f63e3ffaea2799a342c6dd39ec630be494b1f9e2ce3c30860f"}
{"text": "import imageAnimatorIterationTest from '../MyTest/ImageAnimatorIterationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorIterationsSample {\n  @State iterations: number = 2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorIterationTest)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          }\n        ])\n        .state(AnimationStatus.Running)\n        .iterations(this.iterations)\n        .width(500)\n        .height(500)\n        .margin(15)\n        .id('imageAnimatorIterations')\n      Button('ImageAnimatorIterations')\n        .onClick(() => {\n          this.iterations = -1\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorIterationsSample.ets", "project_name": "arkui_ace_engine-master", "id": "9aab45375d2540e019e24098dcede1060d1767578bf236a7e46bae6fde7c1d34"}
{"text": "import imageAnimatorReverseTest from '../MyTest/ImageAnimatorReverseTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorReverseSample {\n  @State reverse: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorReverseTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageAnimatorReverse1')\n        .onClick(() => {\n          this.reverse = !this.reverse\n        })\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          },\n          {\n            src: $r('app.media.city_icon')\n          }\n        ])\n        .state(AnimationStatus.Running)\n        .reverse(this.reverse)\n        .width(200)\n        .height(300)\n        .margin(15)\n        .id('imageAnimatorReverse')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorReverseSample.ets", "project_name": "arkui_ace_engine-master", "id": "b106cd9e86cb44f52776c4aa5b9b126f95793eab7e74555ed8b9fb1086082c47"}
{"text": "import imageAnimatorStateTest from '../MyTest/ImageAnimatorStateTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ImageAnimatorStateSample {\n  @State state: AnimationStatus = AnimationStatus.Stopped\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageAnimatorStateTest)\n  }\n\n  build() {\n    Column() {\n      Button('ImageAnimatorState1')\n        .onClick(() => {\n          this.state = AnimationStatus.Running\n        })\n      Button('ImageAnimatorState2')\n        .onClick(() => {\n          this.state = AnimationStatus.Paused\n        })\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          }\n        ])\n        .state(this.state)\n        .width(200)\n        .height(150)\n        .margin(15)\n        .iterations(-1)\n        .id('imageAnimatorState1')\n      ImageAnimator()\n        .images([\n          {\n            src: $r('app.media.test_image')\n          },\n          {\n            src: $r('app.media.test_icon')\n          },\n          {\n            src: $r('app.media.run_icon')\n          }\n        ])\n        .state(AnimationStatus.Initial)\n        .width(200)\n        .height(150)\n        .margin(15)\n        .id('imageAnimatorState2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\image_animator\\ImageAnimatorStateSample.ets", "project_name": "arkui_ace_engine-master", "id": "6649cc5d4aba00813737c2a9dd05bf426d632e7d63911ff5c56a2d201484e662"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\n\nexport default async function imageMatchTextDirectionTest() {\n  defineTest('imageMatchTextDirectionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageMatchTextDirectionTestDemo running\")\n    let driver: Tester = Tester.create()\n    let image: Component = await driver.findComponent(Matcher.create().id('imageMatchTextDirection').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ImageMatchTextDirection').enabled(true))\n    let matchTextDirection1: string = await image.getInspectorInfo()\n    assertTrue(JSON.parse(matchTextDirection1).$attrs.matchTextDirection)\n    await button.tap()\n    let matchTextDirection2: string = await image.getInspectorInfo()\n    assertFalse(JSON.parse(matchTextDirection2).$attrs.matchTextDirection)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\ImageMatchTextDirectionTest.ets", "project_name": "arkui_ace_engine-master", "id": "18b1da1d7cc3c4fe77db48e63841af4edd27b05a49c90c880454e94f8a2ba8f6"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\n\nexport default async function imageObjectRepeatTest() {\n  defineTest('imageObjectRepeatTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageObjectRepeatTestDemo running\")\n    let driver: Tester = Tester.create()\n    let image1: Component = await driver.findComponent(Matcher.create().id('imageObjectRepeat1').enabled(true))\n    let image2: Component = await driver.findComponent(Matcher.create().id('imageObjectRepeat2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ImageObjectRepeat1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ImageObjectRepeat2').enabled(true))\n    let imageRepeat1: string = await image1.getInspectorInfo()\n    assertEqual(JSON.parse(imageRepeat1).$attrs.objectRepeat, 'ImageRepeat.NoRepeat')\n    let imageRepeat2: string = await image2.getInspectorInfo()\n    assertEqual(JSON.parse(imageRepeat2).$attrs.objectRepeat, 'ImageRepeat.XY')\n    await button1.tap()\n    let imageRepeat3: string = await image1.getInspectorInfo()\n    assertEqual(JSON.parse(imageRepeat3).$attrs.objectRepeat, 'ImageRepeat.X')\n    await button2.tap()\n    let imageRepeat4: string = await image1.getInspectorInfo()\n    assertEqual(JSON.parse(imageRepeat4).$attrs.objectRepeat, 'ImageRepeat.Y')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\ImageObjectRepeatTest.ets", "project_name": "arkui_ace_engine-master", "id": "ddce61693cd5cc04ac2c29dfb1715f75c18b7c18520066db103af655c05beefc"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\n\nexport default async function imageResizableTest() {\n  defineTest('imageResizableTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageResizableTestDemo running\")\n    let driver: Tester = Tester.create()\n    let image: Component = await driver.findComponent(Matcher.create().id('imageResizeable').enabled(true))\n    let resizable: string = await image.getInspectorInfo()\n    assertFalse(JSON.parse(resizable).$attrs.resizable == undefined)\n    assertEqual(JSON.parse(resizable)\n      .$attrs\n      .resizable\n      .slice\n      .top, 30)\n    assertEqual(JSON.parse(resizable)\n      .$attrs\n      .resizable\n      .slice\n      .left, 30)\n    assertEqual(JSON.parse(resizable)\n      .$attrs\n      .resizable\n      .slice\n      .bottom, 30)\n    assertEqual(JSON.parse(resizable)\n      .$attrs\n      .resizable\n      .slice\n      .right, 30)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\ImageResizableTest.ets", "project_name": "arkui_ace_engine-master", "id": "41ddb1d86037276b8a07c3bc19abdb191b0a13dbef35af7d00251dc2153027a5"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\n\nexport default async function imageSourceSizeTest() {\n  defineTest('imageSourceSizeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageSourceSizeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let image1: Component = await driver.findComponent(Matcher.create().id('imageSourceSize1').enabled(true))\n    let image2: Component = await driver.findComponent(Matcher.create().id('imageSourceSize2').enabled(true))\n    let image3: Component = await driver.findComponent(Matcher.create().id('imageSourceSize3').enabled(true))\n    let sourceSize1: string = await image1.getInspectorInfo()\n    assertEqual(JSON.parse(sourceSize1).$attrs.sourceSize, \"[10.00 x 10.00]\")\n    let sourceSize2: string = await image2.getInspectorInfo()\n    assertEqual(JSON.parse(sourceSize2).$attrs.sourceSize, \"[10.00 x 10.00]\")\n    let sourceSize3: string = await image3.getInspectorInfo()\n    assertEqual(JSON.parse(sourceSize3).$attrs.sourceSize, \"[1000.00 x 1000.00]\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\ImageSourceSizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "2fde38bf0dc82dff8103c4ef429b65fe1d6f42e373a2e0fb53d44a99d0826ec9"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function videoAutoPlayTest() {\n  \n  defineTest('videoAutoPlayTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('videoAutoPlayTestDemo running')\n    let driver: Tester = Tester.create()\n    let video: Component = await driver.findComponent(Matcher.create().id('videoAutoPlay').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('VideoAutoPlay').enabled(true))\n\n    let autoPlay1: string = await video.getInspectorInfo()\n    assertFalse(JSON.parse(autoPlay1).$attrs.autoPlay == undefined)\n    assertFalse(JSON.parse(autoPlay1).$attrs.autoPlay)\n    await button.tap()\n    let autoPlay2: string = await video.getInspectorInfo()\n    assertTrue(JSON.parse(autoPlay2).$attrs.autoPlay)\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\VideoAutoPlayTest.ets", "project_name": "arkui_ace_engine-master", "id": "27b52c3903326437ab54d000fcbf58693b2742369bf078398d8d97475e100009"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function videoObjectFitTest_one() {\n  \n  defineTest('videoObjectFitTestDemo_one', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('videoObjectFitTestDemo_one running')\n    let driver: Tester = Tester.create()\n    let video: Component = await driver.findComponent(Matcher.create().id('videoObjectFit1').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('VideoObjectFit').enabled(true))\n\n    let objectFit1: string = await video.getInspectorInfo()\n    assertEqual(JSON.parse(objectFit1).$attrs.objectFit, 'ImageFit.None')\n    await button.tap()\n    let objectFit2: string = await video.getInspectorInfo()\n    assertEqual(JSON.parse(objectFit2).$attrs.objectFit, 'ImageFit.Auto')\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\VideoObjectFitTest_one.ets", "project_name": "arkui_ace_engine-master", "id": "a80990b5abbe7d947b9c389bac01b76982827d4aef31d38149fd3a090ea7b9a0"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function videoObjectFitTest_three() {\n  \n  defineTest('videoObjectFitTestDemo_three', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('videoObjectFitTestDemo_three running')\n    let driver: Tester = Tester.create()\n    let video: Component = await driver.findComponent(Matcher.create().id('videoObjectFit3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('VideoObjectFit').enabled(true))\n\n    let objectFit1: string = await video.getInspectorInfo()\n    assertEqual(JSON.parse(objectFit1).$attrs.objectFit, 'ImageFit.ScaleDown')\n    await button.tap()\n    let objectFit2: string = await video.getInspectorInfo()\n    assertEqual(JSON.parse(objectFit2).$attrs.objectFit, 'ImageFit.Fill')\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\MyTest\\VideoObjectFitTest_three.ets", "project_name": "arkui_ace_engine-master", "id": "ebb0afe587f557cc0b4447035f4f7009524e8b20e154ea8cacc74d677775fffc"}
{"text": "import videoAutoPlayTest from '../MyTest/VideoAutoPlayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VideoAutoPlaySample {\n  @State buttonTrue: boolean = false\n  @State videoSrc: Resource = $rawfile('video2.mp4')\n  @State preViewUri: Resource = $r('app.media.app_icon')\n  @State curRate: PlaybackSpeed = PlaybackSpeed.Speed_Forward_1_00_X\n  controller: VideoController = new VideoController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(videoAutoPlayTest)\n  }\n\n  build() {\n    Column() {\n      Video({\n        src: this.videoSrc,\n        previewUri: this.preViewUri,\n        currentProgressRate: this.curRate,\n        controller: this.controller\n      }).width('100%').height(500).id('videoAutoPlay')\n        .autoPlay(this.buttonTrue)\n      Button('VideoAutoPlay')\n        .onClick(() => {\n          this.buttonTrue = !this.buttonTrue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\video\\VideoAutoPlaySample.ets", "project_name": "arkui_ace_engine-master", "id": "fc47bbf1f4c946d0c3d2f8fd74cac0dd59cba10ab3bcbb1a24d82824123c914c"}
{"text": "import videoControlsTest from '../MyTest/VideoControlsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VideoControlsSample {\n  @State buttonFalse: boolean = true\n  @State videoSrc: Resource = $rawfile('video2.mp4')\n  @State preViewUri: Resource = $r('app.media.app_icon')\n  @State curRate: PlaybackSpeed = PlaybackSpeed.Speed_Forward_1_00_X\n  controller: VideoController = new VideoController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(videoControlsTest)\n  }\n\n  build() {\n    Column() {\n      Video({\n        src: this.videoSrc,\n        previewUri: this.preViewUri,\n        currentProgressRate: this.curRate,\n        controller: this.controller\n      }).width('100%').height(500).id('videoControls')\n        .controls(this.buttonFalse)\n      Button('VideoControls')\n        .onClick(() => {\n          this.buttonFalse = !this.buttonFalse\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\video\\VideoControlsSample.ets", "project_name": "arkui_ace_engine-master", "id": "4af428182e15932ce4e9ea0a45151b3fde2d1f43d619d6fba1e0bd889ea11e30"}
{"text": "import videoLoopTest from '../MyTest/VideoLoopTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VideoLoopSample {\n  @State buttonTrue: boolean = false\n  @State videoSrc: Resource = $rawfile('video1.mp4')\n  @State preViewUri: Resource = $r('app.media.app_icon')\n  @State curRate: PlaybackSpeed = PlaybackSpeed.Speed_Forward_1_00_X\n  controller: VideoController = new VideoController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(videoLoopTest)\n  }\n\n  build() {\n    Column() {\n      Video({\n        src: this.videoSrc,\n        previewUri: this.preViewUri,\n        currentProgressRate: this.curRate,\n        controller: this.controller\n      }).width('100%').height(500).id('videoLoop')\n        .loop(this.buttonTrue)\n      Button('VideoLoop')\n        .onClick(() => {\n          this.buttonTrue = !this.buttonTrue\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\video\\VideoLoopSample.ets", "project_name": "arkui_ace_engine-master", "id": "c5fdd62d01aaeac04f2dfaf7afebeae6ea36fe011e59c7a1512cb63d6336c175"}
{"text": "import videoObjectFitTest_one from '../MyTest/VideoObjectFitTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VideoObjectFitSample_one {\n  @State buttonImageFit: ImageFit = ImageFit.None\n  @State videoSrc: Resource = $rawfile('video1.mp4')\n  @State preViewUri: Resource = $r('app.media.app_icon')\n  @State curRate: PlaybackSpeed = PlaybackSpeed.Speed_Forward_1_00_X\n  controller: VideoController = new VideoController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(videoObjectFitTest_one)\n  }\n\n  build() {\n    Column() {\n      Video({\n        src: this.videoSrc,\n        previewUri: this.preViewUri,\n        currentProgressRate: this.curRate,\n        controller: this.controller\n      }).width('100%').height(500).id('videoObjectFit1')\n        .objectFit(this.buttonImageFit)\n      Button('VideoObjectFit')\n        .onClick(() => {\n          this.buttonImageFit = ImageFit.Auto\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\video\\VideoObjectFitSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "5aefa55564639806690bee49b72a9f81f850eefbdc231aa24b098a8654653243"}
{"text": "import videoObjectFitTest_three from '../MyTest/VideoObjectFitTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VideoObjectFitSample_three {\n  @State buttonImageFit: ImageFit = ImageFit.ScaleDown\n  @State videoSrc: Resource = $rawfile('video1.mp4')\n  @State preViewUri: Resource = $r('app.media.app_icon')\n  @State curRate: PlaybackSpeed = PlaybackSpeed.Speed_Forward_1_00_X\n  controller: VideoController = new VideoController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(videoObjectFitTest_three)\n  }\n\n  build() {\n    Column() {\n      Video({\n        src: this.videoSrc,\n        previewUri: this.preViewUri,\n        currentProgressRate: this.curRate,\n        controller: this.controller\n      }).width('100%').height(500).id('videoObjectFit3')\n        .objectFit(this.buttonImageFit)\n      Button('VideoObjectFit')\n        .onClick(() => {\n          this.buttonImageFit = ImageFit.Fill\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\video\\VideoObjectFitSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "d655467c3bfc932b16715a3f1c3ee11f751d1cb97b538b1e6ed4f65fec526e95"}
{"text": "import videoObjectFitTest_two from '../MyTest/VideoObjectFitTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct VideoObjectFitSample_two {\n  @State buttonImageFit: ImageFit = ImageFit.Cover\n  @State videoSrc: Resource = $rawfile('video1.mp4')\n  @State preViewUri: Resource = $r('app.media.app_icon')\n  @State curRate: PlaybackSpeed = PlaybackSpeed.Speed_Forward_1_00_X\n  controller: VideoController = new VideoController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(videoObjectFitTest_two)\n  }\n\n  build() {\n    Column() {\n      Video({\n        src: this.videoSrc,\n        previewUri: this.preViewUri,\n        currentProgressRate: this.curRate,\n        controller: this.controller\n      }).width('100%').height(500).id('videoObjectFit2')\n        .objectFit(this.buttonImageFit)\n      Button('VideoObjectFit')\n        .onClick(() => {\n          this.buttonImageFit = ImageFit.Contain\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\image_video_and_media\\entry\\src\\main\\ets\\pages\\video\\VideoObjectFitSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "505815f04f449bc34a09797e2aa7be0ad92c7c1bcbd1ed785a81bf56044eede5"}
{"text": "import dataPanelCloseEffectTest from '../MyTest/DataPanelCloseEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DataPanelCloseEffectSample {\n  public values: number[] = [20, 20, 20, 20]\n  @State closeEffectStatus: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dataPanelCloseEffectTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      DataPanel({ values: this.values, max: 100, type: DataPanelType.Circle })\n        .width(300)\n        .height(300)\n        .closeEffect(this.closeEffectStatus)\n        .id('dataPanelCloseEffect')\n      Button('DataPanelCloseEffect')\n        .onClick(() => {\n          this.closeEffectStatus = !this.closeEffectStatus\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\data_panel\\DataPanelCloseEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "297ee9b758de542d55770a98082bc9736032bfec997db2a4687ed2975a33df72"}
{"text": "import dataPanelStrokeWidthTest from '../MyTest/DataPanelStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DataPanelStrokeWidthSample {\n  public values: number[] = [20, 20, 20, 20]\n  @State strokeWidthStatus: Length = 30\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dataPanelStrokeWidthTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      DataPanel({ values: this.values, max: 100, type: DataPanelType.Circle })\n        .width(150)\n        .height(150)\n        .strokeWidth(this.strokeWidthStatus)\n        .id('dataPanelStrokeWidth1')\n      DataPanel({ values: this.values, max: 100, type: DataPanelType.Circle })\n        .width(150)\n        .height(150)\n        .strokeWidth($r('app.string.data_panel_strokeWidth'))\n        .id('dataPanelStrokeWidth2')\n      DataPanel({ values: this.values, max: 100, type: DataPanelType.Line })\n        .width(150)\n        .height(150)\n        .strokeWidth(20)\n        .id('dataPanelStrokeWidth3')\n      Button('DataPanelStrokeWidth1')\n        .onClick(() => {\n          this.strokeWidthStatus = '20%'\n        })\n      Button('DataPanelStrokeWidth2')\n        .onClick(() => {\n          this.strokeWidthStatus = -10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\data_panel\\DataPanelStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "d162de7699d45a335bbc67f9931dee0949bae101647e3a14166364291733d8e0"}
{"text": "import dataPanelTrackBackgroundColorTest from '../MyTest/DataPanelTrackBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DataPanelTrackBackgroundColorSample {\n  public values: number[] = [20, 20, 20, 20]\n  @State trackBackgroundColorStatus: ResourceColor = Color.Yellow\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dataPanelTrackBackgroundColorTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      DataPanel({ values: this.values, max: 100, type: DataPanelType.Line })\n        .width(300)\n        .height(10)\n        .trackBackgroundColor(this.trackBackgroundColorStatus)\n        .id('dataPanelTrackBackgroundColor1')\n      DataPanel({ values: this.values, max: 100, type: DataPanelType.Line })\n        .width(300)\n        .height(10)\n        .trackBackgroundColor($r('sys.color.ohos_fa_palette1'))\n        .id('dataPanelTrackBackgroundColor2')\n      Button('DataPanelTrackBackgroundColor1')\n        .onClick(() => {\n          this.trackBackgroundColorStatus = 0xFF00FF\n        })\n      Button('DataPanelTrackBackgroundColor2')\n        .onClick(() => {\n          this.trackBackgroundColorStatus = '#FFFF00AA'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\data_panel\\DataPanelTrackBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "7ea734640818c91322d0035d8e5cc15f0a831ce6bef2e5094013a8d8e516d3f8"}
{"text": "import gaugeColorsTest_one from '../MyTest/GaugeColorsTest_one'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeColorsSample_one {\n  @State colorsStatus: ResourceColor | LinearGradient | Array<[ResourceColor | LinearGradient, number]> = Color.Green\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeColorsTest_one)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .colors(this.colorsStatus)\n        .width(50)\n        .height(50)\n        .id('gaugeColors1')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .colors(0x0000FF)\n        .width(50)\n        .height(50)\n        .id('gaugeColors2')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .colors('#201bf5df')\n        .width(50)\n        .height(50)\n        .id('gaugeColors3')\n      Button('GaugeColors1')\n        .onClick(() => {\n          this.colorsStatus = [[Color.Green, 8], [Color.Brown, 5], [Color.Pink, 1]]\n        })\n      Button('GaugeColors2')\n        .onClick(() => {\n          this.colorsStatus = [['#20e38c8c', 8], ['#201660e0', 5], ['#00FF00', 1]]\n        })\n      Button('GaugeColors3')\n        .onClick(() => {\n          this.colorsStatus = [[0xFFA500, 8], [0xFFFF00, 5], [0x00FF00, 1]]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeColorsSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "9ed8a6b03d913f0cf998148fbd25de8da1fe77c29606d8f0ab033b7d9503d9be"}
{"text": "import gaugeColorsTest_three from '../MyTest/GaugeColorsTest_three'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeColorsSample_three {\n  @State colorsStatus: ResourceColor | LinearGradient | Array<[ResourceColor | LinearGradient, number]> =\n    $r('app.color.data_panel_resource_color5')\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeColorsTest_three)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .colors(this.colorsStatus)\n        .width(50)\n        .height(50)\n        .id('gaugeColors1')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .colors(new LinearGradient([{ color: Color.Green, offset: 0 }, { color: Color.Brown, offset: 1 }]))\n        .width(50)\n        .height(50)\n        .id('gaugeColors2')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .colors(new LinearGradient([{ color: \"#e84026\", offset: '0%' }, { color: \"#64bb5c\", offset: '100%' }]))\n        .width(50)\n        .height(50)\n        .id('gaugeColors3')\n      Button('GaugeColors1')\n        .onClick(() => {\n          this.colorsStatus = [[$r('app.color.data_panel_resource_color6'), 8],\n            [$r('app.color.data_panel_resource_color5'), 5],\n            [$r('app.color.data_panel_resource_color1'), 1]]\n        })\n      Button('GaugeColors2')\n        .onClick(() => {\n          this.colorsStatus =\n            [[new LinearGradient([{ color: Color.Brown, offset: 0 }, { color: Color.Blue, offset: 1 }]), 9],\n              [new LinearGradient([{ color: Color.Pink, offset: 0 }, { color: Color.Yellow, offset: 1 }]), 1]]\n        })\n      Button('GaugeColors3')\n        .onClick(() => {\n          this.colorsStatus =\n            [[new LinearGradient([{ color: 0x317AF7, offset: 0 }, { color: 0x5BA854, offset: 1 }]), 9],\n              [new LinearGradient([{ color: 0xFFFF00, offset: 0 }, { color: 0x008000, offset: 1 }]), 1]]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeColorsSample_three.ets", "project_name": "arkui_ace_engine-master", "id": "bd72acdaa62dfadf57002096af97c9ff726b200c3cbb5f3d18cc00a946b78280"}
{"text": "import gaugeDescriptionTest from '../MyTest/GaugeDescriptionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeDescriptionSample {\n  @Builder\n  descriptionBuilder() {\n    Text('GaugeDescription')\n      .maxFontSize('30sp')\n      .minFontSize(\"10.0vp\")\n      .fontColor(\"#fffa2a2d\")\n      .fontWeight(FontWeight.Medium)\n      .width('100%')\n      .height(\"100%\")\n      .textAlign(TextAlign.Center)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeDescriptionTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .description(this.descriptionBuilder)\n        .id('gaugeDescription')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeDescriptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "23d712a5c30c27172ff00758842a8888fb3d07bfd141963a10fd10eae2ceb688"}
{"text": "import gaugeEndAngleTest from '../MyTest/GaugeEndAngleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeEndAngleSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeEndAngleTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .endAngle(150)\n        .id('gaugeEndAngle')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeEndAngleSample.ets", "project_name": "arkui_ace_engine-master", "id": "969138d0f4802169a3d1eccae4c2454d757215e3cea5b8c0750c1e91e7d86c57"}
{"text": "import gaugeIndicatorTest from '../MyTest/GaugeIndicatorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeIndicatorSample {\n  @State indicatorStatus: GaugeIndicatorOptions | null = { space: '10px' }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeIndicatorTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .indicator(this.indicatorStatus)\n        .width(100)\n        .height(100)\n        .id('gaugeIndicator1')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .indicator({ icon: $rawfile('Gauge.svg'), space: '40vp' })\n        .width(100)\n        .height(100)\n        .id('gaugeIndicator2')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .indicator({ space: '40fp' })\n        .width(100)\n        .height(100)\n        .id('gaugeIndicator3')\n      Button('GaugeIndicator1')\n        .onClick(() => {\n          this.indicatorStatus = { space: '50lpx' }\n        })\n      Button('GaugeIndicator2')\n        .onClick(() => {\n          this.indicatorStatus = { space: $r('app.string.gauge_dimension') }\n        })\n      Button('GaugeIndicator3')\n        .onClick(() => {\n          this.indicatorStatus = null\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeIndicatorSample.ets", "project_name": "arkui_ace_engine-master", "id": "f812b3d9bdeb37e647db0e9ce774ef69cdd39df1ec739e7fda3df6170e99a5ac"}
{"text": "import gaugeStartAngleTest from '../MyTest/GaugeStartAngleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeStartAngleSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeStartAngleTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .startAngle(210)\n        .id('gaugeStartAngle')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeStartAngleSample.ets", "project_name": "arkui_ace_engine-master", "id": "d7ca84e3a089e4704ecf776d64a89a11f62ad76147290e4ce101fbdb69be0d2c"}
{"text": "import gaugeStrokeWidthTest from '../MyTest/GaugeStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeStrokeWidthSample {\n  @State strokeWidthStatus: Length = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeStrokeWidthTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .strokeWidth(this.strokeWidthStatus)\n        .width(150)\n        .height(150)\n        .id('gaugeStrokeWidth1')\n      Gauge({ value: 50, min: 1, max: 100 })\n        .strokeWidth(\"40px\")\n        .width(150)\n        .height(150)\n        .id('gaugeStrokeWidth2')\n      Button('GaugeStrokeWidth1')\n        .onClick(() => {\n          this.strokeWidthStatus = $r('app.string.data_panel_strokeWidth')\n        })\n      Button('GaugeStrokeWidth2')\n        .onClick(() => {\n          this.strokeWidthStatus = -10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "dd556659352769ea5bc36b4a31db6fa742f85bc2f68fb4eb10a0186cf35031f7"}
{"text": "import gaugeTrackShadowTest from '../MyTest/GaugeTrackShadowTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeTrackShadowSample {\n  @State trackShadowStatus: GaugeShadowOptions | null = { radius: 100, offsetX: 30, offsetY: 30 }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeTrackShadowTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Stack() {\n          Column() {\n            Gauge({ value: 50, min: 1, max: 100 })\n              .trackShadow(this.trackShadowStatus)\n              .width(150)\n              .height(150)\n              .id('gaugeTrackShadow')\n            Button('GaugeTrackShadow1')\n              .onClick(() => {\n                this.trackShadowStatus = {\n                  radius: $r(\"app.string.data_panel_number\"),\n                  offsetX: $r(\"app.string.data_panel_number\"),\n                  offsetY: $r(\"app.string.data_panel_number\")\n                }\n              })\n            Button('GaugeTrackShadow2')\n              .onClick(() => {\n                this.trackShadowStatus = null\n              })\n          }\n        }\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeTrackShadowSample.ets", "project_name": "arkui_ace_engine-master", "id": "a0ae20148d3a4a6682016dd9f787de6d038b011c806183c59752165865c63461"}
{"text": "import gaugeValueTest from '../MyTest/GaugeValueTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GaugeValueSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gaugeValueTest)\n  }\n\n  build() {\n    Column() {\n      Gauge({ value: 50, min: 1, max: 100 })\n        .value(100)\n        .id('gaugeValue')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\gauge\\GaugeValueSample.ets", "project_name": "arkui_ace_engine-master", "id": "33cc5867c4a454b40d25ef3d3dd9a3b1ad6ff74ef25adc147595914565bf1861"}
{"text": "import loadingProgressColorTest from '../MyTest/LoadingProgressColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LoadingProgressColorSample {\n  @State colorStatus: ResourceColor = Color.Pink\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(loadingProgressColorTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      LoadingProgress()\n        .color(this.colorStatus)\n        .width(100)\n        .height(100)\n        .id('loadingProgressColor1')\n\n      LoadingProgress()\n        .color(0xFFFF00)\n        .width(100)\n        .height(100)\n        .id('loadingProgressColor2')\n\n      Button('LoadingProgressColor1')\n        .onClick(() => {\n          this.colorStatus = \"#ff07f31d\"\n        })\n\n      Button('LoadingProgressColor2')\n        .onClick(() => {\n          this.colorStatus = $r('app.color.loadingProgress_color')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\loading_progress\\LoadingProgressColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "fb08c1f979f1168929efde4fa183cae84c947e986f8b8a7f148b6fda2b585081"}
{"text": "import loadingProgressEnableLoadingTest from '../MyTest/LoadingProgressEnableLoadingTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct LoadingProgressEnableLoadingSample {\n  @State enableLoadingStatus: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(loadingProgressEnableLoadingTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      LoadingProgress()\n        .enableLoading(this.enableLoadingStatus)\n        .layoutWeight(1)\n        .id('loadingProgressEnableLoading')\n\n      Button('LoadingProgressEnableLoading')\n        .onClick(() => {\n          this.enableLoadingStatus = true\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\loading_progress\\LoadingProgressEnableLoadingSample.ets", "project_name": "arkui_ace_engine-master", "id": "5f57e8a672436360525b95bc1f8318a6ebc9e9401c9ed7e0873c8992d0be0245"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct LoadingProgressHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('LoadingProgress')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({\n          buttonName: 'LoadingProgressColor',\n          buttonUrl: 'pages/loading_progress/LoadingProgressColorSample'\n        });\n        CommonButton({\n          buttonName: 'LoadingProgressEnableLoading',\n          buttonUrl: 'pages/loading_progress/LoadingProgressEnableLoadingSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\loading_progress\\LoadingProgressHome.ets", "project_name": "arkui_ace_engine-master", "id": "8ff58d26d42ebf267ddd7e509f1a2a1a1fe02414cc78782f7c648915fd871544"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport marqueeAllowScaleTest from '../MyTest/MarqueeAllowScaleTest'\n\n@Entry\n@Component\nstruct MarqueeAllowScaleSample {\n  @State buttonTrue: boolean = false\n  @State start: boolean = true\n  private fromStart: boolean = true\n  private step: number = 50\n  private loop: number = Number.POSITIVE_INFINITY\n  private src: string = 'Running Marquee starts rolling'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(marqueeAllowScaleTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).allowScale(this.buttonTrue).width(200).id('marqueeAllowScale')\n      Button('MarqueeAllowScale')\n        .onClick(() => {\n          this.buttonTrue = !this.buttonTrue\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\marquee\\MarqueeAllowScaleSample.ets", "project_name": "arkui_ace_engine-master", "id": "a2a33511ec11a92e3be82effbc0e9c6bb51e0dd3bc3d5f3135b446ce0e9ea7ee"}
{"text": "import marqueeFontColorTest from '../MyTest/MarqueeFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MarqueeFontColorSample {\n  @State colorResource: ResourceColor = \"#FFF000\"\n  @State start: boolean = true\n  private fromStart: boolean = true\n  private step: number = 50\n  private loop: number = Number.POSITIVE_INFINITY\n  private src: string = \"Running Marquee starts rolling\"\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(marqueeFontColorTest)\n  }\n\n  build() {\n    Column({ space: 40 }) {\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).fontColor(0x66FF66).width(200).id('marqueeFontColor1')\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).fontColor(Color.Red).width(200).id('marqueeFontColor2')\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).fontColor(this.colorResource).width(200).id('marqueeFontColor3')\n      Button('MarqueeFontColor')\n        .onClick(() => {\n          this.colorResource = $r(\"app.color.marquee_font_color\")\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\marquee\\MarqueeFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "25e9340d1d764a2d385c22cc8d64a0b4dfe4009f356d45b65beb50ee25b58b25"}
{"text": "import font from '@ohos.font';\nimport marqueeFontFamilyTest from '../MyTest/MarqueeFontFamilyTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct MarqueeFontFamilySample {\n  @State buttonString: string | Resource = 'iconFont'\n  @State start: boolean = true\n  private fromStart: boolean = true\n  private step: number = 50\n  private loop: number = Number.POSITIVE_INFINITY\n  private src: string = \"Running Marquee starts rolling\"\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'iconFont',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(marqueeFontFamilyTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).fontFamily(this.buttonString).width(200).id('marqueeFontFamily')\n      Button('MarqueeFontFamily')\n        .onClick(() => {\n          this.buttonString = \"Arial\"\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\marquee\\MarqueeFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "40c8d5f09575764f0a565cd12d0cce901c3b10450de187fa5b7568292a349a33"}
{"text": "import marqueeFontWeightTest_two from '../MyTest/MarqueeFontWeightTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MarqueeFontWeightSample_two {\n  @State buttonFontWeight: number | FontWeight | string = FontWeight.Regular\n  @State buttonString: number | FontWeight | string = FontWeight.Medium\n  @State start: boolean = true\n  private fromStart: boolean = true\n  private step: number = 50\n  private loop: number = Number.POSITIVE_INFINITY\n  private src: string = \"Running Marquee starts rolling\"\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(marqueeFontWeightTest_two)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).fontWeight(this.buttonString).width(200).id('marqueeFontWeight4')\n      Button('MarqueeFontWeight1')\n        .onClick(() => {\n          this.buttonString = \"lighter\"\n        })\n      Marquee({\n        start: this.start,\n        step: this.step,\n        loop: this.loop,\n        fromStart: this.fromStart,\n        src: this.src\n      }).fontWeight(this.buttonFontWeight).width(200).id('marqueeFontWeight5')\n      Button('MarqueeFontWeight2')\n        .onClick(() => {\n          this.buttonFontWeight = FontWeight.Bolder\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\marquee\\MarqueeFontWeightSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "1032a1ca3c7790b652dc63782c389dbfc6c9603f414002bf0ee99fa3436bc1b8"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct MarqueeHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('MarqueeHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'MarqueeAllowScale', buttonUrl: 'pages/marquee/MarqueeAllowScaleSample' });\n        CommonButton({ buttonName: 'MarqueeFontColor', buttonUrl: 'pages/marquee/MarqueeFontColorSample' });\n        CommonButton({ buttonName: 'MarqueeFontFamily', buttonUrl: 'pages/marquee/MarqueeFontFamilySample' });\n        CommonButton({ buttonName: 'MarqueeFontSize', buttonUrl: 'pages/marquee/MarqueeFontSizeSample' });\n        CommonButton({ buttonName: 'MarqueeFontWeight_one', buttonUrl: 'pages/marquee/MarqueeFontWeightSample_one' });\n        CommonButton({ buttonName: 'MarqueeFontWeight_two', buttonUrl: 'pages/marquee/MarqueeFontWeightSample_two' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\marquee\\MarqueeHome.ets", "project_name": "arkui_ace_engine-master", "id": "336f028e2617f567742cab853081f5d59d0f68167b5e5895dc5a973a49d83b75"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gaugeColorsTest_two() {\n  \n  defineTest('gaugeColorsTestDemo_two', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gaugeColorsTestDemo_two running')\n    let driver: Tester = Tester.create()\n    let gauge1: Component = await driver.findComponent(Matcher.create().id('gaugeColors1').enabled(true))\n    let gauge2: Component = await driver.findComponent(Matcher.create().id('gaugeColors2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('GaugeColors1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('GaugeColors2').enabled(true))\n    let colors1: string = await gauge1.getInspectorInfo()\n    assertEqual(JSON.parse(colors1)\n      .$attrs.colors\n      , '[[\"#FFFFA500\",\"0.100000\"],[\"#FFFFFF00\",\"0.800000\"]]')\n    let colors2: string = await gauge2.getInspectorInfo()\n    assertEqual(JSON.parse(colors2)\n      .$attrs\n      .colors\n      , '[[\"#FF08F660\",\"0.000000\"],[\"#FFEEEE4A\",\"1.000000\"]]')\n\n    await button1.tap()\n    let colors3: string = await gauge1.getInspectorInfo()\n    assertEqual(JSON.parse(colors3)\n      .$attrs.colors,\n      '[[[[\"#FFDEB6FB\",\"0.000000\"],[\"#FFAC49F5\",\"1.000000\"]],9],[[[\"#FFB5E0F4\",\"0.000000\"],[\"#FF46B1E3\",\"1.000000\"]],1]]')\n\n    await button2.tap()\n    let colors4: string = await gauge1.getInspectorInfo()\n    assertEqual(JSON.parse(colors4)\n      .$attrs.colors,\n      '[[[[\"#FFF89B9B\",\"0.000000\"],[\"#FFEEEE4A\",\"1.000000\"]],9],[[[\"#1AF15D07\",\"0.000000\"],[\"#FF3C4747\",\"1.000000\"]],1]]')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\GaugeColorsTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "5dea57918fdb0dbb2de51c55ec660168570a6a3e95d15ec7714c153f4f39e767"}
{"text": "import { assertTrue, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gaugeDescriptionTest() {\n  \n  defineTest('gaugeDescriptionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gaugeDescriptionTestDemo running')\n    let driver: Tester = Tester.create()\n    let text: Component = await driver.findComponent(Matcher.create().text('GaugeDescription').enabled(true))\n    let description1: string = await text.getType()\n    assertTrue(description1 == 'Text')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\GaugeDescriptionTest.ets", "project_name": "arkui_ace_engine-master", "id": "5aed951de7d8a803397530e629d1d0d6f2458475527fbed5ca783664fecfe979"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gaugeStartAngleTest() {\n  \n  defineTest('gaugeStartAngleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gaugeStartAngleTestDemo running')\n    let driver: Tester = Tester.create()\n    let gauge: Component = await driver.findComponent(Matcher.create().id('gaugeStartAngle').enabled(true))\n    let startAngle: string = await gauge.getInspectorInfo()\n    assertEqual(JSON.parse(startAngle).$attrs.startAngle, '210.00')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\GaugeStartAngleTest.ets", "project_name": "arkui_ace_engine-master", "id": "754f54391fe83c89ca118ffdc0da410f2d7324f14168b0a5b54eb3f4fe6e46b0"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gaugeValueTest() {\n  \n  defineTest('gaugeValueTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gaugeValueTestDemo running')\n    let driver: Tester = Tester.create()\n    let gauge: Component = await driver.findComponent(Matcher.create().id('gaugeValue').enabled(true))\n    let value: string = await gauge.getInspectorInfo()\n    assertEqual(JSON.parse(value).$attrs.value, '100.00')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\GaugeValueTest.ets", "project_name": "arkui_ace_engine-master", "id": "3529e8f13179a2447338e81d7acdf2d5a97ad5dc1894860c8cbcd53df1785598"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function marqueeFontWeightTest_two() {\n  \n  defineTest('marqueeFontWeightTestDemo_two', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('marqueeFontWeightTestDemo_two running')\n    let driver: Tester = Tester.create()\n    let marquee4: Component = await driver.findComponent(Matcher.create().id('marqueeFontWeight4').enabled(true))\n    let marquee5: Component = await driver.findComponent(Matcher.create().id('marqueeFontWeight5').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('MarqueeFontWeight1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('MarqueeFontWeight2').enabled(true))\n    let fontWeight1: string = await marquee4.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight1).$attrs.fontWeight, 'FontWeight.Medium')\n    await button1.tap()\n    let fontWeight2: string = await marquee4.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight2).$attrs.fontWeight, 'FontWeight.Lighter')\n    let fontWeight3: string = await marquee5.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight3).$attrs.fontWeight, 'FontWeight.Regular')\n    await button2.tap()\n    let fontWeight4: string = await marquee5.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight4).$attrs.fontWeight, 'FontWeight.Bolder')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\MarqueeFontWeightTest_two.ets", "project_name": "arkui_ace_engine-master", "id": "6390433a971e8f0e3e9f7694ae4fd1c18e83ef27be05a3b6db45502b0e790be1"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function progressColorLinearGradientTest() {\n  \n  defineTest('progressColorLinearGradientTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"progressColorLinearGradientTestDemo running\")\n    let driver: Tester = Tester.create()\n    let progress1: Component =\n      await driver.findComponent(Matcher.create().id('progressColorLinearGradient1').enabled(true))\n    let progress2: Component =\n      await driver.findComponent(Matcher.create().id('progressColorLinearGradient2').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('ProgressColorLinearGradient1').enabled(true))\n    let colorLinearGradient1: string = await progress1.getInspectorInfo()\n    assertEqual(JSON.parse(colorLinearGradient1)\n      .$attrs.progressGradientColor,\n      '[{\"color\":\"#FFFF00AA\",\"offset\":\"0.100000\"},{\"color\":\"#FF254FF7\",\"offset\":\"0.500000\"}]')\n    let colorLinearGradient2: string = await progress2.getInspectorInfo()\n    assertEqual(JSON.parse(colorLinearGradient2)\n      .$attrs.progressGradientColor,\n      '[{\"color\":\"#65EEC9A3\",\"offset\":\"0.100000\"},{\"color\":\"#FFEF629F\",\"offset\":\"0.500000\"}]')\n    await button1.tap()\n    let colorLinearGradient3: string = await progress1.getInspectorInfo()\n    assertEqual(JSON.parse(colorLinearGradient3)\n      .$attrs.progressGradientColor,\n      '[{\"color\":\"#FFFF00AA\",\"offset\":\"0.100000\"},{\"color\":\"#FF254FF7\",\"offset\":\"0.500000\"}]')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\ProgressColorLinearGradientTest.ets", "project_name": "arkui_ace_engine-master", "id": "8254e9aa6245c065db3a8d29cf7ec58abbe02a757d591058d70642c410b321ac"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\nexport default async function progressStyleEclipseStyleOptionsTest() {\n  defineTest('progressStyleEclipseStyleOptionsTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"progressStyleEclipseStyleOptionsTestDemo running\")\n    let driver: Tester = Tester.create()\n    let progress: Component =\n      await driver.findComponent(Matcher.create().id('progressStyleEclipseStyleOptions').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('ProgressStyleEclipseStyleOptions').enabled(true))\n    let styleEclipseStyleOptions1: string = await progress.getInspectorInfo()\n    assertFalse(JSON.parse(styleEclipseStyleOptions1).$attrs.eclipseStyle == undefined)\n    assertTrue(JSON.parse(styleEclipseStyleOptions1)\n      .$attrs\n      .eclipseStyle\n      .enableSmoothEffect)\n    await button.tap()\n    let styleEclipseStyleOptions2: string = await progress.getInspectorInfo()\n    assertFalse(JSON.parse(styleEclipseStyleOptions2)\n      .$attrs\n      .eclipseStyle\n      .enableSmoothEffect)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\ProgressStyleEclipseStyleOptionsTest.ets", "project_name": "arkui_ace_engine-master", "id": "23916668055942304d65e4c42b34d422d956da5fdd4472255a3b57c9881f9efb"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function progressValueTest() {\n  \n  defineTest('progressValueTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"progressValueTestDemo running\")\n    let driver: Tester = Tester.create()\n    let progress1: Component = await driver.findComponent(Matcher.create().id('progressValue1').enabled(true))\n    let progress2: Component = await driver.findComponent(Matcher.create().id('progressValue2').enabled(true))\n    let value1: string = await progress1.getInspectorInfo()\n    assertEqual(JSON.parse(value1).$attrs.value, '80.000000')\n    let value2: string = await progress2.getInspectorInfo()\n    assertEqual(JSON.parse(value2).$attrs.value, '0.000000')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\ProgressValueTest.ets", "project_name": "arkui_ace_engine-master", "id": "bc0f09592d0f1c4c2f79c579bf42106a1b1bc43a3dab36ba430e865b380587d8"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textClockFontFeatureTest() {\n  \n  defineTest('textClockFontFeatureTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textClockFontFeatureTest running')\n    let driver: Tester = Tester.create()\n    let textClock: Component = await driver.findComponent(Matcher.create().id('textClockFontFeature').enabled(true))\n    let fontFeature: string = await textClock.getInspectorInfo()\n    assertFalse(JSON.parse(fontFeature).$attrs.fontFeature.value == undefined)\n    assertEqual(JSON.parse(fontFeature).$attrs.fontFeature, 'normal')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\TextClockFontFeatureTest.ets", "project_name": "arkui_ace_engine-master", "id": "0e442b92ba9b83eee56d2e69ed929a3e8da5468b1855313005f9a588c1c248dd"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textClockFontSizeTest() {\n  \n  defineTest('textClockFontSizeTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textClockFontSizeTest running')\n    let driver: Tester = Tester.create()\n    let textClock1: Component = await driver.findComponent(Matcher.create().id('textClockFontSize1').enabled(true))\n    let textClock2: Component = await driver.findComponent(Matcher.create().id('textClockFontSize2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextClockFontSize').enabled(true))\n    let fontSize1: string = await textClock1.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize1).$attrs.fontSize, '30.00fp')\n    let fontSize2: string = await textClock2.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize2).$attrs.fontSize, $r(\"app.string.data_panel_number\"))\n    await button.tap()\n    let fontSize3: string = await textClock1.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize3).$attrs.fontSize, \"200.00px\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\TextClockFontSizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "6a46e5db9634d9f110495c7e30518fa5c0ea338f614a8d5e135ef2ee40b18e67"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textClockFontStyleTest() {\n  \n  defineTest('textClockFontStyleTest', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textClockFontStyleTest running')\n    let driver: Tester = Tester.create()\n    let textClock: Component = await driver.findComponent(Matcher.create().id('textClockFontStyle').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextClockFontStyle').enabled(true))\n    let fontStyle1: string = await textClock.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle1).$attrs.fontStyle, 'FontStyle.Normal')\n    await button.tap()\n    let fontStyle2: string = await textClock.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle2).$attrs.fontStyle, 'FontStyle.Italic')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\TextClockFontStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "8e5bdb7524e84c572d4d960e7f8a29b214fdf1c5bc082ed67745e7dabe9c77a2"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textClockFontWeightTestTwo() {\n  \n  defineTest('textClockFontWeightTestTwo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textClockFontWeightTestTwo running')\n    let driver: Tester = Tester.create()\n    let textClock4: Component = await driver.findComponent(Matcher.create().id('textClockFontWeight4').enabled(true))\n    let textClock5: Component = await driver.findComponent(Matcher.create().id('textClockFontWeight5').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextClockFontWeight').enabled(true))\n    let fontWeight1: string = await textClock4.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight1).$attrs.fontWeight, 'FontWeight.Regular')\n    let fontWeight2: string = await textClock5.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight2).$attrs.fontWeight, 'FontWeight.Medium')\n    await button.tap()\n    let fontWeight3: string = await textClock4.getInspectorInfo()\n    assertEqual(JSON.parse(fontWeight3).$attrs.fontWeight, 'FontWeight.Bolder')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\TextClockFontWeightTestTwo.ets", "project_name": "arkui_ace_engine-master", "id": "2dcfa14080f5beade22eefbd85b1c7adc15168ea0ad7f49d2f1d461e3ef1d782"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textTimerFontStyleTest() {\n  \n  defineTest('textTimerFontStyleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textTimerFontStyleTestDemo running')\n    let driver: Tester = Tester.create()\n    let textTimer: Component = await driver.findComponent(Matcher.create().id('textTimerFontStyle').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextTimerFontStyle').enabled(true))\n    let fontStyle1: string = await textTimer.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle1).$attrs.fontStyle, 'FontStyle.Normal')\n    await button.tap()\n    let fontStyle2: string = await textTimer.getInspectorInfo()\n    assertEqual(JSON.parse(fontStyle2).$attrs.fontStyle, 'FontStyle.Italic')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\TextTimerFontStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "d1057469c1735214f7ee7ed4c0785f9164fcc3d1779de7f62c5dba531aaa9da0"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textTimerFormatTest() {\n  \n  defineTest('textTimerFormatTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('textTimerFormatTestDemo running')\n    let driver: Tester = Tester.create()\n    let textTimer: Component = await driver.findComponent(Matcher.create().id('textTimerFormat').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextTimerFormat').enabled(true))\n    let format1: string = await textTimer.getInspectorInfo()\n    assertEqual(JSON.parse(format1).$attrs.format, 'mm:ss.SS')\n    await button.tap()\n    let format2: string = await textTimer.getInspectorInfo()\n    assertEqual(JSON.parse(format2).$attrs.format, 'HH:mm:ss.SS')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\MyTest\\TextTimerFormatTest.ets", "project_name": "arkui_ace_engine-master", "id": "14536029cf7e5eedfe23999e30eab9a820e0913582ef9d0d20715e47dd99718a"}
{"text": "import progressBackgroundColorTest from '../MyTest/ProgressBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressBackgroundColorSample {\n  @State backgroundColorStatus: ResourceColor = Color.Red\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressBackgroundColorTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: 70 }).backgroundColor(this.backgroundColorStatus)\n        .id('progressBackgroundColor1')\n      Button('ProgressBackgroundColor1')\n        .onClick(() => {\n          this.backgroundColorStatus = 0x000000\n        })\n      Button('ProgressBackgroundColor2')\n        .onClick(() => {\n          this.backgroundColorStatus = '#0000ff'\n        })\n      Progress({ value: 70 }).backgroundColor($r(\"app.color.progress_background_color\"))\n        .id('progressBackgroundColor2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "5d90724530b11b445e65655857dc9e7de92ee1911589e776593bf81eab430b28"}
{"text": "import progressColorLinearGradientTest from '../MyTest/ProgressColorLinearGradientTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressColorLinearGradientSample {\n  @State value: number = 50\n  public colorShadow: LinearGradient = new LinearGradient([{ color: \"#FFFF00AA\", offset: 0.1 },\n    { color: \"#ff254ff7\", offset: 0.5 }])\n  public Shadow: LinearGradient = new LinearGradient([{\n    color: $r(\"app.color.progress_linear_gradient_color1\"),\n    offset: 0.1\n  },\n    { color: $r(\"app.color.progress_linear_gradient_color2\"), offset: 0.5 }])\n  @State progressColorShadow: LinearGradient = this.colorShadow\n  @State progressShadow: LinearGradient = this.Shadow\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressColorLinearGradientTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: this.value, total: 100, type: ProgressType.Linear })\n        .color(this.progressColorShadow)\n        .id('progressColorLinearGradient1')\n      Button('ProgressColorLinearGradient1')\n        .onClick(() => {\n          this.colorShadow = new LinearGradient([{ color: 0x0000ff, offset: '10px' },\n            { color: 0xffffff, offset: '15px' }])\n        })\n      Progress({ value: this.value, total: 100, type: ProgressType.Linear })\n        .color(this.progressShadow)\n        .id('progressColorLinearGradient2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressColorLinearGradientSample.ets", "project_name": "arkui_ace_engine-master", "id": "b7a3227050eb47cb9841c8ad7fba2bbafc301d68e768da725515baa1fa0b1c89"}
{"text": "import progressColorResourceColorTest from '../MyTest/ProgressColorResourceColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressColorResourceColorSample {\n  @State color: ResourceColor = Color.Red\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressColorResourceColorTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: 70 })\n        .color(this.color)\n        .id('progressColorResourceColor1')\n      Button('ProgressColorResourceColor1')\n        .onClick(() => {\n          this.color = 0x000000\n        })\n      Button('ProgressColorResourceColor2')\n        .onClick(() => {\n          this.color = '#0000ff'\n        })\n      Progress({ value: 70 })\n        .color($r(\"app.color.progress_color\"))\n        .id('progressColorResourceColor2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressColorResourceColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "6a5ac2cd77351c0a6cd893a1b249b1242a9cab108ae8c2e3c28bee89e80a241a"}
{"text": "import progressStyleEclipseStyleOptionsTest from '../MyTest/ProgressStyleEclipseStyleOptionsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressStyleEclipseStyleOptionsSample {\n  @State style: EclipseStyleOptions = { enableSmoothEffect: true }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressStyleEclipseStyleOptionsTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: 80, total: 100, type: ProgressType.Eclipse })\n        .height(100)\n        .width(200)\n        .color(Color.Orange)\n        .value(60)\n        .width(100)\n        .style(this.style)\n        .id('progressStyleEclipseStyleOptions')\n      Button('ProgressStyleEclipseStyleOptions')\n        .onClick(() => {\n          this.style = { enableSmoothEffect: false }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressStyleEclipseStyleOptionsSample.ets", "project_name": "arkui_ace_engine-master", "id": "55b84445cfb7052629aa007f48186990e82424a0de7f0a6687dcf646609cf9b3"}
{"text": "import progressStyleProgressStyleOptionsTest from '../MyTest/ProgressStyleProgressStyleOptionsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressStyleProgressStyleOptionsSample {\n  @State style: ProgressStyleOptions = {\n    strokeWidth: 10,\n    scaleCount: 15,\n    scaleWidth: 20,\n    enableSmoothEffect: true\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressStyleProgressStyleOptionsTest)\n  }\n\n  build() {\n    Column() {\n      Progress({ value: 10 })\n        .value(80)\n        .width(200)\n        .color(Color.Black)\n        .value(50)\n        .width(100)\n        .margin(20)\n        .style(this.style)\n        .id('progressStyleProgressStyleOptions')\n      Button('ProgressStyleProgressStyleOptions1')\n        .onClick(() => {\n          this.style = {\n            strokeWidth: '10px',\n            scaleCount: 10,\n            scaleWidth: '10px',\n            enableSmoothEffect: false\n          }\n        })\n      Button('ProgressStyleProgressStyleOptions2')\n        .onClick(() => {\n          this.style = {\n            strokeWidth: $r(\"app.string.stroke_width_length\"),\n            scaleCount: 10,\n            scaleWidth: $r(\"app.string.scale_width_length\"),\n            enableSmoothEffect: false\n          }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressStyleProgressStyleOptionsSample.ets", "project_name": "arkui_ace_engine-master", "id": "1c876cce234ee727d4419300e232daa58ab2c61052079c9f51d91d800d4d6f4b"}
{"text": "import progressStyleRingStyleOptionsTest from '../MyTest/ProgressStyleRingStyleOptionsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressStyleRingStyleOptionsSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressStyleRingStyleOptionsTest)\n  }\n\n  @State style: RingStyleOptions = {\n    strokeWidth: 5,\n    shadow: true,\n    status: ProgressStatus.LOADING,\n    enableScanEffect: true,\n    enableSmoothEffect: true\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: 100, type: ProgressType.Ring })\n        .height(50)\n        .width(100)\n        .color(Color.Blue)\n        .value(60)\n        .width(100)\n        .style(this.style)\n        .id('progressStyleRingStyleOptions')\n      Button('ProgressStyleRingStyleOptions1')\n        .onClick(() => {\n          this.style = {\n            strokeWidth: '20px',\n            shadow: false,\n            status: ProgressStatus.PROGRESSING,\n            enableScanEffect: false,\n            enableSmoothEffect: false\n          }\n        })\n      Button('ProgressStyleRingStyleOptions2')\n        .onClick(() => {\n          this.style = {\n            strokeWidth: $r(\"app.string.stroke_width_length\"),\n            shadow: true,\n            status: ProgressStatus.PROGRESSING,\n            enableScanEffect: true,\n            enableSmoothEffect: true\n          }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressStyleRingStyleOptionsSample.ets", "project_name": "arkui_ace_engine-master", "id": "33cdeba3d0b8bddbe4252f2ff1d94523d7baaa477339327404e4201a0a92ca53"}
{"text": "import progressStyleRingStyleOptionsTest from '../MyTest/ProgressStyleScaleRingStyleOptionsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressStyleScaleRingStyleOptionsSample {\n  @State style: ScaleRingStyleOptions = {\n    strokeWidth: 6,\n    scaleWidth: 3,\n    scaleCount: 150,\n    enableSmoothEffect: true\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressStyleRingStyleOptionsTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: 100, total: 100, type: ProgressType.ScaleRing })\n        .height(30)\n        .width(200)\n        .color(Color.Blue)\n        .value(60)\n        .width(100)\n        .style(this.style)\n        .id('progressStyleScaleRingStyleOptions')\n      Button('ProgressStyleScaleRingStyleOptions1')\n        .onClick(() => {\n          this.style = {\n            strokeWidth: '1px',\n            scaleWidth: '4px',\n            scaleCount: 150,\n            enableSmoothEffect: false\n          }\n        })\n      Button('ProgressStyleScaleRingStyleOptions2')\n        .onClick(() => {\n          this.style = {\n            strokeWidth: $r(\"app.string.stroke_width_length\"),\n            scaleWidth: $r(\"app.string.scale_width_length\"),\n            scaleCount: 150,\n            enableSmoothEffect: true\n          }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressStyleScaleRingStyleOptionsSample.ets", "project_name": "arkui_ace_engine-master", "id": "ed4002e9bb44d8bca5ffbc7bc133799c8eddadcfeca2cc54185841f53c3c2e4a"}
{"text": "import progressValueTest from '../MyTest/ProgressValueTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ProgressValueSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(progressValueTest)\n  }\n\n  build() {\n    Column({ space: 15 }) {\n      Progress({ value: 10 }).value(80).width(200)\n        .id('progressValue1')\n      Progress({ value: 10 }).value(-2).width(200)\n        .id('progressValue2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\progress\\ProgressValueSample.ets", "project_name": "arkui_ace_engine-master", "id": "2344004eb9a39d489464be9efe91a03cbe6c51d18ca5af54618b8516bf149faa"}
{"text": "import qRCodeBackgroundColorTest from '../MyTest/QRCodeBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct QRCodeBackgroundColorSample {\n  private value: string = 'hello world'\n  @State backgroundColorsStatus: ResourceColor = Color.Orange\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(qRCodeBackgroundColorTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      QRCode(this.value)\n        .backgroundColor(this.backgroundColorsStatus)\n        .width(100)\n        .height(100)\n        .id('qRCodeBackgroundColor1')\n\n      QRCode(this.value)\n        .backgroundColor(0x00FFFF)\n        .width(100)\n        .height(100)\n        .id('qRCodeBackgroundColor2')\n\n      Button('QRCodeBackgroundColor1')\n        .onClick(() => {\n          this.backgroundColorsStatus = \"#ffc007f3\"\n        })\n      Button('QRCodeBackgroundColor2')\n        .onClick(() => {\n          this.backgroundColorsStatus = $r('app.color.data_panel_resource_color6')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\qr_code\\QRCodeBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "cd1074397c8bb69165faaa8191bec217409ea4aef6baae96dec86cae37ff72ae"}
{"text": "import qRCodeColorTest from '../MyTest/QRCodeColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct QRCodeColorSample {\n  private value: string = 'hello world'\n  @State colorStatus: ResourceColor = Color.Red\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(qRCodeColorTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      QRCode(this.value)\n        .color(this.colorStatus)\n        .width(50)\n        .height(50)\n        .id('qRCodeColor1')\n\n      QRCode(this.value)\n        .color(0xFFFF00)\n        .width(50)\n        .height(50)\n        .id('qRCodeColor2')\n\n      Button('QRCodeColor1')\n        .onClick(() => {\n          this.colorStatus = \"#ffc007f3\"\n        })\n      Button('QRCodeColor2')\n        .onClick(() => {\n          this.colorStatus = $r('app.color.data_panel_resource_color8')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\qr_code\\QRCodeColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "b37bb253155512578d93510bf2def110a0c87f8a0d70d14fc672dc70e7c57f42"}
{"text": "import qRCodeContentOpacityTest from '../MyTest/QRCodeContentOpacityTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct QRCodeContentOpacitySample {\n  private value: string = 'hello world'\n  @State contentOpacityStatus: number | Resource = 0.5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(qRCodeContentOpacityTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      QRCode(this.value)\n        .contentOpacity(this.contentOpacityStatus)\n        .id('qRCodeContentOpacity')\n\n      Button('QRCodeContentOpacity')\n        .onClick(() => {\n          this.contentOpacityStatus = $r('app.float.qr_code_contentOpacity')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\qr_code\\QRCodeContentOpacitySample.ets", "project_name": "arkui_ace_engine-master", "id": "8b173b0f95772c9158854adbdf553e62ae76201f1d28fe9dda2af518ee87ab84"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct QRCodeHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('QRCode')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'QRCodeColor', buttonUrl: 'pages/qr_code/QRCodeColorSample' });\n        CommonButton({ buttonName: 'QRCodeBackgroundColor', buttonUrl: 'pages/qr_code/QRCodeBackgroundColorSample' });\n        CommonButton({ buttonName: 'QRCodeContentOpacity', buttonUrl: 'pages/qr_code/QRCodeContentOpacitySample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\qr_code\\QRCodeHome.ets", "project_name": "arkui_ace_engine-master", "id": "f140c1aa4e714d61a76b904fb57012bd27777b127a6598573e78725a71412123"}
{"text": "import textClockFontColorTest from '../MyTest/TextClockFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFontColorSample {\n  @State fontColorStatus: ResourceColor = 0xff0000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontColorTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextClock()\n        .id('textClockFontColor1')\n        .fontColor(this.fontColorStatus)\n      TextClock()\n        .id('textClockFontColor2')\n        .fontColor(\"#ffc007f3\")\n      Button('TextClockFontColor1')\n        .onClick(() => {\n          this.fontColorStatus = Color.Blue\n        })\n      Button('TextClockFontColor2')\n        .onClick(() => {\n          this.fontColorStatus = $r('app.color.data_panel_resource_color5')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "8c672a381362f6dd1e2529da259148b5b36f12481f59c16f5c2bf53494494bae"}
{"text": "import textClockFontFamilyTest from '../MyTest/TextClockFontFamilyTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport font from '@ohos.font'\n\n@Entry\n@Component\nstruct TextClockFontFamilySample {\n  @State fontFamilyStatus: string | Resource = 'Arial'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontFamilyTest)\n    font.registerFont({\n      familyName: 'TESTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextClock()\n        .id('textClockFontFamily')\n        .fontFamily(this.fontFamilyStatus)\n        .fontSize(40)\n        .format(\"HH:mm:ss\")\n      Button('TextClockFontFamily')\n        .onClick(() => {\n          this.fontFamilyStatus = 'TESTRawFile'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "b2e9fb085ecdb8d8d83ab47687c813636430e32c1dbfd0bbfea0ea183b7f72be"}
{"text": "import textClockFontFeatureTest from '../MyTest/TextClockFontFeatureTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFontFeatureSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontFeatureTest)\n  }\n\n  build() {\n    Column() {\n      TextClock()\n        .id('textClockFontFeature')\n        .fontFeature('normal')\n        .fontSize(40)\n        .format(\"HH:mm:ss\")\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontFeatureSample.ets", "project_name": "arkui_ace_engine-master", "id": "fddfcd70731b9632ce65b03ede12e5df6c0fa24a32fc4c9dfdb34e925c88b717"}
{"text": "import textClockFontSizeTest from '../MyTest/TextClockFontSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFontSizeSample {\n  @State fontSizeStatus: number | string | Resource = 30\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontSizeTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextClock()\n        .id('textClockFontSize1')\n        .fontSize(this.fontSizeStatus)\n      TextClock()\n        .id('textClockFontSize2')\n        .fontSize($r(\"app.string.data_panel_number\"))\n      Button('TextClockFontSize')\n        .onClick(() => {\n          this.fontSizeStatus = \"200px\"\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "381b11fa9f7e8d9d275c45cf8e22393b46467e8eac8495c8084b533533465a82"}
{"text": "import textClockFontStyleTest from '../MyTest/TextClockFontStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFontStyleSample {\n  @State fontStyleStatus: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontStyleTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextClock()\n        .id('textClockFontStyle')\n        .fontStyle(this.fontStyleStatus)\n      Button('TextClockFontStyle')\n        .onClick(() => {\n          this.fontStyleStatus = FontStyle.Italic\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "d1c197a93f4db55db0d9b05b058ce2ec22c296774e1747975546a60ddb7e74aa"}
{"text": "import textClockFontWeightTestOne from '../MyTest/TextClockFontWeightTestOne'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFontWeightSampleOne {\n  @State fontWeight: number | FontWeight | string = 500\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontWeightTestOne)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextClock()\n        .id('textClockFontWeight1')\n        .fontWeight(this.fontWeight)\n      TextClock()\n        .id('textClockFontWeight2')\n        .fontWeight(FontWeight.Normal)\n      TextClock()\n        .id('textClockFontWeight3')\n        .fontWeight(FontWeight.Lighter)\n      Button('TextClockFontWeight1')\n        .onClick(() => {\n          this.fontWeight = \"lighter\"\n        })\n      Button('TextClockFontWeight2')\n        .onClick(() => {\n          this.fontWeight = FontWeight.Bold\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontWeightSample_one.ets", "project_name": "arkui_ace_engine-master", "id": "4216ff6d413f079cf78f5d7a2bb5ef05ff3d9b7e0f69e36600ea439bc72eea7f"}
{"text": "import textClockFontWeightTestTwo from '../MyTest/TextClockFontWeightTestTwo'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFontWeightSampleTwo {\n  @State fontWeight: number | FontWeight | string = FontWeight.Regular\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFontWeightTestTwo)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextClock()\n        .id('textClockFontWeight4')\n        .fontWeight(this.fontWeight)\n      TextClock()\n        .id('textClockFontWeight5')\n        .fontWeight(FontWeight.Medium)\n      Button('TextClockFontWeight')\n        .onClick(() => {\n          this.fontWeight = FontWeight.Bolder\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFontWeightSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "70cb6304603259b433804f01611abaa005c6e749de2f0c38836d781c26d6dd84"}
{"text": "import textClockFormat from '../MyTest/TextClockFormatTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextClockFormatSample {\n  @State accumulateTime: number = 0\n  controller: TextClockController = new TextClockController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textClockFormat)\n  }\n\n  build() {\n    TextClock({ timeZoneOffset: -8, controller: this.controller })\n      .id('textClockFormat')\n      .format(\"HH:mm:ss\")\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_clock\\TextClockFormatSample.ets", "project_name": "arkui_ace_engine-master", "id": "5cb1698f5b4d033c4fdc60b06e954fc5e223b8c058f1cdec9ca900c20be29e36"}
{"text": "import textTimerFontColorTest from '../MyTest/TextTimerFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextTimerFontColorSample {\n  @State buttonNumber: ResourceColor = Color.Blue\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTimerFontColorTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextTimer().fontColor(this.buttonNumber).id('textTimerFontColor1')\n      Button('TextTimerFontColor')\n        .onClick(() => {\n          this.buttonNumber = 0xff0000\n        })\n      TextTimer().fontColor(\"#FFF000\").id('textTimerFontColor2')\n      TextTimer().fontColor($r(\"app.color.text_timer_color1\")).id('textTimerFontColor3')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_timer\\TextTimerFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "99e5a75d02734797c79df55cec5ab0b64c108b9f6e678a2b7389a4210b96ec7a"}
{"text": "import textTimerFontFamilyTest from '../MyTest/TextTimerFontFamilyTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct TextTimerFontFamilySample {\n  @State buttonString: string | Resource = 'iconFont'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTimerFontFamilyTest)\n    font.registerFont({\n      familyName: 'iconFont',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextTimer().fontFamily(this.buttonString).id('textTimerFontFamily')\n      Button('TextTimerFontFamily')\n        .onClick(() => {\n          this.buttonString = \"Arial\"\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_timer\\TextTimerFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "1d0761a4204f089fca35f8ca6fa5c39599371b59111466cc4bffef8d733b6469"}
{"text": "import textTimerFontSizeTest from '../MyTest/TextTimerFontSizeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextTimerFontSizeSample {\n  @State buttonString: number | string | Resource = 30\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTimerFontSizeTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextTimer().fontSize(this.buttonString).id('textTimerFontSize1')\n      Button('TextTimerFontSize')\n        .onClick(() => {\n          this.buttonString = \"100px\"\n        })\n      TextTimer().fontSize($r(\"app.string.text_timer_fontSize\")).id('textTimerFontSize2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_timer\\TextTimerFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d7b6d14bc7e0b28fd61bf18af1f0fb5c9b88f691c259e6e2c6af9af023109fad"}
{"text": "import textTimerFontStyleTest from '../MyTest/TextTimerFontStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextTimerFontStyleSample {\n  @State buttonItalic: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTimerFontStyleTest)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextTimer().fontStyle(this.buttonItalic).id('textTimerFontStyle')\n      Button('TextTimerFontStyle')\n        .onClick(() => {\n          this.buttonItalic = FontStyle.Italic\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_timer\\TextTimerFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "3914d5070963e27244a7c59aae87616b8d8abf165cc8ce61182d1bfdda73a35b"}
{"text": "import textTimerFontWeightTest_two from '../MyTest/TextTimerFontWeightTest_two'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextTimerFontWeightSample_two {\n  @State test1: number | FontWeight | string = 500\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTimerFontWeightTest_two)\n  }\n\n  build() {\n    Column({ space: 8 }) {\n      TextTimer().fontWeight(FontWeight.Medium).id('textTimerFontWeight4')\n      TextTimer().fontWeight(FontWeight.Bolder).id('textTimerFontWeight5')\n      TextTimer().fontWeight(this.test1).id('textTimerFontWeight6')\n      Button('TextTimerFontWeight')\n        .onClick(() => {\n          this.test1 = \"lighter\"\n        })\n      TextTimer().fontWeight('400').id('textTimerFontWeight7')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_timer\\TextTimerFontWeightSample_two.ets", "project_name": "arkui_ace_engine-master", "id": "9c53b9f35847fa16d576049253b3cae5d04b0d9927ea6ff22de5c64822cd582c"}
{"text": "import textTimerFormatTest from '../MyTest/TextTimerFormatTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextTimerFormatSample {\n  textTimerController: TextTimerController = new TextTimerController()\n  @State format: string = 'mm:ss.SS'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTimerFormatTest)\n  }\n\n  build() {\n    Column() {\n      TextTimer({ isCountDown: true, count: 30000, controller: this.textTimerController })\n        .format(this.format).id('textTimerFormat')\n      Button('TextTimerFormat')\n        .onClick(() => {\n          this.format = 'yy:MM:dd'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\information_display\\entry\\src\\main\\ets\\pages\\text_timer\\TextTimerFormatSample.ets", "project_name": "arkui_ace_engine-master", "id": "9a85a28721a7a9a0ac8e491fe8c6d4fbde887e55bae2a2c83dce5ac44361daf0"}
{"text": "import alphabetIndexerAutoCollapseTest from '../MyTest/AlphabetIndexerAutoCollapseTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct AlphabetIndexerAutoCollapseSample {\n  private arrayA: string[] = ['#', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\n    'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O']\n  private arrayB: string[] = ['#', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\n    'H', 'I', 'J', 'K']\n  private arrayC: string[] = ['#', 'A']\n  private arrayD: string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G',\n    'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O']\n  private arrayE: string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G',\n    'H', 'I', 'J']\n  private arrayF: string[] = ['A', 'B']\n  @State autoCollapseType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alphabetIndexerAutoCollapseTest);\n  }\n\n  build() {\n    Row() {\n      AlphabetIndexer({ arrayValue: this.arrayA, selected: 0 })\n        .autoCollapse(this.autoCollapseType)\n        .id('alphabetIndexerAutoCollapse1')\n      AlphabetIndexer({ arrayValue: this.arrayB, selected: 0 })\n        .autoCollapse(true)\n        .id('alphabetIndexerAutoCollapse2')\n      AlphabetIndexer({ arrayValue: this.arrayC, selected: 0 })\n        .autoCollapse(true)\n        .id('alphabetIndexerAutoCollapse3')\n      AlphabetIndexer({ arrayValue: this.arrayD, selected: 0 })\n        .autoCollapse(true)\n        .id('alphabetIndexerAutoCollapse4')\n      AlphabetIndexer({ arrayValue: this.arrayE, selected: 0 })\n        .autoCollapse(true)\n        .id('alphabetIndexerAutoCollapse5')\n      AlphabetIndexer({ arrayValue: this.arrayF, selected: 0 })\n        .autoCollapse(true)\n        .id('alphabetIndexerAutoCollapse6')\n      Button('AlphabetIndexerAutoCollapse')\n        .onClick(() => {\n          this.autoCollapseType = !this.autoCollapseType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\alphabetindexer\\AlphabetIndexerAutoCollapseSample.ets", "project_name": "arkui_ace_engine-master", "id": "997ecc48b944ee679cc143ee92dc2bb07100e6c40c8640d3bc1ca2f3bc5bc764"}
{"text": "import blankColorTest from '../MyTest/BlankColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct BlankColorSample {\n  @State blankColor: ResourceColor = 'rgb(255, 100, 255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(blankColorTest)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text('BlankColor1')\n        Blank().color(Color.Yellow)\n          .id('blankColor1')\n      }.width('100%')\n\n      Row() {\n        Text('BlankColor2')\n        Blank().color(0xffff0000)\n          .id('blankColor2')\n      }.width('100%')\n\n      Row() {\n        Text('BlankColor3')\n        Blank().color(this.blankColor)\n          .id('blankColor3')\n      }.width('100%')\n\n      Button('BlankColor').onClick(() => {\n        this.blankColor = $r('sys.color.ohos_fa_connected')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\blank\\BlankColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "bad37a87c183dbd44937b6974ec1ba29a773242a307b0841e9a5edf457fa973e"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct MenuItemHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('LineBenchmark')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'BlankColor', buttonUrl: 'pages/blank/BlankColorSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\blank\\BlankHome.ets", "project_name": "arkui_ace_engine-master", "id": "57f5a61cac605910587f40aba68d03d60cb922c801e3cc82b33f3af7467c4f11"}
{"text": "import dividerColorTest from '../MyTest/DividerColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DividerColorSample {\n  @State dividerColor: ResourceColor = 'rgb(255, 100, 255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dividerColorTest)\n  }\n\n  build() {\n    Column() {\n      Text('DividerVertical1')\n      Divider().color(Color.Yellow).id('dividerColor1')\n      Text('DividerVertical2')\n      Divider().color(0xffff0000).id('dividerColor2')\n      Text('DividerVertical3')\n      Divider().color(this.dividerColor).id('dividerColor3')\n      Button('DividerColor').onClick(() => {\n        this.dividerColor = $r('sys.color.ohos_fa_connected')\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\divider\\DividerColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "82ab7380aa1ec3c604d368f741d85464602d00fa2be60dce8585cd7efefcf7c8"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct DividerHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('LineBenchmark')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'DividerColor', buttonUrl: 'pages/divider/DividerColorSample' });\n        CommonButton({ buttonName: 'DividerLineCap', buttonUrl: 'pages/divider/DividerLineCapSample' });\n        CommonButton({ buttonName: 'DividerStrokeWidth', buttonUrl: 'pages/divider/DividerStrokeWidthSample' });\n        CommonButton({ buttonName: 'DividerVertical', buttonUrl: 'pages/divider/DividerVerticalSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\divider\\DividerHome.ets", "project_name": "arkui_ace_engine-master", "id": "b88633df5f7332c9597bd67c95175c8fe4a7aa37a84775fab08e7c9a5bb36b30"}
{"text": "import dividerLineCapTest from '../MyTest/DividerLineCapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DividerLineCapSample {\n  @State dividerLineCap: LineCapStyle = LineCapStyle.Round\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dividerLineCapTest)\n  }\n\n  build() {\n    Column() {\n      Text('DividerVertical1')\n      Divider().lineCap(LineCapStyle.Butt).width(500).strokeWidth(20).id('dividerLineCap1')\n      Text('DividerVertical2')\n      Divider().lineCap(this.dividerLineCap).width(500).strokeWidth(20).id('dividerLineCap2')\n      Button('DividerLineCap').onClick(() => {\n        this.dividerLineCap = LineCapStyle.Square\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\divider\\DividerLineCapSample.ets", "project_name": "arkui_ace_engine-master", "id": "5337a1e5497b9437d67038c951a56f667bf34ea09383c2f81bca9711b612cff0"}
{"text": "import dividerStrokeWidthTest from '../MyTest/DividerStrokeWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DividerStrokeWidthSample {\n  @State dividerStrokeWidth: number | string = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dividerStrokeWidthTest)\n  }\n\n  build() {\n    Column() {\n      Text('DividerVertical1')\n      Divider().strokeWidth(this.dividerStrokeWidth).id('dividerStrokeWidth1')\n      Text('DividerVertical2')\n      Divider().strokeWidth(5000).height(20).id('dividerStrokeWidth2')\n      Button('DividerStrokeWidth').onClick(() => {\n        this.dividerStrokeWidth = '200vp'\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\divider\\DividerStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "000a27f267aeae9b03cc3663840172260afe582e84e99bcca51b7e788e4fbe6f"}
{"text": "import dividerVerticalTest from '../MyTest/DividerVerticalTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DividerVerticalSample {\n  @State dividerVertical: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(dividerVerticalTest)\n  }\n\n  build() {\n    Column() {\n      Text('DividerVertical1')\n      Divider()\n      Text('DividerVertical2')\n      Row() {\n        Button('Button')\n        Divider().vertical(this.dividerVertical).height(50).margin({ left: 8, right: 8 })\n          .id('dividerVertical')\n        Button('Button')\n      }\n\n      Button('DividerVertical').onClick(() => {\n        this.dividerVertical = !this.dividerVertical\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\divider\\DividerVerticalSample.ets", "project_name": "arkui_ace_engine-master", "id": "da39c0f43f311488b68414f29bf5377680c3048283b347cd8a8088a38b8e25a7"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct HyperlinkHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('HyperlinkHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'HyperlinkColor', buttonUrl: 'pages/hyper_link/HyperlinkColorSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\hyper_link\\HyperlinkHome.ets", "project_name": "arkui_ace_engine-master", "id": "f4f875bad5811b203e58895d56cf623c51e11513445ebda8d2cd11be403e7ccb"}
{"text": "import menuFontColorTest from '../MyTest/MenuFontColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MenuFontColorSample {\n  @State fontColorType: ResourceColor = 0xf00fff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(menuFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Menu() {\n        MenuItem({ content: \"fontColor\", labelInfo: \"Color\" })\n      }.fontColor(Color.Blue).id('menuFontColor1')\n\n      Menu() {\n        MenuItem({ content: \"fontColor\", labelInfo: \"number\" })\n      }.fontColor(this.fontColorType).id('menuFontColor2')\n\n      Button('MenuFontColor1')\n        .onClick(() => {\n          this.fontColorType = \"#ffc0cb\"\n        })\n      Button('MenuFontColor2')\n        .onClick(() => {\n          this.fontColorType = $r('sys.color.ohos_id_color_badge_red')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\menu\\MenuFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "fd6e91a6e56c3d83fe1d10b2a872d002a4a727ae99ad2f523d7a399db87f5276"}
{"text": "import menuFontTest from '../MyTest/MenuFontTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct MenuFontSample {\n  @State fontType: Font = {\n    size: 20,\n    weight: 400,\n    family: \"Arial\",\n    style: FontStyle.Normal\n  }\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(menuFontTest)\n  }\n\n  build() {\n    Column() {\n      Menu() {\n        MenuItem({ content: \"size\", labelInfo: \"string\" })\n      }.font(this.fontType).id('menuFont1')\n\n      Menu() {\n        MenuItem({ content: \"size\", labelInfo: \"Resource\" })\n      }.font({ size: $r('app.string.font_size'), weight: FontWeight.Lighter }).id('menuFont2')\n\n      Menu() {\n        MenuItem({ content: \"weight\", labelInfo: \"FontWeight\" })\n      }.font({ weight: FontWeight.Normal }).id('menuFont3')\n\n      Menu() {\n        MenuItem({ content: \"weight\", labelInfo: \"FontWeight\" })\n      }.font({ weight: FontWeight.Regular }).id('menuFont4')\n\n      Menu() {\n        MenuItem({ content: \"weight\", labelInfo: \"FontWeight\" })\n      }.font({ weight: FontWeight.Medium }).id('menuFont5')\n\n      Menu() {\n        MenuItem({ content: \"weight\", labelInfo: \"FontWeight\" })\n      }.font({ weight: FontWeight.Bold }).id('menuFont6')\n\n      Button('MenuFont1')\n        .onClick(() => {\n          this.fontType = {\n            size: \"70px\",\n            weight: '200',\n            family: 'TESTFONTRawFile',\n            style: FontStyle.Italic\n          }\n        })\n      Button('MenuFont2')\n        .onClick(() => {\n          this.fontType = { weight: FontWeight.Bolder }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\menu\\MenuFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "93aa14547ec38c286c97df542e2b5f6f0a19a979ddf9526e0cdf10b23f3825a1"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct MenuHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('MenuHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'MenuFont', buttonUrl: 'pages/menu/MenuFontSample' });\n        CommonButton({ buttonName: 'MenuFontColor', buttonUrl: 'pages/menu/MenuFontColorSample' });\n        CommonButton({ buttonName: 'MenuRadius', buttonUrl: 'pages/menu/MenuRadiusSample' });\n        CommonButton({ buttonName: 'MenuWidth', buttonUrl: 'pages/menu/MenuWidthSample' });\n      }\n      .padding('20vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\menu\\MenuHome.ets", "project_name": "arkui_ace_engine-master", "id": "8873415b4121560a160d9f271ae92abebe68c75c39cf0afb71c9c8fb07475158"}
{"text": "import menuRadiusTest from '../MyTest/MenuRadiusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MenuRadiusSample {\n  @State radiusDimensionType: Dimension = '30px'\n  @State radiusBorderRadiusesType: BorderRadiuses = {\n    topLeft: 50,\n    topRight: 50,\n    bottomLeft: 50,\n    bottomRight: 50\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(menuRadiusTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Menu() {\n          MenuItem({ content: \"menu dimension change\" })\n        }.radius(this.radiusDimensionType).id('menuRadius1')\n\n        Menu() {\n          MenuItem({ content: \"menu dimension lpx\" })\n        }.radius('30lpx').id('menuRadius2')\n\n        Menu() {\n          MenuItem({ content: \"menu dimension %\" })\n        }.radius('10%').id('menuRadius3')\n\n        Menu() {\n          MenuItem({ content: \"menu dimension resource\" })\n        }.radius($r('app.string.length')).id('menuRadius4')\n      }\n\n      Column() {\n        Menu() {\n          MenuItem({ content: \"menu radiuses string\" })\n        }\n        .radius({\n          topLeft: \"10px\",\n          topRight: \"10px\",\n          bottomLeft: \"10px\",\n          bottomRight: \"10px\"\n        })\n        .id('menuRadius5')\n\n        Menu() {\n          MenuItem({ content: \"menu radiuses change\" })\n        }.radius(this.radiusBorderRadiusesType).id('menuRadius6')\n\n        Button('MenuRadius1')\n          .onClick(() => {\n            this.radiusDimensionType = '100vp'\n          })\n        Button('MenuRadius2')\n          .onClick(() => {\n            this.radiusDimensionType = '10fp'\n          })\n        Button('MenuRadius3')\n          .onClick(() => {\n            this.radiusBorderRadiusesType = {\n              topLeft: $r('app.string.length'),\n              topRight: $r('app.string.length'),\n              bottomLeft: $r('app.string.length'),\n              bottomRight: $r('app.string.length')\n            }\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\menu\\MenuRadiusSample.ets", "project_name": "arkui_ace_engine-master", "id": "bd732c57a4859dc79129b0d025bbff2a411fff312fd4ebcb86656d1e97be5dfc"}
{"text": "import menuWidthTest from '../MyTest/MenuWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct MenuWidthSample {\n  @State widthType: Length = 220\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(menuWidthTest)\n  }\n\n  build() {\n    Column() {\n      Menu() {\n        MenuItem({ content: \"width\" })\n      }.width(this.widthType).id('menuWidth1')\n\n      Menu() {\n        MenuItem({ content: \"width\" })\n      }.width($r('app.string.menu_width')).id('menuWidth2')\n\n      Button('MenuWidth')\n        .onClick(() => {\n          this.widthType = '200px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\menu\\MenuWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "a1292968051088f77c8fcc7ca12087956228c317e3c380180233e0c3c6a73a9f"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct MenuItemHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('LineBenchmark')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'MenuItemSelected', buttonUrl: 'pages/menu_item/MenuItemSelectedSample' });\n        CommonButton({ buttonName: 'MenuItemSelectIcon', buttonUrl: 'pages/menu_item/MenuItemSelectIconSample' });\n        CommonButton({ buttonName: 'MenuItemContentFont', buttonUrl: 'pages/menu_item/MenuItemContentFontSample' });\n        CommonButton({\n          buttonName: 'MenuItemLabelFontColor',\n          buttonUrl: 'pages/menu_item/MenuItemLabelFontColorSample'\n        });\n        CommonButton({ buttonName: 'MenuItemLabelFont', buttonUrl: 'pages/menu_item/MenuItemLabelFontSample' });\n        CommonButton({\n          buttonName: 'MenuItemContentFontColor',\n          buttonUrl: 'pages/menu_item/MenuItemContentFontColorSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\menu_item\\MenuItemHome.ets", "project_name": "arkui_ace_engine-master", "id": "943d8f6efbf14c3c013c7b30a5e294f3a831d9d0e9b60a215a96711a37a9b97a"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function alphabetIndexerPopupPositionTest() {\n  \n  defineTest('alphabetIndexerPopupPositionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"alphabetIndexerPopupPositionTestDemo running\")\n    let driver: Tester = Tester.create()\n    let alphabetIndexer1: Component =\n      await driver.findComponent(Matcher.create().id('alphabetIndexerPopupPosition1').enabled(true))\n    let alphabetIndexer2: Component =\n      await driver.findComponent(Matcher.create().id('alphabetIndexerPopupPosition2').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('AlphabetIndexerPopupPosition').enabled(true))\n\n    let popupPosition1: string = await alphabetIndexer1.getInspectorInfo()\n    assertEqual(JSON.parse(popupPosition1).$attrs.popupPosition.popupPositionX, '30.00vp')\n    assertEqual(JSON.parse(popupPosition1).$attrs.popupPosition.popupPositionY, '24.00vp')\n\n    let popupPosition2: string = await alphabetIndexer2.getInspectorInfo()\n    assertEqual(JSON.parse(popupPosition2).$attrs.popupPosition.popupPositionX, $r('app.string.length'))\n    assertEqual(JSON.parse(popupPosition2).$attrs.popupPosition.popupPositionY, $r('app.string.length'))\n\n    await button.tap()\n    let popupPosition3: string = await alphabetIndexer1.getInspectorInfo()\n    assertEqual(JSON.parse(popupPosition3).$attrs.popupPosition.popupPositionX, '15.00px')\n    assertEqual(JSON.parse(popupPosition3).$attrs.popupPosition.popupPositionY, '15.00px')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\AlphabetIndexerPopupPositionTest.ets", "project_name": "arkui_ace_engine-master", "id": "19337f0bd568747ad6e3b3e48a4e7e2e4b775d382399093654afabc0c71b125c"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function alphabetIndexerPopupSelectedColorTest() {\n  \n  defineTest('alphabetIndexerPopupSelectedColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"alphabetIndexerPopupSelectedColorTestDemo running\")\n    let driver: Tester = Tester.create()\n    let alphabetIndexer1: Component =\n      await driver.findComponent(Matcher.create().id('alphabetIndexerPopupSelectedColor1').enabled(true))\n    let alphabetIndexer2: Component =\n      await driver.findComponent(Matcher.create().id('alphabetIndexerPopupSelectedColor2').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('AlphabetIndexerPopupSelectedColor1').enabled(true))\n    let button2: Component =\n      await driver.findComponent(Matcher.create().text('AlphabetIndexerPopupSelectedColor2').enabled(true))\n\n    let popupSelectedColor1: string = await alphabetIndexer1.getInspectorInfo()\n    assertEqual(JSON.parse(popupSelectedColor1).$attrs.popupSelectedColor.toLowerCase(), Color.Red)\n\n    let popupSelectedColor2: string = await alphabetIndexer2.getInspectorInfo()\n    assertEqual(JSON.parse(popupSelectedColor2).$attrs.popupSelectedColor, '#FFFF0000')\n\n    await button1.tap()\n    let popupSelectedColor3: string = await alphabetIndexer2.getInspectorInfo()\n    assertEqual(JSON.parse(popupSelectedColor3).$attrs.popupSelectedColor, '#FFFFA500')\n\n    await button2.tap()\n    let popupSelectedColor4: string = await alphabetIndexer2.getInspectorInfo()\n    assertEqual(JSON.parse(popupSelectedColor4).$attrs.popupSelectedColor, $r('sys.color.ohos_id_color_text_hyperlink'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\AlphabetIndexerPopupSelectedColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "797648ef275227e2b03135a131cf62a3088a5019126ffd960af90f42014a96dd"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function alphabetIndexerSelectedTest() {\n  \n  defineTest('alphabetIndexerSelectedTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"alphabetIndexerSelectedTestDemo running\")\n    let driver: Tester = Tester.create()\n    let alphabetIndexer: Component =\n      await driver.findComponent(Matcher.create().id('alphabetIndexerSelected').enabled(true))\n\n    let selected: string = await alphabetIndexer.getInspectorInfo()\n    assertEqual(JSON.parse(selected).$attrs.selected, '2')\n  }, 0)\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\AlphabetIndexerSelectedTest.ets", "project_name": "arkui_ace_engine-master", "id": "a99c60a55e9d7c3de594a27a60729bb692a0a2e0ae2c28f52791f8f26a9a30de"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function alphabetIndexerUsingPopupTest() {\n  \n  defineTest('alphabetIndexerUsingPopupTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"alphabetIndexerUsingPopupTestDemo running\")\n    let driver: Tester = Tester.create()\n    let alphabetIndexer: Component =\n      await driver.findComponent(Matcher.create().id('alphabetIndexerUsingPopup').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('AlphabetIndexerUsingPopup').enabled(true))\n\n    let usingPopup1: string = await alphabetIndexer.getInspectorInfo()\n    assertTrue(JSON.parse(usingPopup1).$attrs.usingPopup)\n\n    await button.tap()\n    let usingPopup2: string = await alphabetIndexer.getInspectorInfo()\n    assertFalse(JSON.parse(usingPopup2).$attrs.usingPopup)\n  }, 0)\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\AlphabetIndexerUsingPopupTest.ets", "project_name": "arkui_ace_engine-master", "id": "fa54503fbb96a9c0a0e4ca9ad36bc2cb22892d1f0c11c69674d9dcca473eaf31"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function dividerVerticalTest() {\n  \n  defineTest('dividerVerticalTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('dividerVerticalTestDemo running')\n    let driver: Tester = Tester.create()\n    let dividerVertical: Component = await driver.findComponent(Matcher.create().id('dividerVertical').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('DividerVertical').enabled(true))\n\n    let vertical1: string = await dividerVertical.getInspectorInfo()\n    assertTrue(JSON.parse(vertical1).$attrs.vertical)\n\n    await button.tap()\n    let vertical2: string = await dividerVertical.getInspectorInfo()\n    assertFalse(JSON.parse(vertical2).$attrs.vertical)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\DividerVerticalTest.ets", "project_name": "arkui_ace_engine-master", "id": "3b460e8da90954fd895e96c4444e4b62175121bdc4e68417b4b08593be2cbf49"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function menuItemSelectedTest() {\n  \n  defineTest('menuItemSelectedTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('menuItemSelectedTestDemo running')\n    let driver: Tester = Tester.create()\n    let menuItemSelected: Component = await driver.findComponent(Matcher.create().id('menuItemSelected').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('MenuItemSelected').enabled(true))\n\n    let selected1: string = await menuItemSelected.getInspectorInfo()\n    assertFalse(JSON.parse(selected1).$attrs.selected == undefined)\n    assertFalse(JSON.parse(selected1).$attrs.selected)\n\n    await button.tap()\n    let selected2: string = await menuItemSelected.getInspectorInfo()\n    assertTrue(JSON.parse(selected2).$attrs.selected)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\MenuItemSelectedTest.ets", "project_name": "arkui_ace_engine-master", "id": "25e50e038cb0c54c7fd9e05ec77e7528b0eef9b47639da6c6dce5913d61a8be2"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function menuItemSelectIconTest() {\n  \n  defineTest('menuItemSelectIconTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('menuItemSelectIconTestDemo running')\n    let driver: Tester = Tester.create()\n    let menuItemSelectIcon1: Component =\n      await driver.findComponent(Matcher.create().id('menuItemSelectIcon1').enabled(true))\n    let menuItemSelectIcon2: Component =\n      await driver.findComponent(Matcher.create().id('menuItemSelectIcon2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('MenuItemSelectIcon1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('MenuItemSelectIcon2').enabled(true))\n\n    let selectIcon1: string = await menuItemSelectIcon1.getInspectorInfo()\n    assertFalse(JSON.parse(selectIcon1).$attrs.selectIcon)\n\n    await button1.tap()\n    let selectIcon2: string = await menuItemSelectIcon1.getInspectorInfo()\n    assertTrue(JSON.parse(selectIcon2).$attrs.selectIcon)\n\n    await button2.tap()\n    let selectIcon3: string = await menuItemSelectIcon1.getInspectorInfo()\n    assertEqual(JSON.parse(selectIcon3).$attrs.selectIcon, $r(\"sys.media.ohos_app_icon\"))\n\n    let selectIcon4: string = await menuItemSelectIcon2.getInspectorInfo()\n    assertEqual(JSON.parse(selectIcon4).$attrs.selectIcon, \"../../../resources/base/media/icon.png\")\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\MenuItemSelectIconTest.ets", "project_name": "arkui_ace_engine-master", "id": "652fb83e42c70c53e4cfb0374b7daf321aae10bafcb8d30484af8c397ad77aef"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function panelBackgroundMaskTest() {\n  \n  defineTest('panelBackgroundMaskTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('panelBackgroundMaskTestDemo running')\n    let driver: Tester = Tester.create()\n    let panel1: Component = await driver.findComponent(Matcher.create().id('panelBackgroundMask1').enabled(true))\n    let panel2: Component = await driver.findComponent(Matcher.create().id('panelBackgroundMask2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('PanelBackgroundMask1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('PanelBackgroundMask2').enabled(true))\n\n    let backgroundMask1: string = await panel1.getInspectorInfo()\n    assertEqual(JSON.parse(backgroundMask1).$attrs.backgroundMask, Color.Blue)\n\n    let backgroundMask2: string = await panel2.getInspectorInfo()\n    assertEqual(JSON.parse(backgroundMask2).$attrs.backgroundMask, 0xff8000)\n\n    await button1.tap()\n    let backgroundMask3: string = await panel1.getInspectorInfo()\n    assertEqual(JSON.parse(backgroundMask3).$attrs.backgroundMask, 'rgb(255, 100, 255)')\n\n    await button2.tap()\n    let backgroundMask4: string = await panel1.getInspectorInfo()\n    assertEqual(JSON.parse(backgroundMask4).$attrs.backgroundMask, $r('sys.color.ohos_id_color_text_hyperlink'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\PanelBackgroundMaskTest.ets", "project_name": "arkui_ace_engine-master", "id": "b2120e4a03beabd3766da154e13e5286fadda89d68f12180efbaaf4a2543e897"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function panelDragBarTest() {\n  \n  defineTest('panelDragBarTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('panelDragBarTestDemo running')\n\n    let driver: Tester = Tester.create()\n    let panel: Component = await driver.findComponent(Matcher.create().id('panelDragBar').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PanelDragBar').enabled(true))\n\n    let dragBar1: string = await panel.getInspectorInfo()\n    assertTrue(JSON.parse(dragBar1).$attrs.dragBar)\n\n    await button.tap()\n    let dragBar2: string = await panel.getInspectorInfo()\n    assertFalse(JSON.parse(dragBar2).$attrs.dragBar)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\PanelDragBarTest.ets", "project_name": "arkui_ace_engine-master", "id": "f82d24f0387d6e988897ead52bf23aa2073d19cdbb49f7268aa8947fe01c8823"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function panelFullHeightTest() {\n  \n  defineTest('panelFullHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('panelFullHeightTestDemo running')\n    let driver: Tester = Tester.create()\n    let panel: Component = await driver.findComponent(Matcher.create().id('panelFullHeight').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PanelFullHeight').enabled(true))\n    let fullHeight1: string = await panel.getInspectorInfo()\n    assertEqual(JSON.parse(fullHeight1).$attrs.fullHeight, '100.00vp')\n\n    await button.tap()\n    let fullHeight2: string = await panel.getInspectorInfo()\n    assertEqual(JSON.parse(fullHeight2).$attrs.fullHeight, '120.00vp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\PanelFullHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "7c4c6e3469cc5597a21e082f101441809cef6b539ad95abd734ff2df11d4945e"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function panelShowCloseIconTest() {\n  \n  defineTest('panelShowCloseIconTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('panelShowCloseIconTestDemo running')\n    let driver: Tester = Tester.create()\n    let panel: Component = await driver.findComponent(Matcher.create().id('panelShowCloseIcon').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PanelShowCloseIcon').enabled(true))\n\n    let showCloseIcon1: string = await panel.getInspectorInfo()\n    assertTrue(JSON.parse(showCloseIcon1).$attrs.showCloseIcon)\n\n    await button.tap()\n    let showCloseIcon2: string = await panel.getInspectorInfo()\n    assertFalse(JSON.parse(showCloseIcon2).$attrs.showCloseIcon)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\MyTest\\PanelShowCloseIconTest.ets", "project_name": "arkui_ace_engine-master", "id": "35403eecd284b7f14ae03bdd42de8c419e9e6cebb625a92bada1ce7b8040552f"}
{"text": "import panelBackgroundMaskTest from '../MyTest/PanelBackgroundMaskTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelBackgroundMaskSample {\n  @State panelBackgroundMask: ResourceColor = Color.Blue\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelBackgroundMaskTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n      }.backgroundMask(this.panelBackgroundMask).width(120).height(120)\n      .id('panelBackgroundMask1')\n\n      Panel(true) {\n      }.backgroundMask(0xff8000).width(120).height(120)\n      .id('panelBackgroundMask2')\n\n      Button('PanelBackgroundMask1')\n        .onClick(() => {\n          this.panelBackgroundMask = 'rgb(255, 100, 255)'\n        })\n      Button('PanelBackgroundMask2')\n        .onClick(() => {\n          this.panelBackgroundMask = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelBackgroundMaskSample.ets", "project_name": "arkui_ace_engine-master", "id": "ffd8404a850598bdd80af1df861d203e73f82a572281a00d200b6a54b8b8e11d"}
{"text": "import panelCustomHeightTest from '../MyTest/PanelCustomHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelCustomHeightSample {\n  @State panelCustomHeight: Dimension | PanelHeight = \"50px\"\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelCustomHeightTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .customHeight(this.panelCustomHeight)\n      .height(120)\n      .width(500)\n      .id('panelCustomHeight1')\n\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .customHeight(\"50fp\")\n      .height(120)\n      .width(500)\n      .id('panelCustomHeight2')\n\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .customHeight('50vp')\n      .height(120)\n      .width(500)\n      .id('panelCustomHeight3')\n\n      Button('PanelCustomHeight1')\n        .onClick(() => {\n          this.panelCustomHeight = $r('app.string.length')\n        })\n      Button('PanelCustomHeight2')\n        .onClick(() => {\n          this.panelCustomHeight = PanelHeight.WRAP_CONTENT\n        })\n      Button('PanelCustomHeight3')\n        .onClick(() => {\n          this.panelCustomHeight = \"50lpx\"\n        })\n      Button('PanelCustomHeight4')\n        .onClick(() => {\n          this.panelCustomHeight = \"50%\"\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelCustomHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "12bef230c003b4c16a9386540ec287cc632ed835d259a9306dac969348b93024"}
{"text": "import panelDragBarTest from '../MyTest/PanelDragBarTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelDragBarSample {\n  @State dragBar: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelDragBarTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .dragBar(this.dragBar)\n      .height(120)\n      .width(120)\n      .id('panelDragBar')\n\n      Button('PanelDragBar')\n        .onClick(() => {\n          this.dragBar = false\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelDragBarSample.ets", "project_name": "arkui_ace_engine-master", "id": "ead80c520506a4b8f7edc135fb5d053a4086f0f3b36e97b9b4b4c3cc5d8e4601"}
{"text": "import panelFullHeightTest from '../MyTest/PanelFullHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelFullHeightSample {\n  @State panelFullHeight: string | number = 100\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelFullHeightTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .mode(PanelMode.Full)\n      .fullHeight(this.panelFullHeight)\n      .height(120)\n      .width(120)\n      .id('panelFullHeight')\n\n      Button('PanelFullHeight')\n        .onClick(() => {\n          this.panelFullHeight = \"120\"\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelFullHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "381ecd886da5973f0da74dc084d1ea208e83645613a0b51fbe02d91ecbdc6f5e"}
{"text": "import panelHalfHeightTest from '../MyTest/PanelHalfHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelHalfHeightSample {\n  @State panelHalfHeight: string | number = '60'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelHalfHeightTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .mode(PanelMode.Half)\n      .halfHeight(this.panelHalfHeight)\n      .width(120)\n      .height(120)\n      .id('panelHalfHeight')\n\n      Button('PanelHalfHeight')\n        .onClick(() => {\n          this.panelHalfHeight = 120\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelHalfHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "e6e2c66a44d60ea65d0b937f6412fa12d4218f52cc5fd9de31fd133b106a007e"}
{"text": "import panelMiniHeightTest from '../MyTest/PanelMiniHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelMiniHeightSample {\n  @State panelMiniHeight: string | number = '60'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelMiniHeightTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .mode(PanelMode.Mini)\n      .miniHeight(this.panelMiniHeight)\n      .width(120)\n      .height(120)\n      .id('panelMiniHeight')\n\n      Button('PanelMiniHeight')\n        .onClick(() => {\n          this.panelMiniHeight = 10\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelMiniHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "2b7eb868aef0b73267cbf8663d7b83720fb034c078be1a2ea0acbff4a39eb47d"}
{"text": "import panelModeTest from '../MyTest/PanelModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelModeSample {\n  @State panelMode: PanelMode = PanelMode.Full\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelModeTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .mode(this.panelMode)\n      .width(120)\n      .height(120)\n      .id('panelMode')\n\n      Button('PanelMode1')\n        .onClick(() => {\n          this.panelMode = PanelMode.Mini\n        })\n      Button('PanelMode2')\n        .onClick(() => {\n          this.panelMode = PanelMode.Half\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "b0d392f8debea113c0c4a6ba0c8ff7ea15a1d0cda19a18196a3a6bcfbe053ccb"}
{"text": "import panelShowCloseIconTest from '../MyTest/PanelShowCloseIconTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelShowCloseIconSample {\n  @State panelShowCloseIcon: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelShowCloseIconTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .showCloseIcon(this.panelShowCloseIcon)\n      .width(120)\n      .height(120)\n      .id('panelShowCloseIcon')\n\n      Button('PanelShowCloseIcon')\n        .onClick(() => {\n          this.panelShowCloseIcon = !this.panelShowCloseIcon\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelShowCloseIconSample.ets", "project_name": "arkui_ace_engine-master", "id": "94bd2b30a4bb7b68d18bd8af35a8b605d5f5fa837c2434ecbc2d52cf1b97db4d"}
{"text": "import panelShowTest from '../MyTest/PanelShowTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelShowSample {\n  @State panelShow: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelShowTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n          Text('1. afternoon 4:00 The project meeting')\n        }\n      }\n      .show(this.panelShow)\n      .height(120)\n      .width(120)\n      .id('panelShow')\n\n      Button('PanelShow')\n        .onClick(() => {\n          this.panelShow = !this.panelShow\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelShowSample.ets", "project_name": "arkui_ace_engine-master", "id": "cac5dd8914b30c39073202730c97aedfee886f9dd39c8fbdb2ac863efccb159e"}
{"text": "import panelTypeTest from '../MyTest/PanelTypeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct PanelTypeSample {\n  @State panelTypes: PanelType = PanelType.CUSTOM\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(panelTypeTest)\n  }\n\n  build() {\n    Column() {\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n        }\n      }\n      .type(this.panelTypes)\n      .height(120)\n      .width(120)\n      .id('panelType1')\n\n      Panel(true) {\n        Column() {\n          Text('Today Calendar')\n          Divider()\n        }\n      }\n      .type(PanelType.Minibar)\n      .height(120)\n      .width(120)\n      .id('panelType2')\n\n      Button('PanelType1')\n        .onClick(() => {\n          this.panelTypes = PanelType.Foldable\n        })\n      Button('PanelType2')\n        .onClick(() => {\n          this.panelTypes = PanelType.Temporary\n        })\n    }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\miscellaneous\\entry\\src\\main\\ets\\pages\\panel\\PanelTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "434264a80b34c7ad0e285a60cd401eedf78c71712fa048984b8de9453761feeb"}
{"text": "import image from '@ohos.multimedia.image';\n\nconst color: ArrayBuffer = new ArrayBuffer(96);\nlet opts: image.InitializationOptions = { editable: true, pixelFormat: 3, size: { height: 4, width: 6 } }\n\n@Entry\n@ComponentV2\nexport struct NavDestinationBackButtonIconSample {\n  @Consumer('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n  @Local backButtonIcon: ResourceStr | PixelMap = '../../../resources/base/media/icon.png'\n\n  build() {\n    NavDestination() {\n      Column() {\n        Button('NavDestinationBackButtonIcon1')\n          .onClick(() => {\n            this.backButtonIcon = $r('app.media.startIcon')\n          })\n        Button('NavDestinationBackButtonIcon2')\n          .onClick(async () => {\n            await image.createPixelMap(color, opts).then((srcPixelMap: image.PixelMap) => {\n              this.backButtonIcon = srcPixelMap;\n            })\n          })\n      }\n    }\n    .title('NavDestinationBackButtonIcon')\n    .backButtonIcon(this.backButtonIcon)\n    .id('navDestinationBackButtonIcon')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavDestinationBackButtonIconSample.ets", "project_name": "arkui_ace_engine-master", "id": "60b393dd878e1bccc94d46147e6f4bee07fc8035fbda9f91361803857d2f4f51"}
{"text": "@Entry\n@ComponentV2\nexport struct NavDestinationHideTitleBarSample {\n  @Consumer('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n  @Local hideTitleBar: boolean = false\n\n  build() {\n    NavDestination() {\n      Column() {\n        Button('NavDestinationHideTitleBar')\n          .onClick(() => {\n            this.hideTitleBar = !this.hideTitleBar\n          })\n      }\n    }\n    .title('NavDestinationHideTitleBar')\n    .hideTitleBar(this.hideTitleBar)\n    .id('navDestinationHideTitleBar')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavDestinationHideTitleBarSample.ets", "project_name": "arkui_ace_engine-master", "id": "03456757f6d913ae750a3fb9de42c1b81747d2664d4150e95916a952dada7c08"}
{"text": "@Entry\n@ComponentV2\nexport struct NavDestinationModeSample {\n  @Consumer('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n  @Local modeType: NavDestinationMode = NavDestinationMode.STANDARD\n\n  build() {\n    NavDestination() {\n      Column() {\n        Button('NavDestinationMode')\n          .onClick(() => {\n            this.modeType = NavDestinationMode.DIALOG\n          })\n      }\n    }\n    .title('NavDestinationMode')\n    .mode(this.modeType)\n    .id('navDestinationMode')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavDestinationModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "80d1844463b69c30a6729afd3cf246fe62043b9b089f8d7f5689cfa5ffbcbe23"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function navDestinationModeTest() {\n  \n  defineTest('navDestinationModeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navDestinationModeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let button1: Component = await driver.findComponent(Matcher.create().text('PushNavDestination').enabled(true))\n    await button1.tap()\n\n    let navDestination: Component = await driver.findComponent(Matcher.create().id('navDestinationMode').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('NavDestinationMode').enabled(true))\n\n    let mode1: string = await navDestination.getInspectorInfo()\n    assertFalse(JSON.parse(mode1).$attrs.mode == undefined)\n    assertEqual(JSON.parse(mode1).$attrs.mode, NavDestinationMode.STANDARD)\n\n    await button2.tap()\n    let mode2: string = await navDestination.getInspectorInfo()\n    assertEqual(JSON.parse(mode2).$attrs.mode, NavDestinationMode.DIALOG)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavDestinationModeTest.ets", "project_name": "arkui_ace_engine-master", "id": "14a39c3fb4e7d35f1ee51382b91533d165ca8a9a73d9642f99a9a0b626587980"}
{"text": "@Entry\n@ComponentV2\nexport struct NavDestinationTitleSample {\n  @Provider('pageInfos') pageInfos: NavPathStack = new NavPathStack();\n  @Local titleType: string | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle = this.item()\n\n  @Builder\n  item() {\n    Text('CustomBuilder').margin(\"4vp\")\n  }\n\n  build() {\n    NavDestination() {\n      Button('NavDestinationTitle1')\n        .onClick(() => {\n          this.titleType = 'NavDestinationTitle1'\n        })\n      Button('NavDestinationTitle2')\n        .onClick(() => {\n          this.titleType = { main: 'NavDestination', sub: 'Title2' }\n        })\n      Button('NavDestinationTitle3')\n        .onClick(() => {\n          this.titleType = { builder: this.item(), height: TitleHeight.MainOnly }\n        })\n      Button('NavDestinationTitle4')\n        .onClick(() => {\n          this.titleType = { builder: this.item(), height: TitleHeight.MainWithSub }\n        })\n      Button('NavDestinationTitle5')\n        .onClick(() => {\n          this.titleType = { builder: this.item(), height: 10 }\n        })\n    }.title(this.titleType)\n    .id('navDestinationTitle')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavDestinationTitleSample.ets", "project_name": "arkui_ace_engine-master", "id": "1c2b297286eca47f8ede086fad46e60150510d6df6711a9721cd3f9b57bbf92e"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function navigationHideTitleBarTestTest() {\n  \n  defineTest('navigationHideTitleBarTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigationHideTitleBarTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigation1: Component = await driver.findComponent(Matcher.create().id('navigationHideTitleBar').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('NavigationHideTitleBar').enabled(true))\n    let hideTitleBar1: string = await navigation1.getInspectorInfo()\n    assertTrue(JSON.parse(hideTitleBar1).$attrs.hideTitleBar)\n    await button1.tap()\n    let hideTitleBar2: string = await navigation1.getInspectorInfo()\n    assertFalse(JSON.parse(hideTitleBar2).$attrs.hideTitleBar)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigationHideTitleBarTest.ets", "project_name": "arkui_ace_engine-master", "id": "1c7fc66f72fba3f0164986aeaaba3a451b9c55c4aad5c7c935e9f777404210f0"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function navigationMenusTestTest() {\n  \n  defineTest('navigationMenusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigationMenusTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigation2: Component = await driver.findComponent(Matcher.create().id('navigationMenus2').enabled(true))\n    let anyBuilder: Component = await driver.findComponent(Matcher.create().text('Exit').enabled(true))\n    let myBuilder = await anyBuilder.getType()\n    assertEqual(myBuilder, 'Text')\n\n    let menus2: string = await navigation2.getInspectorInfo()\n    assertEqual(JSON.parse(menus2).$attrs.menus.value, \"menu\")\n    assertEqual(JSON.parse(menus2).$attrs.menus.icon, '../../../resources/base/media/test_image.png')\n    assertEqual(JSON.parse(menus2)\n      .$attrs\n      .menus\n      .action\n      .builder, $r('sys.media.ohos_ic_public_text'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigationMenusTest.ets", "project_name": "arkui_ace_engine-master", "id": "36047809254ba8f9a3ecf948ebb603ba91d0379f19dba029becf59b06cc7cd8e"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function navigationNavBarWidthRangeTest() {\n  \n  defineTest('navigationNavBarWidthRangeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigationNavBarWidthRangeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigation1: Component =\n      await driver.findComponent(Matcher.create().id('navigationNavBarWidthRange').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('NavigationNavBarWidthRange').enabled(true))\n\n    let navBarWidthRange1: string = await navigation1.getInspectorInfo()\n    assertEqual(JSON.parse(navBarWidthRange1).$attrs.navBarWidthRange, '200.00vp, 400.00vp')\n    await button1.tap()\n    let navBarWidthRange2: string = await navigation1.getInspectorInfo()\n    assertEqual(JSON.parse(navBarWidthRange2).$attrs.navBarWidthRange,\n      [$r(\"app.float.navigation_min_width\"), $r(\"app.float.navigation_max_width\")])\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigationNavBarWidthRangeTest.ets", "project_name": "arkui_ace_engine-master", "id": "d62e6737671260c8770bc907c257ad031c1742f298fc9dbd1c9d1799bbce8f62"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function navigationNavBarWidthTest() {\n  \n  defineTest('navigationNavBarWidthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigationNavBarWidthTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigation1: Component = await driver.findComponent(Matcher.create().id('navigationNavBarWidth').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('NavigationNavBarWidth1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('NavigationNavBarWidth2').enabled(true))\n    let navBarWidth1: string = await navigation1.getInspectorInfo()\n    assertEqual(JSON.parse(navBarWidth1).$attrs.navBarWidth, '200.00vp')\n    await button1.tap()\n    let navBarWidth2: string = await navigation1.getInspectorInfo()\n    assertEqual(JSON.parse(navBarWidth2).$attrs.navBarWidth, '150.00px')\n    await button2.tap()\n    let navBarWidth3: string = await navigation1.getInspectorInfo()\n    assertEqual(JSON.parse(navBarWidth3).$attrs.navBarWidth, $r(\"app.string.navigation_nav_width\"))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigationNavBarWidthTest.ets", "project_name": "arkui_ace_engine-master", "id": "ddcd4e426c07f0c34ae58251d80d945d818279bb005099252973cef2ca5f16f9"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function navigatorActiveTest() {\n  \n  defineTest('navigatorActiveTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigatorActiveTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigator: Component = await driver.findComponent(Matcher.create().id('navigatorActive').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('NavigatorActive').enabled(true))\n\n    let active1: string = await navigator.getInspectorInfo()\n    assertFalse(JSON.parse(active1).$attrs.active)\n\n    await button.tap()\n    let active2: string = await navigator.getInspectorInfo()\n    assertTrue(JSON.parse(active2).$attrs.active)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigatorActiveTest.ets", "project_name": "arkui_ace_engine-master", "id": "2695a38b0d48fa05696afd64e9e8e284525d4019fca84c2fb49d34d5b37fe58e"}
{"text": "@Entry\n@Component\nstruct NavigatorActiveTypeDetail {\n  build() {\n    Column() {\n      Text('NavigatorActive Or Type OK')\n      Navigator({ target: 'pages/navigator/NavigatorTypeSample', type: NavigationType.Back }) {\n        Text('Return').width('100%').textAlign(TextAlign.Center)\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigatorActiveTypeDetail.ets", "project_name": "arkui_ace_engine-master", "id": "bf14d9bce4fd4bde395a014019b0b316840ed562014ddb6b25b933e437d97cbe"}
{"text": "import router from '@ohos.router'\n\ninterface NameObject {\n  name: string;\n}\n\n@Entry\n@Component\nstruct NavigatorDetail {\n  params: Record<string, NameObject> = router.getParams() as Record<string, NameObject>\n  @State name: NameObject = this.params.text\n\n  build() {\n    Column() {\n      Text('This is ' + this.name.name + ' page')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigatorParamsDetail.ets", "project_name": "arkui_ace_engine-master", "id": "9b78e53ca88442dc6de26f78a2e118de68e13a18489c2c5ccbfcd29116a9603a"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function navigatorTargetTest() {\n  \n  defineTest('navigatorTargetTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigatorTargetTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigator: Component = await driver.findComponent(Matcher.create().id('navigatorTarget').enabled(true))\n\n    let target: string = await navigator.getInspectorInfo()\n    assertEqual(JSON.parse(target).$attrs.target, 'pages/navigator/NavigatorActiveTypeDetail')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigatorTargetTest.ets", "project_name": "arkui_ace_engine-master", "id": "7bd6c4b2c9d6b459f4fe5f9fd077c7679c40703884ceefaea4c6ec15c25bd233"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function navigatorTypeTest() {\n  \n  defineTest('navigatorTypeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"navigatorTypeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let navigator1: Component = await driver.findComponent(Matcher.create().id('NavigatorType1').enabled(true))\n    let navigator2: Component = await driver.findComponent(Matcher.create().id('NavigatorType2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('NavigatorType').enabled(true))\n\n    let type1: string = await navigator1.getInspectorInfo()\n    assertEqual(JSON.parse(type1).$attrs.type, 'NavigationType.Push')\n    let type2: string = await navigator2.getInspectorInfo()\n    assertEqual(JSON.parse(type2).$attrs.type, 'NavigationType.Replace')\n    await button.tap()\n    let type3: string = await navigator2.getInspectorInfo()\n    assertEqual(JSON.parse(type3).$attrs.type, 'NavigationType.Back')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\NavigatorTypeTest.ets", "project_name": "arkui_ace_engine-master", "id": "d9930a631a414689a7bc2672b8547aee5c7e40130808a8a38361a0aa70321ec7"}
{"text": "export class Pages {\n  names: string = \"\"\n  values: NavPathStack | null = null\n}\n\n@Builder\nexport function pageTwoTmp(info: Pages) {\n  NavDestination() {\n    Column() {\n      Button('pushPathByName', { stateEffect: true, type: ButtonType.Capsule })\n        .width('80%')\n        .height(40)\n        .margin(20)\n        .onClick(() => {\n          (info.values as NavPathStack).pushPathByName('pageOne', null)\n        })\n    }.width('100%').height('100%')\n  }.title('pageTwo')\n  .onBackPressed(() => {\n    (info.values as NavPathStack).pop()\n    return true\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\PageTwo.ets", "project_name": "arkui_ace_engine-master", "id": "952afb2e330bc1dd9bf9e8c8007c5445ab01b31ae176d043a67d2cda4cf3ab29"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function StepperItemStatusTest() {\n  \n  defineTest('NavRouterModeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('NavRouterModeTestDemo running')\n    let driver: Tester = Tester.create()\n    let StepperItem1: Component = await driver.findComponent(Matcher.create().id('stepperItemStatus1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('StepperItemStatus1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('StepperItemStatus2').enabled(true))\n    let button3: Component = await driver.findComponent(Matcher.create().text('StepperItemStatus3').enabled(true))\n    let status1: string = await StepperItem1.getInspectorInfo()\n    assertEqual(JSON.parse(status1).$attrs.status, 'ItemState.Normal')\n    await button1.tap()\n    let status2: string = await StepperItem1.getInspectorInfo()\n    assertEqual(JSON.parse(status2).$attrs.status, 'ItemState.Disabled')\n    await button2.tap()\n    let status3: string = await StepperItem1.getInspectorInfo()\n    assertEqual(JSON.parse(status3).$attrs.status, 'ItemState.Skip')\n    await button3.tap()\n    let status4: string = await StepperItem1.getInspectorInfo()\n    assertEqual(JSON.parse(status4).$attrs.status, 'ItemState.Waiting')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\StepperItemStatusTest.ets", "project_name": "arkui_ace_engine-master", "id": "d16daf6433f66301467b474e84c6d57769b103475cd03fe29ae77a9b50d6c625"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function tabsVerticalTest() {\n  \n  defineTest('tabsVerticalTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('tabsVerticalTestDemo running')\n    let driver: Tester = Tester.create()\n    let tabs: Component = await driver.findComponent(Matcher.create().id('tabsVertical').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TabsVertical').enabled(true))\n\n    let vertical1: string = await tabs.getInspectorInfo()\n    assertTrue(JSON.parse(vertical1).$attrs.vertical)\n    await button.tap()\n    let vertical2: string = await tabs.getInspectorInfo()\n    assertFalse(JSON.parse(vertical2).$attrs.vertical)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\MyTest\\TabsVerticalTest.ets", "project_name": "arkui_ace_engine-master", "id": "dba3b090fe1eb354451b6db43f236f36e30ed0cd9f67aead617ae256830a5120"}
{"text": "import navigationBackButtonIconTest from '../MyTest/NavigationBackButtonIconTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport image from '@ohos.multimedia.image';\n\nconst color: ArrayBuffer = new ArrayBuffer(96);\nlet opts: image.InitializationOptions = { editable: true, pixelFormat: 3, size: { height: 4, width: 6 } }\n\n@Entry\n@Component\nstruct NavigationBackButtonIconSample {\n  @State backButtonIcon: string | PixelMap | Resource = '../../../resources/base/media/test_image.png'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationBackButtonIconTest)\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n      }\n      .title('hello')\n      .height(100)\n      .hideBackButton(false)\n      .titleMode(NavigationTitleMode.Mini)\n      .backButtonIcon(this.backButtonIcon)\n      .id('navigationBackButtonIcon')\n\n      Button('NavigationBackButtonIcon1')\n        .onClick(() => {\n          this.backButtonIcon = $r('sys.media.ohos_ic_public_phone')\n        })\n      Button('NavigationBackButtonIcon2')\n        .onClick(async () => {\n          await image.createPixelMap(color, opts).then((srcPixelMap: image.PixelMap) => {\n            this.backButtonIcon = srcPixelMap;\n          })\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationBackButtonIconSample.ets", "project_name": "arkui_ace_engine-master", "id": "be0c880375cc4d3710ffa30668aff203018069ff48b44bbb31ba4361f5fb5c62"}
{"text": "import navigationHideBackButtonTest from '../MyTest/NavigationHideBackButtonTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationHideBackButtonSample {\n  @State hideBackButton: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationHideBackButtonTest)\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n      }\n      .title('hello')\n      .height(100)\n      .titleMode(NavigationTitleMode.Mini)\n      .hideBackButton(this.hideBackButton)\n      .id('navigationHideBackButton')\n\n      Button('NavigationHideBackButton')\n        .onClick(() => {\n          this.hideBackButton = false\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationHideBackButtonSample.ets", "project_name": "arkui_ace_engine-master", "id": "6d4dde82a76fee7409a237d5f6168296909a4b41b9fecb4cd62ab1728e7ee34a"}
{"text": "import navigationHideNavBarTest from '../MyTest/NavigationHideNavBarTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationHideNavBarSample {\n  @State hideNavBar: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationHideNavBarTest)\n  }\n\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('80%')\n                .height(72)\n                .backgroundColor(Color.Pink)\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('100%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .title('hello')\n      .height(300)\n      .toolbarConfiguration([{ value: 'hello', icon: $r('sys.media.ohos_ic_public_drawer_open_filled') }])\n      .mode(NavigationMode.Split)\n      .hideNavBar(this.hideNavBar)\n      .id('navigationHideNavBar')\n\n      Button('NavigationHideNavBar')\n        .onClick(() => {\n          this.hideNavBar = false\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationHideNavBarSample.ets", "project_name": "arkui_ace_engine-master", "id": "0b56ad3f2ec51da0ad8cc0c365a34189b3e51e26643472b283b8d64d4c3075a1"}
{"text": "import navigationHideToolBarTest from '../MyTest/NavigationHideToolBarTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationHideToolBarSample {\n  @State hideToolBar: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationHideToolBarTest)\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n      }\n      .height(100)\n      .width('100%')\n      .margin(20)\n      .title('title')\n      .toolbarConfiguration([{ value: 'hello', icon: $r('sys.media.ohos_ic_public_drawer_open_filled') },\n        { value: 'world', icon: $r('sys.media.ohos_ic_public_device_smartscreen') }])\n      .hideToolBar(this.hideToolBar)\n      .id('navigationHideToolBar')\n\n      Button('NavigationHideToolBar')\n        .onClick(() => {\n          this.hideToolBar = false\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationHideToolBarSample.ets", "project_name": "arkui_ace_engine-master", "id": "7257de747d61a34977eb273e5d88d1831932aaa539585c65db484ef55050dec6"}
{"text": "import navigationMenusTest from '../MyTest/NavigationMenusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationMenusSample {\n  @State menus: Array<NavigationMenuItem> | CustomBuilder = this.NavigationMenus()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationMenusTest)\n  }\n\n  @Builder\n  NavigationMenus() {\n    Row() {\n      Image($r('sys.media.ohos_ic_public_text'))\n        .width(24)\n        .height(24)\n      Image($r('sys.media.ohos_ic_public_minus'))\n        .width(24)\n        .height(24)\n        .margin({ left: 24 })\n      Image($r('sys.media.ohos_app_icon'))\n        .width(24)\n        .height(24)\n        .margin({ left: 24 })\n      Text('Exit')\n    }\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n      }\n      .title('hello')\n      .menus(this.NavigationMenus())\n      .height(100)\n      .margin(10)\n      .id('navigationMenus1')\n\n      Navigation() {\n      }\n      .title('world')\n      .height(100)\n      .margin(10)\n      .menus([{ value: \"menu\", icon: '../../../resources/base/media/test_image.png', action: () => this.NavigationMenus() }])\n      .id('navigationMenus2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationMenusSample.ets", "project_name": "arkui_ace_engine-master", "id": "5f5e2a5195b1a5702eaf934255c51be64f5d4e12150b51d0072b66b72a7644c5"}
{"text": "import navigationMinContentWidthTest from '../MyTest/NavigationMinContentWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationMinContentWidthSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationMinContentWidthTest)\n  }\n\n  @State minContentWidth: Dimension = '300vp'\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('80%')\n                .height(72)\n                .backgroundColor(Color.Pink)\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('100%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .height(300)\n      .minContentWidth(this.minContentWidth)\n      .mode(NavigationMode.Split)\n      .id('navigationMinContentWidth')\n\n      Button('NavigationMinContentWidth1')\n        .onClick(() => {\n          this.minContentWidth = '10lpx'\n        })\n      Button('NavigationMinContentWidth2')\n        .onClick(() => {\n          this.minContentWidth = '5fp'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationMinContentWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "7a115ce49ac1632d99b3fbf44b55de98d5e98b1a33e835a07ba6f9c04e4b283e"}
{"text": "import navigationModeTest from '../MyTest/NavigationModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationModeSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationModeTest)\n  }\n\n  @State mode: NavigationMode = NavigationMode.Stack\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('80%')\n                .height(72)\n                .backgroundColor(Color.Pink)\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('100%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .title('hello')\n      .height(300)\n      .toolbarConfiguration([{ value: 'hello', icon: $r('sys.media.ohos_ic_public_drawer_open_filled') }])\n      .mode(this.mode)\n      .id('navigationMode')\n\n      Button('NavigationMode1')\n        .onClick(() => {\n          this.mode = NavigationMode.Split\n        })\n      Button('NavigationMode2')\n        .onClick(() => {\n          this.mode = NavigationMode.Auto\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "59bb7dac4268399e6dd5414bbca2abea17fb9a9ee1ae501cb248fc79cff78cf8"}
{"text": "import navigationNavBarPositionTest from '../MyTest/NavigationNavBarPositionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationNavBarPositionSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationNavBarPositionTest)\n  }\n\n  @State navBarPosition: NavBarPosition = NavBarPosition.Start\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('80%')\n                .height(72)\n                .backgroundColor(Color.Pink)\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('100%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .title('hello')\n      .height(300)\n      .toolbarConfiguration([{ value: 'hello', icon: $r('sys.media.ohos_ic_public_drawer_open_filled') }])\n      .navBarWidth(200)\n      .mode(NavigationMode.Split)\n      .navBarPosition(this.navBarPosition)\n      .id('navigationNavBarPosition')\n\n      Button('NavigationNavBarPosition')\n        .onClick(() => {\n          this.navBarPosition = NavBarPosition.End\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationNavBarPositionSample.ets", "project_name": "arkui_ace_engine-master", "id": "8f91fec4fa8a2a7652f2b3852eed39ff315d47ebcd0cc75c03fe93c9349f1828"}
{"text": "import navigationNavBarWidthRangeTest from '../MyTest/NavigationNavBarWidthRangeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationNavBarWidthRangeSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationNavBarWidthRangeTest)\n  }\n\n  @State navBarWidthRange: [Dimension, Dimension] = ['200vp', '400vp']\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('80%')\n                .height(72)\n                .backgroundColor(Color.Pink)\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('100%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .title('hello')\n      .height(300)\n      .toolbarConfiguration([{ value: 'hello', icon: $r('sys.media.ohos_ic_public_drawer_open_filled') }])\n      .navBarWidthRange(this.navBarWidthRange)\n      .mode(NavigationMode.Split)\n      .id('navigationNavBarWidthRange')\n\n      Button('NavigationNavBarWidthRange')\n        .onClick(() => {\n          this.navBarWidthRange = [$r(\"app.float.navigation_min_width\"), $r(\"app.float.navigation_max_width\")]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationNavBarWidthRangeSample.ets", "project_name": "arkui_ace_engine-master", "id": "f77ffb48c1d2554ad5a7a0f27dc9e6258b790d1df14eb40ca688064d46aac0cc"}
{"text": "import navigationNavBarWidthTest from '../MyTest/NavigationNavBarWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationNavBarWidthSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationNavBarWidthTest)\n  }\n\n  @State navBarWidth: Length = 200\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('80%')\n                .height(72)\n                .backgroundColor(Color.Pink)\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('100%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .title('hello')\n      .height(300)\n      .toolbarConfiguration([{ value: 'hello', icon: $r('sys.media.ohos_ic_public_drawer_open_filled') }])\n      .navBarWidth(this.navBarWidth)\n      .mode(NavigationMode.Split)\n      .id('navigationNavBarWidth')\n\n      Button('NavigationNavBarWidth1')\n        .onClick(() => {\n          this.navBarWidth = '150px'\n        })\n      Button('NavigationNavBarWidth2')\n        .onClick(() => {\n          this.navBarWidth = $r(\"app.string.navigation_nav_width\")\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationNavBarWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "0b03b858f8af95bfdf8b29302c631258bceef2423646f1fa608109515e7bbcdd"}
{"text": "import navigationNavDestinationTest from '../MyTest/NavigationNavDestinationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport { PageOneTmp } from '../MyTest/PageOne'\nimport { Pages, pageTwoTmp } from '../MyTest/PageTwo'\n\n@Entry\n@Component\nstruct NavigationNavDestinationSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationNavDestinationTest)\n  }\n\n  @Provide('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n\n  @Builder\n  PageMap(name: string) {\n    if (name === 'pageOne') {\n      PageOneTmp()\n    } else if (name === 'pageTwo') {\n      pageTwoTmp({ names: name, values: this.pageInfos } as Pages)\n    }\n  }\n\n  build() {\n    Navigation(this.pageInfos) {\n      Column() {\n        Button('pageOne', { stateEffect: true, type: ButtonType.Capsule })\n          .width('80%')\n          .height(40)\n          .margin(20)\n          .onClick(() => {\n            this.pageInfos.pushPath({ name: 'pageOne' })\n          })\n      }\n    }.title('NavIndex')\n    .navDestination(this.PageMap)\n    .id('navDestination')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationNavDestinationSample.ets", "project_name": "arkui_ace_engine-master", "id": "401573ba6ea974ac041b00c67a82ccdf42c425d2cfa48159b45c299678087e0e"}
{"text": "import navigationTitleModeTest from '../MyTest/NavigationTitleModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationTitleModeSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationTitleModeTest)\n  }\n\n  @State titleMode: NavigationTitleMode = NavigationTitleMode.Free\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  build() {\n    Column() {\n      Navigation() {\n        TextInput({ placeholder: 'search...' })\n          .width('90%')\n          .height(40)\n          .backgroundColor('#FFFFFF')\n          .margin({ top: 8 })\n\n        List({ space: 12, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('90%')\n                .height(72)\n                .backgroundColor('#FFFFFF')\n                .borderRadius(24)\n                .fontSize(16)\n                .fontWeight(500)\n                .textAlign(TextAlign.Center)\n            }\n          }, (item: number) => item.toString())\n        }\n        .height(324)\n        .width('60%')\n        .margin({ top: 12, left: '10%' })\n      }\n      .title('hello')\n      .height(400)\n      .titleMode(this.titleMode)\n      .id('navigationTitleMode')\n\n      Button('NavigationTitleMode1')\n        .onClick(() => {\n          this.titleMode = NavigationTitleMode.Full\n        })\n      Button('NavigationTitleMode2')\n        .onClick(() => {\n          this.titleMode = NavigationTitleMode.Mini\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationTitleModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "3bd44b52a0b9b45b9623738d86ce5c63c67d4189e2fb8de60516b42e2cf00a14"}
{"text": "import navigationToolbarConfigurationTest from '../MyTest/NavigationToolbarConfigurationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavigationToolbarConfigurationSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigationToolbarConfigurationTest)\n  }\n\n  @State toolbarConfiguration1: Array<ToolbarItem> = [{\n    value: 'hello',\n    icon: $r('sys.media.ohos_ic_public_drawer_open_filled'),\n    action: () => this.NavigationTitle(),\n    status: ToolbarItemStatus.NORMAL,\n    activeIcon: $r('sys.media.ohos_ic_public_location')\n  }]\n  @State toolbarConfiguration2: NavigationToolbarOptions =\n    { backgroundColor: Color.Yellow, backgroundBlurStyle: BlurStyle.Thin }\n\n  @Builder\n  NavigationTitle() {\n    Column() {\n      Text('free')\n        .fontSize(30)\n        .fontWeight(500)\n    }\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n      }\n      .height(200)\n      .width('100%')\n      .margin(20)\n      .title('title')\n      .toolbarConfiguration(this.toolbarConfiguration1, this.toolbarConfiguration2)\n      .id('navigationToolbarConfiguration1')\n\n      Button('NavigationToolbarConfiguration1')\n        .onClick(() => {\n          this.toolbarConfiguration1 = [{\n            value: 'hello',\n            icon: $r('sys.media.ohos_ic_public_drawer_open_filled'),\n            action: () => this.NavigationTitle(),\n            status: ToolbarItemStatus.DISABLED,\n            activeIcon: $r('sys.media.ohos_ic_public_location')\n          }]\n          this.toolbarConfiguration2 =\n            { backgroundColor: $r(\"app.color.navigation_color\"), backgroundBlurStyle: BlurStyle.Thick }\n        })\n        .margin(20)\n      Button('NavigationToolbarConfiguration2')\n        .onClick(() => {\n          this.toolbarConfiguration1 = [{\n            value: 'hello',\n            icon: $r('sys.media.ohos_ic_public_drawer_open_filled'),\n            action: () => this.NavigationTitle(),\n            status: ToolbarItemStatus.ACTIVE,\n            activeIcon: $r('sys.media.ohos_ic_public_location')\n          }]\n          this.toolbarConfiguration2 = { backgroundColor: 0x0000ff, backgroundBlurStyle: BlurStyle.Regular }\n        })\n        .margin(20)\n      Navigation() {\n      }\n      .height(100)\n      .margin(20)\n      .title('hello')\n      .toolbarConfiguration(this.NavigationTitle())\n      .id('navigationToolbarConfiguration2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigation\\NavigationToolbarConfigurationSample.ets", "project_name": "arkui_ace_engine-master", "id": "452026f091d155a80b8a3bcd898a0de72f133030814402b67f778f4b44905e58"}
{"text": "import navigatorActiveTest from '../MyTest/NavigatorActiveTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct NavigatorActiveSample {\n  @State activeType: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigatorActiveTest);\n  }\n\n  build() {\n    Column() {\n      Navigator({ target: 'pages/MyTest/NavigatorActiveTypeDetail' }) {\n        Text('NavigatorActive')\n          .width('100%')\n      }\n      .active(this.activeType)\n      .id('navigatorActive')\n\n      Button('NavigatorActive')\n        .onClick(() => {\n          this.activeType = !this.activeType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigator\\NavigatorActiveSample.ets", "project_name": "arkui_ace_engine-master", "id": "197e6f62467d0fee185136e71c18bb39c0dc72614ee35d787bc654657d08211e"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct NavigatorHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('Navigator')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'NavigatorActive', buttonUrl: 'pages/navigator/NavigatorActiveSample' });\n        CommonButton({ buttonName: 'NavigatorParams', buttonUrl: 'pages/navigator/NavigatorParamsSample' });\n        CommonButton({ buttonName: 'NavigatorTarget', buttonUrl: 'pages/navigator/NavigatorTargetSample' });\n        CommonButton({ buttonName: 'NavigatorType', buttonUrl: 'pages/navigator/NavigatorTypeSample' });\n      }\n      .padding('20vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigator\\NavigatorHome.ets", "project_name": "arkui_ace_engine-master", "id": "8471d0c2610a03c20c23f335d68b5ff333f8853437d0bf8c3360debefa77498d"}
{"text": "import navigatorParamsTest from '../MyTest/NavigatorParamsTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\ninterface NameObject {\n  name: string;\n}\n\nclass TextObject {\n  text: NameObject;\n\n  constructor(text: NameObject) {\n    this.text = text;\n  }\n}\n\n@Entry\n@Component\nstruct NavigatorParamsSample {\n  @State name: NameObject = { name: 'NavigatorParamDetail' }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigatorParamsTest);\n  }\n\n  build() {\n    Column() {\n      Navigator({ target: 'pages/MyTest/NavigatorParamsDetail' }) {\n        Text('Go to NavigatorParamDetail')\n          .width('100%')\n      }\n      .type(NavigationType.Push)\n      .params(new TextObject(this.name))\n      .id('navigatorParams')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigator\\NavigatorParamsSample.ets", "project_name": "arkui_ace_engine-master", "id": "14687408f44adb9ece19d1ba0f7ceb30d1dc03ac361a173ded41ef7f04f65f86"}
{"text": "import navigatorTargetTest from '../MyTest/NavigatorTargetTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct NavigatorTargetSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigatorTargetTest);\n  }\n\n  build() {\n    Column() {\n      Navigator() {\n        Text('NavigatorTarget')\n          .width('100%')\n      }\n      .target('pages/navigator/NavigatorActiveTypeDetail')\n      .id('navigatorTarget')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigator\\NavigatorTargetSample.ets", "project_name": "arkui_ace_engine-master", "id": "665d92b523694e5812a6d6d528e84d7baf09f33b2ebf0ff713a6619f49f4ee15"}
{"text": "import navigatorTypeTest from '../MyTest/NavigatorTypeTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct NavigatorTypeSample {\n  @State targetType: NavigationType = NavigationType.Replace\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navigatorTypeTest);\n  }\n\n  build() {\n    Column() {\n      Navigator({ target: 'pages/navigator/NavigatorActiveTypeDetail' }) {\n        Text('NavigatorType1')\n          .width('100%')\n      }\n      .type(NavigationType.Push)\n      .id('NavigatorType1')\n\n      Navigator({ target: 'pages/navigator/NavigatorActiveTypeDetail' }) {\n        Text('NavigatorType2')\n          .width('100%')\n      }\n      .type(this.targetType)\n      .id('NavigatorType2')\n\n      Button('NavigatorType')\n        .onClick(() => {\n          this.targetType = NavigationType.Back\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navigator\\NavigatorTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "ab9f2ef356e79b603e23cfe3b19682e127b1f160f93bae31c9d884e5d1970e7c"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct NavRouterHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('NavRouter')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'NavRouterMode', buttonUrl: 'pages/navRouter/NavRouterModeSample' });\n\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navRouter\\NavRouterHome.ets", "project_name": "arkui_ace_engine-master", "id": "cea526b0521dc772b0e51a4e134c3f595e2e2db50d472a696e245d26b6d0bc5b"}
{"text": "import navRouterModeTest from '../MyTest/NavRouterModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct NavRouterModeSample {\n  @State navRouter: NavRouteMode = NavRouteMode.PUSH\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navRouterModeTest)\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n        NavRouter() {\n          Text(`navRouterModeText1`)\n          NavDestination() {\n            Text('navDestinationText1')\n          }\n        }.mode(NavRouteMode.PUSH_WITH_RECREATE)\n        .id('navRouterMode1')\n\n        NavRouter() {\n          Text(`navRouterModeText2`)\n          NavDestination() {\n            Text('navDestinationText2')\n          }\n        }.mode(this.navRouter)\n        .id('navRouterMode2')\n      }.height('50%')\n\n      Button('NavRouterMode1')\n        .onClick(() => {\n          this.navRouter = NavRouteMode.REPLACE\n        })\n    }\n\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\navRouter\\NavRouterModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "4bf7e72f01905b5b0e661628faf19009197cfc6340c62555e1eedd1dcaea531a"}
{"text": "import { NavDestinationBackButtonIconSample } from '../MyTest/NavDestinationBackButtonIconSample'\nimport navDestinationBackButtonIconTest from '../MyTest/NavDestinationBackButtonIconTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@ComponentV2\nstruct NavDestinationBackButtonIconPage {\n  @Provider('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navDestinationBackButtonIconTest);\n  }\n\n  @Builder\n  PageMap(name: string) {\n    NavDestinationBackButtonIconSample()\n  }\n\n  build() {\n    Navigation(this.pageInfos) {\n      Column() {\n        Button('PushNavDestination', { stateEffect: true, type: ButtonType.Capsule })\n          .width('80%')\n          .height(40)\n          .margin(20)\n          .onClick(() => {\n            this.pageInfos.pushPath({ name: 'NavDestinationBackButtonIcon' })\n          })\n      }\n    }.title('NavIndex').navDestination(this.PageMap)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\nav_destination\\NavDestinationBackButtonIconPage.ets", "project_name": "arkui_ace_engine-master", "id": "f40e88fc7cb42c42cf617815166011e36deb86dd22b594c3621b43ac678a720a"}
{"text": "import { NavDestinationHideTitleBarSample } from '../MyTest/NavDestinationHideTitleBarSample'\nimport navDestinationHideTitleBarTest from '../MyTest/NavDestinationHideTitleBarTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@ComponentV2\nstruct NavDestinationHideTitleBarPage {\n  @Provider('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navDestinationHideTitleBarTest);\n  }\n\n  @Builder\n  PageMap(name: string) {\n    NavDestinationHideTitleBarSample()\n  }\n\n  build() {\n    Navigation(this.pageInfos) {\n      Column() {\n        Button('PushNavDestination', { stateEffect: true, type: ButtonType.Capsule })\n          .width('80%')\n          .height(40)\n          .margin(20)\n          .onClick(() => {\n            this.pageInfos.pushPath({ name: 'NavDestinationHideTitleBar' })\n          })\n      }\n    }.title('NavIndex').navDestination(this.PageMap)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\nav_destination\\NavDestinationHideTitleBarPage.ets", "project_name": "arkui_ace_engine-master", "id": "e12af2e0ec34b2f6dc97a4ff0569fdc4869c2d93850a0dc21515a5ccfd6d0679"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct NavDestinationHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('NavDestination')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'NavDestinationTitle', buttonUrl: 'pages/nav_destination/NavDestinationTitlePage' });\n        CommonButton({\n          buttonName: 'NavDestinationHideTitleBar',\n          buttonUrl: 'pages/nav_destination/NavDestinationHideTitleBarPage'\n        });\n        CommonButton({ buttonName: 'NavDestinationMode', buttonUrl: 'pages/nav_destination/NavDestinationModePage' });\n        CommonButton({\n          buttonName: 'NavDestinationBackButtonIcon',\n          buttonUrl: 'pages/nav_destination/NavDestinationBackButtonIconPage'\n        });\n      }\n      .padding('20vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\nav_destination\\NavDestinationHome.ets", "project_name": "arkui_ace_engine-master", "id": "b51948fbdbf77083ebaa0b00108183b2bae768d01dd9d97e9f43de3a30c811da"}
{"text": "import { NavDestinationModeSample } from '../MyTest/NavDestinationModeSample'\nimport navDestinationModeTest from '../MyTest/NavDestinationModeTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@ComponentV2\nstruct NavDestinationModePage {\n  @Provider('pageInfos') pageInfos: NavPathStack = new NavPathStack()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navDestinationModeTest);\n  }\n\n  @Builder\n  PageMap(name: string) {\n    NavDestinationModeSample()\n  }\n\n  build() {\n    Navigation(this.pageInfos) {\n      Column() {\n        Button('PushNavDestination', { stateEffect: true, type: ButtonType.Capsule })\n          .width('80%')\n          .height(40)\n          .margin(20)\n          .onClick(() => {\n            this.pageInfos.pushPath({ name: 'NavDestinationMode' })\n          })\n      }\n    }.title('NavIndex').navDestination(this.PageMap)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\nav_destination\\NavDestinationModePage.ets", "project_name": "arkui_ace_engine-master", "id": "bd7b4582494937f634874d0b0a1b053a1b2bca2b45316123bfe170b1f2c1a4ab"}
{"text": "import { NavDestinationTitleSample } from '../MyTest/NavDestinationTitleSample'\nimport navDestinationTitleTest from '../MyTest/NavDestinationTitleTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@ComponentV2\nstruct NavDestinationTitlePage {\n  @Provider('pageInfo') pageInfo: NavPathStack = new NavPathStack()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(navDestinationTitleTest);\n  }\n\n  @Builder\n  PageMap(name: string) {\n    NavDestinationTitleSample()\n  }\n\n  build() {\n    Navigation(this.pageInfo) {\n      Column() {\n        Button('PushNavDestination', { stateEffect: true, type: ButtonType.Capsule })\n          .width('80%')\n          .height(40)\n          .margin(20)\n          .onClick(() => {\n            this.pageInfo.pushPath({ name: 'PageOne' })\n          })\n      }\n    }.title('NavIndex').navDestination(this.PageMap)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\nav_destination\\NavDestinationTitlePage.ets", "project_name": "arkui_ace_engine-master", "id": "3c27d501ae52d3ddc3b57335d8abe1d35c449443caf7fd6c8cc11a18d3ba98df"}
{"text": "import { CommonButton } from '../../util/CommonButton'\n\n@Entry\n@Component\nstruct StepperItemHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('StepperItem')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({\n          buttonName: 'StepperItemNextLabel',\n          buttonUrl: 'pages/stepper_item/StepperItemNextLabelSample'\n        });\n        CommonButton({\n          buttonName: 'StepperItemPrevLabel',\n          buttonUrl: 'pages/stepper_item/StepperItemPrevLabelSample'\n        });\n        CommonButton({ buttonName: 'StepperItemStatus', buttonUrl: 'pages/stepper_item/StepperItemStatusSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\stepper_item\\StepperItemHome.ets", "project_name": "arkui_ace_engine-master", "id": "f53b39627cdc46c80b74830bdd416e310445baaa7a26af3f0bbfc4dbc0ddfa27"}
{"text": "import stepperItemNextLabelTest from '../MyTest/StepperItemNextLabelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct StepperItemNextLabelSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(stepperItemNextLabelTest)\n  }\n\n  build() {\n    Stepper() {\n      StepperItem() {\n        Text('stepperItemNextLabelText')\n      }.nextLabel('Next')\n      .id(\"stepperItemNextLabel1\")\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\stepper_item\\StepperItemNextLabelSample.ets", "project_name": "arkui_ace_engine-master", "id": "6d947da3dac8f0e95d290cc5ee86a10c4399b4afc227d0d71ba7875676353558"}
{"text": "import stepperItemPrevLabelTest from '../MyTest/StepperItemPrevLabelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct StepperItemPrevLabelSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(stepperItemPrevLabelTest)\n  }\n\n  build() {\n    Stepper() {\n      StepperItem() {\n        Text('stepperItemPrevLabelText')\n      }.prevLabel('Previous')\n      .id(\"stepperItemPrevLabel1\")\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\stepper_item\\StepperItemPrevLabelSample.ets", "project_name": "arkui_ace_engine-master", "id": "c5a54d9fedbf0c0c1a91a8fc2492e7a6cf9cf425d484ba9753209525e3492e58"}
{"text": "import stepperItemStatusTest from '../MyTest/StepperItemStatusTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct StepperItemStatusSample {\n  @State itemStatus1: ItemState = ItemState.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(stepperItemStatusTest)\n  }\n\n  build() {\n    Column() {\n      Stepper() {\n        StepperItem() {\n          Text('stepperItemStatusText1')\n        }.status(this.itemStatus1)\n        .id('stepperItemStatus1')\n      }.height('60%')\n\n      Button('StepperItemStatus1')\n        .onClick(() => {\n          this.itemStatus1 = ItemState.Disabled\n        })\n      Button('StepperItemStatus2')\n        .onClick(() => {\n          this.itemStatus1 = ItemState.Skip\n        })\n      Button('StepperItemStatus3')\n        .onClick(() => {\n          this.itemStatus1 = ItemState.Waiting\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\stepper_item\\StepperItemStatusSample.ets", "project_name": "arkui_ace_engine-master", "id": "3759bd1d4ce46214cf60b17a36afc54bfb81f8756441301004e58d18c9595047"}
{"text": "import tabsAnimationDurationTest from '../MyTest/TabsAnimationDurationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsAnimationDurationSample {\n  private controller: TabsController = new TabsController()\n  @State animationDuration: number = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsAnimationDurationTest)\n  }\n\n  build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.End, controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar('pink')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar('green')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar('blue')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Red)\n        }.tabBar('Red')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Orange)\n        }.tabBar('Orange')\n      }\n      .id('tabsAnimationDuration')\n      .vertical(true)\n      .height('60%')\n      .animationDuration(this.animationDuration)\n      .backgroundColor(0xf1f3f5)\n\n      Button('TabsAnimationDuration')\n        .onClick(() => {\n          this.animationDuration = 600\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsAnimationDurationSample.ets", "project_name": "arkui_ace_engine-master", "id": "8a2a5ed9252f01e8d6cc47579831f99d28e8765183422649b91e8e3063c87024"}
{"text": "import tabsBarBackgroundBlurStyleTest from '../MyTest/TabsBarBackgroundBlurStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsBarBackgroundBlurStyleSample {\n  private controller: TabsController = new TabsController()\n  @State blurStyle: BlurStyle = BlurStyle.NONE\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsBarBackgroundBlurStyleTest)\n  }\n\n  build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.End, controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar('pink')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar('green')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar('blue')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Red)\n        }.tabBar('red')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Orange)\n        }.tabBar('orange')\n      }.id('tabsBarBackgroundBlurStyle')\n      .vertical(false)\n      .height('60%')\n      .barBackgroundBlurStyle(this.blurStyle)\n\n      Button('TabsBarBackgroundBlurStyle')\n        .onClick(() => {\n          this.blurStyle = BlurStyle.BACKGROUND_THIN\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsBarBackgroundBlurStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "77b8718e48347bd0ca022f20360279d686e17900e1c89fbbbafe1de2fd06ad3e"}
{"text": "import tabsBarBackgroundColorTest from '../MyTest/TabsBarBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsBarBackgroundColorSample {\n  private controller: TabsController = new TabsController()\n  @State groundColor: ResourceColor = 0xf1f3f5\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsBarBackgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.End, controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar('pink')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar('green')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar('blue')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Red)\n        }.tabBar('Red')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Orange)\n        }.tabBar('Orange')\n      }.id('tabsBarBackgroundColor')\n      .vertical(false)\n      .height('60%')\n      .barBackgroundColor(this.groundColor)\n\n      Button('TabsBarBackgroundColor1')\n        .onClick(() => {\n          this.groundColor = Color.Orange\n        })\n      Button('TabsBarBackgroundColor2')\n        .onClick(() => {\n          this.groundColor = '#FFF000'\n        })\n      Button('TabsBarBackgroundColor3')\n        .onClick(() => {\n          this.groundColor = $r('app.color.tabs_color')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsBarBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "7937ce3bf52d5e9a6e73f7b52b83e48154519f1b04cc07ffc37e4013a761cdd5"}
{"text": "import tabsBarGridAlignTest from '../MyTest/TabsBarGridAlignTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsBarGridAlignSample {\n  private controller: TabsController = new TabsController()\n  @State columnOptions: BarGridColumnOptions = { sm: 2, margin: '10px', gutter: '10px' }\n  @State columnHeight: string = '500vp'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsBarGridAlignTest)\n  }\n\n  build() {\n    Column() {\n      Button('TabsBarGridAlign1')\n        .onClick(() => {\n          this.columnHeight = '600vp'\n          this.columnOptions = { md: 2, margin: '10fp', gutter: '10fp' }\n        })\n      Button('TabsBarGridAlign2')\n        .onClick(() => {\n          this.columnHeight = '840vp'\n          this.columnOptions = { lg: 0, margin: '5lpx', gutter: '5lpx' }\n        })\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar(BottomTabBarStyle.of($r(\"sys.media.ohos_app_icon\"), \"Pink\"))\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar(BottomTabBarStyle.of($r(\"sys.media.ohos_app_icon\"), \"Green\"))\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar(BottomTabBarStyle.of($r(\"sys.media.ohos_app_icon\"), \"Blue\"))\n      }.id('tabsBarGridAlign')\n      .height(this.columnHeight)\n      .barGridAlign(this.columnOptions)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsBarGridAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "eca672cb85691c53d1318d394c1b6bcbdf07f67e8d89851b66feba2ac053353e"}
{"text": "import tabsBarHeightTest from '../MyTest/TabsBarHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsBarHeightSample {\n  private controller: TabsController = new TabsController()\n  @State barHeight: Length = 100\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsBarHeightTest)\n  }\n\n  build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.End, controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar('pink')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar('green')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar('blue')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Red)\n        }.tabBar('Red')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Orange)\n        }.tabBar('Orange')\n      }\n      .id('tabsBarHeight')\n      .vertical(false)\n      .barHeight(this.barHeight)\n      .height('60%')\n\n      Button('TabsBarHeight1')\n        .onClick(() => {\n          this.barHeight = '50'\n        })\n      Button('TabsBarHeight2')\n        .onClick(() => {\n          this.barHeight = $r(\"app.string.tabs_resource1\")\n        })\n      Button('TabsBarHeight3')\n        .onClick(() => {\n          this.barHeight = -1\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsBarHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "b846afd871a966da1a78f40ebf07d92444c16db9835f04856472126e219bf7f9"}
{"text": "import tabsBarOverlapTest from '../MyTest/TabsBarOverlapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsBarOverlapSample {\n  private controller: TabsController = new TabsController()\n  @State barOverlap: boolean = true;\n  @State barBackgroundColor: string = '#88888888';\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsBarOverlapTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"TabsBarOverlap\").width('100%').margin({ bottom: '12vp' })\n        .onClick(() => {\n          this.barOverlap = !this.barOverlap\n        })\n      Tabs({ barPosition: BarPosition.End, controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar('pink')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar('green')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar('blue')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Red)\n        }.tabBar('Red')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Orange)\n        }.tabBar('Orange')\n      }.id('tabsBarOverlap')\n      .height('60%')\n      .barOverlap(this.barOverlap)\n      .barBackgroundColor(this.barBackgroundColor)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsBarOverlapSample.ets", "project_name": "arkui_ace_engine-master", "id": "08cac229e9980c840925d41d3b8377b8ac32239809610eca2127f5937229323f"}
{"text": "import tabsScrollableTest from '../MyTest/TabsScrollableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TabsScrollableSample {\n  private controller: TabsController = new TabsController()\n  @State scrollable: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(tabsScrollableTest)\n  }\n\n  build() {\n    Column() {\n      Tabs({ controller: this.controller }) {\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Pink)\n        }.tabBar('pink')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Yellow)\n        }.tabBar('yellow')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Blue)\n        }.tabBar('blue')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Green)\n        }.tabBar('green')\n\n        TabContent() {\n          Column().width('100%').height('100%').backgroundColor(Color.Red)\n        }.tabBar('red')\n      }\n      .id('tabsScrollable')\n      .vertical(true)\n      .scrollable(this.scrollable)\n      .height('90%')\n      .barWidth(70)\n\n      Button('TabsScrollable')\n        .onClick(() => {\n          this.scrollable = !this.scrollable\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tabs\\TabsScrollableSample.ets", "project_name": "arkui_ace_engine-master", "id": "35dc7f04b096b6a4d9c587fe5bf44d33bde6948e7e4a0f4a783c1d99de83ba70"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct TabContentHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('TabContent')\n          .padding('10vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'TabContentTabBar', buttonUrl: 'pages/tab_content/TabContentTabBarSample' });\n      }\n      .padding('10vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\navigation\\entry\\src\\main\\ets\\pages\\tab_content\\TabContentHome.ets", "project_name": "arkui_ace_engine-master", "id": "fbb2b168f75240e0644d1cb5777250ed2cc96aa1392d962b7fb19197af597e2e"}
{"text": "import actionSheetAlignmentTest from '../MyTest/ActionSheetAlignmentTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetAlignmentSample {\n  @State alignment: DialogAlignment[] =\n    [DialogAlignment.Top, DialogAlignment.Center, DialogAlignment.Bottom, DialogAlignment.Default,\n      DialogAlignment.TopStart, DialogAlignment.TopEnd, DialogAlignment.CenterStart, DialogAlignment.CenterEnd,\n      DialogAlignment.BottomStart, DialogAlignment.BottomEnd]\n  @State string: string = 'actionText'\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetAlignmentTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetAlignmentTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            alignment: this.alignment[this.index],\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetAlignmentTest2')\n        .onClick(() => {\n          this.index++\n          this.index %= 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetAlignmentSample.ets", "project_name": "arkui_ace_engine-master", "id": "cef03ea3730b72d663df8bbde6123da75d057ba6c34224eedc240befa5686c94"}
{"text": "import actionSheetAutoCancel from '../MyTest/ActionSheetAutoCancelText'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetAutoCancelSample {\n  @State autoCancel: boolean = true\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetAutoCancel)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetAutoCancelTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            autoCancel: this.autoCancel,\n            sheets: [{\n              title: ' sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetAutoCancel1')\n        .onClick(() => {\n          this.autoCancel = !this.autoCancel\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetAutoCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "6ce67d0cf5ad2c329cfdd2a6d4f2c07e61d3288c7c52890fa40429f4d912c231"}
{"text": "import actionSheetBackgroundBlurStyleTest from '../MyTest/ActionSheetBackgroundBlurStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetBackgroundBlurStyleSample {\n  @State BlurStyle: BlurStyle[] =\n    [BlurStyle.Thin, BlurStyle.Regular, BlurStyle.Thick, BlurStyle.BACKGROUND_THIN, BlurStyle.BACKGROUND_REGULAR,\n      BlurStyle.BACKGROUND_THICK,\n      BlurStyle.BACKGROUND_ULTRA_THICK, BlurStyle.NONE, BlurStyle.COMPONENT_ULTRA_THIN, BlurStyle.COMPONENT_THIN,\n      BlurStyle.COMPONENT_REGULAR, BlurStyle.COMPONENT_THICK, BlurStyle.COMPONENT_ULTRA_THICK]\n  @State string: string = 'actionText'\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetBackgroundBlurStyleTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetBackgroundBlurStyleTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            backgroundBlurStyle: this.BlurStyle[this.index],\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n          this.index++\n          this.index %= 13\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetBackgroundBlurStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "3db9518587cc079413baceea398be1a489367a2bbb99edd0197749bab6d94e4f"}
{"text": "import actionSheetBackgroundColorTest from '../MyTest/ActionSheetBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetBackgroundColorSample {\n  @State backgroundColor1: ResourceColor = Color.Gray\n  @State backgroundColor2: ResourceColor = \"#FFBC3535\"\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetBackgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetBackgroundColorTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            backgroundColor: this.backgroundColor1,\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetBackgroundColorTest2')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title2',\n            message: 'message2',\n            backgroundColor: this.backgroundColor2,\n            sheets: [{\n              title: 'sheetsTitle2', action: () => {\n                this.string = 'actionText2'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetBackgroundColor1').onClick(() => {\n        this.backgroundColor1 = $r(\"app.color.action_sheet_color\")\n        this.backgroundColor2 = 0x00dd77\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "7761052d4f6e4578bf8ada36739bd7e37fe086c522c73294a0af62a288c4580b"}
{"text": "import actionSheetCancelTest from '../MyTest/ActionSheetCancelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetCancelSample {\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetCancelTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetCancelTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            cancel: () => {\n              this.string = 'actionSheet_canceled1'\n            },\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "1055f5824cfa189994cdc2edd303bac5d9014441ad559625c8a52608902abe6c"}
{"text": "import actionSheetConfirmTest from '../MyTest/ActionSheetConfirmTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetConfirmSample {\n  @State enabled1: boolean = true\n  @State defaultFocus1: boolean = true\n  @State style: DialogButtonStyle = DialogButtonStyle.DEFAULT\n  @State value: Resource | string = $r('app.string.actionSheet_confirm_value')\n  @State string: string = 'actionText'\n  @State string1: string = 'Confirm_Button'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetConfirmTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Text(this.string1)\n      Button('ActionSheetConfirmTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            confirm: {\n              enabled: this.enabled1,\n              defaultFocus: this.defaultFocus1,\n              style: this.style,\n              value: this.value,\n              action: () => {\n                this.string1 = 'Confirm_Button1'\n              }\n            },\n            sheets: [{\n              title: 'sheetsTitle11', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetConfirm1')\n        .onClick(() => {\n          this.enabled1 = false\n          this.defaultFocus1 = false\n          this.style = DialogButtonStyle.HIGHLIGHT\n          this.value = 'Confirm_String'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetConfirmSample.ets", "project_name": "arkui_ace_engine-master", "id": "7806071394c67a732dc379b8989070aad367f5cd4ac8e2f902b6769e6136df1d"}
{"text": "import actionSheetIsModalTest from '../MyTest/ActionSheetIsModalTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetIsModalSample {\n  @State isModal: boolean = true\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetIsModalTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetIsModalTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            isModal: this.isModal,\n            sheets: [{\n              title: 'sheetsTitle11', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetIsModal1').onClick(() => {\n        this.isModal = !this.isModal\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetIsModalSample.ets", "project_name": "arkui_ace_engine-master", "id": "f0096519e54761f1f1eade75e29921b705aeb51ec5e7d94677100093ac1387f3"}
{"text": "import actionSheetMaskRectTest from '../MyTest/ActionSheetMaskRectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetMaskRectSample {\n  @State maskRect_x: string | Resource = '5px'\n  @State maskRect_y: string | Resource = '6px'\n  @State maskRect_width: string | Resource = '400px'\n  @State maskRect_height: string | Resource = '500px'\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetMaskRectTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetMaskRectTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            maskRect: {\n              x: 1,\n              y: 2,\n              width: 200,\n              height: 300\n            },\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetMaskRectTest2')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title2',\n            message: 'message2',\n            maskRect: {\n              x: this.maskRect_x,\n              y: this.maskRect_y,\n              width: this.maskRect_width,\n              height: this.maskRect_height\n            },\n            sheets: [{\n              title: 'sheetsTitle2', action: () => {\n                this.string = 'actionText2'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetMaskRectTest3')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title3',\n            message: 'message3',\n            showInSubWindow: true,\n            maskRect: {\n              x: 1,\n              y: 2,\n              width: 200,\n              height: 300\n            },\n            sheets: [{\n              title: 'sheetsTitle3', action: () => {\n                this.string = 'actionText3'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetMaskRect1').onClick(() => {\n        this.maskRect_x = $r('app.float.actionSheet_maskRect_dx')\n        this.maskRect_y = $r('app.float.actionSheet_maskRect_dy')\n        this.maskRect_width = $r('app.integer.actionSheet_maskRect_width')\n        this.maskRect_height = $r('app.integer.actionSheet_maskRect_height')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetMaskRectSample.ets", "project_name": "arkui_ace_engine-master", "id": "e412b65018cb93bdd68bc5f1c89ebe8f622e76c7a9ff59eec3f8456cd6c6af83"}
{"text": "import actionSheetMessageTest from '../MyTest/ActionSheetMessageTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetMessageSample {\n  @State message: string | Resource = 'message1'\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetMessageTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetMessageTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: this.message,\n            sheets: [{\n              title: ' sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n\n      Button('ActionSheetMessage1')\n        .onClick(() => {\n          this.message = $r('app.string.actionSheet_message')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetMessageSample.ets", "project_name": "arkui_ace_engine-master", "id": "e045c5792c302ac002c4f25788bea6fe88134d31e243e88a3dad9625ae0bd8ef"}
{"text": "import actionSheetOffsetTest from '../MyTest/ActionSheetOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetOffsetSample {\n  @State offset_dx: number | string = 2\n  @State offset_dy: number | string = -20\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetOffsetTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetOffsetTest1').onClick(() => {\n        ActionSheet.show({\n          title: 'title1',\n          message: 'message1',\n          offset: { dx: $r('app.string.actionSheet_offset_dx'), dy: $r('app.string.actionSheet_offset_dy') },\n          sheets: [{\n            title: 'sheetsTitle1', action: () => {\n              this.string = 'actionText1'\n            }\n          },]\n        })\n      })\n      Button('ActionSheetOffsetTest2').onClick(() => {\n        ActionSheet.show({\n          title: 'title2',\n          message: 'message2',\n          offset: { dx: this.offset_dx, dy: this.offset_dy },\n          sheets: [{\n            title: 'sheetsTitle2', action: () => {\n              this.string = 'actionText2'\n            }\n          },]\n        })\n      })\n      Button('ActionSheetOffset1').onClick(() => {\n        this.offset_dx = \"8px\"\n        this.offset_dy = \"-80px\"\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "f8a4fe568442872d3e65ae0f417f36b381009052f9b1d68c1caac1cefab1911c"}
{"text": "import actionSheetSheetsTest from '../MyTest/ActionSheetSheetsTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetSheetsSample {\n  @State title: string | Resource = ' sheetsTitle1'\n  @State icon: string | Resource = '../../../resources/base/media/icon.png'\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetSheetsTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetSheetsTest1').onClick(() => {\n        ActionSheet.show({\n          title: 'title1',\n          message: 'message1',\n          sheets: [{\n            title: this.title, icon: this.icon, action: () => {\n              this.string = 'actionText1'\n            }\n          },]\n        })\n      })\n      Button('ActionSheetSheets1').onClick(() => {\n        this.title = $r('app.string.actionSheet_title')\n        this.icon = $r('app.media.startIcon')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetSheetsSample.ets", "project_name": "arkui_ace_engine-master", "id": "d510d6b9fca494dc2af3b3c0917bf7dbd48d0c822d7af2ba45908e34a6a7a989"}
{"text": "import actionSheetShowInSubWindowTest from '../MyTest/ActionSheetShowInSubWindowTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetShowInSubWindowSample {\n  @State showInSubWindow: boolean = true\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetShowInSubWindowTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetShowInSubWindowTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            message: 'message1',\n            showInSubWindow: this.showInSubWindow,\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetShowInSubWindow1').onClick(() => {\n        this.showInSubWindow = !this.showInSubWindow\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetShowInSubWindowSample.ets", "project_name": "arkui_ace_engine-master", "id": "8e4dfb6dbfb73a959de1c08bfe3e6bac40e244cedd7c8c0b8bfb1c6a1e695a3d"}
{"text": "import actionSheetSubtitleTest from '../MyTest/ActionSheetSubtitleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetSubtitleSample {\n  @State subtitle: ResourceStr = 'subtitle1'\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetSubtitleTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetSubtitleTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: 'title1',\n            subtitle: this.subtitle,\n            message: 'message1',\n            sheets: [{\n              title: ' sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetSubtitle1').onClick(() => {\n        this.subtitle = $r('app.string.actionSheet_subtitle')\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetSubtitleSample.ets", "project_name": "arkui_ace_engine-master", "id": "0599cf166b0f660dca7787b574fc90e5f35e6024910ed61a7be4ce74e8163e05"}
{"text": "import actionSheetTitleTest from '../MyTest/ActionSheetTitleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ActionSheetTitleSample {\n  @State title: string | Resource = 'title1'\n  @State string: string = 'actionText'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(actionSheetTitleTest)\n  }\n\n  build() {\n    Column() {\n      Text(this.string)\n      Button('ActionSheetTitleTest1')\n        .onClick(() => {\n          ActionSheet.show({\n            title: this.title,\n            message: 'message1',\n            sheets: [{\n              title: 'sheetsTitle1', action: () => {\n                this.string = 'actionText1'\n              }\n            },]\n          })\n        })\n      Button('ActionSheetTitle1')\n        .onClick(() => {\n          this.title = $r('app.string.actionSheet_title')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\action_sheet\\ActionSheetTitleSample.ets", "project_name": "arkui_ace_engine-master", "id": "6d90ee79354a1edbacd4bb13aae15304504069cab6f2c6b4ad186a22c8bc21ff"}
{"text": "import alertDialogButtonDirectionTest from '../MyTest/AlertDialogButtonDirectionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AlertDialogButtonDirectionSample {\n  @State buttonDirectionType: DialogButtonDirection = DialogButtonDirection.HORIZONTAL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alertDialogButtonDirectionTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Button('One Button Dialog')\n        .onClick(() => {\n          AlertDialog.show(\n            {\n              message: 'AlertDialogButtonDirection1',\n              buttonDirection: DialogButtonDirection.AUTO,\n              confirm: {\n                value: 'button',\n                action: () => {\n                  console.info('Button-clicking callback')\n                }\n              },\n            }\n          )\n        })\n\n        .backgroundColor(0x317aff)\n      Button('Two Button Dialog')\n        .onClick(() => {\n          AlertDialog.show(\n            {\n              message: 'AlertDialogButtonDirection2',\n              buttonDirection: this.buttonDirectionType,\n              primaryButton: {\n                value: 'cancel',\n                action: () => {\n                  console.info('Callback when the first button is clicked')\n                }\n              },\n              secondaryButton: {\n                value: 'ok',\n                action: () => {\n                  console.info('Callback when the second button is clicked')\n                }\n              },\n            }\n          )\n        }).backgroundColor(0x317aff)\n      Button('AlertDialogButtonDirection')\n        .onClick(() => {\n          this.buttonDirectionType = DialogButtonDirection.VERTICAL\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\alert_dialog\\AlertDialogButtonDirectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "c9ac247975c0687ce623a2ac056608e72cae3974a55e28c10e7df0e91e8d5050"}
{"text": "import alertDialogConfirmTest from '../MyTest/AlertDialogConfirmTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct AlertDialogConfirmSample {\n  @State fontColor: ResourceColor = Color.Green\n  @State backGroundColor: ResourceColor = Color.Brown\n  @State style: DialogButtonStyle = DialogButtonStyle.HIGHLIGHT\n  @State value: ResourceStr = 'button1'\n  @State test: string = 'dialog1'\n  @State isTrue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(alertDialogConfirmTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text(this.test).id('alertDialogConfirm')\n      Button('AlertDialogConfirm1')\n        .onClick(() => {\n          this.fontColor = $r('app.color.alert_color1')\n          this.backGroundColor = $r('app.color.alert_color2')\n        })\n      Button('AlertDialogConfirm2')\n        .onClick(() => {\n          this.fontColor = '#1A94C2'\n          this.backGroundColor = '#C025BE'\n        })\n      Button('AlertDialogConfirm3')\n        .onClick(() => {\n          this.style = DialogButtonStyle.DEFAULT\n          this.fontColor = 0xff8207\n          this.backGroundColor = 0xff1234\n          this.value = $r('app.string.alert_string')\n          this.isTrue = !this.isTrue\n        })\n      Button('AlertDialog')\n        .onClick(() => {\n          AlertDialog.show(\n            {\n              title: 'title',\n              message: 'AlertDialogConfirm',\n              confirm: {\n                enabled: this.isTrue,\n                defaultFocus: !this.isTrue,\n                style: this.style,\n                value: this.value,\n                fontColor: this.fontColor,\n                backgroundColor: this.backGroundColor,\n                action: () => {\n                  this.test = 'dialogOne'\n                }\n              },\n            }\n          )\n        })\n        .backgroundColor(0x317aff)\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\alert_dialog\\AlertDialogConfirmSample.ets", "project_name": "arkui_ace_engine-master", "id": "f8e8680d548dc246351147bf91fe5ed3be0fb19a98e889b36f5b66c5553ee8fa"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct AlertDialogHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('AlertDialogHome')\n          .padding('10vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({\n          buttonName: 'AlertDialogPrimaryButton',\n          buttonUrl: 'pages/alert_dialog/AlertDialogPrimaryButtonSample'\n        });\n        CommonButton({\n          buttonName: 'AlertDialogSecondaryButton',\n          buttonUrl: 'pages/alert_dialog/AlertDialogSecondaryButtonSample'\n        });\n        CommonButton({ buttonName: 'AlertDialogConfirm', buttonUrl: 'pages/alert_dialog/AlertDialogConfirmSample' });\n        CommonButton({ buttonName: 'AlertDialogButtons', buttonUrl: 'pages/alert_dialog/AlertDialogButtonsSample' });\n        CommonButton({\n          buttonName: 'AlertDialogButtonsDirection',\n          buttonUrl: 'pages/alert_dialog/AlertDialogButtonDirectionSample'\n        });\n        CommonButton({\n          buttonName: 'AlertDialogAlertDialogParam',\n          buttonUrl: 'pages/alert_dialog/AlertDialogAlertDialogParamSample'\n        });\n      }\n      .padding('10vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\alert_dialog\\AlertDialogHome.ets", "project_name": "arkui_ace_engine-master", "id": "b91c6156b9d3aa08c374bf6773246506dce2ac4bedbabc7d770c4dafffa3c5cd"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport calendarPickerDialogBackgroundBlurStyleTest from '../MyTest/CalendarPickerDialogBackgroundBlurStyleTest'\n\n@Entry\n@Component\nstruct CalendarPickerDialogBackgroundBlurStyleSample {\n  private selectedDate: Date = new Date()\n  @State blurStyleType: BlurStyle[] = [BlurStyle.Thin, BlurStyle.Regular, BlurStyle.Thick, BlurStyle.BACKGROUND_THIN,\n    BlurStyle.BACKGROUND_REGULAR, BlurStyle.BACKGROUND_THICK, BlurStyle.BACKGROUND_ULTRA_THICK, BlurStyle.NONE,\n    BlurStyle.COMPONENT_ULTRA_THIN, BlurStyle.COMPONENT_THIN, BlurStyle.COMPONENT_REGULAR, BlurStyle.COMPONENT_THICK,\n    BlurStyle.COMPONENT_ULTRA_THICK]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(calendarPickerDialogBackgroundBlurStyleTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"Show CalendarPicker Dialog\")\n        .margin(20)\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\")\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            backgroundBlurStyle: this.blurStyleType[this.index]\n          })\n        })\n      Button(\"CalendarPickerDialogBackgroundBlurStyle\")\n        .onClick(() => {\n          this.index++\n          this.index %= 13\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\calendar_picker_dialog\\CalendarPickerDialogBackgroundBlurStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "3a32765eee04a35c6a49b9a490bcbb576755b051b0cfba1de657f410ad195f23"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport calendarPickerDialogBackgroundColorTest from '../MyTest/CalendarPickerDialogBackgroundColorTest'\n\n@Entry\n@Component\nstruct CalendarPickerDialogBackgroundColorSample {\n  private selectedDate: Date = new Date()\n  @State colorType: ResourceColor[] =\n    [Color.Pink, 0xffff0000, 'rgb(233, 100, 201)', $r('sys.color.ohos_id_color_text_hyperlink')]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(calendarPickerDialogBackgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"Show CalendarPicker Dialog\")\n        .margin(20)\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\")\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            backgroundColor: this.colorType[this.index]\n          })\n        })\n      Button(\"CalendarPickerDialogBackgroundColor1\")\n        .onClick(() => {\n          this.index++\n          this.index %= 4\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\calendar_picker_dialog\\CalendarPickerDialogBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "04590e06cf3bf64e2564126368981df7f1fb3dc32896d2786cbecb7fa4340e2e"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct CalendarPickerDialogHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('CalendarPickerDialogHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'CalendarPickerDialogOnAccept',\n          buttonUrl: 'pages/calendar_picker_dialog/CalendarPickerDialogOnAcceptSample'\n        });\n        CommonButton({\n          buttonName: 'CalendarPickerDialogOnCancel',\n          buttonUrl: 'pages/calendar_picker_dialog/CalendarPickerDialogOnCancelSample'\n        });\n        CommonButton({\n          buttonName: 'CalendarPickerDialogOnChange',\n          buttonUrl: 'pages/calendar_picker_dialog/CalendarPickerDialogOnChangeSample'\n        });\n        CommonButton({\n          buttonName: 'CalendarPickerDialogBackgroundColor',\n          buttonUrl: 'pages/calendar_picker_dialog/CalendarPickerDialogBackgroundColorSample'\n        });\n        CommonButton({\n          buttonName: 'CalendarPickerDialogBackgroundBlurStyle',\n          buttonUrl: 'pages/calendar_picker_dialog/CalendarPickerDialogBackgroundBlurStyleSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\calendar_picker_dialog\\CalendarPickerDialogHome.ets", "project_name": "arkui_ace_engine-master", "id": "038a71417bcc1b33f981188abf6f49020631a30971505aaa021eb3142f4446dc"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport calendarPickerDialogOnAcceptTest from '../MyTest/CalendarPickerDialogOnAcceptTest'\n\n@Entry\n@Component\nstruct CalendarPickerDialogOnAcceptSample {\n  private selectedDate: Date = new Date()\n  @State buttonType: string = 'calendar'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(calendarPickerDialogOnAcceptTest)\n  }\n\n  build() {\n    Column() {\n      Button(this.buttonType)\n        .margin(20)\n        .id('changeButton')\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\")\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            onAccept: () => {\n              this.buttonType = 'calendar onAccept'\n            }\n          })\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\calendar_picker_dialog\\CalendarPickerDialogOnAcceptSample.ets", "project_name": "arkui_ace_engine-master", "id": "d9f1dcf861ba11b6b740c69355b8960ac0f1c6574809841623d6e55fa87bc7f8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport calendarPickerDialogOnCancelTest from '../MyTest/CalendarPickerDialogOnCancelTest'\n\n@Entry\n@Component\nstruct CalendarPickerDialogOnCancelSample {\n  private selectedDate: Date = new Date()\n  @State buttonType: string = 'calendar'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(calendarPickerDialogOnCancelTest)\n  }\n\n  build() {\n    Column() {\n      Button(this.buttonType)\n        .margin(20)\n        .id('changeButton')\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\")\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            onCancel: () => {\n              this.buttonType = 'calendar onCancel'\n            }\n          })\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\calendar_picker_dialog\\CalendarPickerDialogOnCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "7e0e7406d452beeb5f8c6fce06a496f6b2fea76192ece4abba3d8830c0cb8325"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport calendarPickerDialogOnChangeTest from '../MyTest/CalendarPickerDialogOnChangeTest'\n\n@Entry\n@Component\nstruct CalendarPickerDialogOnChangeSample {\n  private selectedDate: Date = new Date()\n  @State buttonType: string = 'calendar'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(calendarPickerDialogOnChangeTest)\n  }\n\n  build() {\n    Column() {\n      Button(this.buttonType)\n        .margin(20)\n        .id('changeButton')\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\")\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            onChange: () => {\n              this.buttonType = 'calendar onChange'\n            }\n          })\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\calendar_picker_dialog\\CalendarPickerDialogOnChangeSample.ets", "project_name": "arkui_ace_engine-master", "id": "29875e9cb13051fdc9949b164a18381e76e3dae59b7c762ea0485c132d81af47"}
{"text": "import customDialogAutoCancelTest from '../MyTest/CustomDialogAutoCancelTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogAutoCancelExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogAutoCancelExample(),\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogAutoCancel')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n      Button('CustomDialogAutoCancelClose')\n        .onClick(() => {\n          if (this.controller != undefined) {\n            this.controller.close()\n          }\n        })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogAutoCancelSample {\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogAutoCancelExample(),\n    autoCancel: true\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogAutoCancelTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogAutoCancelOpen')\n        .onClick(() => {\n          this.dialogController.open()\n        })\n      Button('CustomDialogAutoCancel')\n        .onClick(() => {\n          this.dialogController = new CustomDialogController({\n            builder: CustomDialogAutoCancelExample(),\n            autoCancel: false\n          })\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogAutoCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "44cb3ff836972096cd8990780eb7a5c2028cdbf52f71d8b68af3c8ccf682ffab"}
{"text": "import customDialogBackgroundColorTest from '../MyTest/CustomDialogBackgroundColorTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogBackgroundColorExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogBackgroundColorExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogBackgroundColor')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }.backgroundColor(Color.Pink)\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogBackgroundColorSample {\n  @State index: number = 0\n  dialogController: CustomDialogController[] = [new CustomDialogController({\n    builder: CustomDialogBackgroundColorExample(), backgroundColor: Color.Green\n  }),\n    new CustomDialogController({ builder: CustomDialogBackgroundColorExample(), backgroundColor: 0xffa500 }),\n    new CustomDialogController({ builder: CustomDialogBackgroundColorExample(), backgroundColor: '#ffc0cb' }),\n    new CustomDialogController({\n      builder: CustomDialogBackgroundColorExample(),\n      backgroundColor: $r('sys.color.ohos_id_color_text_hyperlink')\n    })]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogBackgroundColorTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogBackgroundColorOpen')\n        .onClick(() => {\n          this.dialogController[this.index].open()\n          this.index += 1\n          this.index %= 4\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "0c01f3fc6af0a65c9ae070e97b57a698066c3f1212aeb99b4032ea04f5ba9911"}
{"text": "import customDialogBuilderTest from '../MyTest/CustomDialogBuilderTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogBuilderExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogBuilderExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogBuilder')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogBuilderSample {\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogBuilderExample()\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogBuilderTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogBuilderOpen')\n        .onClick(() => {\n          this.dialogController.open()\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogBuilderSample.ets", "project_name": "arkui_ace_engine-master", "id": "7579f5476db63ae16a8baeaf89ca64fcabd3eb84d816818f5e26712380e3a753"}
{"text": "import customDialogCancelTest from '../MyTest/CustomDialogCancelTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogCancelExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogCancelExample(),\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogCancel')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogCancel {\n  @State CustomDialogInfo: string = 'CustomDialogCancel'\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogCancelExample(),\n    cancel: () => {\n      this.CustomDialogInfo = 'CustomDialogCancel is ok'\n    }\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogCancelTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogCancelOpen')\n        .onClick(() => {\n          this.dialogController.open()\n        })\n      Text(this.CustomDialogInfo)\n        .id('CustomDialogCancel')\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "8f65334e56183e29f685dea2aad06f58a29643a65fa15ac36d0e7654f1727ed1"}
{"text": "import customDialogCloseAnimationTest from '../MyTest/CustomDialogCloseAnimationTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\nimport Curves from '@ohos.curves'\n\nlet curve = Curves.cubicBezierCurve(0.25, 0.1, 0.25, 1.0);\n\n@CustomDialog\nstruct CustomDialogCloseAnimationExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogCloseAnimationExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogCloseAnimation')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }.borderRadius(10)\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogCloseAnimationSample {\n  @State CustomDialogCloseAnimationOnFish: string = ''\n  @State index: number = 0\n  dialogController: CustomDialogController[] = [new CustomDialogController({\n    builder: CustomDialogCloseAnimationExample(),\n    closeAnimation: {\n      duration: 500,\n      tempo: 0.5,\n      curve: Curve.ExtremeDeceleration,\n      delay: 1000,\n      iterations: 2,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        this.CustomDialogCloseAnimationOnFish = 'OnFish is ok'\n      },\n      finishCallbackType: FinishCallbackType.REMOVED,\n      expectedFrameRateRange: { min: 10, max: 120, expected: 60 }\n    }\n  }),\n    new CustomDialogController({\n      builder: CustomDialogCloseAnimationExample(), closeAnimation: {\n        tempo: -1,\n        curve: curve.interpolate(0.5),\n        playMode: PlayMode.Reverse,\n        onFinish: () => {\n          this.CustomDialogCloseAnimationOnFish = 'OnFish is okk'\n        },\n        finishCallbackType: FinishCallbackType.LOGICALLY\n      }\n    }),\n    new CustomDialogController({\n      builder: CustomDialogCloseAnimationExample(),\n      closeAnimation: { curve: \"fast-out-slow-in\", playMode: PlayMode.Alternate }\n    }),\n    new CustomDialogController({\n      builder: CustomDialogCloseAnimationExample(),\n      closeAnimation: { playMode: PlayMode.AlternateReverse }\n    })]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogCloseAnimationTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogCloseAnimationOpen')\n        .onClick(() => {\n          this.dialogController[this.index].open()\n          this.index += 1\n          this.index %= 4\n        })\n      Text(this.CustomDialogCloseAnimationOnFish)\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogCloseAnimationSample.ets", "project_name": "arkui_ace_engine-master", "id": "24eae42b742718a32f76d69d89e54948b3e2f5fd599042896152ea608a0c75aa"}
{"text": "import customDialogCustomStyleTest from '../MyTest/CustomDialogCustomStyleTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogCustomStyleExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogCustomStyleExample(),\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogCustomStyle')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogCustomStyleSample {\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogCustomStyleExample(),\n    customStyle: false\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogCustomStyleTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogCustomStyleOpen')\n        .onClick(() => {\n          this.dialogController.open()\n        })\n      Button('CustomDialogCustomStyle')\n        .onClick(() => {\n          this.dialogController = new CustomDialogController({\n            builder: CustomDialogCustomStyleExample(),\n            customStyle: true\n          })\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogCustomStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "1ae35ffde9c923a3d20b94cfd1d9fa480777bd44d5fb4a36bc5fc4a13e5fb8ee"}
{"text": "import customDialogGridCountTest from '../MyTest/CustomDialogGridCountTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogGridCountExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogGridCountExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogGridCount')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogGridCountSample {\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogGridCountExample(),\n    gridCount: 3\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogGridCountTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogGridCountOpen')\n        .onClick(() => {\n          this.dialogController.open()\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogGridCountSample.ets", "project_name": "arkui_ace_engine-master", "id": "6c4586889a67e015f06da901361426998c9483245c838aa3311f900411c301a8"}
{"text": "import customDialogIsModalTest from '../MyTest/CustomDialogIsModalTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogIsModalExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogIsModalExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogIsModal')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogIsModalSample {\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogIsModalExample(), isModal: true\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogIsModalTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogIsModalOpen')\n        .onClick(() => {\n          this.dialogController.open()\n          this.dialogController = new CustomDialogController({ builder: CustomDialogIsModalExample(), isModal: false })\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogIsModalSample.ets", "project_name": "arkui_ace_engine-master", "id": "dca2190c2f6ca5b28abd805e8ee82e32d740dadce58a2343f0a87312f3d94e43"}
{"text": "import customDialogMaskColorTest from '../MyTest/CustomDialogMaskColorTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogMaskColorExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogMaskColorExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogMaskColor')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogMaskColorSample {\n  @State index: number = 0\n  dialogController: CustomDialogController[] = [new CustomDialogController({\n    builder: CustomDialogMaskColorExample(),\n    maskColor: Color.Pink\n  }), new CustomDialogController({\n    builder: CustomDialogMaskColorExample(),\n    maskColor: 0xffa500\n  }), new CustomDialogController({\n    builder: CustomDialogMaskColorExample(),\n    maskColor: '#ffff00'\n  }), new CustomDialogController({\n    builder: CustomDialogMaskColorExample(),\n    maskColor: $r('sys.color.ohos_id_color_text_hyperlink')\n  })]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogMaskColorTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogMaskColorOpen')\n        .onClick(() => {\n          this.dialogController[this.index].open()\n          this.index += 1\n          this.index %= 4\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogMaskColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "2c57824bd26c6b30a0053809a844272fc1ec128d88458f8082b5efc00f26b80b"}
{"text": "import customDialogMaskRectTest from '../MyTest/CustomDialogMaskRectTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogMaskRectExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogMaskRectExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogMaskRect')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogMaskRectSample {\n  @State index: number = 0\n  dialogController: CustomDialogController[] = [new CustomDialogController({\n    builder: CustomDialogMaskRectExample(),\n    maskRect: {\n      x: 0,\n      y: 0,\n      width: 999,\n      height: 999\n    }\n  }), new CustomDialogController({\n    builder: CustomDialogMaskRectExample(),\n    maskRect: {\n      x: '0px',\n      y: '0px',\n      width: '80%',\n      height: '80%'\n    }\n  }), new CustomDialogController({\n    builder: CustomDialogMaskRectExample(),\n    maskRect: {\n      x: $r('app.string.custom_dialog_mask_rect_length'),\n      y: $r('app.string.custom_dialog_mask_rect_length'),\n      width: $r('app.string.custom_dialog_mask_rect_length'),\n      height: $r('app.string.custom_dialog_mask_rect_length')\n    }\n  }), new CustomDialogController({\n    builder: CustomDialogMaskRectExample(),\n    maskRect: {\n      x: '0px',\n      y: '0px',\n      width: '80%',\n      height: '80%'\n    }, showInSubWindow: true\n  })]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogMaskRectTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogMaskRectOpen')\n        .onClick(() => {\n          this.dialogController[this.index].open()\n          this.index += 1\n          this.index %= 4\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogMaskRectSample.ets", "project_name": "arkui_ace_engine-master", "id": "d0de8cdc6eaf80b719a57bca4e862a502537fd1fc22c209b83ad5623d0e18455"}
{"text": "import customDialogOffsetTest from '../MyTest/CustomDialogOffsetTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogOffsetExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogOffsetExample(),\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogOffset')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogOffsetSample {\n  @State index: number = 0\n  dialogController: CustomDialogController[] = [new CustomDialogController({\n    builder: CustomDialogOffsetExample(),\n    offset: { dx: 0, dy: -25 }\n  }), new CustomDialogController({\n    builder: CustomDialogOffsetExample(),\n    offset: { dx: '15px', dy: '15px' }\n  }), new CustomDialogController({\n    builder: CustomDialogOffsetExample(),\n    offset: { dx: $r('app.string.custom_dialog_length'), dy: $r('app.string.custom_dialog_length') }\n  })]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogOffsetTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogOffsetOpen')\n        .onClick(() => {\n          this.dialogController[this.index].open()\n          this.index += 1\n          this.index %= 3\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "8fc86eba5dfcc455da384a69e66dd9bb03f76d2ed5942b6ab3da0863d6e532f2"}
{"text": "import customDialogOpenAnimationTest from '../MyTest/CustomDialogOpenAnimationTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\nimport Curves from '@ohos.curves'\n\nlet curve = Curves.cubicBezierCurve(0.25, 0.1, 0.25, 1.0);\n\n@CustomDialog\nstruct CustomDialogOpenAnimationExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogOpenAnimationExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogOpenAnimation')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }.borderRadius(10)\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogOpenAnimationSample {\n  @State CustomDialogOpenAnimationOnFish: string = ''\n  @State index: number = 0\n  dialogController: CustomDialogController[] = [new CustomDialogController({\n    builder: CustomDialogOpenAnimationExample(),\n    openAnimation: {\n      duration: 500,\n      tempo: 0.5,\n      curve: Curve.ExtremeDeceleration,\n      delay: 1000,\n      iterations: 2,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        this.CustomDialogOpenAnimationOnFish = 'OnFish is ok'\n      },\n      finishCallbackType: FinishCallbackType.REMOVED,\n      expectedFrameRateRange: { min: 10, max: 120, expected: 60 }\n    }\n  }),\n    new CustomDialogController({\n      builder: CustomDialogOpenAnimationExample(), openAnimation: {\n        tempo: -1,\n        curve: curve.interpolate(0.5),\n        playMode: PlayMode.Reverse,\n        onFinish: () => {\n          this.CustomDialogOpenAnimationOnFish = 'OnFish is okk'\n        },\n        finishCallbackType: FinishCallbackType.LOGICALLY\n      }\n    }),\n    new CustomDialogController({\n      builder: CustomDialogOpenAnimationExample(),\n      openAnimation: { curve: \"fast-out-slow-in\", playMode: PlayMode.Alternate }\n    }),\n    new CustomDialogController({\n      builder: CustomDialogOpenAnimationExample(),\n      openAnimation: { playMode: PlayMode.AlternateReverse }\n    })]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogOpenAnimationTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogOpenAnimationOpen')\n        .onClick(() => {\n          this.dialogController[this.index].open()\n          this.index += 1\n          this.index %= 4\n        })\n      Text(this.CustomDialogOpenAnimationOnFish)\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogOpenAnimationSample.ets", "project_name": "arkui_ace_engine-master", "id": "d102e36581a09ca8a8fddacc31d1e67d486d1aeb8428132f48a54f78f16cce7e"}
{"text": "import customDialogShowInSubWindowTest from '../MyTest/CustomDialogShowInSubWindowTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@CustomDialog\nstruct CustomDialogShowInSubWindowExample {\n  controller: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogShowInSubWindowExample()\n  })\n\n  build() {\n    Column() {\n      Text('CustomDialogShowInSubWindow')\n        .fontSize(20)\n        .margin({ top: 10, bottom: 10 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct CustomDialogShowInSubWindowSample {\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: CustomDialogShowInSubWindowExample(),\n    showInSubWindow: false\n  })\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(customDialogShowInSubWindowTest);\n  }\n\n  build() {\n    Column() {\n      Button('CustomDialogShowInSubWindowOpen')\n        .onClick(() => {\n          this.dialogController.open()\n        })\n      Button('CustomDialogShowInSubWindow')\n        .onClick(() => {\n          this.dialogController =\n            new CustomDialogController({ builder: CustomDialogShowInSubWindowExample(), showInSubWindow: true })\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\custom_dialog\\CustomDialogShowInSubWindowSample.ets", "project_name": "arkui_ace_engine-master", "id": "5162c50ece8ea4cf374879ba99865e9f542d7b2b9259ec31b19ac5e74f20f649"}
{"text": "import datePickerDialogAlignmentTest from '../MyTest/DatePickerDialogAlignmentTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogAlignmentSample {\n  @State alignChange: DialogAlignment[] = [DialogAlignment.Top, DialogAlignment.Center, DialogAlignment.Bottom,\n    DialogAlignment.Default, DialogAlignment.TopStart, DialogAlignment.TopEnd, DialogAlignment.CenterStart,\n    DialogAlignment.CenterEnd, DialogAlignment.BottomStart, DialogAlignment.BottomEnd]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogAlignmentTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogAlignment1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          alignment: this.alignChange[this.index]\n        })\n      })\n\n      Button(\"DatePickerDialogAlignment2\").onClick(() => {\n        this.index++;\n        this.index %= 10;\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogAlignmentSample.ets", "project_name": "arkui_ace_engine-master", "id": "1effd2fd6b61de85efdce590c5e88e3f16eeee6ad5ce4c07b759a5b7e00b0e01"}
{"text": "import datePickerDialogBackgroundColorTest from '../MyTest/DatePickerDialogBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogBackgroundColorSample {\n  @State backgroundCol: ResourceColor[] =\n    [Color.Orange, 0xa52a2a, 'rgb(142, 255, 101)', $r('sys.color.ohos_fa_palette1')]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogBackgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogBackgroundColor1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          backgroundColor: this.backgroundCol[this.index]\n        })\n      })\n      Button(\"DatePickerDialogBackgroundColor2\").onClick(() => {\n        this.index++;\n        this.index %= 4;\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "c0db6ea7737e2fc4948bd48bccc9bab225e20b6ece5017710530803a69e6c47b"}
{"text": "import datePickerDialogLunarTest from '../MyTest/DatePickerDialogLunarTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogLunarSample {\n  @State lunarChange: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogLunarTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogLunar1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          lunar: this.lunarChange\n        })\n      })\n      Button(\"DatePickerDialogLunar2\").onClick(() => {\n        this.lunarChange = false\n      })\n    }.width('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogLunarSample.ets", "project_name": "arkui_ace_engine-master", "id": "0f978bc7fd64d58f06c77f4cadb9a20c49bd1d987e03ab4d381840ab8a516030"}
{"text": "import datePickerDialogLunarSwitchTest from '../MyTest/DatePickerDialogLunarSwitchTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogLunarSwitchSample {\n  @State lunarSwitchChange: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogLunarSwitchTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogLunarSwitch1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          lunar: true,\n          lunarSwitch: this.lunarSwitchChange\n        })\n      })\n      Button(\"DatePickerDialogLunarSwitch2\").onClick(() => {\n        this.lunarSwitchChange = false\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogLunarSwitchSample.ets", "project_name": "arkui_ace_engine-master", "id": "7a84a68e5b3f10a91ae761c1ecc336565c50e80deac60cef03fc74af946d9437"}
{"text": "import datePickerDialogMaskRectTest from '../MyTest/DatePickerDialogMaskRectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogMaskRectSample {\n  @State maskRectNum: number | Resource = 50\n  @State maskRectWid: number | Resource = 450\n  @State maskRectHei: number | Resource = 100\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogMaskRectTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogMaskRect1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          maskRect: {\n            x: '510px',\n            y: '510px',\n            width: '600px',\n            height: '600px'\n          }\n        })\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          maskRect: {\n            x: this.maskRectNum,\n            y: this.maskRectNum,\n            width: this.maskRectWid,\n            height: this.maskRectHei\n          }\n        })\n      })\n\n      Button(\"DatePickerDialogMaskRect2\").onClick(() => {\n        this.maskRectNum = $r('app.string.mask_rect');\n        this.maskRectWid = $r('app.string.mask_rect');\n        this.maskRectHei = $r('app.string.mask_rect');\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogMaskRectSample.ets", "project_name": "arkui_ace_engine-master", "id": "48afeff29064d628fca19e85dc76297b2113be6b77a5d2aea98cfa4c013036e6"}
{"text": "import datePickerDialogOffsetTest from '../MyTest/DatePickerDialogOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogOffsetSample {\n  @State offsetNum: number | Resource = 60\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogOffsetTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogOffset1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          offset: { dx: this.offsetNum, dy: this.offsetNum }\n        })\n      })\n      Button(\"DatePickerDialogOffset2\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          offset: { dx: '300px', dy: '100px' }\n        })\n      })\n\n      Button(\"DatePickerDialogOffset3\").onClick(() => {\n        this.offsetNum = $r('app.string.offset_num');\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "16aa164a8147381e0b5941dabc3d4f7d9bfb1332c587ecf060da36fe978c30be"}
{"text": "import datePickerDialogOnCancelTest from '../MyTest/DatePickerDialogOnCancelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogOnCancelSample {\n  @State fontChange: string = \"DatePickerDialogOnCancel\"\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogOnCancelTest)\n  }\n\n  build() {\n    Column() {\n      Button('DatePickerDialogOnCancel').onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          onCancel: () => {\n            this.fontChange = \"Hello\"\n          }\n        })\n      }).type(null).id('datePickerDialogOnCancel')\n      Text(this.fontChange).id('onCancel')\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogOnCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "0c5e9a63581798e6247c53a3c805069ef86d992c7932a14b2db3763c9e925aa1"}
{"text": "import datePickerDialogOnDateAcceptTest from '../MyTest/DatePickerDialogOnDateAcceptTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nexport struct DatePickerDialogOnDateAcceptSample {\n  @State dateAcceptFont: string = \"DatePickerDialogOnDateAccept\"\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogOnDateAcceptTest)\n  }\n\n  build() {\n    Column() {\n      Button(this.dateAcceptFont).onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          onDateAccept: (value: Date) => {\n            this.dateAcceptFont = \"Hello\"\n          }\n        })\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogOnDateAcceptSample.ets", "project_name": "arkui_ace_engine-master", "id": "717bd3078d7e1725c4571af92925149934420d240d896a4d427545cbe940a1ba"}
{"text": "import datePickerDialogOnDateChangeTest from '../MyTest/DatePickerDialogOnDateChangeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogOnDateChangeSample {\n  @State onDateChangeFont: string = \"DatePickerDialogOnDateChange\"\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogOnDateChangeTest)\n  }\n\n  build() {\n    Column() {\n      Button(this.onDateChangeFont).onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          onDateChange: (value: Date) => {\n            this.onDateChangeFont = \"Hello\"\n          }\n        })\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogOnDateChangeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d1a0b67b1be2009f91ba4a47437c621550e51e41865708b515caae2412a899b4"}
{"text": "import datePickerDialogShowTimeTest from '../MyTest/DatePickerDialogShowTimeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogShowTimeSample {\n  @State showTimeChange: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogShowTimeTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogShowTime1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          showTime: this.showTimeChange\n        })\n      })\n      Button(\"DatePickerDialogShowTime2\").onClick(() => {\n        this.showTimeChange = true\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogShowTimeSample.ets", "project_name": "arkui_ace_engine-master", "id": "a2d25f6bca1687bffe1150ec9d0e1f920a7dcbfcd086c5f4a0ac9652109e32e7"}
{"text": "import datePickerDialogUseMilitaryTimeTest from '../MyTest/DatePickerDialogUseMilitaryTimeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct DatePickerDialogUseMilitaryTimeSample {\n  @State useMilitaryTimeChange: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(datePickerDialogUseMilitaryTimeTest)\n  }\n\n  build() {\n    Column() {\n      Button(\"DatePickerDialogUseMilitaryTime1\").onClick(() => {\n        DatePickerDialog.show({\n          start: new Date(\"2000-1-1\"),\n          end: new Date(\"2100-12-31\"),\n          useMilitaryTime: this.useMilitaryTimeChange\n        })\n      })\n      Button(\"DatePickerDialogUseMilitaryTime2\").onClick(() => {\n        this.useMilitaryTimeChange = false\n      })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\date_picker_dialog\\DatePickerDialogUseMilitaryTimeSample.ets", "project_name": "arkui_ace_engine-master", "id": "acc180fbb2b195a1bc993d9dda7d1bab9dfb676fda88baa327a313e83268d40b"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function actionSheetAutoCancelTest() {\n  \n  defineTest('actionSheetAutoCancelTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('actionSheetAutoCancelTestDemo running')\n    let driver: Tester = Tester.create()\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('ActionSheetAutoCancelTest1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ActionSheetAutoCancel1').enabled(true))\n\n    await button.tap()\n    let actionSheetAutoCancel1: Component =\n      await driver.findComponent(Matcher.create().type('ActionSheet').enabled(true))\n    let autoCancel1: string = await actionSheetAutoCancel1.getInspectorInfo()\n    assertTrue(JSON.parse(autoCancel1).$attrs.autoCancel)\n    await driver.tap(1, 1)\n\n    await button1.tap()\n    await button.tap()\n    let actionSheetAutoCancel2: Component =\n      await driver.findComponent(Matcher.create().type('ActionSheet').enabled(true))\n    let autoCancel2: string = await actionSheetAutoCancel2.getInspectorInfo()\n    assertFalse(JSON.parse(autoCancel2).$attrs.autoCancel)\n    await driver.tap(1, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\ActionSheetAutoCancelText.ets", "project_name": "arkui_ace_engine-master", "id": "ab24b5c69e552194b3e78f4599ca025cb0e76a6b77c12ca3da0bab818ca9b69f"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function actionSheetCancelTest() {\n  \n  defineTest('actionSheetCancelTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('actionSheetCancelTestDemo running')\n    let driver: Tester = Tester.create()\n    let button: Component = await driver.findComponent(Matcher.create().text('ActionSheetCancelTest1').enabled(true))\n    let text: Component = await driver.findComponent(Matcher.create().text('actionText').enabled(true))\n\n    await button.tap()\n    await driver.tap(1, 1)\n    let text1: string = await text.getText()\n    assertEqual(text1, 'actionSheet_canceled1')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\ActionSheetCancelTest.ets", "project_name": "arkui_ace_engine-master", "id": "9d76452e332cf020f11517537ac7f88fbc84cf6c66740f18599a14e9cdc02623"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function actionSheetMessageTest() {\n  \n  defineTest('actionSheetMessageTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('actionSheetMessageTestDemo running')\n    let driver: Tester = Tester.create()\n    let button1: Component = await driver.findComponent(Matcher.create().text('ActionSheetMessageTest1').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ActionSheetMessage1').enabled(true))\n    await button1.tap()\n    let actionSheetMessage1: Component = await driver.findComponent(Matcher.create().type('ActionSheet').enabled(true))\n    let message1: string = await actionSheetMessage1.getInspectorInfo()\n    assertEqual(JSON.parse(message1).$attrs.message, 'message1')\n    await driver.tap(1, 1)\n    await button.tap()\n    await button1.tap()\n    let actionSheetMessage2: Component = await driver.findComponent(Matcher.create().type('ActionSheet').enabled(true))\n    let message2: string = await actionSheetMessage2.getInspectorInfo()\n    assertEqual(JSON.parse(message2).$attrs.message, $r('app.string.actionSheet_message'))\n    await driver.tap(1, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\ActionSheetMessageTest.ets", "project_name": "arkui_ace_engine-master", "id": "5262a9c5b279d76e4fb7ecfec602859c87b339faa58ab8ce61597748889edccf"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function actionSheetShowInSubWindowTest() {\n  \n  defineTest('actionSheetShowInSubWindowTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('actionSheetShowInSubWindowTestDemo running')\n    let driver: Tester = Tester.create()\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('ActionSheetShowInSubWindowTest1').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('ActionSheetShowInSubWindow1').enabled(true))\n    await button1.tap()\n    let actionSheetShowInSubWindow1: Component =\n      await driver.findComponent(Matcher.create().type('ActionSheet').enabled(true))\n    let showInSubWindow1: string = await actionSheetShowInSubWindow1.getInspectorInfo()\n    assertTrue(JSON.parse(showInSubWindow1).$attrs.showInSubWindow)\n    await driver.tap(1, 1)\n    await button.tap()\n    await button1.tap()\n    let actionSheetShowInSubWindow2: Component =\n      await driver.findComponent(Matcher.create().type('ActionSheet').enabled(true))\n    let showInSubWindow2: string = await actionSheetShowInSubWindow2.getInspectorInfo()\n    assertFalse(JSON.parse(showInSubWindow2).$attrs.showInSubWindow)\n    await driver.tap(1, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\ActionSheetShowInSubWindowTest.ets", "project_name": "arkui_ace_engine-master", "id": "42c3e822e9eb1e9c2a731e393889b01fffc0dec43bc71b6ae2f93ae199443017"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function customDialogAutoCancelTest() {\n  \n  defineTest('customDialogAutoCancelTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('customDialogAutoCancelTestDemo running')\n    let driver: Tester = Tester.create()\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('CustomDialogAutoCancelOpen').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('CustomDialogAutoCancel').enabled(true))\n\n    await button1.tap()\n    let customDialog1: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let autoCancel1: string = await customDialog1.getInspectorInfo()\n    assertTrue(JSON.parse(autoCancel1).$attrs.autoCancel)\n    await driver.tap(100, 100)\n\n    await button2.tap()\n    await button1.tap()\n    let customDialog2: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let button3: Component =\n      await driver.findComponent(Matcher.create().text('CustomDialogAutoCancelClose').enabled(true))\n    let autoCancel2: string = await customDialog2.getInspectorInfo()\n    assertFalse(JSON.parse(autoCancel2).$attrs.autoCancel)\n    await button3.tap()\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\CustomDialogAutoCancelTest.ets", "project_name": "arkui_ace_engine-master", "id": "fdeb90e2287384d141d6d497ac9e7c0543e4dcb708641931327dd65204ee4ec5"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function customDialogBuilderTest() {\n  \n  defineTest('customDialogBuilderTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('customDialogBuilderTestDemo running')\n    let driver: Tester = Tester.create()\n    let button: Component = await driver.findComponent(Matcher.create().text('CustomDialogBuilderOpen').enabled(true))\n\n    await button.tap()\n    let text: Component = await driver.findComponent(Matcher.create().text('CustomDialogBuilder').enabled(true))\n    let content: string = await text.getInspectorInfo()\n    assertEqual(JSON.parse(content).$attrs.content, 'CustomDialogBuilder')\n    await driver.tap(100, 100)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\CustomDialogBuilderTest.ets", "project_name": "arkui_ace_engine-master", "id": "4154fc97b4c5b509eb6f9b47e4bb178007bb7e8e2622a429d8434fa26521cbd4"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function customDialogCancelTest() {\n  \n  defineTest('customDialogCancelTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('customDialogCancelTestDemo running')\n    let driver: Tester = Tester.create()\n    let text: Component = await driver.findComponent(Matcher.create().id('CustomDialogCancel').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('CustomDialogCancelOpen').enabled(true))\n\n    await button.tap()\n    await driver.tap(100, 100)\n    let content: string = await text.getInspectorInfo()\n    assertEqual(JSON.parse(content).$attrs.content, 'CustomDialogCancel is ok')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\CustomDialogCancelTest.ets", "project_name": "arkui_ace_engine-master", "id": "9d256fb353b8273523d1be30b271f1d48868e88d89f069158baf3d96607dfc4d"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\nexport default async function customDialogCustomStyleTest() {\n  defineTest('customDialogCustomStyleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('customDialogCustomStyleTestDemo running')\n    let driver: Tester = Tester.create()\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('CustomDialogCustomStyleOpen').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('CustomDialogCustomStyle').enabled(true))\n\n    await button1.tap()\n    let customDialog1: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let customStyle1: string = await customDialog1.getInspectorInfo()\n    assertFalse(JSON.parse(customStyle1).$attrs.customStyle)\n    await driver.tap(100, 100)\n\n    await button2.tap()\n    await button1.tap()\n    let customDialog2: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let customStyle2: string = await customDialog2.getInspectorInfo()\n    assertTrue(JSON.parse(customStyle2).$attrs.customStyle)\n    await driver.tap(100, 100)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\CustomDialogCustomStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "9351e419bd2319d23130f4e387ed0fe9e1e4e625c03a70833493c76c0702a456"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\n\nexport default async function customDialogIsModalTest() {\n  defineTest('customDialogIsModalTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('customDialogIsModalTestDemo running')\n    let driver: Tester = Tester.create()\n    let button1: Component = await driver.findComponent(Matcher.create().text('CustomDialogIsModalOpen').enabled(true))\n\n    await button1.tap()\n    let customDialog1: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let isModal1: string = await customDialog1.getInspectorInfo()\n    assertTrue(JSON.parse(isModal1).$attrs.isModal)\n    await driver.tap(100, 100)\n\n    await button1.tap()\n    let customDialog2: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let isModal2: string = await customDialog2.getInspectorInfo()\n    assertFalse(JSON.parse(isModal2).$attrs.isModal)\n    await driver.tap(100, 100)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\CustomDialogIsModalTest.ets", "project_name": "arkui_ace_engine-master", "id": "93d3fe7aedb7dc114cdebdabd09acd94b9d3d2df335d34fe946a4ac2f550b2b6"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function datePickerDialogShowTimeTest() {\n  \n\n  defineTest('datePickerDialogShowTimeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('datePickerDialogShowTimeTestDemo running')\n    let driver: Tester = Tester.create()\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('DatePickerDialogShowTime1').enabled(true))\n    let button2: Component =\n      await driver.findComponent(Matcher.create().text('DatePickerDialogShowTime2').enabled(true))\n    await button1.tap()\n    let datePickerDialogShowTime1: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let showTime1: string = await datePickerDialogShowTime1.getInspectorInfo()\n    assertFalse(JSON.parse(showTime1).$attrs.showTime == undefined)\n    assertFalse(JSON.parse(showTime1).$attrs.showTime)\n    await driver.tap(1, 1)\n\n    await button2.tap()\n    await button1.tap()\n    let datePickerDialogShowTime2: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let showTime2: string = await datePickerDialogShowTime2.getInspectorInfo()\n    assertTrue(JSON.parse(showTime2).$attrs.showTime)\n    await driver.tap(1, 1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\DatePickerDialogShowTimeTest.ets", "project_name": "arkui_ace_engine-master", "id": "485e8d1d9857c604357e44ac78d9adb543f7cf8f308a6051cc9a54e632f2349d"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function textPickerDialogCanLoopTest() {\n  \n  defineTest('TextPickerDialogCanLoopTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"TextPickerDialogCanLoopTestDemo running\")\n    let driver: Tester = Tester.create()\n\n    let button1: Component = await driver.findComponent(Matcher.create().text('TextPickerDialogCanLoop1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('TextPickerDialogCanLoop2').enabled(true))\n\n    await button1.tap()\n    let textCanLoop1: Component = await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let canLoop1: string = await textCanLoop1.getInspectorInfo()\n    assertFalse(JSON.parse(canLoop1).$attrs.canLoop == undefined)\n    assertTrue(JSON.parse(canLoop1).$attrs.canLoop)\n    await driver.tap(100, 100)\n\n    await button2.tap()\n    let textCanLoop2: Component = await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let canLoop2: string = await textCanLoop2.getInspectorInfo()\n    assertFalse(JSON.parse(canLoop2).$attrs.canLoop)\n    await driver.tap(100, 100)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\TextPickerDialogCanLoopTest.ets", "project_name": "arkui_ace_engine-master", "id": "7a130552a974741274edf7daaf7c9f40ad2cab49d067be5416beb0a89765dd6a"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function textPickerDialogDefaultPickerItemHeightTest() {\n  \n  defineTest('textPickerDialogDefaultPickerItemHeightTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textPickerDialogDefaultPickerItemHeightTestDemo running\")\n    let driver: Tester = Tester.create()\n\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('TextPickerDialogDefaultPickerItemHeight1').enabled(true))\n    let button2: Component =\n      await driver.findComponent(Matcher.create().text('TextPickerDialogDefaultPickerItemHeight2').enabled(true))\n\n    await button1.tap()\n    let textDefaultPickerItemHeight1: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let defaultPickerItemHeight1: string = await textDefaultPickerItemHeight1.getInspectorInfo()\n    assertFalse(JSON.parse(defaultPickerItemHeight1).$attrs.defaultPickerItemHeight == undefined)\n    assertEqual(JSON.parse(defaultPickerItemHeight1).$attrs.defaultPickerItemHeight, 50)\n    await driver.tap(100, 100)\n\n    await button2.tap()\n    let textDefaultPickerItemHeight2: Component =\n      await driver.findComponent(Matcher.create().type('Dialog').enabled(true))\n    let defaultPickerItemHeight2: string = await textDefaultPickerItemHeight2.getInspectorInfo()\n    assertEqual(JSON.parse(defaultPickerItemHeight2).$attrs.defaultPickerItemHeight, '20')\n    await driver.tap(100, 100)\n\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\TextPickerDialogDefaultPickerItemHeightTest.ets", "project_name": "arkui_ace_engine-master", "id": "ce64ce409c4c9d78901a84d107d075e587334e06fbcca6df07ffbf03285b0fb3"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function textPickerDialogOnChangeTest() {\n  \n  defineTest('textPickerDialogOnChangeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textPickerDialogOnChangeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let button: Component = await driver.findComponent(Matcher.create().text('TextPickerDialogOnChange').enabled(true))\n\n    await button.tap()\n    await driver.tap(550, 1227)\n    let text: Component = await driver.findComponent(Matcher.create().id('textPickerDialogOnChangeText').enabled(true))\n    let onChange: string = await text.getText()\n    assertEqual(onChange, 'TextPickerDialogOnChange')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\MyTest\\TextPickerDialogOnChangeTest.ets", "project_name": "arkui_ace_engine-master", "id": "d35dff849d1377a4d96c70b3bda08515e542b626e33fc50260f92544b1d7a420"}
{"text": "import textPickerDialogAlignmentTest from '../MyTest/TextPickerDialogAlignmentTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogAlignmentSample {\n  @State alignmentIndex: number = -1\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  private alignmentType: DialogAlignment[] =\n    [DialogAlignment.Top, DialogAlignment.Center, DialogAlignment.Bottom, DialogAlignment.Default,\n      DialogAlignment.TopStart,\n      DialogAlignment.TopEnd, DialogAlignment.CenterStart, DialogAlignment.CenterEnd, DialogAlignment.BottomStart,\n      DialogAlignment.BottomEnd]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogAlignmentTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogAlignment\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              alignment: this.alignmentType[this.alignmentIndex]\n            })\n          })\n        Button('ClickToggleAlignment')\n          .onClick(() => {\n            this.alignmentIndex++\n            this.alignmentIndex %= 10\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogAlignmentSample.ets", "project_name": "arkui_ace_engine-master", "id": "89c6c88819dfb22e983a147620f1dd9f4f051c49b744478dae97d534a46d0de7"}
{"text": "import textPickerDialogBackgroundBlurStyleTest from '../MyTest/TextPickerDialogBackgroundBlurStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogBackgroundBlurStyleSample {\n  @State textDialogBackgroundBlurStyleIndex: number = -1\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  private textDialogBackgroundBlurStyleType: BlurStyle[] =\n    [BlurStyle.Thin, BlurStyle.Regular, BlurStyle.Thick, BlurStyle.BACKGROUND_THIN, BlurStyle.BACKGROUND_REGULAR,\n      BlurStyle.BACKGROUND_THICK, BlurStyle.BACKGROUND_ULTRA_THICK, BlurStyle.NONE, BlurStyle.COMPONENT_ULTRA_THIN,\n      BlurStyle.COMPONENT_THIN, BlurStyle.COMPONENT_REGULAR,\n      BlurStyle.COMPONENT_THICK, BlurStyle.COMPONENT_ULTRA_THICK]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogBackgroundBlurStyleTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogBackgroundBlurStyle\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              backgroundBlurStyle: this.textDialogBackgroundBlurStyleType[this.textDialogBackgroundBlurStyleIndex]\n            })\n          })\n        Button('ClickToggleBackgroundBlueStyle')\n          .onClick(() => {\n            this.textDialogBackgroundBlurStyleIndex++\n            this.textDialogBackgroundBlurStyleIndex %= 13\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogBackgroundBlurStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "e110a141d8312e7fe8e60380dd0b996e84883b55b567c3669a547ffeeb830b1d"}
{"text": "import textPickerDialogBackgroundColorTest from '../MyTest/TextPickerDialogBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogBackgroundColorSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogBackgroundColorTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogBackgroundColor1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              backgroundColor: Color.Green\n            })\n          })\n        Button(\"TextPickerDialogBackgroundColor2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              backgroundColor: 0x0000ff\n            })\n          })\n        Button(\"TextPickerDialogBackgroundColor3\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              backgroundColor: $r('app.color.color_red')\n            })\n          })\n        Button(\"TextPickerDialogBackgroundColor4\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              backgroundColor: '#ffff00'\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "e80873192aafadcd86689f6183add290a46e5bdb7f9ca65882ce89d0dfefcd27"}
{"text": "import textPickerDialogCanLoopTest from '../MyTest/TextPickerDialogCanLoopTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogCanLoopSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogCanLoopTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogCanLoop1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              canLoop: true\n            })\n          })\n        Button(\"TextPickerDialogCanLoop2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              canLoop: false\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogCanLoopSample.ets", "project_name": "arkui_ace_engine-master", "id": "7348c5cf8a57b79ce0d9d417757e1ab6099ee4c62d7596a0905148f828a7d7f4"}
{"text": "import textPickerDialogDefaultPickerItemHeightTest from '../MyTest/TextPickerDialogDefaultPickerItemHeightTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogDefaultPickerItemHeightSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogDefaultPickerItemHeightTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogDefaultPickerItemHeight1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              defaultPickerItemHeight: 50,\n              range: this.fruits,\n              selected: this.select\n            })\n          })\n        Button(\"TextPickerDialogDefaultPickerItemHeight2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              defaultPickerItemHeight: '20'\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogDefaultPickerItemHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "d252c46f182a97b17f6c7af233f875c4f597c20cb1c60611f89b5e114cf452d7"}
{"text": "import textPickerDialogDisappearTextStyleTest from '../MyTest/TextPickerDialogDisappearTextStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogDisappearTextStyleSample {\n  @State index: number = -1\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  private fontWeightType: FontWeight[] =\n    [FontWeight.Lighter, FontWeight.Normal, FontWeight.Regular, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogDisappearTextStyleTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogDisappearTextStyle1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              disappearTextStyle: { color: Color.Red, font: { size: 30, weight: 100 } }\n            })\n          })\n        Button(\"TextPickerDialogDisappearTextStyle2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              disappearTextStyle: { color: 0x0000ff, font: { size: '30', weight: this.fontWeightType[this.index] } }\n            })\n          })\n        Button(\"TextPickerDialogDisappearTextStyle3\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              disappearTextStyle: {\n                color: $r('app.color.color_red'),\n                font: { size: $r('app.integer.font_size'), weight: '800' }\n              }\n            })\n          })\n        Button('ClickToggleWeight')\n          .onClick(() => {\n            this.index++\n            this.index %= 6\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogDisappearTextStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "ac12a7ade043c241834e716a162b9879b2cad6bbcd9bf59b91602bbc2184f35c"}
{"text": "import textPickerDialogMaskRectTest from '../MyTest/TextPickerDialogMaskRectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogMaskRectSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogMaskRectTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogMaskRect1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              maskRect: {\n                x: 0,\n                y: 0,\n                width: 2560,\n                height: 1600\n              }\n            })\n          })\n        Button(\"TextPickerDialogMaskRect2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              maskRect: {\n                x: '100',\n                y: '100',\n                width: '800',\n                height: '500'\n              }\n            })\n          })\n        Button(\"TextPickerDialogMaskRect3\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              maskRect: {\n                x: $r('app.integer.textPickerDialog_maskRect_x'),\n                y: $r('app.integer.textPickerDialog_maskRect_y'),\n                width: $r('app.integer.textPickerDialog_maskRect_width'),\n                height: $r('app.integer.textPickerDialog_maskRect_height')\n              }\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogMaskRectSample.ets", "project_name": "arkui_ace_engine-master", "id": "d4b0c701643bfdccfcb9627be1414b500b9af1b4398388c99176dc388c57f365"}
{"text": "import textPickerDialogOffsetTest from '../MyTest/TextPickerDialogOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogOffsetSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogOffsetTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogOffset1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              offset: { dx: 50, dy: 0 }\n            })\n          })\n        Button(\"TextPickerDialogOffset2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              offset: { dx: '0', dy: '50' }\n            })\n          })\n        Button(\"TextPickerDialogOffset3\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              offset: { dx: $r('app.integer.offset_size'), dy: $r('app.integer.offset_size') }\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "fdb7a0b752e631e893b0dae80dbf70843118241bdfbbd3ca943f05493222754c"}
{"text": "import textPickerDialogOnAcceptTest from '../MyTest/TextPickerDialogOnAcceptTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogOnAcceptSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  @State textPickerDialogOnAcceptText: string = 'show'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogOnAcceptTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogOnAccept\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              onAccept: (text: TextPickerResult) => {\n                this.select = text.index\n                this.textPickerDialogOnAcceptText = 'apple1'\n              }\n            })\n          })\n        Text(this.textPickerDialogOnAcceptText).id('textPickerDialogOnAccept')\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogOnAcceptSample.ets", "project_name": "arkui_ace_engine-master", "id": "db6673b5682a40ca33ae31c089004004fb8380fb16d950ec94507846c723a86b"}
{"text": "import textPickerDialogOnCancelTest from '../MyTest/TextPickerDialogOnCancelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogOnCancelSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  @State textPickerDialogOnCancelText: string = 'show'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogOnCancelTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogOnCancel\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              onCancel: () => {\n                this.textPickerDialogOnCancelText = 'TextPickerDialogOnCancel'\n              }\n            })\n          })\n        Text(this.textPickerDialogOnCancelText).id('textPickerDialogOnCancelText')\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogOnCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "80a6361041ddbec440aee5f0312fe71b25930cb909f69dde59dc5359e98da473"}
{"text": "import textPickerDialogOnChangeTest from '../MyTest/TextPickerDialogOnChangeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogOnChangeSample {\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  @State textPickerDialogOnChangeText: string = 'show'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogOnChangeTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogOnChange\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              onChange: () => {\n                this.textPickerDialogOnChangeText = 'TextPickerDialogOnChange'\n              }\n            })\n          })\n        Text(this.textPickerDialogOnChangeText).id('textPickerDialogOnChangeText')\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogOnChangeSample.ets", "project_name": "arkui_ace_engine-master", "id": "fb75c122fe59c27587a62c53c0c1fc717cabfa43ee89b3438709a6289792986b"}
{"text": "import textPickerDialogTextStyleTest from '../MyTest/TextPickerDialogTextStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TextPickerDialogTextStyleSample {\n  @State index: number = -1\n  private select: number | number[] = 0\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5']\n  private fontWeightType: FontWeight[] =\n    [FontWeight.Lighter, FontWeight.Normal, FontWeight.Regular, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textPickerDialogTextStyleTest)\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button(\"TextPickerDialogTextStyle1\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              textStyle: { color: Color.Red, font: { size: 30, weight: 100 } }\n            })\n          })\n        Button(\"TextPickerDialogTextStyle2\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              textStyle: { color: 0x0000ff, font: { size: '30', weight: this.fontWeightType[this.index] } }\n            })\n          })\n        Button(\"TextPickerDialogTextStyle3\")\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              textStyle: {\n                color: $r('app.color.color_red'),\n                font: { size: $r('app.integer.font_size'), weight: '800' }\n              }\n            })\n          })\n        Button('ClickToggleWeight')\n          .onClick(() => {\n            this.index++\n            this.index %= 6\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\text_picker_dialog\\TextPickerDialogTextStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "a7f39faf77ffc772cf5abe711abf1b34a4e071f75faede2899c5ad42cabd4c46"}
{"text": "import timePickerDialogAlignmentTest from '../MyTest/TimePickerDialogAlignmentTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogAlignmentSample {\n  @State anyDialogAlignment: DialogAlignment[] = [DialogAlignment.Top,\n    DialogAlignment.Center, DialogAlignment.Bottom, DialogAlignment.Default,\n    DialogAlignment.TopStart, DialogAlignment.TopEnd, DialogAlignment.CenterStart,\n    DialogAlignment.CenterEnd, DialogAlignment.BottomStart, DialogAlignment.BottomEnd]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogAlignmentTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogAlignment').onClick(() => {\n        TimePickerDialog.show({\n          selected: new Date('2020-01-01T09:00:00'),\n          alignment: this.anyDialogAlignment[this.index]\n        })\n      })\n      Button('ClickToggleAlignment')\n        .onClick(() => {\n          this.index++\n          this.index %= 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogAlignmentSample.ets", "project_name": "arkui_ace_engine-master", "id": "e4425be4d2390dd9b3b85a86551903543b06b4aa439d2b9e5c9752363d3d4b30"}
{"text": "import timePickerDialogBackgroundColorTest from '../MyTest/TimePickerDialogBackgroundColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogBackgroundColorSample {\n  @State anyColor: ResourceColor[] =\n    [$r(\"app.color.time_picker_dialog\"), Color.Pink, 'rgba(255, 228, 91, 1.00)', 0x80FFAA]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogBackgroundColorTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogBackgroundColor').onClick(() => {\n        TimePickerDialog.show({ backgroundColor: this.anyColor[this.index] })\n      })\n      Button('ClickToggleBackgroundColor')\n        .onClick(() => {\n          this.index++\n          this.index %= 4\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "763ac73651f9328270585af2fbc62c4a1002429b1c8d8ceceefbb9d604f62af9"}
{"text": "import timePickerDialogDisappearTextStyleTest from '../MyTest/TimePickerDialogDisappearTextStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogDisappearTextStyleSample {\n  @State anyColor: ResourceColor = $r(\"app.color.time_picker_dialog\")\n  @State anyFontSize: Length = $r(\"app.string.timePickerDialog_value_one\")\n  @State anyFontWeight: (FontWeight | number | string)[] = ['13px', 13, FontWeight.Lighter,\n    FontWeight.Normal, FontWeight.Regular, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogDisappearTextStyleTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogDisappearTextStyle').onClick(() => {\n        TimePickerDialog.show({\n          disappearTextStyle: {\n            color: this.anyColor,\n            font: {\n              size: this.anyFontSize,\n              weight: this.anyFontWeight[this.index]\n            }\n          }\n        })\n      })\n\n      Button('TimePickerDialog1').onClick(() => {\n        this.anyFontSize = '10px'\n        this.anyColor = 'rgba(255, 183, 0, 1.00)'\n      })\n\n      Button('TimePickerDialog2').onClick(() => {\n        this.anyFontSize = 10\n        this.anyColor = 0xC0FF3E\n      })\n\n      Button('TimePickerDialog3').onClick(() => {\n        this.anyColor = Color.Gray\n      })\n      Button('ClickToggleWeight')\n        .onClick(() => {\n          this.index++\n          this.index %= 8\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogDisappearTextStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "b8b7281e3e9a52623f988bda03d11ee00df6a52bde7e41198c4b6927f3496de4"}
{"text": "import timePickerDialogMaskRectTest from '../MyTest/TimePickerDialogMaskRectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogMaskRectSample {\n  @State anyLength: Length = 0\n  @State maskRectLength: Length = '100%'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogMaskRectTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogMaskRect').onClick(() => {\n        TimePickerDialog.show({\n          maskRect: {\n            x: this.anyLength,\n            y: this.anyLength,\n            width: this.maskRectLength,\n            height: this.maskRectLength\n          }\n        })\n      })\n\n      Button('TimePickerDialog1').onClick(() => {\n        this.anyLength = '10px'\n        this.maskRectLength = 8000\n      })\n\n      Button('TimePickerDialog2').onClick(() => {\n        this.anyLength = $r(\"app.string.timePickerDialog_value_one\")\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogMaskRectSample.ets", "project_name": "arkui_ace_engine-master", "id": "fa3d57a385f36f52543afaa688ef6b2d40b8d77626cfe5a2a09a80332a7917f6"}
{"text": "import timePickerDialogOffsetTest from '../MyTest/TimePickerDialogOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogOffsetSample {\n  @State anyLength: Length = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogOffsetTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogOffset').onClick(() => {\n        TimePickerDialog.show({\n          offset: { dx: this.anyLength, dy: this.anyLength }\n        })\n      })\n\n      Button('TimePickerDialog1').onClick(() => {\n        this.anyLength = '20px'\n      })\n\n      Button('TimePickerDialog2').onClick(() => {\n        this.anyLength = $r(\"app.string.timePickerDialog_value_one\")\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "2630bffaf91c0e80795d4577984aab19bdfa22b9646cadd2f66872cb699e8a33"}
{"text": "import timePickerDialogOnAcceptTest from '../MyTest/TimePickerDialogOnAcceptTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogOnAcceptSample {\n  @State index: string = 'Show'\n  @State buttonString: string = 'Time'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogOnAcceptTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogOnAccept').onClick(() => {\n        TimePickerDialog.show({\n          onAccept: (value: TimePickerResult) => {\n            this.index = 'onAccept'\n            this.buttonString = `${value.hour} : ${value.minute}`;\n          }\n        })\n      })\n      Text(this.index).id('timePickerDialogOnAccept1')\n      Text(this.buttonString).id('timePickerDialogOnAccept2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogOnAcceptSample.ets", "project_name": "arkui_ace_engine-master", "id": "6f01150df95aed804134c12bcfd3a069a26f6c93b66914a344ff647d702aa1b8"}
{"text": "import timePickerDialogOnCancelTest from '../MyTest/TimePickerDialogOnCancelTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogOnCancelSample {\n  @State index: string = 'Show'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogOnCancelTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogOnCancel').onClick(() => {\n        TimePickerDialog.show({\n          onCancel: () => {\n            this.index = 'onCancel'\n          }\n        })\n      })\n      Text(this.index).id('timePickerDialogOnCancel')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogOnCancelSample.ets", "project_name": "arkui_ace_engine-master", "id": "f02f94004c8a679ca9b1bc1e55931fdf48417eb7d31c1f661a37489bcdf452ec"}
{"text": "import timePickerDialogOnChangeTest from '../MyTest/TimePickerDialogOnChangeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogOnChangeSample {\n  @State index: string = 'Show'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogOnChangeTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogOnChange').onClick(() => {\n        TimePickerDialog.show({\n          onChange: (value: TimePickerResult) => {\n            this.index = 'onChange'\n          }\n        })\n      })\n      Text(this.index).id('timePickerDialogOnChange1')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogOnChangeSample.ets", "project_name": "arkui_ace_engine-master", "id": "a6b2fe8dc08d57ce413457104ddec30a1717e23422d7eec0bb503451b6234c89"}
{"text": "import timePickerDialogSelectedTextStyleTest from '../MyTest/TimePickerDialogSelectedTextStyleTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogSelectedTextStyleSample {\n  @State anyColor: ResourceColor = $r(\"app.color.time_picker_dialog\")\n  @State anyFontSize: Length = $r(\"app.string.timePickerDialog_value_one\")\n  @State anyFontWeight: (FontWeight | number | string)[] = ['13vp', 13, FontWeight.Lighter,\n    FontWeight.Normal, FontWeight.Regular, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogSelectedTextStyleTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogSelectedTextStyle').onClick(() => {\n        TimePickerDialog.show({\n          selectedTextStyle: {\n            color: this.anyColor,\n            font: {\n              size: this.anyFontSize,\n              weight: this.anyFontWeight[this.index]\n            }\n          }\n        })\n      })\n\n      Button('TimePickerDialog1').onClick(() => {\n        this.anyFontSize = '13vp'\n        this.anyColor = 'rgba(255, 183, 0, 1.00)'\n      })\n\n      Button('TimePickerDialog2').onClick(() => {\n        this.anyFontSize = 13\n        this.anyColor = 0xC0FF3E\n      })\n\n      Button('TimePickerDialog3').onClick(() => {\n        this.anyColor = Color.Red\n      })\n\n      Button('ClickToggleWeight')\n        .onClick(() => {\n          this.index++\n          this.index %= 8\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogSelectedTextStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "a59803c642e547ace583ac4fe250311c52fe6f6abcfe0166dd3b1f7e16df091e"}
{"text": "import timePickerDialogUseMilitaryTimeTest from '../MyTest/TimePickerDialogUseMilitaryTimeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct TimePickerDialogUseMilitaryTimeSample {\n  @State anyBoolean: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(timePickerDialogUseMilitaryTimeTest)\n  }\n\n  build() {\n    Column({ space: 20 }) {\n      Button('TimePickerDialogUseMilitaryTime1').onClick(() => {\n        TimePickerDialog.show({\n          useMilitaryTime: this.anyBoolean\n        })\n      })\n      Button('TimePickerDialogUseMilitaryTime2').onClick(() => {\n        TimePickerDialog.show({\n          useMilitaryTime: !this.anyBoolean\n        })\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\popup_window\\entry\\src\\main\\ets\\pages\\time_picker_dialog\\TimePickerDialogUseMilitaryTimeSample.ets", "project_name": "arkui_ace_engine-master", "id": "5dc46a37290c35971a418f25c2cb4023838384d731689031e8b240ac8074eb3b"}
{"text": "import gridCachedCountTest from '../MyTest/GridCachedCountTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\nclass MyDataSource implements IDataSource {\n  private list: number[] = [1, 2, 3, 4, 5]\n\n  constructor() {\n  }\n\n  totalCount(): number {\n    return this.list.length\n  }\n\n  getData(index: number): number {\n    return this.list[index]\n  }\n\n  registerDataChangeListener(): void {\n  }\n\n  unregisterDataChangeListener() {\n  }\n}\n\n@Entry\n@Component\nstruct GridCachedCountSample {\n  private data: MyDataSource = new MyDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridCachedCountTest)\n    this.data = new MyDataSource()\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        LazyForEach(this.data, (day: number) => {\n          GridItem() {\n            Text('gridCachedCountTest' + day.toString())\n              .backgroundColor(0xF9CF93)\n          }\n        }, (day: string) => day)\n      }.height('50%')\n      .columnsTemplate('1fr')\n      .cachedCount(3)\n      .id('gridCachedCount1')\n\n      Grid() {\n        LazyForEach(this.data, (day: number) => {\n          GridItem() {\n            Text('gridCachedCountTest' + day.toString())\n              .backgroundColor(0xF9CF93)\n          }\n        }, (day: string) => day)\n      }.height('50%')\n      .columnsTemplate('1fr')\n      .cachedCount(-1)\n      .id('gridCachedCount2')\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridCachedCountSample.ets", "project_name": "arkui_ace_engine-master", "id": "efd47613ade73f0778dae0b54851f073c9ee25ddf7fb95acae47c015c0ec381c"}
{"text": "import gridCellLengthTest from '../MyTest/GridCellLengthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridCellLengthSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridCellLengthTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        Grid() {\n          GridItem() {\n            Text('gridCellLengthTest')\n          }.borderWidth(2).borderColor(Color.Red)\n        }.cellLength(100)\n        .id('gridCellLength')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridCellLengthSample.ets", "project_name": "arkui_ace_engine-master", "id": "5d2d6f0501b7f9e7161d9ac7da355ffec6abcab6f984124cda1031d5a47c21c7"}
{"text": "import gridColumnsGapTest from '../MyTest/GridColumnsGapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridColumnsGapSample {\n  @State len: Length = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridColumnsGapTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('gridColumnsGapTest1').backgroundColor(0xF9CF93)\n        }\n\n        GridItem() {\n          Text('gridColumnsGapTest2').backgroundColor(0xF9CF93)\n        }\n      }.height('30%')\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .columnsGap('15px')\n      .id('gridColumnsGap1')\n\n      Grid() {\n        GridItem() {\n          Text('gridColumnsGapTest1').backgroundColor(0xF9CF93)\n        }\n\n        GridItem() {\n          Text('gridColumnsGapTest2').backgroundColor(0xF9CF93)\n        }\n      }.height('30%')\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .columnsGap(-1)\n      .id('gridColumnsGap2')\n\n      Grid() {\n        GridItem() {\n          Text('gridColumnsGapTest1').backgroundColor(0xF9CF93)\n        }\n\n        GridItem() {\n          Text('gridColumnsGapTest2').backgroundColor(0xF9CF93)\n        }\n      }.height('30%')\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .columnsGap(this.len)\n      .id('gridColumnsGap3')\n\n      Button('GridColumnsGap')\n        .onClick(() => {\n          this.len = $r('app.float.ListLanes_float')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridColumnsGapSample.ets", "project_name": "arkui_ace_engine-master", "id": "21a24d89e24e8c1a1e0fd9ed301a4684677f9cac86c0cf905f7ec322dfb3f5fe"}
{"text": "import gridColumnsTemplateTest from '../MyTest/GridColumnsTemplateTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridColumnsTemplateSample {\n  @State columnsTemplate: string = '1fr 1fr'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridColumnsTemplateTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('gridColumnsTemplateTest1')\n            .backgroundColor(0xF9CF93)\n        }\n\n        GridItem() {\n          Text('gridColumnsTemplateTest2')\n            .backgroundColor(0xF9CF93)\n        }\n      }.columnsTemplate(this.columnsTemplate)\n      .id('gridColumnsTemplate1')\n      .height(60)\n\n      Button('GridColumnsTemplate')\n        .onClick(() => {\n          this.columnsTemplate = '0fr'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridColumnsTemplateSample.ets", "project_name": "arkui_ace_engine-master", "id": "7165d8439723891995c5ec1b20b2ae17a8ebd8d66e94ae0a373d9286ea988533"}
{"text": "import gridEdgeEffectTest from '../MyTest/GridEdgeEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridEdgeEffectSample {\n  numbers: String[] = ['0', '1', '2', '3', '4']\n  @State edge: EdgeEffect = EdgeEffect.Fade\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridEdgeEffectTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        ForEach(this.numbers, (day: string) => {\n          GridItem() {\n            Text('gridEdgeEffectTest' + day)\n              .backgroundColor(0xF9CF93)\n          }\n        }, (day: string) => day)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .edgeEffect(EdgeEffect.Spring, { alwaysEnabled: true })\n      .height(250)\n      .id('gridEdgeEffect1')\n\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridEdgeEffectTest' + day)\n                .backgroundColor(0xF9CF93)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .edgeEffect(this.edge, { alwaysEnabled: false })\n      .height(250)\n      .id('gridEdgeEffect2')\n\n      Button('GridEdgeEffect')\n        .onClick(() => {\n          this.edge = EdgeEffect.None\n        })\n    }\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridEdgeEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "7cb51366377f22700ab1d95765294b39c3e908d364aca6454c31f6eecf6f0aa4"}
{"text": "import gridEditModeTest from '../MyTest/GridEditModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridEditModeSample {\n  @State editMode: boolean = true\n  @State numbers: string[] = []\n\n  @Builder\n  pixelMapBuilder() {\n    Column() {\n    }\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridEditModeTest)\n    for (let i = 1; i <= 15; i++) {\n      this.numbers.push(i + '')\n    }\n  }\n\n  changeIndex(index1: number, index2: number) {\n    let temp: string;\n    temp = this.numbers[index1];\n    this.numbers[index1] = this.numbers[index2];\n    this.numbers[index2] = temp;\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Grid() {\n        ForEach(this.numbers, (day: string) => {\n          GridItem() {\n            Text('gridEditModeTest' + day)\n              .backgroundColor(0xF9CF93)\n          }\n        })\n      }\n      .id('gridEditMode')\n      .columnsTemplate('1fr 1fr 1fr')\n      .width('90%')\n      .backgroundColor(0xFAEEE0)\n      .height(300)\n      .editMode(this.editMode)\n      .onItemDragStart((event: ItemDragInfo, itemIndex: number) => {\n        return this.pixelMapBuilder()\n      })\n      .onItemDrop((event: ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) => {\n        this.changeIndex(itemIndex, insertIndex)\n      })\n\n      Button('GridEditMode')\n        .onClick(() => {\n          this.editMode = !this.editMode\n        })\n    }.width('100%').margin({ top: 5 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridEditModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d6d1cb822c605b05e7768a6073aae68e95ee45b7ad8765af5de24f228567f6de"}
{"text": "import gridEnableScrollInteractionTest from '../MyTest/GridEnableScrollInteractionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridEnableScrollInteractionSample {\n  numbers: String[] = ['0', '1', '2', '3', '4']\n  @State isEnable: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridEnableScrollInteractionTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridEnableScrollInteractionTest' + day)\n                .backgroundColor(0xF9CF93)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .enableScrollInteraction(this.isEnable)\n      .height(250)\n      .id('gridEnableScrollInteraction')\n\n      Button('GridEnableScrollInteraction')\n        .onClick(() => {\n          this.isEnable = !this.isEnable\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridEnableScrollInteractionSample.ets", "project_name": "arkui_ace_engine-master", "id": "0b246865be978c90f8891aec89a679a6d84e96b48f6a55d25ba55cc8984658be"}
{"text": "import gridFrictionTest from '../MyTest/GridFrictionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridFrictionSample {\n  numbers: String[] = ['0', '1', '2', '3', '4']\n  @State frictionNum: number | Resource = 0.6\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridFrictionTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridFrictionTest' + day)\n                .backgroundColor(0xF9CF93)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .friction(-1)\n      .height(250)\n      .id('gridFriction1')\n\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridFrictionTest' + day)\n                .backgroundColor(0xF9CF93)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .friction(this.frictionNum)\n      .height(250)\n      .id('gridFriction2')\n\n      Button('GridFriction')\n        .onClick(() => {\n          this.frictionNum = $r('app.float.offset_max')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridFrictionSample.ets", "project_name": "arkui_ace_engine-master", "id": "a0f8a528e250e93409f30bf244a83e0256be198e2b66da6cab7d5df4691aecb5"}
{"text": "import gridLayoutDirectionTest from '../MyTest/GridLayoutDirectionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridLayoutDirectionSample {\n  numbers: string[] = []\n  directionTypeArr: GridDirection[] = [\n    GridDirection.Column, GridDirection.RowReverse, GridDirection.ColumnReverse]\n  index: number = 0\n  @State directionType: GridDirection = this.directionTypeArr[this.index]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridLayoutDirectionTest)\n    for (let i = 1; i <= 30; i++) {\n      this.numbers.push(i + '')\n    }\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        Grid() {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('GridLayoutDirection' + day).fontSize(16).backgroundColor(0xF9CF93)\n            }.width(80).height(80).borderWidth(2).borderColor(Color.Red)\n          }, (day: string) => day)\n        }\n        .height(300)\n        .columnsGap(10)\n        .rowsGap(10)\n        .layoutDirection(GridDirection.Row)\n        .id('gridLayoutDirection1')\n\n        Grid() {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('GridLayoutDirection' + day).fontSize(16).backgroundColor(0xF9CF93)\n            }.width(80).height(80).borderWidth(2).borderColor(Color.Red)\n          }, (day: string) => day)\n        }\n        .height(300)\n        .columnsGap(10)\n        .rowsGap(10)\n        .layoutDirection(this.directionType)\n        .id('gridLayoutDirection2')\n\n        Button('GridLayoutDirection')\n          .onClick(() => {\n            this.index++\n            this.directionType = this.directionTypeArr[this.index % 3]\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridLayoutDirectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "326ff9e5619a5ba702dcace691e742cdbea17e283662af40004d7b93ac81979e"}
{"text": "import gridMaxCountTest from '../MyTest/GridMaxCountTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridMaxCountSample {\n  numbers: string[] = []\n  @State number: number = -1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridMaxCountTest)\n    for (let i = 1; i <= 30; i++) {\n      this.numbers.push(i + '')\n    }\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        Grid() {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridMaxCount' + day).fontSize(16).backgroundColor(0xF9CF93)\n            }.width(80).height(80).borderWidth(2).borderColor(Color.Red)\n          }, (day: string) => day)\n        }\n        .height(300)\n        .columnsGap(10)\n        .rowsGap(10)\n        .maxCount(0)\n        .minCount(2)\n        .id('gridMaxCount1')\n\n        Grid() {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridMaxCount' + day).fontSize(16).backgroundColor(0xF9CF93)\n            }.width(80).height(80).borderWidth(2).borderColor(Color.Red)\n          }, (day: string) => day)\n        }\n        .height(300)\n        .columnsGap(10)\n        .rowsGap(10)\n        .maxCount(this.number)\n        .id('gridMaxCount2')\n\n        Button('GridMaxCount')\n          .onClick(() => {\n            this.number = 3\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridMaxCountSample.ets", "project_name": "arkui_ace_engine-master", "id": "e28c8030f847b6ab4b0a3d418b65664a5ed7cb1fccf7f16d7ff72420ac8a89b1"}
{"text": "import gridMinCountTest from '../MyTest/GridMinCountTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridMinCountSample {\n  numbers: string[] = []\n  @State number: number = -1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridMinCountTest)\n    for (let i = 1; i <= 30; i++) {\n      this.numbers.push(i + '')\n    }\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        Grid() {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridMinCount' + day).fontSize(16).backgroundColor(0xF9CF93)\n            }.width(80).height(80).borderWidth(2).borderColor(Color.Red)\n          }, (day: string) => day)\n        }\n        .height(300)\n        .minCount(this.number)\n        .id('gridMinCount1')\n\n        Button('GridMinCount')\n          .onClick(() => {\n            this.number = 4\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridMinCountSample.ets", "project_name": "arkui_ace_engine-master", "id": "daf28976bd5b9c95f2ac5e4e1a6e200fde4eac26ca081284c0076e1e3b8acf2d"}
{"text": "import gridMultiSelectableTest from '../MyTest/GridMultiSelectableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridMultiSelectableSample {\n  @State isMultiSelectable: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridMultiSelectableTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        Grid() {\n          GridItem() {\n            Text('gridMultiSelectableTest').backgroundColor(0xF9CF93)\n          }\n          .borderWidth(2)\n          .borderColor(Color.Red)\n        }\n        .multiSelectable(this.isMultiSelectable)\n        .id('gridMultiSelectable')\n\n        Button('GridMultiSelectable')\n          .onClick(() => {\n            this.isMultiSelectable = !this.isMultiSelectable\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridMultiSelectableSample.ets", "project_name": "arkui_ace_engine-master", "id": "bf6e320a8e854f690df8cd402776a1abe86a722654261da194dd42cb2c21ffc6"}
{"text": "import gridNestedScrollTest from '../MyTest/GridNestedScrollTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridNestedScrollSample {\n  scroll: NestedScrollMode[] = [\n    NestedScrollMode.SELF_ONLY, NestedScrollMode.SELF_FIRST,\n    NestedScrollMode.PARENT_FIRST, NestedScrollMode.PARALLEL]\n  arr: number[] = []\n  index: number = 0\n  @State scrollForward: NestedScrollMode = this.scroll[this.index]\n  @State scrollBackward: NestedScrollMode = this.scroll[this.index+1]\n\n  @Styles\n  gridCard() {\n    .backgroundColor(Color.White)\n    .height(72)\n    .width(\"100%\")\n    .borderRadius(12)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridNestedScrollTest)\n    for (let i = 0; i < 20; i++) {\n      this.arr.push(i)\n    }\n  }\n\n  scroller: Scroller = new Scroller()\n\n  build() {\n    Scroll() {\n      Column() {\n        Text(\"Scroll Area\")\n          .width(\"100%\")\n          .height(\"40%\")\n          .backgroundColor('#0080DC')\n        Tabs({ barPosition: BarPosition.Start }) {\n          TabContent() {\n            Grid(this.scroller) {\n              ForEach(this.arr, (item: number) => {\n                GridItem() {\n                  Text('gridNestedScrollTest' + item)\n                }.gridCard()\n              }, (item: string) => item)\n            }.width(\"100%\")\n            .id('gridNestedScroll')\n            .columnsTemplate('1fr')\n            .nestedScroll({\n              scrollForward: this.scrollForward,\n              scrollBackward: this.scrollBackward\n            })\n          }.tabBar(\"Tab\")\n        }\n        .vertical(false)\n        .height(\"80%\")\n\n        Button('GridNestedScroll')\n          .onClick(() => {\n            this.index++\n            this.scrollForward = this.scroll[this.index % 4]\n            this.scrollBackward = this.scroll[(this.index + 1) % 4]\n          })\n      }.width(\"100%\")\n    }\n    .width('100%')\n    .height('100%')\n  }\n}\n", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridNestedScrollSample.ets", "project_name": "arkui_ace_engine-master", "id": "7756fe3c226532a6006df79dc0bb8acc11ac32de78cd86b6a888265754442eb7"}
{"text": "import gridRowsGapTest from '../MyTest/GridRowsGapTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridRowsGapSample {\n  @State len: Length = '15px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridRowsGapTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('gridRowsGap1Test1')\n            .backgroundColor(0xF9CF93).width('100%').height('100%')\n        }\n\n        GridItem() {\n          Text('gridRowsGap1Test2')\n            .backgroundColor(0xF9CF93).width('100%').height('100%')\n        }\n\n      }.height('30%')\n      .rowsTemplate('1fr 1fr 1fr')\n      .rowsGap(2)\n      .id('gridRowsGap1')\n\n      Grid() {\n        GridItem() {\n          Text('gridRowsGap1Test1').backgroundColor(0xF9CF93).width('100%').height('100%')\n        }\n\n        GridItem() {\n          Text('gridRowsGap1Test2').backgroundColor(0xF9CF93).width('100%').height('100%')\n        }\n      }.height('30%')\n      .rowsTemplate('1fr 1fr 1fr ')\n      .rowsGap(-1)\n      .id('gridRowsGap2')\n\n      Grid() {\n        GridItem() {\n          Text('gridRowsGap1Test1').backgroundColor(0xF9CF93).width('100%').height('100%')\n        }\n\n        GridItem() {\n          Text('gridRowsGap1Test2').backgroundColor(0xF9CF93).width('100%').height('100%')\n        }\n      }.height('30%')\n      .rowsTemplate('1fr 1fr 1fr ')\n      .rowsGap(this.len)\n      .id('gridRowsGap3')\n\n      Button('GridRowsGap')\n        .onClick(() => {\n          this.len = $r('app.string.length')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridRowsGapSample.ets", "project_name": "arkui_ace_engine-master", "id": "76efa94ba68b20ef4cd64f874acfe0882719657010f9769e8d33385435b8d52c"}
{"text": "import gridRowsTemplateTest from '../MyTest/GridRowsTemplateTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridRowsTemplateSample {\n  @State rowsTemplate: string = '1fr 1fr'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridRowsTemplateTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('gridRowsTemplateTest1')\n            .backgroundColor(0xF9CF93)\n        }\n\n        GridItem() {\n          Text('gridRowsTemplateTest2')\n            .backgroundColor(0xF9CF93)\n        }\n      }.height('30%')\n      .rowsTemplate(this.rowsTemplate)\n      .id('gridRowsTemplate1')\n\n      Button('GridRowsTemplate')\n        .onClick(() => {\n          this.rowsTemplate = '0fr'\n        })\n\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridRowsTemplateSample.ets", "project_name": "arkui_ace_engine-master", "id": "4bd64a94264c13ebd11e85af40b8e883d1ca34d868fd78728ae95c7f1e24eeab"}
{"text": "import gridScrollBarColorTest from '../MyTest/GridScrollBarColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridScrollBarColorSample {\n  numbers: String[] = ['0', '1', '2', '3', '4']\n  @State barColor: string | number | Color = 'rgb(255,100,255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridScrollBarColorTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridScrollBarColorTest' + day)\n                .backgroundColor(0xF9CF93)\n                .width('100%')\n                .height(80)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .width('100%')\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .scrollBarColor(Color.Orange)\n      .height(250)\n      .id('gridScrollBarColor1')\n\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('gridScrollBarColorTest' + day)\n                .backgroundColor(0xF9CF93)\n                .width('100%')\n                .height(80)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .width('100%')\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .scrollBarColor(this.barColor)\n      .height(250)\n      .id('gridScrollBarColor2')\n\n      Button('GridScrollBarColor')\n        .onClick(() => {\n          this.barColor = 0xffa500\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridScrollBarColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "fdb306c804e300b9e35078237a729be48df571674b8ec746da3fed53a772691a"}
{"text": "import gridScrollBarWidthTest from '../MyTest/GridScrollBarWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridScrollBarWidthSample {\n  numbers: String[] = ['0', '1', '2', '3', '4']\n  @State widLength: string | number = '10px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridScrollBarWidthTest)\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Grid() {\n        ForEach(this.numbers, () => {\n          ForEach(this.numbers, (day: string) => {\n            GridItem() {\n              Text('GridScrollBarWidth' + day)\n                .backgroundColor(0xF9CF93)\n                .width('100%')\n                .height(80)\n            }\n          }, (day: string) => day)\n        }, (day: string) => day)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr 1fr')\n      .scrollBarWidth(this.widLength)\n      .height(250)\n      .id('gridScrollBarWidth')\n\n      Button('GridScrollBarWidth')\n        .onClick(() => {\n          this.widLength = 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridScrollBarWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "e3d7cc17bdc9ec8ef9714f2b551663f6ef4ccc3a7d06ffb6a3cfa806ea1fe238"}
{"text": "import gridSupportAnimationTest from '../MyTest/GridSupportAnimationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridSupportAnimationSample {\n  @State isSupportAnimation: boolean = true\n  numbers: string[] = []\n\n  @Builder\n  pixelMapBuilder() {\n    Column() {\n    }\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridSupportAnimationTest)\n    for (let i = 1; i <= 15; i++) {\n      this.numbers.push(i + '')\n    }\n  }\n\n  changeIndex(index1: number, index2: number) {\n    let temp: string;\n    temp = this.numbers[index1];\n    this.numbers[index1] = this.numbers[index2];\n    this.numbers[index2] = temp;\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Grid() {\n        ForEach(this.numbers, (day: string) => {\n          GridItem() {\n            Text('gridSupportAnimationTest' + day)\n              .backgroundColor(0xF9CF93)\n          }\n        })\n      }\n      .id('gridSupportAnimation')\n      .columnsTemplate('1fr 1fr 1fr')\n      .supportAnimation(this.isSupportAnimation)\n      .columnsGap(10)\n      .rowsGap(10)\n      .width('90%')\n      .backgroundColor(0xFAEEE0)\n      .height(300)\n      .editMode(true)\n      .onItemDragStart(() => {\n        return this.pixelMapBuilder()\n      })\n      .onItemDrop((event: ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) => {\n        this.changeIndex(itemIndex, insertIndex)\n      })\n\n      Button('GridSupportAnimation')\n        .onClick(() => {\n          this.isSupportAnimation = !this.isSupportAnimation\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid\\GridSupportAnimationSample.ets", "project_name": "arkui_ace_engine-master", "id": "88f526e994948c9d6e1dd99e8faaebea6447f8d0262fcae9160fab85abc93d75"}
{"text": "import gridItemColumnEndTest from '../MyTest/GridItemColumnEndTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridItemColumnEndSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridItemColumnEndTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('1')\n            .backgroundColor(Color.Red)\n        }.columnStart(1).columnEnd(3).id('gridItemColumnEnd')\n      }\n      .columnsTemplate('1fr 1fr 1fr')\n      .rowsTemplate('1fr 1fr 1fr')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemColumnEndSample.ets", "project_name": "arkui_ace_engine-master", "id": "4148e812e551063b5facb61d07c3bdd79c888fe24f3228c082aa58c945c89167"}
{"text": "import gridItemColumnStartTest from '../MyTest/GridItemColumnStartTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridItemColumnStartSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridItemColumnStartTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('1')\n            .backgroundColor(Color.Red)\n        }.columnStart(1).columnEnd(2).id('gridItemColumnStart')\n      }\n      .columnsTemplate('1fr 1fr 1fr')\n      .rowsTemplate('1fr 1fr 1fr')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemColumnStartSample.ets", "project_name": "arkui_ace_engine-master", "id": "0861473e6b4b991af0db84c705d37d13114fce2ad9af4acc6537a69cff36d911"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct GridItemHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('gridItemHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'GridItemRowStartSample', buttonUrl: 'pages/grid_item/GridItemRowStartSample' });\n        CommonButton({ buttonName: 'GridItemRowEndSample', buttonUrl: 'pages/grid_item/GridItemRowEndSample' });\n        CommonButton({\n          buttonName: 'GridItemColumnStartSample',\n          buttonUrl: 'pages/grid_item/GridItemColumnStartSample'\n        });\n        CommonButton({ buttonName: 'GridItemColumnEndSample', buttonUrl: 'pages/grid_item/GridItemColumnEndSample' });\n        CommonButton({ buttonName: 'GridItemSelectableSample', buttonUrl: 'pages/grid_item/GridItemSelectableSample' });\n        CommonButton({ buttonName: 'GridItemSelectedSample', buttonUrl: 'pages/grid_item/GridItemSelectedSample' });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemHome.ets", "project_name": "arkui_ace_engine-master", "id": "699a11e8165261c9628247da96ee0020a9fef83dc68c0e8c4e5821753222a2f6"}
{"text": "import gridItemRowEndTest from '../MyTest/GridItemRowEndTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridItemRowEndSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridItemRowEndTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('1')\n            .backgroundColor(Color.Red)\n        }.rowStart(1).rowEnd(3).id('gridItemRowEnd')\n      }\n      .columnsTemplate('1fr 1fr 1fr')\n      .rowsTemplate('1fr 1fr 1fr')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemRowEndSample.ets", "project_name": "arkui_ace_engine-master", "id": "34cea4be497222aef3d1eb74439d4f4269a2c7f37033500ff7463a0800e476d2"}
{"text": "import gridItemRowStartTest from '../MyTest/GridItemRowStartTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridItemRowStartSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridItemRowStartTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('1')\n            .backgroundColor(Color.Red)\n        }.rowStart(1).rowEnd(2).id('gridItemRowStart')\n      }\n      .columnsTemplate('1fr 1fr 1fr')\n      .rowsTemplate('1fr 1fr 1fr')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemRowStartSample.ets", "project_name": "arkui_ace_engine-master", "id": "e22eb881cd68fb255d120902c0e749246c522e681fcd32a0fbce3329f507c4e3"}
{"text": "import gridItemSelectableTest from '../MyTest/GridItemSelectableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridItemSelectableSample {\n  @State selectable: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridItemSelectableTest)\n  }\n\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('4')\n            .fontSize(16)\n            .backgroundColor(0xF9CF93)\n            .width('100%')\n            .height('100%')\n            .textAlign(TextAlign.Center)\n        }\n        .selectable(this.selectable).id('gridItemSelectable1')\n\n      }.multiSelectable(true)\n      .columnsTemplate('1fr 1fr 1fr')\n      .rowsTemplate('1fr 1fr 1fr')\n      .height(100)\n\n      Button(\"GridItemSelectable\")\n        .onClick(() => {\n          this.selectable = !this.selectable\n        })\n      Grid() {\n        GridItem() {\n          Text('5')\n            .fontSize(16)\n            .backgroundColor(0xF9CF93)\n            .width('100%')\n            .height('100%')\n            .textAlign(TextAlign.Center)\n        }\n        .selectable(true).id('gridItemSelectable2')\n      }.multiSelectable(false)\n      .columnsTemplate('1fr 1fr 1fr')\n      .rowsTemplate('1fr 1fr 1fr')\n    }.width('90%').margin({ top: 5, left: 5, right: 5 })\n    .align(Alignment.Center)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemSelectableSample.ets", "project_name": "arkui_ace_engine-master", "id": "ef05dcd9792d427f855ce11de0675809400f1a82bcda8ed90997942ea241cd2a"}
{"text": "import gridItemSelectedTest from '../MyTest/GridItemSelectedTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct GridItemSelectedSample {\n  @State select: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(gridItemSelectedTest)\n  }\n\n  @Styles\n  normalStyles(): void{\n    .backgroundColor(\"#E5E5E1\")\n  }\n\n  @Styles\n  selectStyles(): void{\n    .backgroundColor(\"#ED6F21\")\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Grid() {\n        GridItem() {\n          Text('4')\n            .fontSize(16)\n            .width('50%')\n            .height('50%')\n            .textAlign(TextAlign.Center)\n        }\n        .selectable(true)\n        .selected(this.select)\n        .id('gridItemSelected')\n        .onClick(() => {\n          this.select = !this.select\n        })\n        .stateStyles({\n          normal: this.normalStyles,\n          selected: this.selectStyles,\n        })\n      }.multiSelectable(true)\n      .height(100)\n\n      Button('GridItemSelected')\n        .onClick(() => {\n          this.select = !this.select\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\grid_item\\GridItemSelectedSample.ets", "project_name": "arkui_ace_engine-master", "id": "d8ac2c7e0dc18321dc58cb480945a62e84145041548b495c5eeaf430508a17db"}
{"text": "import listAlignListItemTest from '../MyTest/ListAlignListItemTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListAlignListItemSample {\n  @State arr: string[] =\n    [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\"]\n  @State listItemAlign: ListItemAlign = ListItemAlign.Center;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listAlignListItemTest)\n  }\n\n  build() {\n    Column() {\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: string) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(70)\n              .backgroundColor(0xFFFFFF)\n          }\n          .border({ width: 2, color: Color.Green })\n        })\n      }\n      .height('40%')\n      .width(\"40%\")\n      .border({ width: 3, color: Color.Red })\n      .lanes({ minLength: 40, maxLength: 40 })\n      .alignListItem(this.listItemAlign)\n      .id('listAlignListItem1')\n\n      Button('ListAlignListItem')\n        .margin('5vp')\n        .onClick(() => {\n          this.listItemAlign = ListItemAlign.End;\n        })\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: string) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(70)\n              .backgroundColor(0xFFFFFF)\n          }\n          .border({ width: 2, color: Color.Green })\n        })\n      }\n      .height('40%')\n      .width(\"40%\")\n      .border({ width: 3, color: Color.Red })\n      .lanes({ minLength: 40, maxLength: 40 })\n      .alignListItem(ListItemAlign.Start)\n      .id('listAlignListItem2')\n    }.backgroundColor(0xDCDCDC)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListAlignListItemSample.ets", "project_name": "arkui_ace_engine-master", "id": "75e879aa4237cc5cd6bc79bbe99619d9275c888b73ddbc653a569cf9875deb11"}
{"text": "import listCachedCountTest from '../MyTest/ListCachedCountTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\nclass MyDataSource1 implements IDataSource {\n  private arr: number[] = [0, 1, 2, 3, 4]\n\n  constructor() {\n  }\n\n  totalCount(): number {\n    return this.arr.length\n  }\n\n  getData(index: number): number {\n    return this.arr[index]\n  }\n\n  registerDataChangeListener(): void {\n  }\n\n  unregisterDataChangeListener() {\n  }\n}\n\nclass MyDataSource2 implements IDataSource {\n  private brr: string[] = ['0', '1', '2', '3']\n\n  constructor() {\n  }\n\n  totalCount(): number {\n    return this.brr.length\n  }\n\n  getData(index: number): string {\n    return this.brr[index]\n  }\n\n  registerDataChangeListener(): void {\n  }\n\n  unregisterDataChangeListener() {\n  }\n}\n\n@Entry\n@Component\nstruct ListCachedCountSample {\n  private data1: MyDataSource1 = new MyDataSource1()\n  private data2: MyDataSource2 = new MyDataSource2()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listCachedCountTest)\n    this.data1 = new MyDataSource1()\n    this.data2 = new MyDataSource2()\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          LazyForEach(this.data1, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('50%')\n                .height(100)\n                .fontSize(16)\n                .textAlign(TextAlign.Center)\n                .borderRadius(10)\n                .backgroundColor(0xFF0FFF)\n            }\n          }, (item: string) => item)\n        }\n        .cachedCount(10)\n        .id('listCachedCount1')\n\n        List({ space: 20, initialIndex: 0 }) {\n          LazyForEach(this.data2, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(70)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(160)\n        .width('100%')\n        .border({ width: 3, color: Color.Red })\n        .cachedCount(1)\n        .lanes(7)\n        .id('listCachedCount2')\n      }\n      .backgroundColor(0xDCDCDC)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListCachedCountSample.ets", "project_name": "arkui_ace_engine-master", "id": "e691a555df4ee5297c69183cd13d58f9045403e9d67e75232b01e706cd2dabc7"}
{"text": "import listChainAnimationTest from '../MyTest/ListChainAnimationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListChainAnimationSample {\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @State chainAnimation: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listChainAnimationTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(100)\n                .fontSize(16)\n                .textAlign(TextAlign.Center)\n                .borderRadius(10)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(\"80%\")\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .chainAnimation(this.chainAnimation)\n        .id('listChainAnimation')\n\n        Button('ListChainAnimation')\n          .margin('5vp')\n          .onClick(() => {\n            this.chainAnimation = !this.chainAnimation\n          })\n      }\n      .backgroundColor(0xDCDCDC)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListChainAnimationSample.ets", "project_name": "arkui_ace_engine-master", "id": "9608fdd72f50d1788eba545209c8a20f68c3dddae51c7adeae6f2ec90aca1aa6"}
{"text": "import listContentEndOffsetTest from '../MyTest/ListContentEndOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListContentEndOffsetSample {\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listContentEndOffsetTest)\n  }\n\n  build() {\n    Column() {\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: number) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(100)\n              .fontSize(16)\n              .textAlign(TextAlign.Center)\n              .borderRadius(10)\n              .backgroundColor(0xFFFFFF)\n          }\n        }, (item: string) => item)\n      }\n      .listDirection(Axis.Vertical)\n      .contentEndOffset(100)\n      .id('listContentEndOffset')\n    }\n    .backgroundColor(0xDCDCDC)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListContentEndOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "8a6e328845e194b99798a7e64125e77b1823c916fb312ccb09f52e22d7b34910"}
{"text": "import listContentStartOffsetTest from '../MyTest/ListContentStartOffsetTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListContentStartOffsetSample {\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listContentStartOffsetTest)\n  }\n\n  build() {\n    Column() {\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: number) => {\n          ListItem() {\n            Text('' + item)\n              .width('50%')\n              .height(100)\n              .fontSize(16)\n              .textAlign(TextAlign.Center)\n              .borderRadius(10)\n              .backgroundColor(0xFFFFFF)\n          }\n        }, (item: string) => item)\n      }\n      .listDirection(Axis.Vertical)\n      .contentStartOffset(100)\n      .id('listContentStartOffset')\n    }\n    .backgroundColor(0xDCDCDC)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListContentStartOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "708e64ae7b2206f5906db4dec7fc690732f7cc3c3166379caa97dcabdce31398"}
{"text": "import listEdgeEffectTest from '../MyTest/ListEdgeEffectTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListEdgeEffectSample {\n  private arr: number[] = [0, 1, 2, 3]\n  private brr: number[] = [0, 1, 2, 3]\n  @State edgeEffect: EdgeEffect = EdgeEffect.Fade;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listEdgeEffectTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(100)\n                .fontSize(16)\n                .textAlign(TextAlign.Center)\n                .borderRadius(10)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(\"80%\")\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .edgeEffect(this.edgeEffect, { alwaysEnabled: true })\n        .id('listEdgeEffect1')\n\n        Button('ListEdgeEffect')\n          .margin('5vp')\n          .onClick(() => {\n            this.edgeEffect = EdgeEffect.Spring\n          })\n\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.brr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(100)\n                .fontSize(16)\n                .textAlign(TextAlign.Center)\n                .borderRadius(10)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(\"80%\")\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .edgeEffect(EdgeEffect.None, { alwaysEnabled: false })\n        .id('listEdgeEffect2')\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListEdgeEffectSample.ets", "project_name": "arkui_ace_engine-master", "id": "59105db327960f6e40aefe9252e9604800c3883b70789f34d4f7939d89b01d4c"}
{"text": "import listEnableScrollInteractionTest from '../MyTest/ListEnableScrollInteractionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListEnableScrollInteractionSample {\n  @State xOffset: number = 0;\n  @State yOffset: number = 1200;\n  @State enableScrollInteraction: boolean = false\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listEnableScrollInteractionTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n                .width('50%')\n                .height(100)\n                .fontSize(16)\n                .textAlign(TextAlign.Center)\n                .borderRadius(10)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          }, (item: string) => item)\n        }\n        .width('100%')\n        .height('80%')\n        .border({ width: 3, color: Color.Red })\n        .enableScrollInteraction(this.enableScrollInteraction)\n        .id('listEnableScrollInteraction')\n\n        Button('ListEnableScrollInteraction')\n          .margin('5vp')\n          .onClick(() => {\n            this.enableScrollInteraction = !this.enableScrollInteraction;\n          })\n      }\n      .backgroundColor(0xDCDCDC)\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListEnableScrollInteractionSample.ets", "project_name": "arkui_ace_engine-master", "id": "9e5bf575523a597c388315d6f43a306a43c5e1295e94ededac0bfe5b3eb60697"}
{"text": "import listFrictionTest from '../MyTest/ListFrictionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListFrictionSample {\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @State friction: number | Resource = 0.1;\n  @State friction1: number | Resource = -1;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listFrictionTest)\n  }\n\n  build() {\n    Column() {\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: string) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(70)\n              .backgroundColor(0xFFFFFF)\n          }\n          .border({ width: 2, color: Color.Green })\n        })\n      }\n      .height(\"40%\")\n      .width(\"100%\")\n      .border({ width: 3, color: Color.Red })\n      .friction(this.friction)\n      .id('listFriction1')\n\n      Button('ListFriction1')\n        .margin('5vp')\n        .onClick(() => {\n          this.friction = 1;\n        })\n\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: string) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(70)\n              .backgroundColor(0xFFFFFF)\n          }\n          .border({ width: 2, color: Color.Green })\n        })\n      }\n      .height(\"40%\")\n      .width(\"100%\")\n      .border({ width: 3, color: Color.Red })\n      .friction(this.friction1)\n      .id('listFriction2')\n\n      Button('ListFriction2')\n        .margin('5vp')\n        .onClick(() => {\n          this.friction1 = $r('app.float.ListFriction_float');\n        })\n    }\n    .backgroundColor(0xDCDCDC)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListFrictionSample.ets", "project_name": "arkui_ace_engine-master", "id": "f8e7222184046cb6b721423f273bcfff51c06cd127871726d3cebb454eabf9b1"}
{"text": "import listLanesTest from '../MyTest/ListLanesTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListLanesSample {\n  @State arr: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16']\n  @State lanes: number | LengthConstrain = 20;\n  @State lanes1: number | LengthConstrain =\n    { minLength: $r('app.float.ListLanes_float'), maxLength: $r('app.float.ListLanes_float') };\n  @State dimension: Dimension = '10px';\n  @State dimension1: Dimension = '10fp';\n  @State dimension2: Dimension = '10%';\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listLanesTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(70)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(160)\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .lanes(this.lanes, this.dimension)\n        .id('listLanes1')\n\n        Button('ListLanes1')\n          .margin('5vp')\n          .onClick(() => {\n            this.lanes = { minLength: '5px', maxLength: '5px' }\n            this.dimension = '10vp'\n          })\n\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(70)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(160)\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .lanes(this.lanes1, this.dimension1)\n        .id('listLanes2')\n\n        Button('ListLanes2')\n          .margin('5vp')\n          .onClick(() => {\n            this.lanes1 = { minLength: 5, maxLength: 5 }\n            this.dimension1 = '10lpx'\n          })\n\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(70)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height(160)\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .lanes(this.lanes1, this.dimension2)\n        .id('listLanes3')\n\n        Button('ListLanes3')\n          .margin('5vp')\n          .onClick(() => {\n            this.dimension2 = $r('app.float.ListLanes_float')\n          })\n\n      }.backgroundColor(0xDCDCDC)\n    }\n    .scrollBar(BarState.On)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListLanesSample.ets", "project_name": "arkui_ace_engine-master", "id": "37ed2d7d23aa671e8e831346cff52cd275e25316b7c2a39affdde16c9d4a42de"}
{"text": "import listListDirectionTest from '../MyTest/ListListDirectionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListListDirectionSample {\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @State listDirection: Axis = Axis.Vertical;\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listListDirectionTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: number) => {\n            ListItem() {\n              Text('' + item)\n            }\n          }, (item: string) => item)\n        }\n        .listDirection(this.listDirection)\n        .id('listListDirection')\n\n        Button('ListListDirection')\n          .margin('5vp')\n          .onClick(() => {\n            this.listDirection = Axis.Horizontal;\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListListDirectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "d5e647b0bcd594cb9070c0029460e954c23cf2e1b4e93812e10b04935c6d88b4"}
{"text": "import listMultiSelectableTest from '../MyTest/ListMultiSelectableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListMultiSelectableSample {\n  @State multiSelectable: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listMultiSelectableTest)\n  }\n\n  build() {\n    Column() {\n      List() {\n        ListItem() {\n          Text('6')\n            .fontSize(16)\n            .backgroundColor(0xF9CF93)\n            .width('100%')\n            .height('100%')\n            .textAlign(TextAlign.Center)\n        }\n        .selectable(false)\n      }.multiSelectable(this.multiSelectable)\n      .height('80%')\n      .id('listMultiSelectable')\n\n      Button('ListMultiSelectable')\n        .margin('5vp')\n        .onClick(() => {\n          this.multiSelectable = !this.multiSelectable\n        })\n    }\n    .align(Alignment.Center)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListMultiSelectableSample.ets", "project_name": "arkui_ace_engine-master", "id": "9e53e3051fa117351498ef01787122b76dc32aabc63c4b3536b8e982a6482fed"}
{"text": "import listNestedScrollTest from '../MyTest/ListNestedScrollTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListNestedScrollSample {\n  @State arr: number[] = []\n  @State nestedScroll: NestedScrollOptions = {\n    scrollForward: NestedScrollMode.SELF_ONLY,\n    scrollBackward: NestedScrollMode.SELF_ONLY\n  }\n  @State nestedScroll1: NestedScrollOptions = {\n    scrollForward: NestedScrollMode.SELF_FIRST,\n    scrollBackward: NestedScrollMode.SELF_FIRST\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listNestedScrollTest)\n  }\n\n  @Styles\n  listCard() {\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        Text(\"Scroll Area\")\n          .width(\"100%\")\n          .height(\"40%\")\n          .backgroundColor('#0080DC')\n        Tabs({ barPosition: BarPosition.Start }) {\n          TabContent() {\n            List({ space: 10 }) {\n              ForEach(this.arr, (item: number) => {\n                ListItem() {\n                  Text(\"item\" + item)\n                }.listCard()\n              }, (item: string) => item)\n            }\n            .border({ width: 3, color: Color.Red })\n            .edgeEffect(EdgeEffect.Spring)\n            .nestedScroll(this.nestedScroll)\n            .id('listNestedScroll1')\n          }.tabBar(\"Tab1\")\n\n          TabContent() {\n          }.tabBar(\"Tab2\")\n        }\n\n        Button('ListNestedScroll1')\n          .margin('5vp')\n          .onClick(() => {\n            this.nestedScroll = {\n              scrollForward: NestedScrollMode.PARENT_FIRST,\n              scrollBackward: NestedScrollMode.PARENT_FIRST\n            };\n          })\n\n        Text(\"Scroll Area\")\n          .width(\"100%\")\n          .height(\"40%\")\n          .backgroundColor('#0080DC')\n        Tabs({ barPosition: BarPosition.Start }) {\n          TabContent() {\n            List({ space: 10 }) {\n              ForEach(this.arr, (item: number) => {\n                ListItem() {\n                  Text(\"item\" + item)\n                }.listCard()\n              }, (item: string) => item)\n            }\n            .border({ width: 3, color: Color.Red })\n            .edgeEffect(EdgeEffect.Spring)\n            .nestedScroll(this.nestedScroll1)\n            .id('listNestedScroll2')\n          }.tabBar(\"Tab1\")\n\n          TabContent() {\n          }.tabBar(\"Tab2\")\n        }\n\n        Button('ListNestedScroll2')\n          .margin('5vp')\n          .onClick(() => {\n            this.nestedScroll1 = {\n              scrollForward: NestedScrollMode.PARALLEL,\n              scrollBackward: NestedScrollMode.PARALLEL\n            };\n          })\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListNestedScrollSample.ets", "project_name": "arkui_ace_engine-master", "id": "4c9180611c03fcb7631ad3f3a98088d0a8da848aca9e1acddeabbb8e3ca1f68f"}
{"text": "import listScrollBarColorTest from '../MyTest/ListScrollBarColorTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListScrollBarColorSample {\n  private arr: number[] = [0, 1, 2, 3,]\n  @State scrollBarColor: string | number | Color = Color.Blue\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listScrollBarColorTest)\n  }\n\n  build() {\n    Scroll() {\n      Column() {\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(70)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height('44%')\n        .width(\"100%\")\n        .border({ width: 3, color: Color.Red })\n        .scrollBarColor(this.scrollBarColor)\n        .scrollBar(BarState.On)\n        .id('listScrollBarColor1')\n\n        Button('ListScrollBarColor')\n          .margin('5vp')\n          .onClick(() => {\n            this.scrollBarColor = 0xffffff\n          })\n\n        List({ space: 20, initialIndex: 0 }) {\n          ForEach(this.arr, (item: string) => {\n            ListItem() {\n              Text('' + item)\n                .width('100%')\n                .height(70)\n                .backgroundColor(0xFFFFFF)\n            }\n            .border({ width: 2, color: Color.Green })\n          })\n        }\n        .height('44%')\n        .width(\"100%\")\n        .scrollBar(BarState.On)\n        .border({ width: 3, color: Color.Red })\n        .scrollBarColor('#FFFF64FF')\n        .id('listScrollBarColor2')\n      }\n      .backgroundColor(0xDCDCDC)\n\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListScrollBarColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "d4796dd45714e66d0d3214db4622665ec13d00c24866a332679a2e948f153d5e"}
{"text": "import listScrollBarWidthTest from '../MyTest/ListScrollBarWidthTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListScrollBarWidthSample {\n  private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @State scrollBarWidth: number | string = 20\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listScrollBarWidthTest)\n  }\n\n  build() {\n    Column() {\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.arr, (item: string) => {\n          ListItem() {\n            Text('' + item)\n              .width('100%')\n              .height(70)\n              .backgroundColor(0xFFFFFF)\n          }\n          .border({ width: 2, color: Color.Green })\n        })\n      }\n      .height('80%')\n      .width(\"100%\")\n      .border({ width: 3, color: Color.Red })\n      .scrollBarWidth(this.scrollBarWidth)\n      .id('listScrollBarWidth')\n\n      Button('ListScrollBarWidth')\n        .margin('5vp')\n        .onClick(() => {\n          this.scrollBarWidth = '10'\n        })\n    }\n    .backgroundColor(0xDCDCDC)\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list\\ListScrollBarWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "7378f4d06e6a2cadcf61e2b1d5da978b25fbe5c6c6540251981c2a0fbb9350a0"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct ListItemHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('BenchmarkSample')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n        CommonButton({ buttonName: 'ListItemSwipeAction', buttonUrl: 'pages/list_item/ListItemSwipeActionSample' });\n        CommonButton({ buttonName: 'ListItemSelectable', buttonUrl: 'pages/list_item/ListItemSelectableSample' });\n        CommonButton({ buttonName: 'ListItemSelected', buttonUrl: 'pages/list_item/ListItemSelectedSample' });\n      }\n      .padding('20vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list_item\\ListItemHome.ets", "project_name": "arkui_ace_engine-master", "id": "8a720ed5a965f5d8964085a0ed1a179035782c1a1fd70e8b28d1c7cbe9230f4d"}
{"text": "import listItemSelectableTest from '../MyTest/ListItemSelectableTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListItemSelectableSample {\n  @State selectableType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listItemSelectableTest)\n  }\n\n  build() {\n    Column() {\n      List() {\n        ListItem() {\n          Text('list item selectable1')\n            .backgroundColor(Color.Pink)\n            .width('100%')\n            .height(100)\n            .textAlign(TextAlign.Center)\n        }\n        .selectable(this.selectableType)\n        .id('listItemSelectable1')\n      }.multiSelectable(true)\n\n      List() {\n        ListItem() {\n          Text('list item selectable2')\n            .backgroundColor(Color.Pink)\n            .width('100%')\n            .height(100)\n            .textAlign(TextAlign.Center)\n        }\n        .selectable(true)\n        .id('listItemSelectable2')\n      }.multiSelectable(false)\n\n      Button(\"ListItemSelectable\")\n        .onClick(() => {\n          this.selectableType = !this.selectableType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list_item\\ListItemSelectableSample.ets", "project_name": "arkui_ace_engine-master", "id": "92988b76957d5a51cf13f6d59cc067f8b6505b36415d8586765b9dbed5b7f34d"}
{"text": "import listItemSelectedTest from '../MyTest/ListItemSelectedTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListItemSelectedSample {\n  @State selectedType: boolean = false\n\n  @Styles\n  selectStyles(): void {\n    .backgroundColor(0x008000)\n    .borderWidth(2)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listItemSelectedTest)\n  }\n\n  build() {\n    Column() {\n      List() {\n        ListItem() {\n          Text(\"list item selected1\")\n            .width('100%')\n            .height(100)\n        }\n        .stateStyles({ selected: this.selectStyles })\n        .selectable(true)\n        .selected(this.selectedType)\n        .backgroundColor(Color.Pink)\n        .id('listItemSelected1')\n      }\n\n      List() {\n        ListItem() {\n          Text(\"list item selected2\")\n            .width('100%')\n            .height(100)\n        }\n        .selectable(true)\n        .selected(this.selectedType)\n        .backgroundColor(Color.Pink)\n        .id('listItemSelected2')\n      }.multiSelectable(true)\n\n      Button(\"ListItemSelected\").onClick(() => {\n        this.selectedType = !this.selectedType\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list_item\\ListItemSelectedSample.ets", "project_name": "arkui_ace_engine-master", "id": "aa3b6c8cd477a3e9344fadfb28dc1e286b2b4f6af5e6adde56c4b2fdc3b75050"}
{"text": "import listItemGroupDividerTest from '../MyTest/ListItemGroupDividerTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ListItemGroupDividerSample {\n  private timeTable: string[] = ['strokeWidth', 'Number']\n  @State buttonStrokeWidth: Length = 5\n  @State buttonColor1: ResourceColor = Color.Blue\n  @State buttonColor2: ResourceColor = '#FFF000'\n  @State buttonStartMargin: Length = $r('app.string.listItemGroup_startMargin')\n  @State buttonEndMargin: Length = '50px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(listItemGroupDividerTest);\n  }\n\n  build() {\n    Scroll() {\n      Column({ space: 20 }) {\n        List({ space: 10 }) {\n          ListItemGroup() {\n            ForEach(this.timeTable, (project: string) => {\n              ListItem() {\n                Text(project)\n              }\n            })\n          }\n          .divider({\n            strokeWidth: this.buttonStrokeWidth,\n            color: this.buttonColor1,\n            startMargin: '100px',\n            endMargin: 20\n          })\n          .id('listItemGroupDivider1')\n        }\n\n        Button('ListItemGroup1')\n          .onClick(() => {\n            this.buttonStrokeWidth = '50px'\n            this.buttonColor1 = 0xff00ff\n          })\n        List({ space: 10 }) {\n          ListItemGroup() {\n            ForEach(this.timeTable, (project: string) => {\n              ListItem() {\n                Text(project)\n              }\n            })\n          }\n          .divider({\n            strokeWidth: $r('app.string.listItemGroup_strokeWidth'),\n            color: this.buttonColor2,\n            startMargin: this.buttonStartMargin,\n            endMargin: this.buttonEndMargin\n          })\n          .id('listItemGroupDivider2')\n        }\n\n        Button('ListItemGroup2')\n          .onClick(() => {\n            this.buttonColor2 = $r('app.color.listItemGroup_color')\n            this.buttonEndMargin = 50\n            this.buttonStartMargin = $r('app.string.listItemGroup_endMargin')\n          })\n        List({ space: 10 }) {\n          ListItemGroup() {\n            ForEach(this.timeTable, (project: string) => {\n              ListItem() {\n                Text(project)\n              }\n            })\n          }\n          .divider(null)\n          .id('listItemGroupDivider3')\n        }\n      }\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list_item_group\\ListItemGroupDividerSample.ets", "project_name": "arkui_ace_engine-master", "id": "0941832bd97b1c09df33544602ef4e9b69ec93a02295fc3a4164fac55b0816b6"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct ListItemGroupHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('ListItemGroupHome')\n          .padding('10vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'ListItemGroupDivider',\n          buttonUrl: 'pages/list_item_group/ListItemGroupDividerSample'\n        });\n      }\n      .padding('10vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\list_item_group\\ListItemGroupHome.ets", "project_name": "arkui_ace_engine-master", "id": "065f1a7c947d960a96e6fad3d4d2bb3a6ac76737ba4cc2e09102595133d4e137"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridCellLengthTest() {\n  \n  defineTest('gridCellLengthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridCellLengthTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridCellLength: Component = await driver.findComponent(Matcher.create().id('gridCellLength').enabled(true))\n\n    let cellLength1: string = await gridCellLength.getInspectorInfo()\n    assertEqual(JSON.parse(cellLength1).$attrs.cellLength, 100)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridCellLengthTest.ets", "project_name": "arkui_ace_engine-master", "id": "3729c0b2628b7ec7522fb5c442fefec98ba85312969dd43a8913cf985a9ca1d8"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridColumnsGapTest() {\n  \n  defineTest('gridColumnsGapTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridColumnsGapTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridColumnsGap1: Component = await driver.findComponent(Matcher.create().id('gridColumnsGap1').enabled(true))\n    let gridColumnsGap2: Component = await driver.findComponent(Matcher.create().id('gridColumnsGap2').enabled(true))\n    let gridColumnsGap3: Component = await driver.findComponent(Matcher.create().id('gridColumnsGap3').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('GridColumnsGap').enabled(true))\n    let columnsGap1: string = await gridColumnsGap1.getInspectorInfo()\n    assertEqual(JSON.parse(columnsGap1).$attrs.columnsGap, '15.00px')\n    let columnsGap2: string = await gridColumnsGap2.getInspectorInfo()\n    assertEqual(JSON.parse(columnsGap2).$attrs.columnsGap, '0.00vp')\n    let columnsGap3: string = await gridColumnsGap3.getInspectorInfo()\n    assertEqual(JSON.parse(columnsGap3).$attrs.columnsGap, '10.00vp')\n    await button.tap()\n    let columnsGap4: string = await gridColumnsGap3.getInspectorInfo()\n    assertEqual(JSON.parse(columnsGap4).$attrs.columnsGap, $r('app.float.ListLanes_float'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridColumnsGapTest.ets", "project_name": "arkui_ace_engine-master", "id": "a6cc12bdf49072ca581489ecdbdcad1fe062a423791204b5096068dc1e5ec600"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function gridEdgeEffectTest() {\n  \n  defineTest('gridEdgeEffectTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridEdgeEffectTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridEdgeEffect1: Component = await driver.findComponent(Matcher.create().id('gridEdgeEffect1').enabled(true))\n    let gridEdgeEffect2: Component = await driver.findComponent(Matcher.create().id('gridEdgeEffect2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('GridEdgeEffect').enabled(true))\n\n    let edgeEffect1: string = await gridEdgeEffect1.getInspectorInfo()\n    assertEqual(JSON.parse(edgeEffect1).$attrs.edgeEffect, 'EdgeEffect.Spring')\n    assertTrue(JSON.parse(edgeEffect1).$attrs.edgeEffectOptions.alwaysEnabled)\n    let edgeEffect2: string = await gridEdgeEffect2.getInspectorInfo()\n    assertEqual(JSON.parse(edgeEffect2).$attrs.edgeEffect, 'EdgeEffect.Fade')\n    assertFalse(JSON.parse(edgeEffect2).$attrs.edgeEffectOptions.alwaysEnabled)\n    await button.tap()\n    let edgeEffect3: string = await gridEdgeEffect2.getInspectorInfo()\n    assertEqual(JSON.parse(edgeEffect3).$attrs.edgeEffect, 'EdgeEffect.None')\n    assertFalse(JSON.parse(edgeEffect3).$attrs.edgeEffectOptions.alwaysEnabled)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridEdgeEffectTest.ets", "project_name": "arkui_ace_engine-master", "id": "7f57ff6eabbc10d6f2b6015d46a4c1b3e3352b24c7ff276de11638770682621d"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridItemColumnEndTest() {\n  \n  defineTest('gridItemColumnEndTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridItemColumnEndTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridItem: Component = await driver.findComponent(Matcher.create().id('gridItemColumnEnd').enabled(true))\n\n    let columnEnd: string = await gridItem.getInspectorInfo()\n    assertEqual(JSON.parse(columnEnd).$attrs.columnEnd, '3')\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridItemColumnEndTest.ets", "project_name": "arkui_ace_engine-master", "id": "20210ff1de420fd92f24e60d7348c0f1a0b34c05220702a3c5b8452fb4288794"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridItemRowEndTest() {\n  \n  defineTest('gridItemRowEndTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridItemRowEndTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridItem: Component = await driver.findComponent(Matcher.create().id('gridItemRowEnd').enabled(true))\n\n    let rowEnd: string = await gridItem.getInspectorInfo()\n    assertEqual(JSON.parse(rowEnd).$attrs.rowEnd, '3')\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridItemRowEndTest.ets", "project_name": "arkui_ace_engine-master", "id": "a56655af1c9619ffaf3ba5ce06d50027599f8997ff77fcd06deb7382846b9307"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridItemRowStartTest() {\n  \n  defineTest('gridItemRowStartTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridItemRowStartTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridItem: Component = await driver.findComponent(Matcher.create().id('gridItemRowStart').enabled(true))\n\n    let rowStart: string = await gridItem.getInspectorInfo()\n    assertEqual(JSON.parse(rowStart).$attrs.rowStart, '1')\n  })\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridItemRowStartTest.ets", "project_name": "arkui_ace_engine-master", "id": "78913e3936fc62850e8fd085c023459ec9e4dae5774b0cfd2fae55089df845a6"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridLayoutDirectionTest() {\n  \n  defineTest('gridLayoutDirectionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridLayoutDirectionTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridLayoutDirection1: Component =\n      await driver.findComponent(Matcher.create().id('gridLayoutDirection1').enabled(true))\n    let gridLayoutDirection2: Component =\n      await driver.findComponent(Matcher.create().id('gridLayoutDirection2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('GridLayoutDirection').enabled(true))\n\n    let layoutDirection1: string = await gridLayoutDirection1.getInspectorInfo()\n    assertEqual(JSON.parse(layoutDirection1).$attrs.layoutDirection, 'GridDirection.Row')\n    let layoutDirection2: string = await gridLayoutDirection2.getInspectorInfo()\n    assertEqual(JSON.parse(layoutDirection2).$attrs.layoutDirection, 'GridDirection.Column')\n    await button.tap()\n    let layoutDirection3: string = await gridLayoutDirection2.getInspectorInfo()\n    assertEqual(JSON.parse(layoutDirection3).$attrs.layoutDirection, 'GridDirection.RowReverse')\n    await button.tap()\n    let layoutDirection4: string = await gridLayoutDirection2.getInspectorInfo()\n    assertEqual(JSON.parse(layoutDirection4).$attrs.layoutDirection, 'GridDirection.ColumnReverse')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridLayoutDirectionTest.ets", "project_name": "arkui_ace_engine-master", "id": "42657ee0fd0f6850592eea349faa9e28645d325265ff93dd1ae934b7682741fa"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function gridRowsTemplateTest() {\n  \n  defineTest('gridRowsTemplateTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('gridRowsTemplateTestDemo running')\n    let driver: Tester = Tester.create()\n    let gridRowsTemplate1: Component =\n      await driver.findComponent(Matcher.create().id('gridRowsTemplate1').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('GridRowsTemplate').enabled(true))\n    let rowsTemplate1: string = await gridRowsTemplate1.getInspectorInfo()\n    assertEqual(JSON.parse(rowsTemplate1).$attrs.rowsTemplate, '1fr 1fr')\n    await button.tap()\n    let rowsTemplate2: string = await gridRowsTemplate1.getInspectorInfo()\n    assertEqual(JSON.parse(rowsTemplate2).$attrs.rowsTemplate, '0fr')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\GridRowsTemplateTest.ets", "project_name": "arkui_ace_engine-master", "id": "88a4f6fcfbc9ff50e4bc1aa7859fd2f5213e90138d5354ba9b430679ffd5719b"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function listScrollSnapAlignTest() {\n  \n  defineTest('listScrollSnapAlignTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('listScrollSnapAlignTestDemo running')\n    let driver: Tester = Tester.create()\n    let list1: Component = await driver.findComponent(Matcher.create().id('listScrollSnapAlign1').enabled(true))\n    let list2: Component = await driver.findComponent(Matcher.create().id('listScrollSnapAlign2').enabled(true))\n    let list3: Component = await driver.findComponent(Matcher.create().id('listScrollSnapAlign3').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ListScrollSnapAlign1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ListScrollSnapAlign2').enabled(true))\n\n    let scrollSnapAlign1: string = await list1.getInspectorInfo()\n    assertEqual(JSON.parse(scrollSnapAlign1).$attrs.scrollSnapAlign, 'ScrollSnapAlign.CENTER')\n    let scrollSnapAlign2: string = await list2.getInspectorInfo()\n    assertEqual(JSON.parse(scrollSnapAlign2).$attrs.scrollSnapAlign, 'ScrollSnapAlign.NONE')\n    let scrollSnapAlign3: string = await list3.getInspectorInfo()\n    assertEqual(JSON.parse(scrollSnapAlign3).$attrs.scrollSnapAlign, 'ScrollSnapAlign.CENTER')\n    await button1.tap()\n    let scrollSnapAlign4: string = await list1.getInspectorInfo()\n    assertEqual(JSON.parse(scrollSnapAlign4).$attrs.scrollSnapAlign, 'ScrollSnapAlign.END')\n    await button2.tap()\n    let scrollSnapAlign5: string = await list2.getInspectorInfo()\n    assertEqual(JSON.parse(scrollSnapAlign5).$attrs.scrollSnapAlign, 'ScrollSnapAlign.CENTER')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\ListScrollSnapAlignTest.ets", "project_name": "arkui_ace_engine-master", "id": "452e3569d1ba7dc3b3dcfb1ec3e842e89e44689f81dbc0dc64014a8455d562ed"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function scrollAttributeTest() {\n  \n  defineTest('scrollAttributeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('scrollAttributeTestDemo running')\n    let driver: Tester = Tester.create()\n    let scrollAttribute: Component = await driver.findComponent(Matcher.create().id('scrollAttribute').enabled(true))\n\n    let attribute: string = await scrollAttribute.getInspectorInfo()\n    assertEqual(JSON.parse(attribute).$attrs.backgroundColor.toLowerCase(), Color.Red)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\ScrollAttributeTest.ets", "project_name": "arkui_ace_engine-master", "id": "4aff4d22707d25c75675caed702f5dd4fdf342f9771f9a606e6c1e4e05d5082e"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function scrollEnablePagingTest() {\n  \n  defineTest('scrollEnablePagingTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('scrollEnablePagingTestDemo running')\n    let driver: Tester = Tester.create()\n    let scrollEnablePaging1: Component =\n      await driver.findComponent(Matcher.create().id('scrollEnablePaging1').enabled(true))\n    let scrollEnablePaging2: Component =\n      await driver.findComponent(Matcher.create().id('scrollEnablePaging2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ScrollEnablePaging').enabled(true))\n\n    let enablePaging1: string = await scrollEnablePaging1.getInspectorInfo()\n    assertFalse(JSON.parse(enablePaging1).$attrs.enablePaging == undefined)\n    assertTrue(JSON.parse(enablePaging1).$attrs.enablePaging)\n    await button.tap()\n    let enablePaging2: string = await scrollEnablePaging1.getInspectorInfo()\n    assertFalse(JSON.parse(enablePaging2).$attrs.enablePaging)\n    let edgeEffect3: string = await scrollEnablePaging2.getInspectorInfo()\n    assertFalse(JSON.parse(edgeEffect3).$attrs.enablePaging)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\ScrollEnablePagingTest.ets", "project_name": "arkui_ace_engine-master", "id": "72a15001082332063034ba56ec0492865784f42d0d232cd9a54ce2e40a1bf259"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function scrollEnableScrollInteractionTest() {\n  \n  defineTest('scrollEnableScrollInteractionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('scrollEnableScrollInteractionTestDemo running')\n    let driver: Tester = Tester.create()\n    let scrollEnableScrollInteraction: Component =\n      await driver.findComponent(Matcher.create().id('scrollEnableScrollInteraction').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('ScrollEnableScrollInteraction').enabled(true))\n\n    let enableScrollInteraction1: string = await scrollEnableScrollInteraction.getInspectorInfo()\n    assertTrue(JSON.parse(enableScrollInteraction1).$attrs.enableScrollInteraction)\n    await button.tap()\n    let enableScrollInteraction2: string = await scrollEnableScrollInteraction.getInspectorInfo()\n    assertFalse(JSON.parse(enableScrollInteraction2).$attrs.enableScrollInteraction)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\ScrollEnableScrollInteractionTest.ets", "project_name": "arkui_ace_engine-master", "id": "23cd77738bd4129fc981526104f9b65ec14a51af2cafcbd97990a8877367caef"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function scrollScrollBarWidthTest() {\n  \n  defineTest('scrollScrollBarWidthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('scrollScrollBarWidthTestDemo running')\n    let driver: Tester = Tester.create()\n    let scrollScrollBarWidth1: Component =\n      await driver.findComponent(Matcher.create().id('scrollScrollBarWidth1').enabled(true))\n    let scrollScrollBarWidth2: Component =\n      await driver.findComponent(Matcher.create().id('scrollScrollBarWidth2').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('ScrollScrollBarWidth').enabled(true))\n\n    let scrollBarWidth1: string = await scrollScrollBarWidth1.getInspectorInfo()\n    assertEqual(JSON.parse(scrollBarWidth1).$attrs.scrollBarWidth, '20.00vp')\n    await button.tap()\n    let scrollBarWidth2: string = await scrollScrollBarWidth1.getInspectorInfo()\n    assertEqual(JSON.parse(scrollBarWidth2).$attrs.scrollBarWidth, '50.00vp')\n    let scrollBarWidth3: string = await scrollScrollBarWidth2.getInspectorInfo()\n    assertEqual(JSON.parse(scrollBarWidth3).$attrs.scrollBarWidth, '1000.00vp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\ScrollScrollBarWidthTest.ets", "project_name": "arkui_ace_engine-master", "id": "232a9c9bd5d79e6d382c35c2c563ae6a90314db33b8328dae7feeb571b066c86"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function swiperDisplayModeTest() {\n  \n  defineTest('swiperDisplayModeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('swiperDisplayModeTestDemo running')\n    let driver: Tester = Tester.create()\n    let swiper1: Component = await driver.findComponent(Matcher.create().id('swiperDisplayMode1').enabled(true))\n    let swiper2: Component = await driver.findComponent(Matcher.create().id('swiperDisplayMode2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('SwiperDisplayMode1').enabled(true))\n    let displayMode1: string = await swiper1.getInspectorInfo()\n    assertEqual(JSON.parse(displayMode1).$attrs.displayMode, 'SwiperDisplayMode.AutoLinear')\n    let displayMode2: string = await swiper2.getInspectorInfo()\n    assertEqual(JSON.parse(displayMode2).$attrs.displayMode, 'SwiperDisplayMode.AutoLinear')\n    await button1.tap()\n    let displayMode3: string = await swiper1.getInspectorInfo()\n    assertEqual(JSON.parse(displayMode3).$attrs.displayMode, 'SwiperDisplayMode.Stretch')\n    let displayMode4: string = await swiper2.getInspectorInfo()\n    assertEqual(JSON.parse(displayMode4).$attrs.displayMode, 'SwiperDisplayMode.Stretch')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\SwiperDisplayModeTest.ets", "project_name": "arkui_ace_engine-master", "id": "5ef9a2f125792eeddc6ff54b64a2bbde3bd9cc367b05f99ef53eb00eba7fca68"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function swiperDurationTest() {\n  \n  defineTest('swiperDurationTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('swiperDurationTestDemo running')\n    let driver: Tester = Tester.create()\n    let swiper1: Component = await driver.findComponent(Matcher.create().id('swiperDuration1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('SwiperDuration1').enabled(true))\n    let duration1: string = await swiper1.getInspectorInfo()\n    assertEqual(JSON.parse(duration1).$attrs.duration, '600')\n    await button1.tap()\n    let duration2: string = await swiper1.getInspectorInfo()\n    assertEqual(JSON.parse(duration2).$attrs.duration, '200')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\SwiperDurationTest.ets", "project_name": "arkui_ace_engine-master", "id": "f81cb17106211ab13f4ba37489d42700bdad2e84bc753e35a09e7bde57dfa2c9"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function swiperVerticalTest() {\n  \n  defineTest('swiperVerticalTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log('swiperVerticalTestDemo running')\n    let driver: Tester = Tester.create()\n    let swiper1: Component = await driver.findComponent(Matcher.create().id('swiperVertical1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('SwiperVertical1').enabled(true))\n    let vertical1: string = await swiper1.getInspectorInfo()\n    assertTrue(JSON.parse(vertical1).$attrs.vertical)\n    await button1.tap()\n    let vertical2: string = await swiper1.getInspectorInfo()\n    assertFalse(JSON.parse(vertical2).$attrs.vertical)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\SwiperVerticalTest.ets", "project_name": "arkui_ace_engine-master", "id": "0836fdecd5036c92c7831dedbd43843e6919d7b1c0d9a592ea67fdd6a86b900c"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function waterFlowRowsTemplateTest() {\n  \n  defineTest('waterFlowRowsTemplateTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"waterFlowRowsTemplateTestDemo running\")\n    let driver: Tester = Tester.create()\n    let waterFlow: Component = await driver.findComponent(Matcher.create().id('waterFlowRowsTemplate').enabled(true))\n\n    let rowsTemplate: string = await waterFlow.getInspectorInfo()\n    assertEqual(JSON.parse(rowsTemplate).$attrs.rowsTemplate, '1fr 1fr 2fr')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\MyTest\\WaterFlowRowsTemplateTest.ets", "project_name": "arkui_ace_engine-master", "id": "09ea3d8621dbe212214953c0a7e376ec5530c9b0c55e350b1c1551ea711b642c"}
{"text": "import scrollAttributeTest from '../MyTest/ScrollAttributeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\nclass MyScrollModifier implements AttributeModifier<ScrollAttribute> {\n  isDark: boolean = false\n\n  applyNormalAttribute(instance: ScrollAttribute): void {\n    if (this.isDark) {\n      instance.backgroundColor(Color.Black)\n    } else {\n      instance.backgroundColor(Color.Red)\n    }\n  }\n}\n\n@Entry\n@Component\nstruct ScrollAttributeSample {\n  @State modifier: MyScrollModifier = new MyScrollModifier()\n  scroller: Scroller = new Scroller()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(scrollAttributeTest)\n  }\n\n  build() {\n    Row() {\n      Scroll(this.scroller) {\n        Column() {\n          Text('ScrollAttribute1')\n            .width('90%')\n            .height('40%')\n            .margin({ top: 10 })\n          Text('ScrollAttribute2')\n            .width('90%')\n            .height('40%')\n            .margin({ top: 10 })\n          Text('ScrollAttribute3')\n            .width('90%')\n            .height('40%')\n            .margin({ top: 10 })\n        }\n      }\n      .attributeModifier(this.modifier)\n      .scrollable(ScrollDirection.Vertical)\n      .id('scrollAttribute')\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\scroll\\ScrollAttributeSample.ets", "project_name": "arkui_ace_engine-master", "id": "2fcef342f825140059b43b377d2fae9f971e0a37474bad040a98c6d07a1d3d66"}
{"text": "import scrollEnableScrollInteractionTest from '../MyTest/ScrollEnableScrollInteractionTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct ScrollEnableScrollInteractionSample {\n  @State scrollEnableScrollInteraction: boolean = true\n  scroller: Scroller = new Scroller()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(scrollEnableScrollInteractionTest)\n  }\n\n  build() {\n    Column() {\n      Scroll(this.scroller) {\n        Column() {\n          Text('ScrollEnableScrollInteraction1')\n            .width('90%')\n            .height(150)\n            .margin({ top: 10 })\n          Text('ScrollEnableScrollInteraction2')\n            .width('90%')\n            .height(150)\n            .margin({ top: 10 })\n          Text('ScrollEnableScrollInteraction3')\n            .width('90%')\n            .height(150)\n            .margin({ top: 10 })\n        }.width('100%')\n      }\n      .enableScrollInteraction(this.scrollEnableScrollInteraction)\n      .id('scrollEnableScrollInteraction')\n      .margin({ top: 20, left: 20 })\n      .width('100%')\n      .height('50%')\n      .backgroundColor(0xDCDCDC)\n\n      Button('ScrollEnableScrollInteraction').onClick(() => {\n        this.scrollEnableScrollInteraction = !this.scrollEnableScrollInteraction\n      })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\scroll\\ScrollEnableScrollInteractionSample.ets", "project_name": "arkui_ace_engine-master", "id": "bbb10445ec0b2061e6a6182c9d18fc1c62c59514a0bd82bcfcce06bfc37b06dd"}
{"text": "import swiperAutoPlayTest from '../MyTest/SwiperAutoPlayTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperAutoPlaySample {\n  @State autoPlay: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperAutoPlayTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperAutoPlayText1')\n        Text('swiperAutoPlayText2')\n      }.autoPlay(true)\n      .loop(false)\n      .id('swiperAutoPlay1')\n\n      Swiper() {\n        Text('swiperAutoPlayText1')\n        Text('swiperAutoPlayText2')\n      }.autoPlay(this.autoPlay)\n      .id('swiperAutoPlay2')\n\n      Button('SwiperAutoPlay1')\n        .onClick(() => {\n          this.autoPlay = !this.autoPlay\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperAutoPlaySample.ets", "project_name": "arkui_ace_engine-master", "id": "0aa78b6516906cce20cf5b7a411ce9ce26adfa07f84ec684c246c8d6fc823e6d"}
{"text": "import swiperDisableSwipeTest from '../MyTest/SwiperDisableSwipeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperDisableSwipeSample {\n  @State select: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperDisableSwipeTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperDisableSwipeText1')\n          .width('30%')\n          .backgroundColor(Color.Black)\n        Text('swiperDisableSwipeText2')\n          .width('30%')\n          .backgroundColor(Color.Green)\n      }.disableSwipe(this.select)\n      .id('swiperDisableSwipe1')\n\n      Button('SwiperDisableSwipe1')\n        .onClick(() => {\n          this.select = !this.select\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperDisableSwipeSample.ets", "project_name": "arkui_ace_engine-master", "id": "c66ad2bec6365e69a32621a4b1e67a904721092673f15febcf55f72858890c6c"}
{"text": "import swiperDisplayModeTest from '../MyTest/SwiperDisplayModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperDisplayModeSample {\n  @State displayMode: SwiperDisplayMode = SwiperDisplayMode.AUTO_LINEAR\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperDisplayModeTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperDisplayModeText1')\n          .width('10%')\n          .backgroundColor(Color.Blue)\n        Text('swiperDisplayModeText2')\n          .width('30%')\n          .backgroundColor(Color.Orange)\n        Text('swiperDisplayModeText3')\n          .width('30%')\n          .backgroundColor(Color.Pink)\n      }.displayMode(this.displayMode)\n      .displayCount(2)\n      .id('swiperDisplayMode1')\n\n      Swiper() {\n        Text('swiperDisplayModeText1')\n          .width('30%')\n          .backgroundColor(Color.Blue)\n        Text('swiperDisplayModeText2')\n          .width('30%')\n          .backgroundColor(Color.Orange)\n        Text('swiperDisplayModeText3')\n          .width('30%')\n          .backgroundColor(Color.Pink)\n      }.displayMode(this.displayMode)\n      .id('swiperDisplayMode2')\n\n      Button('SwiperDisplayMode1')\n        .onClick(() => {\n          this.displayMode = SwiperDisplayMode.STRETCH\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperDisplayModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "2f455c5ecb4f54a8047b2205a010e45e7d63ed211d27782407c65e9b4d7a02fd"}
{"text": "import swiperDurationTest from '../MyTest/SwiperDurationTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperDurationSample {\n  @State durationNum: number = 600\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperDurationTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperDurationText1')\n          .height(60)\n          .width('30%')\n          .backgroundColor(Color.Blue)\n        Text('swiperDurationText2')\n          .height(60)\n          .width('30%')\n          .backgroundColor(Color.Green)\n      }.duration(this.durationNum)\n      .id('swiperDuration1')\n\n      Button('SwiperDuration1')\n        .onClick(() => {\n          this.durationNum = 200\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperDurationSample.ets", "project_name": "arkui_ace_engine-master", "id": "9f05f118808808589ca631e845bee1f418789851a7e99cfca3809dbee3b994fd"}
{"text": "import swiperEffectModeTest from '../MyTest/SwiperEffectModeTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperEffectModeSample {\n  @State effectMode: EdgeEffect = EdgeEffect.Fade\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperEffectModeTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperEffectModeText1').width('30%').backgroundColor(Color.Pink)\n      }.loop(false)\n      .effectMode(EdgeEffect.Spring)\n      .id('swiperEffectMode1')\n\n      Swiper() {\n        Text('swiperEffectModeText1').width('30%').backgroundColor(Color.Pink)\n      }.loop(false)\n      .effectMode(this.effectMode)\n      .id('swiperEffectMode2')\n\n      Button('SwiperEffectMode1')\n        .onClick(() => {\n          this.effectMode = EdgeEffect.None\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperEffectModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d51613afc8019b67dac324f1959ad156d4aa02f10b76fdaec1608671af9976f9"}
{"text": "import swiperIndexTest from '../MyTest/SwiperIndexTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperIndexSample {\n  @State swiperIndex: number = 1\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperIndexTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperIndexText1')\n        Text('swiperIndexText2')\n      }.index(-1)\n      .id('swiperIndex1')\n\n      Swiper() {\n        Text('swiperIndexText1')\n        Text('swiperIndexText2')\n      }.index(this.swiperIndex)\n      .id('swiperIndex2')\n\n      Button(\"SwiperIndex1\")\n        .onClick(() => {\n          this.swiperIndex = 2\n        })\n      Text(this.swiperIndex.toString())\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperIndexSample.ets", "project_name": "arkui_ace_engine-master", "id": "4df3d488fa178d42a050d60187ca1e8402a646fdf619f36148c1f30fe2a52941"}
{"text": "import swiperIntervalTest from '../MyTest/SwiperIntervalTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperIntervalSample {\n  @State intervalNum: number = 1000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperIntervalTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperIntervalText1')\n        Text('swiperIntervalText2')\n      }.autoPlay(true)\n      .interval(this.intervalNum)\n      .id('swiperInterval1')\n\n      Button('SwiperInterval1')\n        .onClick(() => {\n          this.intervalNum = 4000\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperIntervalSample.ets", "project_name": "arkui_ace_engine-master", "id": "df390b0bd6bebb8fec60401390e24643c5b8bd650ae547cbc0710edeb66f6fc4"}
{"text": "import swiperItemSpaceTest from '../MyTest/SwiperItemSpaceTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperItemSpaceSample {\n  @State itemSpace: string | number = 2\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperItemSpaceTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperItemSpaceText1')\n          .width('30%')\n          .backgroundColor(Color.Blue)\n        Text('swiperItemSpaceText2')\n          .width('30%')\n          .backgroundColor(Color.Pink)\n      }.itemSpace(\"20%\")\n      .id('swiperItemSpace1')\n\n      Swiper() {\n        Text('swiperItemSpaceText1')\n          .width('30%')\n          .backgroundColor(Color.Blue)\n        Text('swiperItemSpaceText2')\n          .width('30%')\n          .backgroundColor(Color.Pink)\n      }.itemSpace(this.itemSpace)\n      .id('swiperItemSpace2')\n\n      Button('SwiperItemSpace1')\n        .onClick(() => {\n          this.itemSpace = '15px'\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperItemSpaceSample.ets", "project_name": "arkui_ace_engine-master", "id": "e2b14ea6ff5a1f062eab64a7ad62c1fbc51135767c90ac7f0831828f9f268878"}
{"text": "import swiperLoopTest from '../MyTest/SwiperLoopTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperLoopSample {\n  @State select: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperLoopTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperLoopText1')\n        Text('swiperLoopText2')\n      }.autoPlay(true)\n      .loop(this.select)\n      .id('swiperLoop1')\n\n      Button('SwiperLoop1')\n        .onClick(() => {\n          this.select = !this.select\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperLoopSample.ets", "project_name": "arkui_ace_engine-master", "id": "34ada937a337261e617fe0263c6121e438440a32ba25136d25b9b061f8d058f6"}
{"text": "import swiperNestedScrollTest from '../MyTest/SwiperNestedScrollTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperNestScrollSample {\n  @State nestScroll: SwiperNestedScrollMode = SwiperNestedScrollMode.SELF_ONLY\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperNestedScrollTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperNestScrollText1')\n          .width('50%')\n          .backgroundColor(Color.Blue)\n        Text('swiperNestScrollText2')\n          .width('50%')\n          .backgroundColor(Color.Green)\n      }.nestedScroll(this.nestScroll)\n      .loop(true)\n      .id('swiperNestedScroll1')\n\n      Button('SwiperNestedScroll1')\n        .onClick(() => {\n          this.nestScroll = SwiperNestedScrollMode.SELF_FIRST\n        })\n      Swiper() {\n        Text('swiperNestScrollText1')\n          .width('50%')\n          .backgroundColor(Color.Blue)\n        Text('swiperNestScrollText2')\n          .width('50%')\n          .backgroundColor(Color.Green)\n      }.nestedScroll(this.nestScroll)\n      .id('swiperNestedScroll2')\n\n      Button('SwiperNestedScroll2')\n        .onClick(() => {\n          this.nestScroll = SwiperNestedScrollMode.SELF_FIRST\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperNestedScrollSample.ets", "project_name": "arkui_ace_engine-master", "id": "28a0117ac50d0df1297220e6f3e7e175f1cdbaece9227f255348650296ff35db"}
{"text": "import swiperVerticalTest from '../MyTest/SwiperVerticalTest'\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\n\n@Entry\n@Component\nstruct SwiperVerticalSample {\n  @State select: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(swiperVerticalTest)\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        Text('swiperVerticalText1')\n          .textAlign(TextAlign.Center)\n          .backgroundColor(Color.Black)\n        Text('swiperVerticalText2')\n          .textAlign(TextAlign.Center)\n          .backgroundColor(Color.Black)\n      }.vertical(this.select)\n      .id('swiperVertical1')\n\n      Button('SwiperVertical1')\n        .onClick(() => {\n          this.select = !this.select\n        })\n    }.width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\swiper\\SwiperVerticalSample.ets", "project_name": "arkui_ace_engine-master", "id": "99431abe76409c92a6f78ff6be962c7274eb7ac7a7f40b1092450cb3d8525616"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowCachedCountTest from '../MyTest/WaterFlowCachedCountTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowCachedCountSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23, 0x6A5ACD, 0x00FFFF, 0x00FF7F]\n  @State cachedCount: number = 4\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowCachedCountTest);\n  }\n\n  build() {\n    Column() {\n      WaterFlow() {\n        LazyForEach(this.dataSource, (item: number, index) => {\n          FlowItem() {\n            Text(`${index}`).fontSize(12)\n          }.width('100%').height('40').backgroundColor(this.colors[item])\n        })\n      }\n      .cachedCount(this.cachedCount)\n      .backgroundColor(0xFAEEE0)\n      .width('100%')\n      .height('100')\n      .id('waterFlowCachedCount')\n\n      Button('WaterFlowCachedCount')\n        .onClick(() => {\n          this.cachedCount = -1\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowCachedCountSample.ets", "project_name": "arkui_ace_engine-master", "id": "bf1e8b59f46a5c62cbf7234f24e1a80f95519c2a5cd8e3f014ebafb8ea951625"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowColumnsTemplateTest from '../MyTest/WaterFlowColumnsTemplateTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowColumnsTemplateSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23, 0x6A5ACD, 0x00FFFF, 0x00FF7F]\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowColumnsTemplateTest);\n  }\n\n  build() {\n    WaterFlow() {\n      FlowItem() {\n        Text(\"1\").fontSize(12)\n      }.width('100%').backgroundColor(this.colors[0])\n\n      FlowItem() {\n        Text(\"2\").fontSize(12)\n      }.width('100%').backgroundColor(this.colors[1])\n\n      FlowItem() {\n        Text(\"3\").fontSize(12)\n      }.width('100%').backgroundColor(this.colors[2])\n    }\n    .columnsTemplate('1fr 1fr 20fr')\n    .backgroundColor(0xFAEEE0)\n    .width('100%')\n    .height('100')\n    .id('waterFlowColumnsTemplate')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowColumnsTemplateSample.ets", "project_name": "arkui_ace_engine-master", "id": "66cebafa2e1fe452140d4f7a4520b3d3ad9a4b272bccd22a09bf4e36cb799514"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowEnableScrollInteractionTest from '../MyTest/WaterFlowEnableScrollInteractionTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowEnableScrollInteractionSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23, 0x6A5ACD, 0x00FFFF, 0x00FF7F]\n  @State enableScrollInteractionType: boolean = true\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowEnableScrollInteractionTest);\n  }\n\n  build() {\n    Column() {\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[1])\n\n        FlowItem() {\n          Text(\"3\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[2])\n\n        FlowItem() {\n          Text(\"4\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[3])\n      }\n      .enableScrollInteraction(this.enableScrollInteractionType)\n      .backgroundColor(0xFAEEE0)\n      .width('100%')\n      .height('100')\n      .margin({ bottom: 10 })\n      .id('waterFlowEnableScrollInteraction')\n\n      Button('WaterFlowEnableScrollInteraction')\n        .onClick(() => {\n          this.enableScrollInteractionType = !this.enableScrollInteractionType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowEnableScrollInteractionSample.ets", "project_name": "arkui_ace_engine-master", "id": "449d0d1ee551964d6f3bbf356dae778458ac6e3cee1ee0ab5a1f4e7f2f84835b"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowFrictionTest from '../MyTest/WaterFlowFrictionTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowFrictionSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23]\n  @State frictionType: number | Resource = 2\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowFrictionTest);\n  }\n\n  build() {\n    Column() {\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('160').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('160').backgroundColor(this.colors[1])\n\n        FlowItem() {\n          Text(\"3\").fontSize(12)\n        }.width('100%').height('160').backgroundColor(this.colors[2])\n      }\n      .friction(this.frictionType)\n      .backgroundColor(0xFAEEE0)\n      .width('100%')\n      .height('200')\n      .id('waterFlowFriction1')\n\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('160').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('160').backgroundColor(this.colors[1])\n\n        FlowItem() {\n          Text(\"3\").fontSize(12)\n        }.width('100%').height('160').backgroundColor(this.colors[2])\n      }\n      .friction(-1)\n      .backgroundColor(0xFAEEE0)\n      .width('100%')\n      .height('200')\n      .id('waterFlowFriction2')\n\n      Button('WaterFlowFriction')\n        .onClick(() => {\n          this.frictionType = $r('app.string.length')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowFrictionSample.ets", "project_name": "arkui_ace_engine-master", "id": "92d7c2a3378b3be3fc2750beedb64c4b0a6f1230fdaa15fa4764dace8495182a"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowItemConstraintSizeTest from '../MyTest/WaterFlowItemConstraintSizeTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowItemConstraintSizeSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23, 0x6A5ACD, 0x00FFFF, 0x00FF7F]\n  @State itemConstraintSizeType: ConstraintSizeOptions = {\n    minWidth: 0,\n    maxWidth: 600,\n    minHeight: 0,\n    maxHeight: 600\n  }\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowItemConstraintSizeTest);\n  }\n\n  build() {\n    Column() {\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[1])\n      }\n      .itemConstraintSize({\n        minWidth: $r('app.string.length'),\n        maxWidth: $r('app.string.length'),\n        minHeight: $r('app.string.length'),\n        maxHeight: $r('app.string.length')\n      })\n      .width('100%')\n      .height('100')\n      .margin({ bottom: \"20\" })\n      .id('waterFlowItemConstraintSize1')\n\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[1])\n      }\n      .itemConstraintSize(this.itemConstraintSizeType)\n      .width('100%')\n      .height('100')\n      .margin({ bottom: 10 })\n      .id('waterFlowItemConstraintSize2')\n\n      Button('WaterFlowItemConstraintSize')\n        .onClick(() => {\n          this.itemConstraintSizeType = {\n            minWidth: '0%',\n            maxWidth: '100%',\n            minHeight: '0%',\n            maxHeight: '100%'\n          }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowItemConstraintSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "4aa4816a483d3da3c4e2d709595ff178b398e048720dbbaac744c4dd2bda671b"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowLayoutDirectionTest from '../MyTest/WaterFlowLayoutDirectionTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowLayoutDirectionSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23]\n  @State layoutDirectionType: FlexDirection = FlexDirection.Row\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowLayoutDirectionTest);\n  }\n\n  build() {\n    Column() {\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('50%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('50%').height('40').backgroundColor(this.colors[1])\n      }\n      .layoutDirection(FlexDirection.Column)\n      .width('100%')\n      .height('100')\n      .margin({ bottom: 10 })\n      .id('waterFlowLayoutDirection1')\n\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('50%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('50%').height('40').backgroundColor(this.colors[1])\n      }\n      .layoutDirection(this.layoutDirectionType)\n      .width('100%')\n      .height('100')\n      .id('waterFlowLayoutDirection2')\n\n      Button('WaterFlowLayoutDirection1')\n        .onClick(() => {\n          this.layoutDirectionType = FlexDirection.ColumnReverse\n        })\n      Button('WaterFlowLayoutDirection2')\n        .onClick(() => {\n          this.layoutDirectionType = FlexDirection.RowReverse\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowLayoutDirectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "07c05d11c7704068f8805fc32002ec912a6074b9d5f75e15ccf39fe439f1c3c9"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowRowsGapTest from '../MyTest/WaterFlowRowsGapTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowRowsGapSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23, 0x6A5ACD, 0x00FFFF, 0x00FF7F]\n  @State rowsGapType: Length = 10\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowRowsGapTest);\n  }\n\n  build() {\n    Column() {\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[1])\n      }\n      .rowsGap($r('app.string.length'))\n      .rowsTemplate('1fr 1fr 2fr')\n      .width('100%')\n      .height('100')\n      .margin({ bottom: 20 })\n      .id('waterFlowRowsGap1')\n\n      WaterFlow() {\n        FlowItem() {\n          Text(\"1\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[0])\n\n        FlowItem() {\n          Text(\"2\").fontSize(12)\n        }.width('100%').height('40').backgroundColor(this.colors[1])\n      }\n      .rowsGap(this.rowsGapType)\n      .rowsTemplate('1fr 1fr 2fr')\n      .width('100%')\n      .height('100')\n      .margin({ bottom: 10 })\n      .id('waterFlowRowsGap2')\n\n      Button('WaterFlowRowsGap')\n        .onClick(() => {\n          this.rowsGapType = '80px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowRowsGapSample.ets", "project_name": "arkui_ace_engine-master", "id": "49213cd5b744266de3f1062dea17464b6dc6dc96f70c5980d76af92de1c714e8"}
{"text": "import { WaterFlowDataSource } from '../MyTest/WaterFlowDataSource'\nimport waterFlowRowsTemplateTest from '../MyTest/WaterFlowRowsTemplateTest';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest';\n\n@Entry\n@Component\nstruct WaterFlowRowsTemplateSample {\n  @State colors: number[] = [0xFFC0CB, 0xDA70D6, 0x6B8E23]\n  dataSource: WaterFlowDataSource = new WaterFlowDataSource()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(waterFlowRowsTemplateTest);\n  }\n\n  build() {\n    WaterFlow() {\n      FlowItem() {\n        Text(\"1\").fontSize(12)\n      }.width('10%').backgroundColor(this.colors[0])\n\n      FlowItem() {\n        Text(\"2\").fontSize(12)\n      }.width('10%').backgroundColor(this.colors[1])\n\n      FlowItem() {\n        Text(\"3\").fontSize(12)\n      }.width('10%').backgroundColor(this.colors[2])\n    }\n    .rowsTemplate('1fr 1fr 2fr')\n    .layoutDirection(FlexDirection.Row)\n    .id('waterFlowRowsTemplate')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\scroll_container\\entry\\src\\main\\ets\\pages\\water_flow\\WaterFlowRowsTemplateSample.ets", "project_name": "arkui_ace_engine-master", "id": "a5389489ddd71465cfceded5eb94d71690280e858db4425931d8383007a3e101"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct ImageSpanHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('textHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({ buttonName: 'ImageSpanObjectFit', buttonUrl: 'pages/rich_text/ImageSpanObjectFitSample' });\n        CommonButton({\n          buttonName: 'ImageSpanTextBackgroundStyle',\n          buttonUrl: 'pages/rich_text/ImageSpanTextBackgroundStyleSample'\n        });\n        CommonButton({\n          buttonName: 'ImageSpanVerticalAlign',\n          buttonUrl: 'pages/rich_text/ImageSpanVerticalAlignSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\image_span\\ImageSpanHome.ets", "project_name": "arkui_ace_engine-master", "id": "b2d29abec3549ec190b35332fa56bf689e6d63a1d3b309fc0ead02c0509be088"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport imageSpanObjectFitTest from '../MyTest/ImageSpanObjectFitTest'\n\n@Entry\n@Component\nstruct ImageSpanObjectFitSample {\n  @State objectFitType: ImageFit = ImageFit.Auto\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageSpanObjectFitTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .objectFit(ImageFit.Contain)\n          .width('200px')\n          .height('200px')\n          .id('imageSpanObjectFit1')\n      }\n\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .objectFit(ImageFit.Cover)\n          .width('200px')\n          .height('200px')\n          .id('imageSpanObjectFit2')\n      }\n\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .objectFit(this.objectFitType)\n          .width('200px')\n          .height('200px')\n          .id('imageSpanObjectFit3')\n      }\n\n      Button('ImageSpanObjectFit1')\n        .onClick(() => {\n          this.objectFitType = ImageFit.Fill\n        })\n      Button('ImageSpanObjectFit2')\n        .onClick(() => {\n          this.objectFitType = ImageFit.ScaleDown\n        })\n      Button('ImageSpanObjectFit3')\n        .onClick(() => {\n          this.objectFitType = ImageFit.None\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\image_span\\ImageSpanObjectFitSample.ets", "project_name": "arkui_ace_engine-master", "id": "187ebcf40d4a1559c009aa3655728dc42f4639b3bd5b830503a361f3398478a8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport imageSpanTextBackgroundStyleTest from '../MyTest/ImageSpanTextBackgroundStyleTest'\n\n@Entry\n@Component\nstruct ImageSpanTextBackgroundStyleSample {\n  @State textBackgroundStyleType1: TextBackgroundStyle = { radius: '50vp', color: 0xFF1493 }\n  @State textBackgroundStyleType2: TextBackgroundStyle[] =\n    [{ radius: '50%', color: 0x7FFF00 }, { radius: $r('app.string.vp_length'), color: 0x7FFF00 },\n      {\n        radius: {\n          topLeft: 10,\n          topRight: 10,\n          bottomLeft: 20,\n          bottomRight: 20\n        },\n        color: 0x7FFF00\n      }, {\n        radius: {\n          topLeft: '10px',\n          topRight: '10px',\n          bottomLeft: '20px',\n          bottomRight: '20px'\n        }, color: 0x7FFF00\n      }, {\n        radius: {\n          topLeft: $r('app.string.vp_length'),\n          topRight: $r('app.string.vp_length'),\n          bottomLeft: $r('app.string.vp_length'),\n          bottomRight: $r('app.string.vp_length')\n        },\n        color: 0x7FFF00\n      }]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageSpanTextBackgroundStyleTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .textBackgroundStyle({ radius: '10px', color: Color.Green })\n          .width('200px')\n          .height('200px')\n          .id('imageSpanTextBackgroundStyle1')\n      }\n\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .textBackgroundStyle(this.textBackgroundStyleType1)\n          .width('200px')\n          .height('200px')\n          .id('imageSpanTextBackgroundStyle2')\n      }\n\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .textBackgroundStyle(this.textBackgroundStyleType2[this.index])\n          .width('200px')\n          .height('200px')\n          .id('imageSpanTextBackgroundStyle3')\n      }\n\n      Button('ImageSpanTextBackgroundStyle1')\n        .onClick(() => {\n          this.textBackgroundStyleType1 = { radius: '10fp', color: '#7FFFD4' }\n        })\n      Button('ImageSpanTextBackgroundStyle2')\n        .onClick(() => {\n          this.textBackgroundStyleType1 = { radius: '40lpx', color: $r('sys.color.ohos_id_color_text_hyperlink') }\n        })\n      Button('ImageSpanTextBackgroundStyle3')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\image_span\\ImageSpanTextBackgroundStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "c3fa4c5655f360559a848698b1c0d6e14fc5cea50d5e329b5af4ed5b45dbd7aa"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport imageSpanVerticalAlignTest from '../MyTest/ImageSpanVerticalAlignTest'\n\n@Entry\n@Component\nstruct ImageSpanVerticalAlignSample {\n  @State verticalAlignType: ImageSpanAlignment = ImageSpanAlignment.BOTTOM\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(imageSpanVerticalAlignTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .verticalAlign(ImageSpanAlignment.TOP)\n          .width('200px')\n          .height('200px')\n          .margin({ bottom: 10 })\n          .id('imageSpanVerticalAlign1')\n      }\n\n      Text() {\n        ImageSpan($r('app.media.startIcon'))\n          .verticalAlign(this.verticalAlignType)\n          .width('200px')\n          .height('200px')\n          .id('imageSpanVerticalAlign2')\n      }\n\n      Button('ImageSpanVerticalAlign1')\n        .onClick(() => {\n          this.verticalAlignType = ImageSpanAlignment.CENTER\n        })\n      Button('ImageSpanVerticalAlign2')\n        .onClick(() => {\n          this.verticalAlignType = ImageSpanAlignment.BASELINE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\image_span\\ImageSpanVerticalAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "937b59ff86c675304609f303550acf54cd5fae0bb1993eb6f46cc04689c4ce76"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function imageSpanVerticalAlignTest() {\n  \n  defineTest('imageSpanVerticalAlignTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"imageSpanVerticalAlignTestDemo running\")\n    let driver: Tester = Tester.create()\n    let imageSpan1: Component = await driver.findComponent(Matcher.create().id('imageSpanVerticalAlign1').enabled(true))\n    let imageSpan2: Component = await driver.findComponent(Matcher.create().id('imageSpanVerticalAlign2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('ImageSpanVerticalAlign1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('ImageSpanVerticalAlign2').enabled(true))\n\n    let verticalAlign1: string = await imageSpan1.getInspectorInfo()\n    assertEqual(JSON.parse(verticalAlign1).$attrs.verticalAlign, 'VerticalAlign.TOP')\n    let verticalAlign2: string = await imageSpan2.getInspectorInfo()\n    assertEqual(JSON.parse(verticalAlign2).$attrs.verticalAlign, 'VerticalAlign.BOTTOM')\n\n    await button1.tap()\n    let verticalAlign3: string = await imageSpan2.getInspectorInfo()\n    assertEqual(JSON.parse(verticalAlign3).$attrs.verticalAlign, 'VerticalAlign.CENTER')\n    await button2.tap()\n    let verticalAlign4: string = await imageSpan2.getInspectorInfo()\n    assertEqual(JSON.parse(verticalAlign4).$attrs.verticalAlign, 'VerticalAlign.BASELINE')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\ImageSpanVerticalAlignTest.ets", "project_name": "arkui_ace_engine-master", "id": "ec6fe99602e2db55b2a680b6827f3085d23b2593425f2ae45c6bd6be6a979888"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function patternLockAutoResetTest() {\n  \n  defineTest('patternLockAutoResetTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"patternLockAutoResetTestDemo running\")\n    let driver: Tester = Tester.create()\n    let patternLock1: Component = await driver.findComponent(Matcher.create().id('patternLockAutoReset').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('PatternLockAutoReset').enabled(true))\n\n    let autoReset1: string = await patternLock1.getInspectorInfo()\n    assertTrue(JSON.parse(autoReset1).$attrs.autoReset)\n\n    await button.tap()\n    let autoReset2: string = await patternLock1.getInspectorInfo()\n    assertFalse(JSON.parse(autoReset2).$attrs.autoReset)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\PatternLockAutoResetTest.ets", "project_name": "arkui_ace_engine-master", "id": "781cf5c40bde8aa1af3937b7eaca8013d8773dbc6a51e39b03bebfec31262c81"}
{"text": "import { assertEqual } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function patternLockCircleRadiusTest() {\n  \n  defineTest('patternLockCircleRadiusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"patternLockCircleRadiusTestDemo running\")\n    let driver: Tester = Tester.create()\n    let patternLock1: Component =\n      await driver.findComponent(Matcher.create().id('patternLockCircleRadius1').enabled(true))\n    let patternLock2: Component =\n      await driver.findComponent(Matcher.create().id('patternLockCircleRadius2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('PatternLockCircleRadius1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('PatternLockCircleRadius2').enabled(true))\n\n    let circleRadius1: string = await patternLock1.getInspectorInfo()\n    assertEqual(JSON.parse(circleRadius1).$attrs.circleRadius, '50.00vp')\n    let circleRadius2: string = await patternLock2.getInspectorInfo()\n    assertEqual(JSON.parse(circleRadius2).$attrs.circleRadius, $r('app.string.vp_length'))\n\n    await button1.tap()\n    let circleRadius3: string = await patternLock1.getInspectorInfo()\n    assertEqual(JSON.parse(circleRadius3).$attrs.circleRadius, '20.00px')\n    await button2.tap()\n    let circleRadius4: string = await patternLock1.getInspectorInfo()\n    assertEqual(JSON.parse(circleRadius4).$attrs.circleRadius, '6.00vp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\PatternLockCircleRadiusTest.ets", "project_name": "arkui_ace_engine-master", "id": "9132decfba19829e1b772a09c8390fe02996864d54cd3598897f4bb732218e5f"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function richEditorCustomKeyboardTest() {\n  \n  defineTest('richEditorCustomKeyboardTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"richEditorCustomKeyboardTestDemo running\")\n    let driver: Tester = Tester.create()\n\n    let richEditor: Component = await driver.findComponent(Matcher.create().id('richEditorCustomKeyboard').enabled())\n    await richEditor.tap()\n    let grid: Component = await driver.findComponent(Matcher.create().text('1').enabled())\n    let type: string = await grid.getType()\n    assertEqual(type, 'Button')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\RichEditorCustomKeyboardTest.ets", "project_name": "arkui_ace_engine-master", "id": "c3a15688506b8b9599ac8154b10870376be2a65270b28afd1bce7170a85ec622"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function searchCustomKeyboardTest() {\n  \n  defineTest('searchCustomKeyboardTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"searchCustomKeyboardTestDemo running\")\n    let driver: Tester = Tester.create()\n    let search1: Component = await driver.findComponent(Matcher.create().id('searchCustomKeyboard1').enabled(true))\n    search1.tap()\n    let grid: Component = await driver.findComponent(Matcher.create().text('1').enabled())\n    let type: string = await grid.getType()\n    assertEqual(type, 'Button')\n    \n    \n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\SearchCustomKeyboardTest.ets", "project_name": "arkui_ace_engine-master", "id": "15655141a093e91a26551cadd0790bd72e0eabceb59039c4257df6cc3ebe243d"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function searchEnableKeyboardOnFocusTest() {\n  \n  defineTest('searchEnableKeyboardOnFocusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"searchEnableKeyboardOnFocusTestDemo running\")\n    let driver: Tester = Tester.create()\n    let search1: Component =\n      await driver.findComponent(Matcher.create().id('searchEnableKeyboardOnFocus1').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('SearchEnableKeyboardOnFocus').enabled(true))\n\n    let enableKeyboardOnFocus1: string = await search1.getInspectorInfo()\n    assertFalse(JSON.parse(enableKeyboardOnFocus1).$attrs.enableKeyboardOnFocus == undefined)\n    assertTrue(JSON.parse(enableKeyboardOnFocus1).$attrs.enableKeyboardOnFocus)\n\n    await button1.tap()\n    let enableKeyboardOnFocus2: string = await search1.getInspectorInfo()\n    assertFalse(JSON.parse(enableKeyboardOnFocus2).$attrs.enableKeyboardOnFocus)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\SearchEnableKeyboardOnFocusTest.ets", "project_name": "arkui_ace_engine-master", "id": "120887f7325aede2b65f73718a6663f22e0a5ebdba8329b1dc33df02145f3b13"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function searchMaxLengthTest() {\n  \n  defineTest('searchMaxLengthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"searchMaxLengthTestDemo running\")\n    let driver: Tester = Tester.create()\n    let search1: Component = await driver.findComponent(Matcher.create().id('searchMaxLength1').enabled(true))\n\n    let maxLength: string = await search1.getInspectorInfo()\n    assertEqual(JSON.parse(maxLength).$attrs.maxLength, '10')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\SearchMaxLengthTest.ets", "project_name": "arkui_ace_engine-master", "id": "c94457fcb3b19acdba8edb9dff3932e2226a8efd81605b5ad0b06ded84dad032"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function searchSelectionMenuHiddenTest() {\n  \n  defineTest('searchSelectionMenuHiddenTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"searchSelectionMenuHiddenTestDemo running\")\n    let driver: Tester = Tester.create()\n    let search1: Component = await driver.findComponent(Matcher.create().id('searchSelectionMenuHidden').enabled(true))\n    let button1: Component =\n      await driver.findComponent(Matcher.create().text('SearchSelectionMenuHidden').enabled(true))\n\n    let selectionMenuHidden1: string = await search1.getInspectorInfo()\n    assertFalse(JSON.parse(selectionMenuHidden1).$attrs.selectionMenuHidden == undefined)\n    assertTrue(JSON.parse(selectionMenuHidden1).$attrs.selectionMenuHidden)\n\n    await button1.tap()\n    let selectionMenuHidden2: string = await search1.getInspectorInfo()\n    assertFalse(JSON.parse(selectionMenuHidden2).$attrs.selectionMenuHidden)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\SearchSelectionMenuHiddenTest.ets", "project_name": "arkui_ace_engine-master", "id": "8f877d8c6c13f65d996cb0800da43c309a9add345313de92ea300eb4ea06230a"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest';\n\nexport default async function spanFontColorTest() {\n  \n  defineTest('spanFontColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"spanFontColorTestDemo running\")\n    let driver: Tester = Tester.create()\n    let span1: Component = await driver.findComponent(Matcher.create().id('spanFontColor1').enabled(true))\n    let span2: Component = await driver.findComponent(Matcher.create().id('spanFontColor2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('SpanFontColor1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('SpanFontColor2').enabled(true))\n\n    assertFalse(span1 == null)\n    let fontColor1: string = await span1.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor1).$attrs.fontColor, Color.Blue)\n    let fontColor2: string = await span2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor2).$attrs.fontColor, 0x0000FF)\n\n    await button1.tap()\n    let fontColor3: string = await span2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor3).$attrs.fontColor, 'rgb(255, 100, 255)')\n    await button2.tap()\n    let fontColor4: string = await span2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor4).$attrs.fontColor, $r('sys.color.ohos_id_color_text_hyperlink'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\SpanFontColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "9c1bf25c1a4d3ebc8108c0a6dae86d5437d30d271d2804b651c66000d055b57a"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textAreaFontColorTest() {\n  \n  defineTest('textAreaFontColorTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textAreaFontColorTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textArea1: Component = await driver.findComponent(Matcher.create().id('textAreaFontColor1').enabled(true))\n    let textArea2: Component = await driver.findComponent(Matcher.create().id('textAreaFontColor2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('TextAreaFontColor1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('TextAreaFontColor2').enabled(true))\n\n    let fontColor1: string = await textArea1.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor1).$attrs.fontColor.toLowerCase(), Color.Orange)\n    let fontColor2: string = await textArea2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor2).$attrs.fontColor.toLowerCase(), '#ffffffff')\n\n    await button1.tap()\n    let fontColor3: string = await textArea2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor3).$attrs.fontColor, '#FFFF64FF')\n\n    await button2.tap()\n    let fontColor4: string = await textArea2.getInspectorInfo()\n    assertEqual(JSON.parse(fontColor4).$attrs.fontColor, $r('sys.color.ohos_id_color_text_hyperlink'))\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextAreaFontColorTest.ets", "project_name": "arkui_ace_engine-master", "id": "9d6270e99ab2e5dc6a84ab8f3dda798efa7c916a5b07cf369cc7147fcf96fe10"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textAreaFontFamilyTest() {\n  \n  defineTest('textAreaFontFamilyTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textAreaFontFamilyTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textArea: Component = await driver.findComponent(Matcher.create().id('textAreaFontFamily').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextAreaFontFamily').enabled(true))\n\n    let fontFamily1: string = await textArea.getInspectorInfo()\n    assertEqual(JSON.parse(fontFamily1).$attrs.fontFamily, 'Arial')\n\n    await button.tap()\n    let fontFamily2: string = await textArea.getInspectorInfo()\n    assertEqual(JSON.parse(fontFamily2).$attrs.fontFamily, 'TESTFONTRawFile')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextAreaFontFamilyTest.ets", "project_name": "arkui_ace_engine-master", "id": "cbee6df07bbcbe514608df2dc158e8fa1a5b080ef3a94bdba72358f6dcaa5f6c"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textAreaMaxLengthTest() {\n  \n  defineTest('textAreaMaxLengthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textAreaMaxLengthTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textArea: Component = await driver.findComponent(Matcher.create().id('textAreaMaxLength').enabled(true))\n\n    let maxLength: string = await textArea.getInspectorInfo()\n    assertEqual(JSON.parse(maxLength).$attrs.maxLength, '10')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextAreaMaxLengthTest.ets", "project_name": "arkui_ace_engine-master", "id": "3ec3c06d7742b450f98cbf0d3b91f551c1e4546025e40a1c737b89dab48f0aec"}
{"text": "import { assertEqual, assertFalse } from '@ohos.arkui.componentTest';\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function textDataDetectorConfigTest() {\n  \n  defineTest('textDataDetectorConfigTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textDataDetectorConfigTestDemo running\")\n    let driver: Tester = Tester.create()\n    let text1: Component = await driver.findComponent(Matcher.create().id('textDataDetectorConfig1').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('TextDataDetectorConfig1').enabled(true))\n\n    let dataDetectorConfig1: string = await text1.getInspectorInfo()\n    assertFalse(JSON.parse(dataDetectorConfig1).$attrs.dataDetectorConfig.types == undefined)\n    assertEqual(JSON.parse(dataDetectorConfig1).$attrs.dataDetectorConfig.types, [TextDataDetectorType.PHONE_NUMBER])\n    assertEqual(JSON.parse(dataDetectorConfig1).$attrs.dataDetectorConfig.onDetectResultUpdate, (result: string) => {\n    })\n\n    await button1.tap()\n    let dataDetectorConfig3: string = await text1.getInspectorInfo()\n    assertEqual(JSON.parse(dataDetectorConfig3).$attrs.dataDetectorConfig.types, [TextDataDetectorType.URL])\n    await button1.tap()\n    assertEqual(JSON.parse(dataDetectorConfig3).$attrs.dataDetectorConfig.types, [TextDataDetectorType.EMAIL])\n    await button1.tap()\n    assertEqual(JSON.parse(dataDetectorConfig3).$attrs.dataDetectorConfig.types, [TextDataDetectorType.ADDRESS])\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextDataDetectorConfigTest.ets", "project_name": "arkui_ace_engine-master", "id": "6aeeb847a2b22458a81ef610afc14096a0fd77881ea19537cc211f58777ca747"}
{"text": "import { assertEqual, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function textInputCaretPositionTest() {\n  \n  defineTest('textInputCaretPositionTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputCaretPositionTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputCaretPosition').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextInputCaretPosition').enabled(true))\n\n    assertTrue(textInput == null)\n    await button.tap()\n    let caretPosition: string = await textInput.getInspectorInfo()\n    assertEqual(JSON.parse(caretPosition).$attrs.caretPosition, 5)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputCaretPositionTest.ets", "project_name": "arkui_ace_engine-master", "id": "8d3a0e5ff1adcea4fbf4e7687107bbe246f41992174a4bc6c4ac99dd3158feb7"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textInputEnableAutoFillTest() {\n  \n  defineTest('textInputEnableAutoFillTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputEnableAutoFillTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputEnableAutoFill').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextInputEnableAutoFill').enabled(true))\n\n    let enableAutoFill1: string = await textInput.getInspectorInfo()\n    assertTrue(JSON.parse(enableAutoFill1).$attrs.enableAutoFill)\n\n    await button.tap()\n    let enableAutoFill2: string = await textInput.getInspectorInfo()\n    assertFalse(JSON.parse(enableAutoFill2).$attrs.enableAutoFill1 == undefined)\n    assertFalse(JSON.parse(enableAutoFill2).$attrs.enableAutoFill1)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputEnableAutoFillTest.ets", "project_name": "arkui_ace_engine-master", "id": "5d80506c184ba648d41bc7a66a166bb7dfedaa4ec4d66b82d116faf980e24112"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textInputEnableKeyboardOnFocusTest() {\n  \n  defineTest('textInputEnableKeyboardOnFocusTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputEnableKeyboardOnFocusTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component =\n      await driver.findComponent(Matcher.create().id('textInputEnableKeyboardOnFocus').enabled(true))\n    let button: Component =\n      await driver.findComponent(Matcher.create().text('TextInputEnableKeyboardOnFocus').enabled(true))\n\n    let enableKeyboardOnFocus1: string = await textInput.getInspectorInfo()\n    assertFalse(JSON.parse(enableKeyboardOnFocus1).$attrs.enableKeyboardOnFocus == undefined)\n    assertTrue(JSON.parse(enableKeyboardOnFocus1).$attrs.enableKeyboardOnFocus)\n\n    await button.tap()\n    let enableKeyboardOnFocus2: string = await textInput.getInspectorInfo()\n    assertFalse(JSON.parse(enableKeyboardOnFocus2).$attrs.enableKeyboardOnFocus)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputEnableKeyboardOnFocusTest.ets", "project_name": "arkui_ace_engine-master", "id": "3882f5f7ea50ae42e7828e5134d6a8529ab817bb9542bbdd05e2959746aaa344"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textInputFontSizeTest() {\n  \n  defineTest('textInputFontSizeTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputFontSizeTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputFontSize').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('TextInputFontSize1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('TextInputFontSize2').enabled(true))\n\n    let fontSize1: string = await textInput.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize1).$attrs.fontSize, '20.00px')\n\n    await button2.tap()\n    let fontSize2: string = await textInput.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize2).$attrs.fontSize, $r('app.string.fp_length'))\n\n    await button1.tap()\n    let fontSize3: string = await textInput.getInspectorInfo()\n    assertEqual(JSON.parse(fontSize3).$attrs.fontSize, '400.00fp')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputFontSizeTest.ets", "project_name": "arkui_ace_engine-master", "id": "25023d24e83db4b49c13785ffb54fce8a5a08749dae8feaa1a07b65092fea1d8"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textInputMaxLengthTest() {\n  \n  defineTest('textInputMaxLengthTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputMaxLengthTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputMaxLength').enabled(true))\n\n    let maxLength: string = await textInput.getInspectorInfo()\n    assertEqual(JSON.parse(maxLength).$attrs.maxLength, '10')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputMaxLengthTest.ets", "project_name": "arkui_ace_engine-master", "id": "6cf61a4611fe7fef303ef75f3ca311bd6697928331b5537c395ec0d25662b29f"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textInputMaxLinesTest() {\n  \n  defineTest('textInputMaxLinesTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputMaxLinesTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputMaxLines').enabled(true))\n\n    let maxLines: string = await textInput.getInspectorInfo()\n    assertEqual(JSON.parse(maxLines).$attrs.maxLines, '3')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputMaxLinesTest.ets", "project_name": "arkui_ace_engine-master", "id": "6003b1ef497b63380961bfa3cf2eb54f4e4c4fdf6c148d0a264ab6a393f8c2c8"}
{"text": "import {\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textInputSelectAllTest() {\n  \n  defineTest('textInputSelectAllTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputSelectAllTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputSelectAll').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextInputSelectAll').enabled(true))\n\n    let selectAll1: string = await textInput.getInspectorInfo()\n    assertTrue(JSON.parse(selectAll1).$attrs.selectAll)\n\n    await button.tap()\n    let selectAll2: string = await textInput.getInspectorInfo()\n    assertFalse(JSON.parse(selectAll2).$attrs.selectAll)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputSelectAllTest.ets", "project_name": "arkui_ace_engine-master", "id": "342794586356525c1450e9d175ac18febfb95bbf0ecc544bd74d5239184a60ea"}
{"text": "import {\n  assertEqual,\n  assertFalse,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textInputShowCounterTest() {\n  \n  defineTest('textInputShowCounterTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputShowCounterTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput1: Component = await driver.findComponent(Matcher.create().id('textInputShowCounter1').enabled(true))\n    let textInput2: Component = await driver.findComponent(Matcher.create().id('textInputShowCounter2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('TextInputShowCounter1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('TextInputShowCounter2').enabled(true))\n\n    let showCounter1: string = await textInput1.getInspectorInfo()\n    assertTrue(JSON.parse(showCounter1).$attrs.showCounter.value)\n    assertFalse(JSON.parse(showCounter1)\n      .$attrs\n      .showCounter\n      .options\n      .highlightBorder)\n    let showCounter2: string = await textInput2.getInspectorInfo()\n    assertTrue(JSON.parse(showCounter2).$attrs.showCounter.value)\n    assertEqual(JSON.parse(showCounter2)\n      .$attrs\n      .showCounter\n      .options\n      .thresholdPercentage, 70)\n    assertTrue(JSON.parse(showCounter2)\n      .$attrs\n      .showCounter\n      .options\n      .highlightBorder)\n\n    await button1.tap()\n    let showCounter3: string = await textInput1.getInspectorInfo()\n    assertFalse(JSON.parse(showCounter3).$attrs.showCounter.value)\n    await button2.tap()\n    let showCounter4: string = await textInput1.getInspectorInfo()\n    assertTrue(JSON.parse(showCounter4)\n      .$attrs\n      .showCounter\n      .options\n      .highlightBorder)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputShowCounterTest.ets", "project_name": "arkui_ace_engine-master", "id": "002652af49ae3981cb051e5205b4ab5e58faa7c241098946c6e81a6e0d572d7c"}
{"text": "import { assertFalse, assertTrue } from '@ohos.arkui.componentTest'\nimport { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'\nimport { Tester, Component, Matcher } from '@ohos.arkui.componentTest'\n\nexport default async function textInputShowUnderlineTest() {\n  \n  defineTest('textInputShowUnderlineTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputShowUnderlineTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput: Component = await driver.findComponent(Matcher.create().id('textInputShowUnderline').enabled(true))\n    let button: Component = await driver.findComponent(Matcher.create().text('TextInputShowUnderline').enabled(true))\n\n    let showUnderline1: string = await textInput.getInspectorInfo()\n    assertFalse(JSON.parse(showUnderline1).$attrs.showUnderline)\n\n    await button.tap()\n    let showUnderline2: string = await textInput.getInspectorInfo()\n    assertTrue(JSON.parse(showUnderline2).$attrs.showUnderline)\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputShowUnderlineTest.ets", "project_name": "arkui_ace_engine-master", "id": "78a33029d3d3d7b7e2ada03d088e4b3e01e2c8e414dce7f8cac0bde02e8a8a2f"}
{"text": "import {\n  assertEqual,\n  assertTrue,\n  Component,\n  defineTest,\n  Matcher,\n  TestCaseLevel,\n  Tester\n} from '@ohos.arkui.componentTest'\n\nexport default async function textInputShowUnitTest() {\n  \n  defineTest('textInputShowUnitTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputShowUnitTestDemo running\")\n    let driver: Tester = Tester.create()\n    let select: Component = await driver.findComponent(Matcher.create().text('MB').enabled())\n    let type: string = await select.getType()\n    assertEqual(type, 'Select')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputShowUnitTest.ets", "project_name": "arkui_ace_engine-master", "id": "8ce99714d9596b152cbe16c558d5a309cae4b28b6b92781466a6df688b03c40a"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest'\n\nexport default async function textInputStyleTest() {\n  \n  defineTest('textInputStyleTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textInputStyleTestDemo running\")\n    let driver: Tester = Tester.create()\n    let textInput1: Component = await driver.findComponent(Matcher.create().id('textInputStyle1').enabled(true))\n    let textInput2: Component = await driver.findComponent(Matcher.create().id('textInputStyle2').enabled(true))\n    let button1: Component = await driver.findComponent(Matcher.create().text('TextInputStyle1').enabled(true))\n    let button2: Component = await driver.findComponent(Matcher.create().text('TextInputStyle2').enabled(true))\n\n    let style1: string = await textInput1.getInspectorInfo()\n    assertEqual(JSON.parse(style1).$attrs.style, 'TextInputStyle.Default')\n\n    let style2: string = await textInput2.getInspectorInfo()\n    assertEqual(JSON.parse(style2).$attrs.style, 'TextContentStyle.DEFAULT')\n\n    await button1.tap()\n    let style3: string = await textInput1.getInspectorInfo()\n    assertEqual(JSON.parse(style3).$attrs.style, 'TextInputStyle.Inline')\n\n    await button2.tap()\n    let style4: string = await textInput2.getInspectorInfo()\n    assertEqual(JSON.parse(style4).$attrs.style, 'TextContentStyle.INLINE')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextInputStyleTest.ets", "project_name": "arkui_ace_engine-master", "id": "2ba9b1c12b4976ca99d79a85d97fc241deafc88c6ff7c84f5903041302b4a782"}
{"text": "import { assertEqual, Component, defineTest, Matcher, TestCaseLevel, Tester } from '@ohos.arkui.componentTest';\n\nexport default async function textMaxLinesTest() {\n  \n  defineTest('textMaxLinesTestDemo', {\n    level: TestCaseLevel.LEVEL0\n  }, async () => {\n    console.log(\"textMaxLinesTestDemo running\")\n    let driver: Tester = Tester.create()\n    let text: Component = await driver.findComponent(Matcher.create().id('textMaxLines1').enabled(true))\n\n    let maxLines1: string = await text.getInspectorInfo()\n    assertEqual(JSON.parse(maxLines1).$attrs.maxLines, '1')\n  }, 0)\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\MyTest\\TextMaxLinesTest.ets", "project_name": "arkui_ace_engine-master", "id": "f29b7652c80fc16a76ba79880b876436868d2ebd2022ec60ad79e76c8ee88b2c"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockActiveColorTest from '../MyTest/PatternLockActiveColorTest'\n\n@Entry\n@Component\nstruct PatternLockActiveColorSample {\n  @State activeColorType: ResourceColor = 0xfffff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockActiveColorTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .activeColor(Color.Grey)\n        .height(50)\n        .id('patternLockActiveColor1')\n      PatternLock()\n        .activeColor(this.activeColorType)\n        .height(50)\n        .id('patternLockActiveColor2')\n      Button('PatternLockActiveColor1')\n        .onClick(() => {\n          this.activeColorType = '#008000'\n        })\n      Button('PatternLockActiveColor2')\n        .onClick(() => {\n          this.activeColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockActiveColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "c1e02145da9b0f05410d442beef80f535c5cd4f6413d14a305c16e51f50c3f9c"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockAutoResetTest from '../MyTest/PatternLockAutoResetTest'\n\n@Entry\n@Component\nstruct PatternLockAutoResetSample {\n  @State autoResetType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockAutoResetTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .autoReset(this.autoResetType)\n        .id('patternLockAutoReset')\n      Button('PatternLockAutoReset')\n        .onClick(() => {\n          this.autoResetType = !this.autoResetType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockAutoResetSample.ets", "project_name": "arkui_ace_engine-master", "id": "c3b2942c9c2415e30268e0ccb467b5dfeb32a7439fcade279cc8316eaf89a3f0"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockCircleRadiusTest from '../MyTest/PatternLockCircleRadiusTest'\n\n@Entry\n@Component\nstruct PatternLockCircleRadiusSample {\n  @State circleRadiusType: Length = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockCircleRadiusTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .circleRadius(this.circleRadiusType)\n        .id('patternLockCircleRadius1')\n      Button('PatternLockCircleRadius1')\n        .onClick(() => {\n          this.circleRadiusType = '20px'\n        })\n      Button('PatternLockCircleRadius2')\n        .onClick(() => {\n          this.circleRadiusType = -1\n        })\n      PatternLock()\n        .circleRadius($r('app.string.vp_length'))\n        .id('patternLockCircleRadius2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockCircleRadiusSample.ets", "project_name": "arkui_ace_engine-master", "id": "a3b898e5f0ed007b7cabbcb2ad02e2eae6933d9f9f11eefff5a86c90444c2577"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockPathColorTest from '../MyTest/PatternLockPathColorTest'\n\n@Entry\n@Component\nstruct PatternLockPathColorSample {\n  @State pathColorType: ResourceColor = 0xffffff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockPathColorTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .pathColor(Color.Grey)\n        .height(50)\n        .id('patternLockPathColor1')\n      PatternLock()\n        .pathColor(this.pathColorType)\n        .height(50)\n        .id('patternLockPathColor2')\n      Button('PatternLockPathColor1')\n        .onClick(() => {\n          this.pathColorType = '#008000'\n        })\n      Button('PatternLockPathColor2')\n        .onClick(() => {\n          this.pathColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockPathColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "90816a4e6cb1701a6e202fd832236b05911feb0c8b965efcd0bc81db941b0207"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockPathStrokeWidthTest from '../MyTest/PatternLockPathStrokeWidthTest'\n\n@Entry\n@Component\nstruct PatternLockPathStrokeWidthSample {\n  @State pathStrokeWidthType: number | string = 200\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockPathStrokeWidthTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .pathStrokeWidth(this.pathStrokeWidthType)\n        .id('patternLockPathStrokeWidth')\n      Button('PatternLockPathStrokeWidth')\n        .onClick(() => {\n          this.pathStrokeWidthType = '100px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockPathStrokeWidthSample.ets", "project_name": "arkui_ace_engine-master", "id": "197061fa4a34386fcc403839f825a0c7404c887e5f74dd7d9ccc22394ee1b9e0"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockRegularColorTest from '../MyTest/PatternLockRegularColorTest'\n\n@Entry\n@Component\nstruct PatternLockRegularColorSample {\n  @State regularColorType: ResourceColor = 0xff0000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockRegularColorTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .regularColor(Color.Grey)\n        .height(50)\n        .id('patternLockRegularColor1')\n      PatternLock()\n        .regularColor(this.regularColorType)\n        .height(50)\n        .id('patternLockRegularColor2')\n      Button('PatternLockRegularColor1')\n        .onClick(() => {\n          this.regularColorType = '#008000'\n        })\n      Button('PatternLockRegularColor2')\n        .onClick(() => {\n          this.regularColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockRegularColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "9694042ce511317f55c13cd72bc6965802bfd836d9ea4a3f762356b3c58bd5fc"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockSelectedColorTest from '../MyTest/PatternLockSelectedColorTest'\n\n@Entry\n@Component\nstruct PatternLockSelectedColorSample {\n  @State selectedColorType: ResourceColor = 0xff0000\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockSelectedColorTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .selectedColor(Color.Grey)\n        .height(50)\n        .id('patternLockSelectedColor1')\n      PatternLock()\n        .selectedColor(this.selectedColorType)\n        .height(50)\n        .id('patternLockSelectedColor2')\n      Button('PatternLockSelectedColor1')\n        .onClick(() => {\n          this.selectedColorType = '#008000'\n        })\n      Button('PatternLockSelectedColor2')\n        .onClick(() => {\n          this.selectedColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockSelectedColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "aa46d42b566e032486936026ff47e0e05459b72c1b489dd7d6b6b068bc77ea21"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport patternLockSideLengthTest from '../MyTest/PatternLockSideLengthTest'\n\n@Entry\n@Component\nstruct PatternLockSideLengthSample {\n  @State sideLengthType: Length = 200\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(patternLockSideLengthTest)\n  }\n\n  build() {\n    Column() {\n      PatternLock()\n        .sideLength(this.sideLengthType)\n        .id('patternLockSideLength1')\n      Button('PatternLockSideLength')\n        .onClick(() => {\n          this.sideLengthType = '100px'\n        })\n      PatternLock()\n        .sideLength($r('app.string.vp_length'))\n        .id('patternLockSideLength2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\pattern_lock\\PatternLockSideLengthSample.ets", "project_name": "arkui_ace_engine-master", "id": "0da0176170f4119d523c6642bd16dcc37e506ea97a338fbfed2f11f16442ee40"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport richEditorCopyOptionsTest from '../MyTest/RichEditorCopyOptionsTest'\n\n@Entry\n@Component\nstruct RichEditorCopyOptionsSample {\n  @State copyOptionType: CopyOptions = CopyOptions.InApp\n  controller: RichEditorController = new RichEditorController()\n  options: RichEditorOptions = { controller: this.controller };\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(richEditorCopyOptionsTest)\n  }\n\n  build() {\n    Column() {\n      RichEditor(this.options)\n        .copyOptions(CopyOptions.None)\n        .id('richEditorCopyOptions1')\n      RichEditor(this.options)\n        .copyOptions(this.copyOptionType)\n        .id('richEditorCopyOptions2')\n      Button('RichEditorCopyOptions1')\n        .onClick(() => {\n          this.copyOptionType = CopyOptions.LocalDevice\n        })\n      Button('RichEditorCopyOptions2')\n        .onClick(() => {\n          this.copyOptionType = CopyOptions.CROSS_DEVICE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\rich_editor\\RichEditorCopyOptionsSample.ets", "project_name": "arkui_ace_engine-master", "id": "be90a948abfff264204ae03207b542f924d30c9cb9b208f6403712f2fafff5cd"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport richEditorCustomKeyboardTest from '../MyTest/RichEditorCustomKeyboardTest'\n\n@Entry\n@Component\nstruct RichEditorCustomKeyboardSample {\n  controller: RichEditorController = new RichEditorController()\n  options: RichEditorOptions = { controller: this.controller };\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(richEditorCustomKeyboardTest)\n  }\n\n  @Builder\n  CustomKeyboardBuilder() {\n    Column() {\n      Grid() {\n        ForEach([1, 2, 3, 4, 5, 6, 7, 8, 9, '*', 0, '#'], (item: number | string) => {\n          GridItem() {\n            Button(item + \"\")\n              .width(110).onClick(() => {\n              this.controller.addTextSpan(item + '', {\n                offset: this.controller.getCaretOffset(),\n                style:\n                {\n                  fontColor: Color.Orange,\n                  fontSize: 30\n                }\n              })\n              this.controller.setCaretOffset(this.controller.getCaretOffset() + item.toString().length)\n            })\n          }\n        })\n      }.maxCount(3).columnsGap(10).rowsGap(10).padding(5)\n    }.backgroundColor(Color.Gray)\n  }\n\n  build() {\n    Column() {\n      RichEditor(this.options)\n        .customKeyboard(this.CustomKeyboardBuilder())\n        .height(200)\n        .id('richEditorCustomKeyboard')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\rich_editor\\RichEditorCustomKeyboardSample.ets", "project_name": "arkui_ace_engine-master", "id": "cd8563fd2778256ac68c5698908c2b121955a6ecc9f5b79e8d1203834d6412ba"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport richEditorDataDetectorConfigTest from '../MyTest/RichEditorDataDetectorConfigTest'\n\n@Entry\n@Component\nstruct RichEditorDataDetectorConfigSample {\n  controller: RichEditorController = new RichEditorController()\n  options: RichEditorOptions = { controller: this.controller };\n  @State dataDetectorConfigType: TextDataDetectorConfig = {\n    types: [TextDataDetectorType.PHONE_NUMBER, TextDataDetectorType.URL, TextDataDetectorType.EMAIL,\n      TextDataDetectorType.ADDRESS],\n    onDetectResultUpdate: (result: string) => {\n    }\n  }\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(richEditorDataDetectorConfigTest)\n  }\n\n  build() {\n    Column() {\n      RichEditor(this.options)\n        .enableDataDetector(true)\n        .dataDetectorConfig({ types: [], onDetectResultUpdate: null })\n        .height(50)\n        .id('richEditorDataDetectorConfig1')\n      RichEditor(this.options)\n        .enableDataDetector(true)\n        .dataDetectorConfig(this.dataDetectorConfigType)\n        .id('richEditorDataDetectorConfig2')\n      Button('RichEditorDataDetectorConfig')\n        .onClick(() => {\n          this.dataDetectorConfigType = {\n            types: [this.index],\n            onDetectResultUpdate: (result: string) => {\n            }\n          }\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\rich_editor\\RichEditorDataDetectorConfigSample.ets", "project_name": "arkui_ace_engine-master", "id": "b36c5ce5cca0a222ddc2ea98d84fb687f554ff221cde682f447f3a6040aa3913"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport richEditorEnableDataDetectorTest from '../MyTest/RichEditorEnableDataDetectorTest'\n\n@Entry\n@Component\nstruct RichEditorEnableDataDetectorSample {\n  controller: RichEditorController = new RichEditorController()\n  options: RichEditorOptions = { controller: this.controller };\n  @State enableDataDetectorType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(richEditorEnableDataDetectorTest)\n  }\n\n  build() {\n    Column() {\n      RichEditor(this.options)\n        .enableDataDetector(this.enableDataDetectorType)\n        .height(10)\n        .id('richEditorEnableDataDetector1')\n      Button('RichEditorEnableDataDetector')\n        .onClick(() => {\n          this.enableDataDetectorType = !this.enableDataDetectorType\n        })\n      RichEditor(this.options)\n        .copyOptions(CopyOptions.None)\n        .enableDataDetector(true)\n        .id('richEditorEnableDataDetector2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\rich_editor\\RichEditorEnableDataDetectorSample.ets", "project_name": "arkui_ace_engine-master", "id": "77838b37c4f56667b1293f23ca6bdf37b26b7ce0b7681600f25c45cd6bd77ebc"}
{"text": "import { CommonButton } from '../../util/CommonButton';\n\n@Entry\n@Component\nstruct RichEditorHome {\n  build() {\n    Scroll() {\n      Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap }) {\n        Text('textHome')\n          .padding('15vp')\n          .width('100%')\n          .fontSize('25fp')\n          .textAlign(TextAlign.Center)\n\n        CommonButton({\n          buttonName: 'RichEditorCustomKeyboard',\n          buttonUrl: 'pages/rich_editor/RichEditorCustomKeyboardSample'\n        });\n        CommonButton({\n          buttonName: 'RichEditorBindSelectionMenu',\n          buttonUrl: 'pages/rich_editor/RichEditorBindSelectionMenuSample'\n        });\n        CommonButton({\n          buttonName: 'RichEditorCopyOptions',\n          buttonUrl: 'pages/rich_editor/RichEditorCopyOptionsSample'\n        });\n        CommonButton({\n          buttonName: 'RichEditorEnableDataDetector',\n          buttonUrl: 'pages/rich_editor/RichEditorEnableDataDetectorSample'\n        });\n        CommonButton({\n          buttonName: 'RichEditorDataDetectorConfig',\n          buttonUrl: 'pages/rich_editor/RichEditorDataDetectorConfigSample'\n        });\n      }\n      .padding('5vp')\n      .width('100%')\n    }.margin({ bottom: 60 })\n    .width('100%')\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\rich_editor\\RichEditorHome.ets", "project_name": "arkui_ace_engine-master", "id": "f6bc3047f2b9f470af46addb773640feefc53de1f05ef7b04b7b865ab5a39b1a"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchCancelButtonTest from '../MyTest/SearchCancelButtonTest'\n\n@Entry\n@Component\nstruct SearchCancelButtonSample {\n  controller: SearchController = new SearchController()\n  @State constantValue: CancelButtonStyle = CancelButtonStyle.CONSTANT\n  @State iconValue: IconOptions = { size: '50px', src: \"../../../resources/base/media/icon.png\", color: 0xffff0000 }\n  @State colorValue: ResourceColor = '#ffffff'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchCancelButtonTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .cancelButton({ style: this.constantValue, icon: this.iconValue })\n        .height(50)\n        .id('searchCancelButton1')\n      Button('SearchCancelButton1')\n        .onClick(() => {\n          this.constantValue = CancelButtonStyle.INPUT\n          this.iconValue = { size: 100, src: $r('app.media.startIcon'), color: Color.Blue }\n        })\n      Button('SearchCancelButton2')\n        .onClick(() => {\n          this.constantValue = CancelButtonStyle.INVISIBLE\n          this.iconValue = { size: $r('app.string.length'), color: '#ffffff' }\n        })\n      Search({ controller: this.controller })\n        .cancelButton({\n          style: CancelButtonStyle.CONSTANT,\n          icon: { color: $r('sys.color.ohos_id_color_text_hyperlink') }\n        })\n        .id('searchCancelButton2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchCancelButtonSample.ets", "project_name": "arkui_ace_engine-master", "id": "074c03791714b997e5f08841eb69322b80f00cfd35a08550d92331820aad08a6"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchCaretStyleTest from '../MyTest/SearchCaretStyleTest'\n\n@Entry\n@Component\nstruct SearchCaretStyleSample {\n  controller: SearchController = new SearchController()\n  @State caretStyleType: CaretStyle = { width: '10px', color: Color.Pink }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchCaretStyleTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .caretStyle(this.caretStyleType)\n        .id('searchCaretStyle1')\n      Button('SearchCaretStyle1')\n        .onClick(() => {\n          this.caretStyleType = { width: 50, color: $r('sys.color.ohos_id_color_text_hyperlink') }\n        })\n      Button('SearchCaretStyle2')\n        .onClick(() => {\n          this.caretStyleType = { width: $r('app.string.vp_length'), color: 0xffffff }\n        })\n      Search({ controller: this.controller })\n        .caretStyle({ color: 'rgb(255, 100, 255)' })\n        .id('searchCaretStyle2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchCaretStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "5a7ac1102e3f743d47c7120a04664663b6311d3a95dc7b7f5a256fae5a694c19"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchCopyOptionTest from '../MyTest/SearchCopyOptionTest'\n\n@Entry\n@Component\nstruct SearchCopyOptionSample {\n  @State copyOptionValue: CopyOptions = CopyOptions.InApp\n  controller: SearchController = new SearchController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchCopyOptionTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .copyOption(CopyOptions.None)\n        .id('searchCopyOption1')\n      Search({ controller: this.controller })\n        .copyOption(this.copyOptionValue)\n        .id('searchCopyOption2')\n      Button('SearchCopyOption1')\n        .onClick(() => {\n          this.copyOptionValue = CopyOptions.LocalDevice\n        })\n      Button('SearchCopyOption2')\n        .onClick(() => {\n          this.copyOptionValue = CopyOptions.CROSS_DEVICE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchCopyOptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "1abb724a301cc51bc71e813bf428b78c65cce0bb56b84b165bc1b0857f9f888a"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchCustomKeyboardTest from '../MyTest/SearchCustomKeyboardTest'\n\n@Entry\n@Component\nstruct SearchCustomKeyboardSample {\n  controller: SearchController = new SearchController()\n  @State inputValue: string = \"\"\n\n  @Builder\n  CustomKeyboardBuilder() {\n    Column() {\n      Button('x').onClick(() => {\n        this.controller.stopEditing()\n      })\n      Grid() {\n        ForEach([1, 2, 3, 4, 5, 6, 7, 8, 9, '*', 0, '#'], (item: number | string) => {\n          GridItem() {\n            Button(item + \"\")\n              .width(110).onClick(() => {\n              this.inputValue += item\n            })\n          }\n        })\n      }.maxCount(3).columnsGap(10).rowsGap(10).padding(5)\n    }.backgroundColor(Color.Gray)\n\n    Text('11')\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchCustomKeyboardTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller, value: this.inputValue })\n        .customKeyboard(this.CustomKeyboardBuilder()).margin(10).border({ width: 1 })\n        .id('searchCustomKeyboard1')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchCustomKeyboardSample.ets", "project_name": "arkui_ace_engine-master", "id": "52a162d2c6e27035684ff5c9bbebf5fd6bcf1e015987bd84504ed87e769939f4"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchEnableKeyboardOnFocusTest from '../MyTest/SearchEnableKeyboardOnFocusTest'\n\n@Entry\n@Component\nstruct SearchEnableKeyboardOnFocusSample {\n  controller: SearchController = new SearchController()\n  @State enableKeyboardOnFocusType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchEnableKeyboardOnFocusTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .enableKeyboardOnFocus(this.enableKeyboardOnFocusType)\n        .id('searchEnableKeyboardOnFocus1')\n      Button('SearchEnableKeyboardOnFocus')\n        .onClick(() => {\n          this.enableKeyboardOnFocusType = !this.enableKeyboardOnFocusType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchEnableKeyboardOnFocusSample.ets", "project_name": "arkui_ace_engine-master", "id": "a4ceaa990ef2ff0a7b8d5f65f4fa1efde891b9710b0c31697414e7e3142df464"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchFontColorTest from '../MyTest/SearchFontColorTest'\n\n@Entry\n@Component\nstruct SearchFontColorSample {\n  controller: SearchController = new SearchController()\n  @State fontColorType: ResourceColor = 0xffffff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .fontColor(Color.Yellow)\n        .id('searchFontColor1')\n      Search({ controller: this.controller })\n        .fontColor(this.fontColorType)\n        .id('searchFontColor2')\n      Button('SearchFontColor1')\n        .onClick(() => {\n          this.fontColorType = 'rgb(255, 100, 255)'\n        })\n      Button('SearchFontColor2')\n        .onClick(() => {\n          this.fontColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "ce88987f51be9bdebd036aad71407dbfa2c3e4d4e3d9969a45bbb085e87e38b6"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchMaxLengthTest from '../MyTest/SearchMaxLengthTest'\n\n@Entry\n@Component\nstruct SearchMaxLengthSample {\n  controller: SearchController = new SearchController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchMaxLengthTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .maxLength(10)\n        .id('searchMaxLength1')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchMaxLengthSample.ets", "project_name": "arkui_ace_engine-master", "id": "d93ff01946d9555c3546b8f35896b5fe9dba679f05063fc5c03ae1eba19efa5c"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchPlaceholderColorTest from '../MyTest/SearchPlaceholderColorTest'\n\n@Entry\n@Component\nstruct SearchPlaceholderColorSample {\n  @State placeholderColorType: ResourceColor = 0xffffff\n  controller: SearchController = new SearchController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchPlaceholderColorTest)\n  }\n\n  build() {\n    Column() {\n      Search({ placeholder: 'Please input', controller: this.controller })\n        .placeholderColor(Color.Green)\n        .id('searchPlaceholderColor1')\n      Search({ placeholder: 'Please input', controller: this.controller })\n        .placeholderColor(this.placeholderColorType)\n        .id('searchPlaceholderColor2')\n      Button('SearchPlaceholderColor1')\n        .onClick(() => {\n          this.placeholderColorType = '#99182431'\n        })\n      Button('SearchPlaceholderColor2')\n        .onClick(() => {\n          this.placeholderColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchPlaceholderColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "e74df523c8c3b04f0b9f9b30959c6d789c4265b70ea35e7169f425d2926bce7b"}
{"text": "import font from '@ohos.font';\nimport { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchPlaceholderFontTest from '../MyTest/SearchPlaceholderFontTest'\n\n@Entry\n@Component\nstruct SearchPlaceholderFontSample {\n  @State placeholderFontType: Font = {\n    size: '50px',\n    weight: FontWeight.Lighter,\n    family: 'Arial',\n    style: FontStyle.Normal\n  }\n  @State placeholderFontWeightType: FontWeight | number[] =\n    [100, FontWeight.Regular, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder]\n  @State index: number = 0\n  controller: SearchController = new SearchController()\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(searchPlaceholderFontTest)\n  }\n\n  build() {\n    Column() {\n      Search({ placeholder: 'Please input', controller: this.controller })\n        .placeholderFont(this.placeholderFontType)\n        .id('searchPlaceholderFont1')\n      Button('SearchPlaceholderFont1')\n        .onClick(() => {\n          this.placeholderFontType = {\n            size: 40,\n            weight: FontWeight.Normal,\n            family: 'TESTFONTRawFile',\n            style: FontStyle.Italic\n          }\n        })\n        .height(30)\n      Search({ placeholder: 'Please input', controller: this.controller })\n        .placeholderFont({ size: $r('app.string.length'), weight: \"900\" })\n        .id('searchPlaceholderFont2')\n      Search({ placeholder: 'Please input', controller: this.controller })\n        .placeholderFont({ weight: this.placeholderFontWeightType[this.index] })\n        .height(50)\n        .id('searchPlaceholderFont3')\n      Button('SearchPlaceholderFont2')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchPlaceholderFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "d3bb21f16ae9ce7caeada09ae0542e2cd65bfde54743a533df2267bb8a8f6aa8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchSearchIconTest from '../MyTest/SearchSearchIconTest'\n\n@Entry\n@Component\nstruct SearchSearchIconSample {\n  controller: SearchController = new SearchController()\n  @State searchIconType: IconOptions =\n    { size: '10px', color: Color.Orange, src: \"../../../resources/base/media/icon.png\" }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchSearchIconTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .searchIcon(this.searchIconType)\n        .id('searchSearchIcon1')\n      Button('SearchSearchIcon1')\n        .onClick(() => {\n          this.searchIconType = { size: 10, color: 0xffffff }\n        })\n      Button('SearchSearchIcon2')\n        .onClick(() => {\n          this.searchIconType = { size: $r('app.string.vp_length'), color: 'rgb(200,78,90)' }\n        })\n      Search({ controller: this.controller })\n        .searchIcon({ color: $r('sys.color.ohos_id_color_text_hyperlink') })\n        .id('searchSearchIcon2')\n      Search({ controller: this.controller })\n        .searchIcon({ src: $r('app.media.startIcon') })\n        .id('searchSearchIcon3')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchSearchIconSample.ets", "project_name": "arkui_ace_engine-master", "id": "608f9ee5fb5d7b045a2a02ce4bdbe8db0db73e4853534c59174d0334a8e30f6e"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchSelectionMenuHiddenTest from '../MyTest/SearchSelectionMenuHiddenTest'\n\n@Entry\n@Component\nstruct SearchSelectionMenuHiddenSample {\n  controller: SearchController = new SearchController()\n  @State selectionMenuHiddenType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchSelectionMenuHiddenTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .selectionMenuHidden(this.selectionMenuHiddenType)\n        .id('searchSelectionMenuHidden')\n      Button('SearchSelectionMenuHidden')\n        .onClick(() => {\n          this.selectionMenuHiddenType = !this.selectionMenuHiddenType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchSelectionMenuHiddenSample.ets", "project_name": "arkui_ace_engine-master", "id": "fbe3d43d525faf27b9877352b10b23489bed2c3b1fb8b369ecfb9e423431fc74"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchTextAlignTest from '../MyTest/SearchTextAlignTest'\n\n@Entry\n@Component\nstruct SearchTextAlignSample {\n  controller: SearchController = new SearchController()\n  @State textAlignType: TextAlign = TextAlign.Center\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchTextAlignTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .textAlign(TextAlign.Start)\n        .id('searchTextAlign1')\n      Search({ controller: this.controller })\n        .textAlign(this.textAlignType)\n        .id('searchTextAlign2')\n      Button('SearchTextAlign1')\n        .onClick(() => {\n          this.textAlignType = TextAlign.End\n        })\n      Button('SearchTextAlign2')\n        .onClick(() => {\n          this.textAlignType = TextAlign.JUSTIFY\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchTextAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "90c636ea14ea04f510094bef6e60aa5697c2fca6f2739612a9dec205387f3c16"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchTextFontTest from '../MyTest/SearchTextFontTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct SearchTextFontSample {\n  @State textFontType: Font = {\n    size: 12.0,\n    weight: 600,\n    family: 'Arial',\n    style: FontStyle.Normal\n  }\n  @State textFontWeightType: FontWeight[] = [FontWeight.Normal, FontWeight.Regular, FontWeight.Medium, FontWeight.Bold,\n    FontWeight.Bolder]\n  @State index: number = 0\n  controller: SearchController = new SearchController()\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(searchTextFontTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .textFont(this.textFontType)\n        .height(30)\n        .id('searchTextFont1')\n      Button(\"SearchTextFont1\")\n        .onClick(() => {\n          this.textFontType = {\n            size: '10px',\n            weight: '100',\n            family: 'TESTFONTRawFile',\n            style: FontStyle.Italic\n          }\n        })\n      Search({ controller: this.controller })\n        .textFont({ size: $r('app.string.length'), weight: FontWeight.Lighter, family: 'Arial' })\n        .height(30)\n        .id('searchTextFont2')\n      Search({ controller: this.controller })\n        .textFont({ weight: this.textFontWeightType[this.index], family: 'Arial' })\n        .height(30)\n        .id('searchTextFont3')\n      Button(\"SearchTextFont2\")\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchTextFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "53634aee0b1bb157920cc8eeff5a61f636ceb7db1c6f2908b723f54d7ac4cc98"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport searchTypeTest from '../MyTest/SearchTypeTest'\n\n@Entry\n@Component\nstruct SearchTypeSample {\n  controller: SearchController = new SearchController()\n  @State type: SearchType = SearchType.NORMAL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(searchTypeTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller })\n        .type(SearchType.EMAIL)\n        .id('searchType1')\n      Search({ controller: this.controller })\n        .type(this.type)\n        .id('searchType2')\n      Button('SearchType1')\n        .onClick(() => {\n          this.type = SearchType.NUMBER\n        })\n      Button('SearchType2')\n        .onClick(() => {\n          this.type = SearchType.PHONE_NUMBER\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\search\\SearchTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "a4f83474cbcc546a3a52c83dbe5e6bb6984f597cb7c41d8818c400b4a78fd7bd"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanDecorationTest from '../MyTest/SpanDecorationTest'\n\n@Entry\n@Component\nstruct SpanDecorationSample {\n  @State decorationValue: TextDecorationType = TextDecorationType.Overline\n  @State colorValue: ResourceColor = 'rgb(255, 100, 255)'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanDecorationTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('Span')\n          .decoration({ type: TextDecorationType.LineThrough, color: Color.Red })\n          .id('spanDecoration1')\n        Span('Span')\n          .decoration({ type: TextDecorationType.None, color: $r('sys.color.ohos_id_color_text_hyperlink') })\n          .id('spanDecoration2')\n        Span('Span')\n          .decoration({ type: this.decorationValue, color: this.colorValue })\n          .id('spanDecoration3')\n      }\n\n      Button('SpanDecoration')\n        .onClick(() => {\n          this.decorationValue = TextDecorationType.Underline\n          this.colorValue = 0x0000FF\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanDecorationSample.ets", "project_name": "arkui_ace_engine-master", "id": "d95b50eb893ec187e9a59777b01783870daa562a69833b62063c140ec54ead81"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanFontColorTest from '../MyTest/SpanFontColorTest'\n\n@Entry\n@Component\nstruct SpanFontColorSample {\n  @State fontColorType: ResourceColor = 0x0000FF\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .fontColor(Color.Blue)\n          .id('spanFontColor1')\n        Span('span')\n          .fontColor(this.fontColorType)\n          .id('spanFontColor2')\n      }\n\n      Button('SpanFontColor1')\n        .onClick(() => {\n          this.fontColorType = 'rgb(255, 100, 255)'\n        })\n      Button('SpanFontColor2')\n        .onClick(() => {\n          this.fontColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "5cf4d9973882a7affc2404153868909a3a1d2b14d82c710def9176f4c6ad03c1"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanFontFamilyTest from '../MyTest/SpanFontFamilyTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct SpanFontFamilySample {\n  @State fontFamilyType: string = 'Arial'\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(spanFontFamilyTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .fontFamily(this.fontFamilyType)\n          .margin({ bottom: 10 })\n          .id('spanFontFamily1')\n      }\n\n      Button('SpanFontFamily')\n        .onClick(() => {\n          this.fontFamilyType = 'TESTFONTRawFile'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "17325cfdf7c9fc203c65379550c16b4290a1b4ccc105383a6c2870d4ba29b0a1"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanFontTest from '../MyTest/SpanFontTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct SpanFontSample {\n  @State fontType: Font = {\n    family: 'Arial',\n    size: 30,\n    weight: FontWeight.Lighter,\n    style: FontStyle.Normal\n  }\n  @State weightType: FontWeight[] = [FontWeight.Normal, FontWeight.Medium, FontWeight.Bold, 30]\n  @State index: number = 0\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(spanFontTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .font(this.fontType)\n          .id('spanFont1')\n        Span('span')\n          .font({ size: $r('app.string.length'), weight: FontWeight.Bolder })\n          .id('spanFont2')\n        Span('span')\n          .font({ weight: \"500\" })\n          .id('spanFont3')\n        Span('span')\n          .font({ weight: this.weightType[this.index] })\n          .id('spanFont4')\n      }\n\n      Button('SpanFont1')\n        .onClick(() => {\n          this.fontType = {\n            family: 'TESTFONTRawFile',\n            size: '30px',\n            weight: FontWeight.Regular,\n            style: FontStyle.Italic\n          }\n        })\n      Button('SpanFont2')\n        .onClick(() => {\n          this.index++\n          this.index %= 4\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "fbca4fe8b93cedb751560d81f0a56b5b25506ae0c58fab51b808454cf6ada3a2"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanFontSizeTest from '../MyTest/SpanFontSizeTest'\n\n@Entry\n@Component\nstruct SpanFontSizeSample {\n  @State fontSizeType: string | number | Resource = '50px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .fontSize(this.fontSizeType)\n          .id('spanFontSize1')\n      }\n\n      Button('SpanFontSize1')\n        .onClick(() => {\n          this.fontSizeType = 50\n        })\n      Button('SpanFontSize2')\n        .onClick(() => {\n          this.fontSizeType = $r('app.string.length')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "eda53be4d672cc3eb34af1a1d921abb6ead6b32216a8491fb13937c99281464f"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanFontStyleTest from '../MyTest/SpanFontStyleTest'\n\n@Entry\n@Component\nstruct SpanFontStyleSample {\n  @State fontStyleType: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanFontStyleTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .fontStyle(this.fontStyleType)\n          .id('spanFontStyle1')\n      }\n\n      Button('SpanFontStyle')\n        .onClick(() => {\n          this.fontStyleType = FontStyle.Italic\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "824955acb8f763dbf959872110cdab298cdce669875899a07b68fe40944845cb"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanFontWeightTest from '../MyTest/SpanFontWeightTest'\n\n@Entry\n@Component\nstruct SpanFontWeightSample {\n  @State weightType: FontWeight[] = [FontWeight.Regular, FontWeight.Bold, FontWeight.Medium, FontWeight.Bolder, 100]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanFontWeightTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .fontWeight(this.weightType[this.index])\n          .id('spanFontWeight1')\n        Span('span')\n          .fontWeight(FontWeight.Lighter)\n          .id('spanFontWeight2')\n        Span('span')\n          .fontWeight(FontWeight.Normal)\n          .id('spanFontWeight3')\n        Span('span')\n          .fontWeight(\"600\")\n          .id('spanFontWeight4')\n      }\n\n      Button('SpanFontWeight')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanFontWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "a632b81c5cbd8ee11f6e21adc19cecdcde964914e8adacae5718a30c75bca61f"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanLetterSpacingTest from '../MyTest/SpanLetterSpacingTest'\n\n@Entry\n@Component\nstruct SpanLetterSpacingSample {\n  @State letterSpacingType: number | string = '10px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanLetterSpacingTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span letter spacing')\n          .letterSpacing(this.letterSpacingType)\n          .id('spanLetterSpacing1')\n      }\n\n      Button('SpanLetterSpacing')\n        .onClick(() => {\n          this.letterSpacingType = 10\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanLetterSpacingSample.ets", "project_name": "arkui_ace_engine-master", "id": "869f04a07eb461b0f8449f2a33368865db23586136377b13ebc6eded46eb7ac5"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanLineHeightTest from '../MyTest/SpanLineHeightTest'\n\n@Entry\n@Component\nstruct SpanLineHeightSample {\n  @State lineHeightType: string | number | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanLineHeightTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('Span component')\n          .lineHeight(this.lineHeightType)\n          .id('spanLineHeight1')\n      }\n\n      Button('SpanLineHeight1')\n        .onClick(() => {\n          this.lineHeightType = '50px'\n        })\n      Button('SpanLineHeight2')\n        .onClick(() => {\n          this.lineHeightType = $r('app.string.line_height')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanLineHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "a3c04b855f0288525f0c3bda770c511db8cf61c3df00dfc038f54c2debc6004b"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanTextBackgroundStyleTest from '../MyTest/SpanTextBackgroundStyleTest'\n\n@Entry\n@Component\nstruct SpanTextBackgroundStyleSample {\n  @State textBackgroundStyleType1: TextBackgroundStyle = { radius: '50vp', color: 0xFF1493 }\n  @State textBackgroundStyleType2: TextBackgroundStyle[] =\n    [{ radius: '50%', color: 0x7FFF00 }, { radius: $r('app.string.length'), color: 0x7FFF00 },\n      {\n        radius: {\n          topLeft: 10,\n          topRight: 10,\n          bottomLeft: 20,\n          bottomRight: 20\n        },\n        color: 0x7FFF00\n      }, {\n        radius: {\n          topLeft: '10px',\n          topRight: '10px',\n          bottomLeft: '20px',\n          bottomRight: '20px'\n        }, color: 0x7FFF00\n      }, {\n        radius: {\n          topLeft: $r('app.string.length'),\n          topRight: $r('app.string.length'),\n          bottomLeft: $r('app.string.length'),\n          bottomRight: $r('app.string.length')\n        },\n        color: 0x7FFF00\n      }]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanTextBackgroundStyleTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('TextBackgroundStyle')\n          .textBackgroundStyle({ radius: '10px', color: Color.Green })\n          .id('spanTextBackgroundStyle1')\n      }\n\n      Text() {\n        Span('TextBackgroundStyle')\n          .textBackgroundStyle(this.textBackgroundStyleType1)\n          .id('spanTextBackgroundStyle2')\n      }\n\n      Text() {\n        Span('TextBackgroundStyle')\n          .textBackgroundStyle(this.textBackgroundStyleType2[this.index])\n          .id('spanTextBackgroundStyle3')\n      }\n\n      Button('SpanTextBackgroundStyle1')\n        .onClick(() => {\n          this.textBackgroundStyleType1 = { radius: '10fp', color: '#7FFFD4' }\n        })\n      Button('SpanTextBackgroundStyle2')\n        .onClick(() => {\n          this.textBackgroundStyleType1 = { radius: '40lpx', color: $r('sys.color.ohos_id_color_text_hyperlink') }\n        })\n      Button('SpanTextBackgroundStyle3')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanTextBackgroundStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "0cfa9022b1646a400966ea7114f2da0801d6740f0274aacf311502030af4cbbc"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanTextCaseTest from '../MyTest/SpanTextCaseTest'\n\n@Entry\n@Component\nstruct SpanTextCaseSample {\n  @State textCaseType: TextCase = TextCase.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanTextCaseTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('ABC abc')\n          .textCase(TextCase.LowerCase)\n          .id('spanTextCase1')\n        Span('ABC abc')\n          .textCase(this.textCaseType)\n          .id('spanTextCase2')\n      }\n\n      Button('SpanTextCase')\n        .onClick(() => {\n          this.textCaseType = TextCase.UpperCase\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanTextCaseSample.ets", "project_name": "arkui_ace_engine-master", "id": "f4f28acb0aae4d44bea8ff235811b437f4f3f5f6aecc593b771c9ec4c7b8fde8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport spanTextShadowTest from '../MyTest/SpanTextShadowTest'\n\n@Entry\n@Component\nstruct SpanTextShadowSample {\n  @State textShadowType1: ShadowOptions | Array<ShadowOptions> =\n    [{\n      radius: $r('app.integer.number'),\n      type: ShadowType.BLUR,\n      color: $r('sys.color.ohos_id_color_text_tertiary'),\n      offsetX: 30,\n      offsetY: 30\n    },\n      {\n        radius: $r('app.integer.number'),\n        type: ShadowType.BLUR,\n        color: \"#FF4500\",\n        offsetX: $r('app.integer.offset_radius2'),\n        offsetY: $r('app.integer.offset_radius2')\n      }]\n  @State textShadowType2: ShadowOptions | Array<ShadowOptions> =\n    [{\n      radius: $r('app.integer.number'),\n      type: ShadowType.BLUR,\n      color: 0xffffff,\n      offsetX: $r('app.integer.offset_radius1'),\n      offsetY: $r('app.integer.offset_radius1'),\n      fill: false\n    }]\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(spanTextShadowTest)\n  }\n\n  build() {\n    Column() {\n      Text() {\n        Span('span')\n          .textShadow(this.textShadowType1)\n          .id('spanTextShadow1')\n        Span('span')\n          .textShadow(this.textShadowType2)\n          .id('spanTextShadow2')\n        Span('span')\n          .textShadow([{ radius: 10, color: ColoringStrategy.AVERAGE }])\n          .id('spanTextShadow3')\n      }\n\n      Button('SpanTextShadow1')\n        .onClick(() => {\n          this.textShadowType1 = [{\n            radius: 10,\n            type: ShadowType.COLOR,\n            color: Color.Red,\n            offsetX: 10,\n            offsetY: 10\n          },\n            {\n              radius: 30,\n              type: ShadowType.COLOR,\n              color: ColoringStrategy.PRIMARY,\n              offsetX: 30,\n              offsetY: 30\n            }]\n        })\n      Button('SpanTextShadow2')\n        .onClick(() => {\n          this.textShadowType2 = [{\n            radius: 10,\n            type: ShadowType.COLOR,\n            color: ColoringStrategy.INVERT,\n            offsetX: 30,\n            offsetY: 30,\n            fill: true\n          }]\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\span\\SpanTextShadowSample.ets", "project_name": "arkui_ace_engine-master", "id": "ecafbb8fd85c3d647116cf459aad9313ccb505f59b21d0ec8ac2fdd3f450d5de"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textBaselineOffsetTest from '../MyTest/TextBaselineOffsetTest'\n\n@Entry\n@Component\nstruct TextBaselineOffsetSample {\n  @State baselineOffsetValue: number | string = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textBaselineOffsetTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .baselineOffset(this.baselineOffsetValue)\n        .border({ width: 1 })\n        .id('textBaselineOffset1')\n      Button('TextBaselineOffset')\n        .onClick(() => {\n          this.baselineOffsetValue = '100px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextBaselineOffsetSample.ets", "project_name": "arkui_ace_engine-master", "id": "fdbd301909b7b15cbc12b951fbbe2a4c4219719cf52863c6d25a9a17c7b56ffd"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textCopyOptionTest from '../MyTest/TextCopyOptionTest'\n\n@Entry\n@Component\nstruct TextCopyOptionSample {\n  @State copyOptionsValue: CopyOptions = CopyOptions.CROSS_DEVICE\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textCopyOptionTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .copyOption(this.copyOptionsValue)\n        .id('textCopyOption1')\n      Text('text')\n        .copyOption(CopyOptions.None)\n        .id('textCopyOption2')\n      Button('TextCopyOption1')\n        .onClick(() => {\n          this.copyOptionsValue = CopyOptions.InApp\n        })\n      Button('TextCopyOption2')\n        .onClick(() => {\n          this.copyOptionsValue = CopyOptions.LocalDevice\n        })\n      Divider().color('#000000')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextCopyOptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "62023aca6d7a037e13dc99db8ca91b3a1ae6be90c7794867b7b4578cf9d95d74"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textDataDetectorConfigTest from '../MyTest/TextDataDetectorConfigTest'\n\n@Entry\n@Component\nstruct TextDataDetectorConfigSample {\n  @State dataDetectorConfigValue: TextDataDetectorConfig = {\n    types: [TextDataDetectorType.PHONE_NUMBER, TextDataDetectorType.URL, TextDataDetectorType.EMAIL,\n      TextDataDetectorType.ADDRESS],\n    onDetectResultUpdate: (result: string) => {\n    }\n  }\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textDataDetectorConfigTest)\n  }\n\n  build() {\n    Column() {\n      Text('TextDataDetectorConfig')\n        .copyOption(CopyOptions.InApp)\n        .enableDataDetector(true)\n        .dataDetectorConfig(this.dataDetectorConfigValue)\n        .id('textDataDetectorConfig1')\n      Button('TextDataDetectorConfig1')\n        .onClick(() => {\n          this.dataDetectorConfigValue = {\n            types: [this.index],\n            onDetectResultUpdate: (result: string) => {\n            }\n          }\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextDataDetectorConfigSample.ets", "project_name": "arkui_ace_engine-master", "id": "eb0c24f981edad07f14dc79c0a822994b12961ac4bcfe82c537b52e6b197b720"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textDecorationTest from '../MyTest/TextDecorationTest'\n\n@Entry\n@Component\nstruct TextDecorationSample {\n  @State typeValue: TextDecorationType = TextDecorationType.Overline\n  @State colorValue: ResourceColor = '#ff2a65dd'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textDecorationTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .decoration({\n          type: TextDecorationType.None,\n          color: Color.Red\n        })\n        .id('textDecoration1')\n      Text('text')\n        .decoration({\n          type: this.typeValue,\n          color: this.colorValue\n        })\n        .id('textDecoration2')\n      Button('TextDecoration1')\n        .onClick(() => {\n          this.typeValue = TextDecorationType.Underline\n          this.colorValue = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n      Button('TextDecoration2')\n        .onClick(() => {\n          this.typeValue = TextDecorationType.LineThrough\n          this.colorValue = 0xffffff\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextDecorationSample.ets", "project_name": "arkui_ace_engine-master", "id": "775710bee31d1dcc2c2791a47bee76383e1319b7d1df2f6d217be7186926a7b8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textDraggableTest from '../MyTest/TextDraggableTest'\n\n@Entry\n@Component\nstruct TextDraggableSample {\n  @State draggableType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textDraggableTest)\n  }\n\n  build() {\n    Column() {\n      Text('text').copyOption(CopyOptions.InApp).draggable(this.draggableType)\n        .id('textDraggable1')\n      Button('TextDraggable')\n        .onClick(() => {\n          this.draggableType = !this.draggableType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextDraggableSample.ets", "project_name": "arkui_ace_engine-master", "id": "87b38cfaa0650056deef56f4dd6c46348f005b67df73bfe857d994b7393ddf6e"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textEllipsisModeTest from '../MyTest/TextEllipsisModeTest'\n\n@Entry\n@Component\nstruct TextEllipsisModeSample {\n  @State ellipsisModeValue: EllipsisMode = EllipsisMode.CENTER\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textEllipsisModeTest)\n  }\n\n  build() {\n    Column() {\n      Text('text text text text text text text text text text text text text text text text text text text text')\n        .border({ width: 1 })\n        .maxLines(1)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .ellipsisMode(EllipsisMode.START)\n        .width(300)\n        .id('textEllipsisMode1')\n      Text('text text text text text text text text text text text text text text text text text text text text')\n        .border({ width: 1 })\n        .maxLines(1)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .ellipsisMode(this.ellipsisModeValue)\n        .width(300)\n        .id('textEllipsisMode2')\n      Button('TextEllipsisMode')\n        .onClick(() => {\n          this.ellipsisModeValue = EllipsisMode.END\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextEllipsisModeSample.ets", "project_name": "arkui_ace_engine-master", "id": "01b98442f9ffe634dd49cb7e2891726d78f7b916b0b9baa09464899fe40a27c2"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textEnableDataDetectorTest from '../MyTest/TextEnableDataDetectorTest'\n\n@Entry\n@Component\nstruct TextEnableDataDetectorSample {\n  @State enableDataDetectorValue: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textEnableDataDetectorTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .copyOption(CopyOptions.InApp)\n        .enableDataDetector(this.enableDataDetectorValue)\n        .id('textEnableDataDetector1')\n      Button('TextEnableDataDetector')\n        .onClick(() => {\n          this.enableDataDetectorValue = false\n        })\n      Text('text')\n        .copyOption(CopyOptions.None)\n        .enableDataDetector(true)\n        .id('textEnableDataDetector2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextEnableDataDetectorSample.ets", "project_name": "arkui_ace_engine-master", "id": "5109f41174553aa04d2fbc4b2b8c6a547665a567d49679e4b44ba22712b38313"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textFontColorTest from '../MyTest/TextFontColorTest'\n\n@Entry\n@Component\nstruct TextFontColorSample {\n  @State colorValue: ResourceColor = 0x0000FF\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textFontColorTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .fontColor(Color.Orange)\n        .id('textFontColor1')\n      Text('text')\n        .fontColor(this.colorValue)\n        .id('textFontColor2')\n      Button('TextFontColor1')\n        .onClick(() => {\n          this.colorValue = '#ffe72727'\n        })\n      Button('TextFontColor2')\n        .onClick(() => {\n          this.colorValue = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "1cb781c91bd070d8856bbd42cbe9ccb65418e2014ab71be853951e7895e9e343"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textFontTest from '../MyTest/TextFontTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct TextFontSample {\n  @State index: number = 0\n  @State familyValues: FontWeight[] =\n    [FontWeight.Normal, FontWeight.Medium, FontWeight.Bold, FontWeight.Bolder, FontWeight.Regular]\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'fontRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(textFontTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .font({\n          size: 10,\n          weight: 10,\n          family: 'Arial',\n          style: FontStyle.Normal\n        })\n        .id('textFont1')\n      Text('text')\n        .font({\n          size: '20px',\n          weight: \"20\",\n          family: 'fontRawFile',\n          style: FontStyle.Italic\n        })\n        .id('textFont2')\n      Text('text')\n        .font({ size: $r('app.string.text'), weight: FontWeight.Lighter })\n        .id('textFont3')\n      Text('text')\n        .font({ weight: this.familyValues[this.index] })\n        .id('textFont4')\n      Button('TextFont')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "cbc622b705d777eb598b475b4f4f7266e9522069e040a047ea7c79b71a0dda7b"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textFontSizeTest from '../MyTest/TextFontSizeTest'\n\n@Entry\n@Component\nstruct TextFontSizeSample {\n  @State fontSizeValue: number | string | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .fontSize($r('app.string.fp_text'))\n        .id('textFontSize1')\n      Text('text')\n        .fontSize(this.fontSizeValue)\n        .id('textFontSize2')\n      Button('TextFontSize')\n        .onClick(() => {\n          this.fontSizeValue = '100px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "38273a6f9ea056f0c4c1ffb0431992897280b138140ed6abefb922da490e89d2"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textFontStyleTest from '../MyTest/TextFontStyleTest'\n\n@Entry\n@Component\nstruct TextFontStyleSample {\n  @State fontStyleValue: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textFontStyleTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .fontStyle(this.fontStyleValue)\n        .id('textFontStyle1')\n      Button('TextFontStyle')\n        .onClick(() => {\n          this.fontStyleValue = FontStyle.Italic\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "73a86bb0f73323ab95c30e968c93bf71633e4e2e9094df8c0bdc996eb0ec524d"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textFontWeightTest from '../MyTest/TextFontWeightTest'\n\n@Entry\n@Component\nstruct TextFontWeightSample {\n  @State fontWeightType: FontWeight[] = [FontWeight.Regular, FontWeight.Bold, FontWeight.Medium, FontWeight.Bolder, 100]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textFontWeightTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .fontWeight(FontWeight.Normal)\n        .id('textFontWeight1')\n      Text('text')\n        .fontWeight(FontWeight.Lighter)\n        .id('textFontWeight2')\n      Text('text')\n        .fontWeight(\"300\")\n        .id('textFontWeight3')\n      Text('text')\n        .fontWeight(this.fontWeightType[this.index])\n        .id('textFontWeight4')\n      Button('TextFontWeight')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextFontWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "010e7954208fd73b084de4cca17a5a464b51a6831b6d0dab618acd253e8f69ba"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textLetterSpacingTest from '../MyTest/TextLetterSpacingTest'\n\n@Entry\n@Component\nstruct TextLetterSpacingSample {\n  @State letterSpacingValue: number | string = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textLetterSpacingTest)\n  }\n\n  build() {\n    Column() {\n      Text('LetterSpacing')\n        .letterSpacing(this.letterSpacingValue)\n        .id('textLetterSpacing1')\n      Button('TextLetterSpacing')\n        .onClick(() => {\n          this.letterSpacingValue = '20px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextLetterSpacingSample.ets", "project_name": "arkui_ace_engine-master", "id": "d2c29750302d0d394704bea3999c35a0f16ddd024e5cb8fdbf3fbd1db7404565"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textLineHeightTest from '../MyTest/TextLineHeightTest'\n\n@Entry\n@Component\nstruct TextLineHeightSample {\n  @State lineHeightType: string | number | Resource = 50\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textLineHeightTest)\n  }\n\n  build() {\n    Column() {\n      Text('TextLineHeight')\n        .lineHeight(this.lineHeightType)\n        .id('textLineHeight1')\n      Button('TextLineHeight1')\n        .onClick(() => {\n          this.lineHeightType = '50px'\n        })\n      Button('TextLineHeight2')\n        .onClick(() => {\n          this.lineHeightType = $r('app.string.fp_line_height')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextLineHeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "559bd944b68ef57210840048069ff43b1d81604a8db07e1c3743038a130f1ab9"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textMaxFontSizeTest from '../MyTest/TextMaxFontSizeTest'\n\n@Entry\n@Component\nstruct TextMaxFontSizeSample {\n  @State maxFontSizeValue: number | string | Resource = 30\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textMaxFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .minFontSize('10px')\n        .maxFontSize($r('app.string.fp_text'))\n        .maxLines(3)\n        .id('textMaxFontSize1')\n      Text('text')\n        .minFontSize(10)\n        .maxFontSize(this.maxFontSizeValue)\n        .maxLines(3)\n        .id('textMaxFontSize2')\n      Button('TextMaxFontSize')\n        .onClick(() => {\n          this.maxFontSizeValue = '20px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextMaxFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "8411d9277890bac8d2fd2195ab44346464366cb61e2dc2187c419b962d3013d2"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textMaxLinesTest from '../MyTest/TextMaxLinesTest'\n\n@Entry\n@Component\nstruct TextMaxLinesSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(textMaxLinesTest)\n  }\n\n  build() {\n    Column() {\n      Text('TextMaxLines')\n        .maxLines(1)\n        .id('textMaxLines1')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextMaxLinesSample.ets", "project_name": "arkui_ace_engine-master", "id": "8629b65fc5c2466a1d0070cf773e8fa917c37954a34aec96bf1ba49dc6b693c7"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textMinFontSizeTest from '../MyTest/TextMinFontSizeTest'\n\n@Entry\n@Component\nstruct TextMinFontSizeSample {\n  @State minFontSizeValue: number | string | Resource = 10\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textMinFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      Text('text')\n        .minFontSize($r('app.string.fp_text'))\n        .maxFontSize(30)\n        .maxLines(3)\n        .id('textMinFontSize1')\n      Text('text')\n        .minFontSize(this.minFontSizeValue)\n        .maxFontSize(30)\n        .maxLines(3)\n        .id('textMinFontSize2')\n      Button('TextMinFontSize')\n        .onClick(() => {\n          this.minFontSizeValue = '20px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextMinFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "d94b18ca93736a4239dbc96af0345bac94f757e986ada086354beb7d2354bd62"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textSelectionTest from '../MyTest/TextSelectionTest'\n\n@Entry\n@Component\nstruct TextSelectionSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(textSelectionTest)\n  }\n\n  build() {\n    Column() {\n      Text('TextSelection')\n        .selection(1, 10)\n        .id('textSelection1')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextSelectionSample.ets", "project_name": "arkui_ace_engine-master", "id": "d43dde1706ffa3b0090bb2f3ccea1d63e88ad9c421af9d578f71d814a675ec1d"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textTextAlignTest from '../MyTest/TextTextAlignTest'\n\n@Entry\n@Component\nstruct TextTextAlignSample {\n  @State textAlignValue: TextAlign = TextAlign.JUSTIFY\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTextAlignTest)\n  }\n\n  build() {\n    Column() {\n      Text('textAlign')\n        .textAlign(TextAlign.Center)\n        .id('textTextAlign1')\n      Text('textAlign')\n        .textAlign(this.textAlignValue)\n        .id('textTextAlign2')\n      Button('TextTextAlign1')\n        .onClick(() => {\n          this.textAlignValue = TextAlign.Start\n        })\n      Button('TextTextAlign2')\n        .onClick(() => {\n          this.textAlignValue = TextAlign.End\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextTextAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "342e9591b48c52794da2f1f67a948cc17cc39889e243b324bdb9cff9837a91f3"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textTextCaseTest from '../MyTest/TextTextCaseTest'\n\n@Entry\n@Component\nstruct TextTextCaseSample {\n  @State textCaseValue: TextCase = TextCase.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTextCaseTest)\n  }\n\n  build() {\n    Column() {\n      Text('ABC abc')\n        .textCase(TextCase.LowerCase)\n        .id('textTextCase1')\n      Text('ABC abc')\n        .textCase(this.textCaseValue)\n        .id('textTextCase2')\n      Button('TextTextCase')\n        .onClick(() => {\n          this.textCaseValue = TextCase.UpperCase\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextTextCaseSample.ets", "project_name": "arkui_ace_engine-master", "id": "0635f16f63d80ae0052e9d660d664ed3082c1211c6d2cd8da02b5e79d01b78b8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textTextIndentTest from '../MyTest/TextTextIndentTest'\n\n@Entry\n@Component\nstruct TextTextIndentSample {\n  @State textIndentValue: Length = 100\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTextIndentTest)\n  }\n\n  build() {\n    Column() {\n      Text('textIndent')\n        .textIndent($r('app.string.fp_text'))\n        .id('textTextIndent1')\n      Text('textIndent')\n        .textIndent(this.textIndentValue)\n        .id('textTextIndent2')\n      Button('TextTextIndent')\n        .onClick(() => {\n          this.textIndentValue = '200px'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextTextIndentSample.ets", "project_name": "arkui_ace_engine-master", "id": "dab816acbd9cec3f9435876b26ad37b3ce39142362c67734109953b4d8569cf2"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textTextOverflowTest from '../MyTest/TextTextOverflowTest'\n\n@Entry\n@Component\nstruct TextTextOverflowSample {\n  @State textOverFlowValue: TextOverflow = TextOverflow.Ellipsis\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textTextOverflowTest)\n  }\n\n  build() {\n    Column() {\n      Text('This is the setting of textOverflow to Clip text content This is the setting of textOverflow to None text content. This is the setting of textOverflow to Clip text content This is the setting of textOverflow to None text content.')\n        .textOverflow({ overflow: TextOverflow.None })\n        .id('textTextOverflow1')\n      Text('This is the setting of textOverflow to Clip text content This is the setting of textOverflow to None text content. This is the setting of textOverflow to Clip text content This is the setting of textOverflow to None text content.')\n        .textOverflow({ overflow: TextOverflow.Clip })\n        .id('textTextOverflow2')\n      Text('This is the setting of textOverflow to Clip text content This is the setting of textOverflow to None text content. This is the setting of textOverflow to Clip text content This is the setting of textOverflow to None text content.')\n        .textOverflow({ overflow: this.textOverFlowValue })\n        .id('textTextOverflow3')\n      Button('TextTextOverflow')\n        .onClick(() => {\n          this.textOverFlowValue = TextOverflow.MARQUEE\n        })\n    }.height(300).width(335).padding({ left: 35, right: 35, top: 35 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextTextOverflowSample.ets", "project_name": "arkui_ace_engine-master", "id": "6b36e281b8970044a422705203f7b69b94d2b7d7a3b5d80365fbc98a7d7f0738"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textWordBreakTest from '../MyTest/TextWordBreakTest'\n\n@Entry\n@Component\nstruct TextWordBreakSample {\n  @State wordBreakValue: WordBreak = WordBreak.NORMAL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textWordBreakTest)\n  }\n\n  build() {\n    Column() {\n      Text('This is set wordBreak to WordBreak text content This is set wordBreak to WordBreak text content')\n        .wordBreak(WordBreak.BREAK_ALL)\n        .border({ width: 1 })\n        .id('textWordBreak1')\n      Text('This is set wordBreak to WordBreak text.')\n        .wordBreak(this.wordBreakValue)\n        .border({ width: 1 })\n        .id('textWordBreak2')\n      Button('TextWordBreak')\n        .onClick(() => {\n          this.wordBreakValue = WordBreak.BREAK_WORD\n        })\n    }.height(300).width(335).padding({ left: 35, right: 35, top: 35 })\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text\\TextWordBreakSample.ets", "project_name": "arkui_ace_engine-master", "id": "258d5164755ec6e7540ccfbf224dee7690df67022176d8f8f0fed93a5888b02a"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaBarStateTest from '../MyTest/TextAreaBarStateTest'\n\n@Entry\n@Component\nstruct TextAreaBarStateSample {\n  @State onValue: BarState = BarState.On\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaBarStateTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .barState(BarState.Off)\n        .id('textAreaBarState1')\n      TextArea()\n        .barState(this.onValue)\n        .id('textAreaBarState2')\n      Button('TextAreaBarState')\n        .onClick(() => {\n          this.onValue = BarState.Auto\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaBarStateSample.ets", "project_name": "arkui_ace_engine-master", "id": "86b9a331940897d4b2c4ed7acc49d0f5e551dc79db9adb46c5dc99ac04c8670e"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaCaretColorTest from '../MyTest/TextAreaCaretColorTest'\n\n@Entry\n@Component\nstruct TextAreaCaretColorSample {\n  @State caretColorType: ResourceColor = 0xffffff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaCaretColorTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .caretColor(Color.Red)\n        .id('textAreaCaretColor1')\n      TextArea()\n        .caretColor(this.caretColorType)\n        .id('textAreaCaretColor2')\n      Button('TextAreaCaretColor1')\n        .onClick(() => {\n          this.caretColorType = 'rgb(255, 100, 255)'\n        })\n      Button('TextAreaCaretColor2')\n        .onClick(() => {\n          this.caretColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaCaretColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "b00aeba6e410b8c9232fa0cdffe8a283c2bd9db9e99da9c15ee6eb8436fb30f8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaCopyOptionTest from '../MyTest/TextAreaCopyOptionTest'\n\n@Entry\n@Component\nstruct TextAreaCopyOptionSample {\n  @State copyOptionValue: CopyOptions = CopyOptions.InApp\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaCopyOptionTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .copyOption(CopyOptions.None)\n        .id('textAreaCopyOption1')\n      TextArea()\n        .copyOption(this.copyOptionValue)\n        .id('textAreaCopyOption2')\n      Button('TextAreaCopyOption1')\n        .onClick(() => {\n          this.copyOptionValue = CopyOptions.LocalDevice\n        })\n      Button('TextAreaCopyOption2')\n        .onClick(() => {\n          this.copyOptionValue = CopyOptions.CROSS_DEVICE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaCopyOptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "1559e5779d82f7815c3a96dde23aaf0d81f5b1ace79ad31ca2e821409a3c9903"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaCustomKeyboardTest from '../MyTest/TextAreaCustomKeyboardTest'\n\n@Entry\n@Component\nstruct TextAreaCustomKeyboardSample {\n  controller: TextAreaController = new TextAreaController()\n  @State inputValue: string = \"\"\n\n  @Builder\n  CustomKeyboardBuilder() {\n    Column() {\n      Button('x').onClick(() => {\n        this.controller.stopEditing()\n      })\n      Grid() {\n        ForEach([1, 2, 3, 4, 5, 6, 7, 8, 9, '*', 0, '#'], (item: number | string) => {\n          GridItem() {\n            Button(item + \"\")\n              .width(110).onClick(() => {\n              this.inputValue += item\n            })\n          }\n        })\n      }.maxCount(3).columnsGap(10).rowsGap(10).padding(5)\n    }.backgroundColor(Color.Gray)\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaCustomKeyboardTest)\n  }\n\n  build() {\n    Column() {\n      Search({ controller: this.controller, value: this.inputValue })\n        .customKeyboard(this.CustomKeyboardBuilder()).margin(10).border({ width: 1 })\n        .id('textAreaCustomKeyboard')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaCustomKeyboardSample.ets", "project_name": "arkui_ace_engine-master", "id": "45a99f9815a8d77f3b8f5c775af1d4b63dac820abe1803c86fc0e5e6a6b3a06e"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaEnableKeyBoardOnFocusTest from '../MyTest/TextAreaEnableKeyBoardOnFocusTest'\n\n@Entry\n@Component\nstruct TextAreaEnableKeyBoardOnFocusSample {\n  @State enableKeyboardOnFocusType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaEnableKeyBoardOnFocusTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .enableKeyboardOnFocus(this.enableKeyboardOnFocusType)\n        .id('textAreaEnableKeyBoardOnFocus')\n      Button('TextAreaEnableKeyBoardOnFocus')\n        .onClick(() => {\n          this.enableKeyboardOnFocusType = !this.enableKeyboardOnFocusType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaEnableKeyBoardOnFocusSample.ets", "project_name": "arkui_ace_engine-master", "id": "3fb26c1e3124492b32ef1c6d3ae930d6ce3bed99b84f530d617527ac3f168890"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaEnterKeyTypeTest from '../MyTest/TextAreaEnterKeyTypeTest'\n\n@Entry\n@Component\nstruct TextAreaEnterKeyTypeSample {\n  @State enterKeyTypeType: EnterKeyType[] =\n    [EnterKeyType.Search, EnterKeyType.Done, EnterKeyType.PREVIOUS, EnterKeyType.Send]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaEnterKeyTypeTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .enterKeyType(EnterKeyType.Go)\n        .id('textAreaEnterKeyType1')\n      TextArea()\n        .enterKeyType(EnterKeyType.Next)\n        .id('textAreaEnterKeyType2')\n      TextArea()\n        .enterKeyType(EnterKeyType.NEW_LINE)\n        .id('textAreaEnterKeyType3')\n      TextArea()\n        .enterKeyType(this.enterKeyTypeType[this.index])\n        .id('textAreaEnterKeyType4')\n      Button('TextAreaEnterKeyType')\n        .onClick(() => {\n          this.index++\n          this.index %= 4\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaEnterKeyTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "8ca2a687e24a87f674268b0e8ba5ba1357d06a285df1c0d22b3e95cd9d7f8c01"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaFontColorTest from '../MyTest/TextAreaFontColorTest'\n\n@Entry\n@Component\nstruct TextAreaFontColorSample {\n  @State fontColorType: ResourceColor = 0xffffff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaFontColorTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .fontColor(Color.Orange)\n        .id('textAreaFontColor1')\n      TextArea()\n        .fontColor(this.fontColorType)\n        .id('textAreaFontColor2')\n      Button('TextAreaFontColor1')\n        .onClick(() => {\n          this.fontColorType = 'rgb(255, 100, 255)'\n        })\n      Button('TextAreaFontColor2')\n        .onClick(() => {\n          this.fontColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "738e4248f76990484dfab6f69ccf44108c5e6cc32dae5b47e311300575db525b"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaFontFamilyTest from '../MyTest/TextAreaFontFamilyTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct TextAreaFontFamilySample {\n  @State fontFamilyType: string = 'Arial'\n  @State text: string = ''\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(textAreaFontFamilyTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .fontFamily(this.fontFamilyType)\n        .margin({ bottom: 10 })\n        .id('textAreaFontFamily')\n      Button('TextAreaFontFamily')\n        .onClick(() => {\n          this.fontFamilyType = 'TESTFONTRawFile'\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "188c52b2e69b02f4aa84ffa74fda8beace66feae5725be6cfb6173c48920bee3"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaFontSizeTest from '../MyTest/TextAreaFontSizeTest'\n\n@Entry\n@Component\nstruct TextAreaFontSizeSample {\n  @State fontSizeType: string | number | Resource = '20px'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .fontSize(this.fontSizeType)\n        .id('textAreaFontSize')\n      Button('TextAreaFontSize1')\n        .onClick(() => {\n          this.fontSizeType = 800\n        })\n      Button('TextAreaFontSize2')\n        .onClick(() => {\n          this.fontSizeType = $r('app.string.fp_length')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "b6984a329f8381af1f3ea5020f993c2c57cb4cb62ff305f1d9128844c909916e"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaFontStyleTest from '../MyTest/TextAreaFontStyleTest'\n\n@Entry\n@Component\nstruct TextAreaFontStyleSample {\n  @State fontStyleType: FontStyle = FontStyle.Normal\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaFontStyleTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .fontStyle(this.fontStyleType)\n        .id('textAreaFontStyle')\n      Button('TextAreaFontStyle')\n        .onClick(() => {\n          this.fontStyleType = FontStyle.Italic\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "022a3c0803908564ee9da6894a0d0e24c1d4ba7d5de65595e1f3aa21419c8d44"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaFontWeightTest from '../MyTest/TextAreaFontWeightTest'\n\n@Entry\n@Component\nstruct TextAreaFontWeightSample {\n  @State weightType: FontWeight[] = [FontWeight.Regular, FontWeight.Bold, FontWeight.Medium, FontWeight.Bolder, 800]\n  @State index: number = 0\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaFontWeightTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .fontWeight(FontWeight.Lighter)\n        .id('textAreaFontWeight1')\n      TextArea()\n        .fontWeight(FontWeight.Normal)\n        .id('textAreaFontWeight2')\n      TextArea()\n        .fontWeight(this.weightType[this.index])\n        .id('textAreaFontWeight3')\n      Button('TextAreaFontWeight')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n      TextArea()\n        .fontWeight('400')\n        .id('textAreaFontWeight4')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaFontWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "4de9934a66dc4557090d1341ee06b0e9e09d56e40791505523af50dd9bd8c498"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaInputFilterTest from '../MyTest/TextAreaInputFilterTest'\n\n@Entry\n@Component\nstruct TextAreaInputFilterSample {\n  @State value: ResourceStr = '^[a-z]$'\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaInputFilterTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .inputFilter(this.value, (value: string) => {\n        })\n        .id('textAreaInputFilter')\n      Button('TextAreaInputFilter')\n        .onClick(() => {\n          this.value = $r(\"app.string.value_resource_str\")\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaInputFilterSample.ets", "project_name": "arkui_ace_engine-master", "id": "35fb56ac8032cf2486a2eb955c233f9c847a40a5fb3ab2186077bf6baecff987"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaMaxLengthTest from '../MyTest/TextAreaMaxLengthTest'\n\n@Entry\n@Component\nstruct TextAreaMaxLengthSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaMaxLengthTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .maxLength(10)\n        .id('textAreaMaxLength')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaMaxLengthSample.ets", "project_name": "arkui_ace_engine-master", "id": "db75c77e2dd9aa1c13953c390f4cee853ad4b45196293d325864468e25e52711"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaMaxLinesTest from '../MyTest/TextAreaMaxLinesTest'\n\n@Entry\n@Component\nstruct TextAreaMaxLinesSample {\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaMaxLinesTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .maxLines(3)\n        .id('textAreaMaxLines')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaMaxLinesSample.ets", "project_name": "arkui_ace_engine-master", "id": "c0a6d2a70681fb50399120f8a97b3c43cbfad7a97f80f5fee0013d1b4212f4b3"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaPlaceholderColorTest from '../MyTest/TextAreaPlaceholderColorTest'\n\n@Entry\n@Component\nstruct TextAreaPlaceholderColorSample {\n  @State placeholderColorType: ResourceColor = 0xffffff\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaPlaceholderColorTest)\n  }\n\n  build() {\n    Column() {\n      TextArea({ placeholder: 'text area' })\n        .placeholderColor(Color.Blue)\n        .id('textAreaPlaceholderColor1')\n      TextArea({ placeholder: 'text area' })\n        .placeholderColor(this.placeholderColorType)\n        .id('textAreaPlaceholderColor2')\n      Button('TextAreaPlaceholderColor1')\n        .onClick(() => {\n          this.placeholderColorType = '#99182431'\n        })\n      Button('TextAreaPlaceholderColor2')\n        .onClick(() => {\n          this.placeholderColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaPlaceholderColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "d9902fae419110cf68894daf1f46d8b1b397cc0d399650a84cb503f29b42c161"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaPlaceholderFontTest from '../MyTest/TextAreaPlaceholderFontTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct TextAreaPlaceholderFontSample {\n  @State placeholderFontType: Font = {\n    size: '50px',\n    weight: FontWeight.Lighter,\n    family: 'Arial',\n    style: FontStyle.Normal\n  }\n  @State placeholderFontWeightType: Font = { weight: 100 }\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(textAreaPlaceholderFontTest)\n  }\n\n  build() {\n    Column() {\n      TextArea({ placeholder: 'text area' })\n        .placeholderFont(this.placeholderFontType)\n        .id('textAreaPlaceholderFont1')\n      Button('TextAreaPlaceholderFont1')\n        .onClick(() => {\n          this.placeholderFontType = {\n            size: 40,\n            weight: FontWeight.Normal,\n            family: 'TESTFONTRawFile',\n            style: FontStyle.Italic\n          }\n        })\n      TextArea({ placeholder: 'text area' })\n        .placeholderFont({ size: $r('app.string.length'), weight: FontWeight.Regular })\n        .id('textAreaPlaceholderFont2')\n      TextArea({ placeholder: 'text area' })\n        .placeholderFont({ weight: FontWeight.Medium })\n        .id('textAreaPlaceholderFont3')\n      TextArea({ placeholder: 'text area' })\n        .placeholderFont({ weight: FontWeight.Bold })\n        .id('textAreaPlaceholderFont4')\n      TextArea({ placeholder: 'text area' })\n        .placeholderFont({ weight: FontWeight.Bolder })\n        .id('textAreaPlaceholderFont5')\n      TextArea({ placeholder: 'text area' })\n        .placeholderFont(this.placeholderFontWeightType)\n        .height(50)\n        .id('textAreaPlaceholderFont6')\n      Button('TextAreaPlaceholderFont2')\n        .onClick(() => {\n          this.placeholderFontWeightType = { weight: 900 }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaPlaceholderFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "46e73f4d4197aa88cff90908188ab1decfacaf41de2dd7bfe76e8b8f36f57cc2"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaSelectionMenuHiddenTest from '../MyTest/TextAreaSelectionMenuHiddenTest'\n\n@Entry\n@Component\nstruct TextAreaSelectionMenuHiddenSample {\n  @State selectionMenuHiddenType: boolean = true\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaSelectionMenuHiddenTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .selectionMenuHidden(this.selectionMenuHiddenType)\n        .id('textAreaSelectionMenuHidden')\n      Button('TextAreaSelectionMenuHidden')\n        .onClick(() => {\n          this.selectionMenuHiddenType = !this.selectionMenuHiddenType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaSelectionMenuHiddenSample.ets", "project_name": "arkui_ace_engine-master", "id": "a6482cb1b34b27d25a8cc45a532a809928c2f9f6b3c8503b4d85412dd09f2ed8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaShowCounterTest from '../MyTest/TextAreaShowCounterTest'\n\n@Entry\n@Component\nstruct TextAreaShowCounterSample {\n  @State value: boolean = true\n  @State highlightBorderType: boolean = false\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaShowCounterTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .showCounter(this.value, { highlightBorder: this.highlightBorderType })\n        .maxLength(10)\n        .id('textAreaShowCounter1')\n      Button('TextAreaShowCounter1')\n        .onClick(() => {\n          this.value = !this.value\n        })\n      Button('TextAreaShowCounter2')\n        .onClick(() => {\n          this.highlightBorderType = !this.highlightBorderType\n        })\n      TextArea()\n        .showCounter(true, { thresholdPercentage: 70, highlightBorder: true })\n        .maxLength(10)\n        .id('textAreaShowCounter2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaShowCounterSample.ets", "project_name": "arkui_ace_engine-master", "id": "64a6bf5724b3121dab56c41c3ff46d6d5e8a034516baecd5a8d016e200bfe6a1"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaStyleTest from '../MyTest/TextAreaStyleTest'\n\n@Entry\n@Component\nstruct TextAreaStyleSample {\n  @State TextContentStyleType: TextContentStyle = TextContentStyle.DEFAULT\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaStyleTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .style(this.TextContentStyleType)\n        .id('textAreaStyle')\n      Button('TextAreaStyle')\n        .onClick(() => {\n          this.TextContentStyleType = TextContentStyle.INLINE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "5300addfef0ab6185e1bc93054a70157810d4a271f5db30390014ff8990bfb08"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaTextAlignTest from '../MyTest/TextAreaTextAlignTest'\n\n@Entry\n@Component\nstruct TextAreaTextAlignSample {\n  @State textAlign: TextAlign = TextAlign.Center\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaTextAlignTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .textAlign(TextAlign.Start)\n        .id('textAreaTextAlign1')\n      TextArea()\n        .textAlign(this.textAlign)\n        .id('textAreaTextAlign2')\n      Button('TextAreaTextAlign1')\n        .onClick(() => {\n          this.textAlign = TextAlign.End\n        })\n      Button('TextAreaTextAlign2')\n        .onClick(() => {\n          this.textAlign = TextAlign.JUSTIFY\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaTextAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "53d777181a8b0163140bea7dc8144d90e76e6cc08e33a8b780213c158cc660ba"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textAreaTypeTest from '../MyTest/TextAreaTypeTest'\n\n@Entry\n@Component\nstruct TextAreaTypeSample {\n  @State type: TextAreaType = TextAreaType.NORMAL\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textAreaTypeTest)\n  }\n\n  build() {\n    Column() {\n      TextArea()\n        .type(TextAreaType.EMAIL)\n        .id('textAreaType1')\n      TextArea()\n        .type(this.type)\n        .id('textAreaType2')\n      Button('TextAreaType1')\n        .onClick(() => {\n          this.type = TextAreaType.NUMBER\n        })\n      Button('TextAreaType2')\n        .onClick(() => {\n          this.type = TextAreaType.PHONE_NUMBER\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_area\\TextAreaTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "673cf72fe869ceb36226ff230b1121ba457e0c70a5e75f391dfda3380114fda8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputBarStateTest from '../MyTest/TextInputBarStateTest'\n\n@Entry\n@Component\nstruct TextInputBarStateSample {\n  @State text: string = ''\n  @State onValue: BarState = BarState.On\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputBarStateTest)\n  }\n\n  controller: TextInputController = new TextInputController()\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .barState(BarState.Off)\n        .id('textInputBarState1')\n      TextInput({ text: this.text, controller: this.controller })\n        .barState(this.onValue)\n        .id('textInputBarState2')\n      Button('TextInputBarState')\n        .onClick(() => {\n          this.onValue = BarState.Auto\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputBarStateSample.ets", "project_name": "arkui_ace_engine-master", "id": "7f780cdae8587186e667a737c7461ad748d1aeb03461fd80f2424a286af1ed29"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputCancelButtonTest from '../MyTest/TextInputCancelButtonTest'\n\n@Entry\n@Component\nstruct TextInputCancelButtonSample {\n  @State text: string = ''\n  @State constantValue: CancelButtonStyle = CancelButtonStyle.CONSTANT\n  @State iconValue: IconOptions = { size: '50px', src: \"../../../resources/base/media/icon.png\", color: 0xffff0000 }\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputCancelButtonTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .cancelButton({\n          style: CancelButtonStyle.INPUT,\n          icon: {\n            size: 45,\n            src: $r('app.media.startIcon'),\n            color: Color.Blue\n          }\n        })\n        .id('textInputCancelButton1')\n      TextInput({ text: this.text, controller: this.controller })\n        .cancelButton({ style: this.constantValue, icon: this.iconValue })\n        .id('textInputCancelButton2')\n      Button('TextInputCancelButton1')\n        .onClick(() => {\n          this.constantValue = CancelButtonStyle.INVISIBLE\n          this.iconValue = { size: $r('app.string.vp_length'), color: 'rgb(235,50,122)' }\n        })\n      Button('TextInputCancelButton2')\n        .onClick(() => {\n          this.constantValue = CancelButtonStyle.CONSTANT\n          this.iconValue = { color: $r('sys.color.ohos_id_color_text_hyperlink') }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputCancelButtonSample.ets", "project_name": "arkui_ace_engine-master", "id": "670ebc7185688fe490954f85880431ffbcf256397effca66f8a365f54109b869"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputCaretColorTest from '../MyTest/TextInputCaretColorTest'\n\n@Entry\n@Component\nstruct TextInputCaretColorSample {\n  @State text: string = ''\n  @State caretColorType: ResourceColor = 0xffffff\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputCaretColorTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .caretColor(Color.Pink)\n        .id('textInputCaretColor1')\n      TextInput({ text: this.text, controller: this.controller })\n        .caretColor(this.caretColorType)\n        .id('textInputCaretColor2')\n      Button('TextInputCaretColor1')\n        .onClick(() => {\n          this.caretColorType = 'rgb(255, 100, 255)'\n        })\n      Button('TextInputCaretColor2')\n        .onClick(() => {\n          this.caretColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputCaretColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "09de105d676c73b5137f78908318ce7fb3dd8f96b66e98cc022f735730b58762"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputCaretPositionTest from '../MyTest/TextInputCaretPositionTest'\n\n@Entry\n@Component\nstruct TextInputCaretPositionSample {\n  @State text: string = '11111'\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputCaretPositionTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .id('textInputCaretPosition')\n      Button('textInputCaretPosition')\n        .margin(15)\n        .onClick(() => {\n          this.controller.caretPosition(5)\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputCaretPositionSample.ets", "project_name": "arkui_ace_engine-master", "id": "2877b7b1b84cb5c7cd6e7991ce10e152ceea76581f169ffde0c8bd7afc4eb02b"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputCaretStyleTest from '../MyTest/TextInputCaretStyleTest'\n\n@Entry\n@Component\nstruct TextInputCaretStyleSample {\n  @State text: string = ''\n  @State caretStyleType: CaretStyle = { width: 100 }\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputCaretStyleTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .caretStyle({ width: '100%' })\n        .id('textInputCaretStyle1')\n      TextInput({ text: this.text, controller: this.controller })\n        .caretStyle(this.caretStyleType)\n        .id('textInputCaretStyle2')\n      Button('TextInputCaretStyle')\n        .onClick(() => {\n          this.caretStyleType = { width: $r('app.string.vp_length') }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputCaretStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "2190d43b87f7496cdf2e7be87447a2af6b5f57feaa0f37b9ba09d7dc4594c7f5"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputCopyOptionTest from '../MyTest/TextInputCopyOptionTest'\n\n@Entry\n@Component\nstruct TextInputCopyOptionSample {\n  @State text: string = ''\n  @State copyOptionValue: CopyOptions = CopyOptions.InApp\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputCopyOptionTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .copyOption(CopyOptions.None)\n        .id('textInputCopyOption1')\n      TextInput({ text: this.text, controller: this.controller })\n        .copyOption(this.copyOptionValue)\n        .id('textInputCopyOption2')\n      Button('TextInputCopyOption1')\n        .onClick(() => {\n          this.copyOptionValue = CopyOptions.LocalDevice\n        })\n      Button('TextInputCopyOption2')\n        .onClick(() => {\n          this.copyOptionValue = CopyOptions.CROSS_DEVICE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputCopyOptionSample.ets", "project_name": "arkui_ace_engine-master", "id": "6c0c90cd63658bae7e63bb85d9bc7f6ddf2b62ad88d44f01a58d3ef40ae4e5bd"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputEnableAutoFillTest from '../MyTest/TextInputEnableAutoFillTest'\n\n@Entry\n@Component\nstruct TextInputEnableAutoFillSample {\n  @State text: string = ''\n  @State enableAutoFillType: boolean = true\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputEnableAutoFillTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .type(InputType.Email)\n        .enableAutoFill(this.enableAutoFillType)\n        .id('textInputEnableAutoFill')\n      Button('TextInputEnableAutoFill')\n        .onClick(() => {\n          this.enableAutoFillType = !this.enableAutoFillType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputEnableAutoFillSample.ets", "project_name": "arkui_ace_engine-master", "id": "e370803db5fb2c0e3e72dcb62e34d9de381d85a895afbe87822f48834baa3ec3"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputEnableKeyboardOnFocusTest from '../MyTest/TextInputEnableKeyboardOnFocusTest'\n\n@Entry\n@Component\nstruct TextInputEnableKeyboardOnFocusSample {\n  @State text: string = ''\n  @State enableKeyboardOnFocusType: boolean = true\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputEnableKeyboardOnFocusTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .enableKeyboardOnFocus(this.enableKeyboardOnFocusType)\n        .id('textInputEnableKeyboardOnFocus')\n      Button('TextInputEnableKeyboardOnFocus')\n        .onClick(() => {\n          this.enableKeyboardOnFocusType = !this.enableKeyboardOnFocusType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputEnableKeyboardOnFocusSample.ets", "project_name": "arkui_ace_engine-master", "id": "c2197c87054a40563de664de172330e41b86a62d2ee0e62f2256f1ef0ae2cc1c"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputEnterKeyTypeTest from '../MyTest/TextInputEnterKeyTypeTest'\n\n@Entry\n@Component\nstruct TextInputEnterKeyTypeSample {\n  @State text: string = ''\n  @State enterKeyTypeSearchType: EnterKeyType = EnterKeyType.Search\n  @State enterKeyTypeDoneType: EnterKeyType = EnterKeyType.Done\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputEnterKeyTypeTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .enterKeyType(EnterKeyType.Go)\n        .id('textInputEnterKeyType1')\n      TextInput({ text: this.text, controller: this.controller })\n        .enterKeyType(this.enterKeyTypeSearchType)\n        .id('textInputEnterKeyType2')\n      Button('TextInputEnterKeyType1')\n        .onClick(() => {\n          this.enterKeyTypeSearchType = EnterKeyType.Send\n        })\n      TextInput({ text: this.text, controller: this.controller })\n        .enterKeyType(EnterKeyType.Next)\n        .id('textInputEnterKeyType3')\n      TextInput({ text: this.text, controller: this.controller })\n        .enterKeyType(this.enterKeyTypeDoneType)\n        .id('textInputEnterKeyType4')\n      Button('TextInputEnterKeyType2')\n        .onClick(() => {\n          this.enterKeyTypeDoneType = EnterKeyType.PREVIOUS\n        })\n      TextInput({ text: this.text, controller: this.controller })\n        .enterKeyType(EnterKeyType.NEW_LINE)\n        .id('textInputEnterKeyType5')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputEnterKeyTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "17fd70df4c5255f8aaadf933bea3061091fc7e3f60f7db7e12cc7ff765aa64e9"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputFontColorTest from '../MyTest/TextInputFontColorTest'\n\n@Entry\n@Component\nstruct TextInputFontColorSample {\n  @State text: string = ''\n  @State fontColorType: ResourceColor = 0xffffff\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputFontColorTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .fontColor(Color.Pink)\n        .id('textInputFontColor1')\n      TextInput({ text: this.text, controller: this.controller })\n        .fontColor(this.fontColorType)\n        .id('textInputFontColor2')\n      Button('TextInputFontColor1')\n        .onClick(() => {\n          this.fontColorType = 'rgb(255, 100, 255)'\n        })\n      Button('TextInputFontColor2')\n        .onClick(() => {\n          this.fontColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputFontColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "d9394618cd5c47da5dd61dc48e695d1da905d3635d185f831d72609ac71f57bb"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputFontFamilyTest from '../MyTest/TextInputFontFamilyTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct TextInputFontFamilySample {\n  @State text: string = ''\n  @State fontFamilyType: string = 'Arial'\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(textInputFontFamilyTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .fontFamily(this.fontFamilyType)\n        .margin({ bottom: 10 })\n        .id('textInputFontFamily')\n      Button('TextInputFontFamily')\n        .onClick(() => {\n          this.fontFamilyType = 'TESTFONTRawFile'\n        })\n\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputFontFamilySample.ets", "project_name": "arkui_ace_engine-master", "id": "1975faa76068bc9271f3f60d974beaf4aa51b65797597cd22a5bf67b93e05dbf"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputFontSizeTest from '../MyTest/TextInputFontSizeTest'\n\n@Entry\n@Component\nstruct TextInputFontSizeSample {\n  @State text: string = ''\n  @State fontSizeType: string | number | Resource = '20px'\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputFontSizeTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .fontSize(this.fontSizeType)\n        .id('textInputFontSize')\n      Button('TextInputFontSize1')\n        .onClick(() => {\n          this.fontSizeType = 400\n        })\n      Button('TextInputFontSize2')\n        .onClick(() => {\n          this.fontSizeType = $r('app.string.fp_length')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputFontSizeSample.ets", "project_name": "arkui_ace_engine-master", "id": "ee19218db1d83adc879b748bdad988fd1f0dccd96ec613a07484f1c0fb130ffa"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputFontStyleTest from '../MyTest/TextInputFontStyleTest'\n\n@Entry\n@Component\nstruct TextInputFontStyleSample {\n  @State text: string = ''\n  @State fontStyleType: FontStyle = FontStyle.Normal\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputFontStyleTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .fontStyle(this.fontStyleType)\n        .id('textInputFontStyle')\n      Button('TextInputFontStyle')\n        .onClick(() => {\n          this.fontStyleType = FontStyle.Italic\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputFontStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "bbcde1940285b5c80871ccfb81ef9ae212e950790fc478a2a5fb4a6fc4ec15c3"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputFontWeightTest from '../MyTest/TextInputFontWeightTest'\n\n@Entry\n@Component\nstruct TextInputFontWeightSample {\n  @State text: string = ''\n  @State weightType: FontWeight[] = [FontWeight.Bold, FontWeight.Regular, FontWeight.Medium, FontWeight.Bolder, 800]\n  @State index: number = 0\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputFontWeightTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .fontWeight(FontWeight.Lighter)\n        .id('textInputFontWeight1')\n      TextInput({ text: this.text, controller: this.controller })\n        .fontWeight(\"400\")\n        .id('textInputFontWeight2')\n      TextInput({ text: this.text, controller: this.controller })\n        .fontWeight(FontWeight.Normal)\n        .id('textInputFontWeight3')\n      TextInput({ text: this.text, controller: this.controller })\n        .fontWeight(this.weightType[this.index])\n        .id('textInputFontWeight4')\n      Button('TextInputFontWeight')\n        .onClick(() => {\n          this.index++\n          this.index %= 5\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputFontWeightSample.ets", "project_name": "arkui_ace_engine-master", "id": "0d35a50bca24dc7fb59465b814bf4240879707339fa567bb53c04697a1803eae"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputInputFilterTest from '../MyTest/TextInputInputFilterTest'\n\n@Entry\n@Component\nstruct TextInputInputFilterSample {\n  @State text: string = ''\n  @State value: ResourceStr = '^[a-z]$'\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputInputFilterTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .inputFilter(this.value, (e) => {\n        })\n        .id('textInputInputFilter')\n      Button('TextInputInputFilter')\n        .onClick(() => {\n          this.value = $r(\"app.string.value_resource_str\")\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputInputFilterSample.ets", "project_name": "arkui_ace_engine-master", "id": "c2be3153274712603a694c4837c86c9e37c81f409d38d82c93a6f9ac419a254c"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputMaxLengthTest from '../MyTest/TextInputMaxLengthTest'\n\n@Entry\n@Component\nstruct TextInputMaxLengthSample {\n  @State text: string = ''\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputMaxLengthTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .maxLength(10)\n        .id('textInputMaxLength')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputMaxLengthSample.ets", "project_name": "arkui_ace_engine-master", "id": "552817903a857a7b73dcdd274f7d9791fa7e57153ed8861641a65580c5bfa89c"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputMaxLinesTest from '../MyTest/TextInputMaxLinesTest'\n\n@Entry\n@Component\nstruct TextInputMaxLinesSample {\n  @State text: string = ''\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputMaxLinesTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .maxLines(3)\n        .id('textInputMaxLines')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputMaxLinesSample.ets", "project_name": "arkui_ace_engine-master", "id": "53440f0d94502c31ddbb488ed4f59bba0f52736179a9f13bfa0f7ba59813919f"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputPasswordIconTest from '../MyTest/TextInputPasswordIconTest'\n\n@Entry\n@Component\nstruct TextInputPasswordIconSample {\n  @State text: string = ''\n  @State passwordIconType: PasswordIcon = { onIconSrc: $r('app.media.startIcon') }\n  @State passwordIconType2: PasswordIcon = { onIconSrc: \"../../../resources/base/media/icon.png\" }\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputPasswordIconTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .type(InputType.Password)\n        .passwordIcon(this.passwordIconType)\n        .id('textInputPasswordIcon')\n      Button('TextInputPasswordIcon')\n        .onClick(() => {\n          this.passwordIconType = { offIconSrc: $r('app.media.startIcon') }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputPasswordIconSample.ets", "project_name": "arkui_ace_engine-master", "id": "64305f71d5030bb1cfc45efb160a28cc33bdf65594d333ee0fa8505a8f29c6f1"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputPasswordRulesTest from '../MyTest/TextInputPasswordRulesTest'\n\n@Entry\n@Component\nstruct TextInputPasswordRulesSample {\n  @State text: string = ''\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputPasswordRulesTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .enableAutoFill(true)\n        .passwordRules(\" ^[A-Za-z]$\")\n        .id('textInputPasswordRules')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputPasswordRulesSample.ets", "project_name": "arkui_ace_engine-master", "id": "33dc81f3ff4a3b9be7d6188c43a0b7e1221748d1b595b2cb6fafaeda20230672"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputPlaceholderColorTest from '../MyTest/TextInputPlaceholderColorTest'\n\n@Entry\n@Component\nstruct TextInputPlaceholderColorSample {\n  @State text: string = ''\n  @State placeholderColorType: ResourceColor = 0xffffff\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputPlaceholderColorTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderColor(Color.Green)\n        .id('textInputPlaceholderColor1')\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderColor(this.placeholderColorType)\n        .id('textInputPlaceholderColor2')\n      Button('TextInputPlaceholderColor1')\n        .onClick(() => {\n          this.placeholderColorType = '#99182431'\n        })\n      Button('TextInputPlaceholderColor2')\n        .onClick(() => {\n          this.placeholderColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputPlaceholderColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "9a141d241d329c49ab07c556a1b5bde44b77c5e356ee5db8216083555769c572"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputPlaceholderFontTest from '../MyTest/TextInputPlaceholderFontTest'\nimport font from '@ohos.font';\n\n@Entry\n@Component\nstruct TextInputPlaceholderFontSample {\n  @State text: string = ''\n  @State placeholderFontType: Font = {\n    size: '50px',\n    weight: FontWeight.Lighter,\n    family: 'Arial',\n    style: FontStyle.Normal\n  }\n  @State placeholderFontWeightType: Font = { weight: 100 }\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear() {\n    font.registerFont({\n      familyName: 'TESTFONTRawFile',\n      familySrc: $rawfile('TESTFONT.TTF')\n    })\n    loadComponentTestEntry(textInputPlaceholderFontTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderFont(this.placeholderFontType)\n        .id(\"textInputPlaceholderFont1\")\n      Button('TextInputPlaceholderFont1')\n        .onClick(() => {\n          this.placeholderFontType = {\n            size: 40,\n            weight: FontWeight.Normal,\n            family: 'TESTFONTRawFile',\n            style: FontStyle.Italic\n          }\n        })\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderFont({ size: $r('app.string.fp_length'), weight: FontWeight.Regular })\n        .height(50)\n        .id('textInputPlaceholderFont2')\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderFont({ weight: FontWeight.Medium })\n        .height(50)\n        .id('textInputPlaceholderFont3')\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderFont({ weight: FontWeight.Bold })\n        .height(50)\n        .id('textInputPlaceholderFont4')\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderFont({ weight: FontWeight.Bolder })\n        .height(50)\n        .id('textInputPlaceholderFont5')\n      TextInput({ placeholder: 'Please input', text: this.text, controller: this.controller })\n        .placeholderFont(this.placeholderFontWeightType)\n        .height(50)\n        .id('textInputPlaceholderFont6')\n      Button('TextInputPlaceholderFont2')\n        .onClick(() => {\n          this.placeholderFontWeightType = { weight: \"900\" }\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputPlaceholderFontSample.ets", "project_name": "arkui_ace_engine-master", "id": "476ec06eb17dc2480473abb5ad28bd646b41d2d4ee8bb64a14f32b387aa06ede"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputSelectAllTest from '../MyTest/TextInputSelectAllTest'\n\n@Entry\n@Component\nstruct TextInputSelectAllSample {\n  @State text: string = ''\n  @State selectAllType: boolean = true\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputSelectAllTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .selectAll(this.selectAllType)\n        .id('textInputSelectAll')\n      Button('TextInputSelectAll')\n        .onClick(() => {\n          this.selectAllType = !this.selectAllType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputSelectAllSample.ets", "project_name": "arkui_ace_engine-master", "id": "e392b394b866050920cfdaee6baf5cdbc4e0ff1c2a67eab20bd1e42601c2cad8"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputSelectedBackgroundColorTest from '../MyTest/TextInputSelectedBackgroundColorTest'\n\n@Entry\n@Component\nstruct TextInputSelectedBackgroundColorSample {\n  @State text: string = ''\n  @State selectedBackgroundColorType: ResourceColor = 0xffffff\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputSelectedBackgroundColorTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .selectedBackgroundColor(Color.Pink)\n        .id('textInputSelectedBackgroundColor1')\n      TextInput({ text: this.text, controller: this.controller })\n        .selectedBackgroundColor(this.selectedBackgroundColorType)\n        .id('textInputSelectedBackgroundColor2')\n      Button('TextInputSelectedBackgroundColor1')\n        .onClick(() => {\n          this.selectedBackgroundColorType = 'rgb(255, 100, 255)'\n        })\n      Button('TextInputSelectedBackgroundColor2')\n        .onClick(() => {\n          this.selectedBackgroundColorType = $r('sys.color.ohos_id_color_text_hyperlink')\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputSelectedBackgroundColorSample.ets", "project_name": "arkui_ace_engine-master", "id": "07eb4e4d183073517db7117950909249d4e9a9bd87371b8273937fd0e9d804ab"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputSelectionMenuHiddenTest from '../MyTest/TextInputSelectionMenuHiddenTest'\n\n@Entry\n@Component\nstruct TextInputSelectionMenuHiddenSample {\n  @State text: string = ''\n  @State selectionMenuHiddenType: boolean = true\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputSelectionMenuHiddenTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .selectionMenuHidden(this.selectionMenuHiddenType)\n        .id('textInputSelectionMenuHidden')\n      Button('TextInputSelectionMenuHidden')\n        .onClick(() => {\n          this.selectionMenuHiddenType = !this.selectionMenuHiddenType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputSelectionMenuHiddenSample.ets", "project_name": "arkui_ace_engine-master", "id": "55f25d44562563994528a2dec3225c056b31a1c8902b1d7af78e0bbc59e605b3"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputShowCounterTest from '../MyTest/TextInputShowCounterTest'\n\n@Entry\n@Component\nstruct TextInputShowCounterSample {\n  @State text: string = ''\n  @State value: boolean = true\n  @State highlightBorderType: boolean = false\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputShowCounterTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .showCounter(this.value, { highlightBorder: this.highlightBorderType })\n        .maxLength(10)\n        .id('textInputShowCounter1')\n      Button('TextInputShowCounter1')\n        .onClick(() => {\n          this.value = !this.value\n        })\n      Button('TextInputShowCounter2')\n        .onClick(() => {\n          this.highlightBorderType = !this.highlightBorderType\n        })\n      TextInput({ text: this.text, controller: this.controller })\n        .showCounter(true, { thresholdPercentage: 70, highlightBorder: true })\n        .maxLength(10)\n        .id('textInputShowCounter2')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputShowCounterSample.ets", "project_name": "arkui_ace_engine-master", "id": "62c15843c697d2a289d17daf319d84d12293aaba120fb1ac421a7a024e81035f"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputShowErrorTest from '../MyTest/TextInputShowErrorTest'\n\n@Entry\n@Component\nstruct TextInputShowErrorSample {\n  @State text: string = ''\n  @State value: string = 'Error'\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputShowErrorTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .showError(this.value)\n        .id('textInputShowError')\n      Button('TextInputShowError')\n        .onClick(() => {\n          this.value = ''\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputShowErrorSample.ets", "project_name": "arkui_ace_engine-master", "id": "e631e2f04fcfe77de51984a3f63c9940cf2dd0f94c35b8a6bebb88758deb048a"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputShowPasswordIconTest from '../MyTest/TextInputShowPasswordIconTest'\n\n@Entry\n@Component\nstruct TextInputShowPasswordIconSample {\n  @State text: string = ''\n  @State showPasswordIconType: boolean = true\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputShowPasswordIconTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .type(InputType.Password)\n        .showPasswordIcon(this.showPasswordIconType)\n        .id('textInputShowPasswordIcon')\n      Button('TextInputShowPasswordIcon')\n        .onClick(() => {\n          this.showPasswordIconType = !this.showPasswordIconType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputShowPasswordIconSample.ets", "project_name": "arkui_ace_engine-master", "id": "d8a032a820f04c3ca446e3a6d78e8ba9dd6ed0fa551ccd4ea1a80182b11acf60"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputShowUnderlineTest from '../MyTest/TextInputShowUnderlineTest'\n\n@Entry\n@Component\nstruct TextInputShowUnderlineSample {\n  @State text: string = ''\n  @State showUnderlineType: boolean = false\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputShowUnderlineTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .showUnderline(this.showUnderlineType)\n        .id('textInputShowUnderline')\n      Button('TextInputShowUnderline')\n        .onClick(() => {\n          this.showUnderlineType = !this.showUnderlineType\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputShowUnderlineSample.ets", "project_name": "arkui_ace_engine-master", "id": "7886c28bb507e9992af11ec2fd2727992e6a550369d41cd7957fb9c4207d5f4a"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputShowUnitTest from '../MyTest/TextInputShowUnitTest'\n\n@Entry\n@Component\nstruct TextInputShowUnitSample {\n  @State text: string = ''\n  controller: TextInputController = new TextInputController()\n\n  @Builder\n  itemEnd() {\n    Select(\n      [{ value: 'KB' },\n        { value: 'MB' },\n        { value: 'GB' },\n        { value: 'TB', }]\n    )\n      .align(Alignment.Center)\n      .value('MB')\n      .onSelect((index: number) => {\n        console.info('Select:' + index)\n      })\n  }\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputShowUnitTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ placeholder: 'user define password icon', text: this.text, controller: this.controller })\n        .showUnderline(true)\n        .width(380)\n        .height(60)\n        .showError('Error')\n        .showUnit(this.itemEnd)\n        .id('textInputShowUnit')\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputShowUnitSample.ets", "project_name": "arkui_ace_engine-master", "id": "95814f36c1d833caa05d3b8046bf07cb208a6c0ea4ca0d48dcf0dbac61a791bc"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputStyleTest from '../MyTest/TextInputStyleTest'\n\n@Entry\n@Component\nstruct TextInputStyleSample {\n  @State text: string = ''\n  @State textInputStyleType: TextInputStyle = TextInputStyle.Default\n  @State textContentStyleType: TextContentStyle = TextContentStyle.DEFAULT\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputStyleTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .style(this.textInputStyleType)\n        .id('textInputStyle1')\n      Button('TextInputStyle1')\n        .onClick(() => {\n          this.textInputStyleType = TextInputStyle.Inline\n        })\n      TextInput({ text: this.text, controller: this.controller })\n        .style(this.textContentStyleType)\n        .id('textInputStyle2')\n      Button('TextInputStyle2')\n        .onClick(() => {\n          this.textContentStyleType = TextContentStyle.INLINE\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputStyleSample.ets", "project_name": "arkui_ace_engine-master", "id": "0e5097e41d9c1287431772ff8eacb51eeb6ec46454b277c137d1bd57129fda84"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputTextAlignTest from '../MyTest/TextInputTextAlignTest'\n\n@Entry\n@Component\nstruct TextInputTextAlignSample {\n  @State text: string = ''\n  @State textAlignType: TextAlign = TextAlign.Center\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputTextAlignTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .textAlign(TextAlign.Start)\n        .id('textInputTextAlign1')\n      TextInput({ text: this.text, controller: this.controller })\n        .textAlign(this.textAlignType)\n        .id('textInputTextAlign2')\n      Button('TextInputTextAlign1')\n        .onClick(() => {\n          this.textAlignType = TextAlign.End\n        })\n      Button('TextInputTextAlign2')\n        .onClick(() => {\n          this.textAlignType = TextAlign.JUSTIFY\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputTextAlignSample.ets", "project_name": "arkui_ace_engine-master", "id": "eaa27d10164881a986f61f03c376cf631e3ab1c101b101242be187aba0a4032d"}
{"text": "import { loadComponentTestEntry } from '@ohos.arkui.componentTest'\nimport textInputTypeTest from '../MyTest/TextInputTypeTest'\n\n@Entry\n@Component\nstruct TextInputTypeSample {\n  @State text: string = ''\n  @State inputType: InputType[] = [InputType.Email, InputType.Number, InputType.PhoneNumber, InputType.USER_NAME\n    , InputType.NEW_PASSWORD, InputType.NUMBER_PASSWORD, InputType.NUMBER_DECIMAL]\n  @State index: number = 0\n  controller: TextInputController = new TextInputController()\n\n  aboutToAppear(): void {\n    loadComponentTestEntry(textInputTypeTest)\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text, controller: this.controller })\n        .type(InputType.Normal)\n        .id('textInputType1')\n      TextInput({ text: this.text, controller: this.controller })\n        .type(InputType.Password)\n        .id('textInputType2')\n      TextInput({ text: this.text, controller: this.controller })\n        .type(this.inputType[this.index])\n        .id('textInputType3')\n      Button('TextInputType1')\n        .onClick(() => {\n          this.index++\n          this.index %= 7\n        })\n    }\n  }\n}", "path": "arkui_ace_engine-master\\test\\component_test\\test_cases\\components\\text_and_input\\entry\\src\\main\\ets\\pages\\text_input\\TextInputTypeSample.ets", "project_name": "arkui_ace_engine-master", "id": "0c5d9e8234c45c9ed01fd5bd9c9fa9784164e179a12f2042adaeb5d41a180db6"}
{"text": "export class PagesPathModel {\n    name: string = ''\n    address: string = ''\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\bean\\common\\PagesPathModel.ets", "project_name": "ArkUI_Component-main", "id": "4816d9d79745cbb532ca3fb0376c534486a59ef715a43d2629ed74e87a00f742"}
{"text": "export default class ValueObject {\n  value: string = ''\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\bean\\common\\ValueObject.ets", "project_name": "ArkUI_Component-main", "id": "2f19a8066fff33fe74f97d8879f22a8d6218c3d1d7e543eef26819493a691827"}
{"text": "@Component\nexport default struct CustomButton {\n  @Prop name: string\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.name)\n          .fontColor($r('app.color.font_main'))\n        Blank()\n        Button(this.name)\n          .backgroundColor($r('app.color.brand'))\n      }\n      .width('100%')\n      .height(50)\n    }\n    .width('100%')\n  }\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\controller\\CustomButton.ets", "project_name": "ArkUI_Component-main", "id": "738910ebcf20e88c1a4ccb0059899cfd21922f263e03e8fc3c370fc706d46334"}
{"text": "import ValueObject from '../../bean/common/ValueObject'\n\n@Component\nexport default struct CustomSelect {\n  @Prop name: string\n  @Link valuesList: Array<ValueObject>\n  @Link itemsList: Array<Object>\n  @Link selectItem: Object\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.name)\n          .fontColor($r('app.color.font_main'))\n        Blank()\n        Select(this.valuesList)\n          .fontColor($r('app.color.font_normal'))\n          .value(this.valuesList[0].value)\n          .onSelect((index: number, _) => {\n            this.selectItem = this.itemsList[index]\n          })\n      }\n      .width('100%')\n      .height(50)\n    }\n    .width('100%')\n  }\n}\n\n", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\controller\\CustomSelect.ets", "project_name": "ArkUI_Component-main", "id": "a0fb9ee444962a30fb2aa4aec33916238cb9a1ac5a35714aeb9c1f726dc4d86e"}
{"text": "@Component\nexport default struct CustomSlider {\n  @Prop name: string\n  @Link value: number\n  @Prop min: number\n  @Prop max: number\n  private step? : number\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.name)\n          .fontColor($r('app.color.font_main'))\n        Blank()\n\n        Slider({ value: this.value, min: this.min, max: this.max, step: this.step ? this.step : 1 })\n          .blockColor($r('app.color.start_window_background'))\n          .selectedColor($r('app.color.brand'))\n          .onChange((value: number, _) => {\n            this.value = value\n          })\n          .width('55%')\n\n        Text(`${Math.floor(this.value)}`)\n          .textAlign(TextAlign.End)\n          .width(32)\n          .fontColor($r('app.color.font_light'))\n          .fontSize(14)\n      }\n      .width('100%')\n      .height(50)\n\n    }\n    .width('100%')\n  }\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\controller\\CustomSlider.ets", "project_name": "ArkUI_Component-main", "id": "2e6e9f4668cc4629059cbee53375bcc5e7471027456d03fb7501426aa901ee06"}
{"text": "@Component\nexport default struct CustomSwitch {\n  @Prop name: string\n  @Link isOn: boolean\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.name)\n          .fontColor($r('app.color.font_main'))\n        Blank()\n        Toggle({ type: ToggleType.Switch, isOn: this.isOn })\n          .selectedColor($r('app.color.brand'))\n          .switchPointColor($r('app.color.start_window_background'))\n          .onChange(() => {\n            this.isOn = !this.isOn\n          })\n      }\n      .width('100%')\n      .height(50)\n\n    }\n    .width('100%')\n  }\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\controller\\CustomSwitch.ets", "project_name": "ArkUI_Component-main", "id": "e921a0c83c592d328faae110aadf006fecfc35662e9e5be4afa3b56d5b3f2b80"}
{"text": "import router from '@ohos.router'\n\n@Component\nexport default struct ListItemCustom {\n  @Prop name: string\n  @Prop address: string\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.name)\n          .fontSize(16)\n          .margin({ left: 8 })\n          .fontColor($r('app.color.font_normal'))\n        Blank()\n        Image($r('app.media.ic_public_arrow_left_filled'))\n          .height(16)\n          .rotate({\n            x: 0,\n            y: 1,\n            z: 0,\n            centerX: '50%',\n            centerY: '50%',\n            angle: 180\n          })\n          .fillColor($r('app.color.line_grey_light'))\n      }\n      .width('100%')\n\n    }\n    .onClick(() => {\n      onJumpClick(this.address)\n    })\n    .alignItems(HorizontalAlign.Start)\n    .padding(8)\n    .width('100%')\n    .height(40)\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor($r('app.color.list_item'))\n    .borderRadius(8)\n  }\n}\n\nfunction onJumpClick(src: string): void {\n  router.pushUrl({\n    url: src\n  }, router.RouterMode.Standard, (err) => {\n    if (err) {\n      console.error(`Invoke pushUrl failed, code is ${err.code}, message is ${err.message}`);\n      return;\n    }\n    console.info('Invoke pushUrl succeeded.');\n  });\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\list\\ListItemCustom.ets", "project_name": "ArkUI_Component-main", "id": "b72347147c680ddcc0c65ab0124e5abec30e44c7cec4df662035e24b8b9a5b53"}
{"text": "@Component\nexport default struct ListTitle{\n\n  @Prop title : string\n\n  build(){\n    Row(){\n      Rect()\n        .width(4)\n        .height(16)\n        .radius(2)\n        .fill($r('app.color.brand'))\n        .margin({right:8})\n      Text(this.title)\n        .fontColor($r('app.color.font_normal'))\n        .fontSize(16)\n        .fontWeight(500)\n    }\n    .margin({top:8})\n    .alignItems(VerticalAlign.Center)\n  }\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\list\\ListTitle.ets", "project_name": "ArkUI_Component-main", "id": "9e408f087e24a1834f3758a5f2a0240831b1bd6473237cf6d5ac372efdb7e4d2"}
{"text": "import router from '@ohos.router';\n\n@Component\nexport default struct Title {\n  @Prop pageTitle: string\n\n  build() {\n    Stack(){\n      Row() {\n        Text(this.pageTitle)\n          .fontColor($r('app.color.font_main'))\n          .fontSize(18)\n          .fontWeight(700)\n      }\n      .justifyContent(FlexAlign.Center)\n      .alignItems(VerticalAlign.Center)\n      .width('100%')\n      .height(60)\n      Row(){\n        Row(){\n          Image($r('app.media.ic_public_arrow_left_filled'))\n            .height(32)\n            .fillColor($r('app.color.font_main'))\n        }\n        .width(48)\n        .justifyContent(FlexAlign.Center)\n        .onClick(()=>{router.back()})\n\n        Blank()\n      }\n      .width('100%')\n    }\n    .backgroundColor($r('app.color.background_white'))\n  }\n\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\title\\Title.ets", "project_name": "ArkUI_Component-main", "id": "72a56bbdba3ff02df1b620a8131aa384ae68a1c105dcff814ea882951c4c89c9"}
{"text": "export class NameAddressObj {\n    name: string = ''\n    address: string = ''\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\bean\\NameAddressObj.ets", "project_name": "ArkUI_Component-main", "id": "b2f3673e806ce9465b408f9e5cc2d82b0d31530bb4c7bd9bb6c3ba19edf7a289"}
{"text": "export class ValueObject {\n  value: string = ''\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\bean\\ValueObject.ets", "project_name": "ArkUI_Component-main", "id": "a5c8f3ec1969b55335c471cbef060218695a042c7318425ddcf4818b3e9a5a58"}
{"text": "import router from '@ohos.router';\n\n@Component\nexport default struct Title {\n  @Prop pageTitle: string\n\n  build() {\n    Stack(){\n      Row() {\n        Text(this.pageTitle)\n          .fontSize(18)\n          .fontWeight(FontWeight.Medium)\n      }\n      .justifyContent(FlexAlign.Center)\n      .alignItems(VerticalAlign.Center)\n      .width('100%')\n      .height(60)\n      Row(){\n        Row(){\n          Image($r('app.media.ic_public_arrow_left_filled'))\n            .height(32)\n        }\n        .width(48)\n        .justifyContent(FlexAlign.Center)\n        .onClick(()=>{router.back()})\n\n        Blank()\n      }\n      .width('100%')\n    }\n  }\n\n}", "path": "ArkUI_Component-main\\entry\\src\\main\\ets\\component\\title\\Title.ets", "project_name": "ArkUI_Component-main", "id": "72a56bbdba3ff02df1b620a8131aa384ae68a1c105dcff814ea882951c4c89c9"}
{"text": "import backgroundTaskManager from '@ohos.resourceschedule.backgroundTaskManager';\nimport common from '@ohos.app.ability.common';\n\nexport function setBackgroundTask(reason: string, tasks: Function[], context: Context) {\n  try {\n    let delayInfo = backgroundTaskManager.requestSuspendDelay(reason, () => {\n      \n      console.log(\"setBackgroundTask, Request suspension delay will time out. \")\n    })\n    console.log(\"setBackgroundTask, The requestId is:\", reason, delayInfo.requestId, \"The actualDelayTime is:\", delayInfo.actualDelayTime);\n    for(let task of tasks)\n      task(context)\n  } catch (error) {\n    console.log(\"setBackgroundTask, requestSuspendDelay failed. \", JSON.stringify(error));\n  }\n}", "path": "biandan-satge-master\\entry\\src\\main\\ets\\control\\BackgroundTaskController.ets", "project_name": "biandan-satge-master", "id": "7ff6c15bdf1d2ef60769b2f87e8af06b61137c5efdbc9c1282e7c17e451bb22d"}
{"text": "PersistentStorage.PersistProp('FirstDayOfWeek', 0)\n\nexport function getStartDate(date: number[]): number[] {\n  var dateTime = new Date(date[0], date[1] - 1, 1);\n  let FirstDayOfWeek = AppStorage.Get<number>('FirstDayOfWeek')\n  if (FirstDayOfWeek == 0)\n    dateTime = new Date(dateTime.setDate(dateTime.getDate() - (dateTime.getDay() + 6) % 7));\n  else\n    dateTime = new Date(dateTime.setDate(dateTime.getDate() - dateTime.getDay()));\n  return [(dateTime.getFullYear()), (dateTime.getMonth() + 1), (dateTime.getDate())]\n}\n\n\nexport function getNextNDay(date: number[], n: number): number[] {\n  if (n == 0)\n    return date;\n  var dateTime = new Date(date[0], date[1] - 1, date[2]);\n  dateTime = new Date(dateTime.setDate(dateTime.getDate() + n));\n  return [(dateTime.getFullYear()), (dateTime.getMonth() + 1), (dateTime.getDate())]\n}\n\n\nexport function getNextNMonth(date: number[], n: number): number[] {\n  var dateTime = new Date(date[0], date[1] - 1, date[2]);\n  dateTime = new Date(dateTime.setMonth(dateTime.getMonth() + n));\n  if (dateTime.getMonth() == (date[1] + n + 11) % 12)\n    return [(dateTime.getFullYear()), (dateTime.getMonth() + 1), (dateTime.getDate())]\n  else\n    return [date[0], (date[1] + n + 11) % 12 + 1, 1]\n}", "path": "biandan-satge-master\\entry\\src\\main\\ets\\control\\CalendarControl.ets", "project_name": "biandan-satge-master", "id": "5c8822bf7d0ede05128ea9fa93485165597368aed6995090a7aec9e63e745420"}
{"text": "import { CalendarWeek } from '../element/CalendarWeek';\n\nPersistentStorage.PersistProp('FirstDayOfWeek', 0)\n\n@Component\nexport struct CalendarMonth {\n  @Link @Watch('startDatesChanged') startDates: number[][]\n  @Link @Watch('isShowsChanged') isShows: boolean[]\n  private index: number\n  @StorageLink('openCalendar') openCalendar: boolean = false\n  @StorageLink('FirstDayOfWeek') FirstDayOfWeek: number = 0\n  @State isShow : boolean = true;\n  @Link accentColor: Resource\n  @Link translucentSaturationAccentColor: Resource\n\n  private getStartDate(date: number[]): number[] {\n    var dateTime = new Date(date[0], date[1] - 1, 1);\n    if (this.FirstDayOfWeek == 0)\n      dateTime = new Date(dateTime.setDate(dateTime.getDate() - (dateTime.getDay() + 6) % 7));\n    else\n      dateTime = new Date(dateTime.setDate(dateTime.getDate() - dateTime.getDay()));\n    return [(dateTime.getFullYear()), (dateTime.getMonth() + 1), (dateTime.getDate())]\n  }\n\n  \n  private getNextNDay(date: number[], n: number): number[] {\n    var dateTime = new Date(date[0], date[1] - 1, date[2]);\n    dateTime = new Date(dateTime.setDate(dateTime.getDate() + n));\n    return [(dateTime.getFullYear()), (dateTime.getMonth() + 1), (dateTime.getDate())]\n  }\n\n  private checkNeedClose(startDate: number[]): boolean {\n    for (let i = 0; i < 7; i++) {\n      let temp: number[] = this.getNextNDay(startDate, i)\n      if (temp[1] == this.startDate[1] && temp[2] == this.startDate[2])\n        return false\n    }\n    return true\n  }\n\n  @Builder WeekTitle(text: string | Resource) {\n    Column() {\n      Column() {\n        Text(text)\n          .fontColor($r('app.color.text_level2'))\n          .fontWeight(FontWeight.Medium)\n          .fontSize(14)\n      }\n      .justifyContent(FlexAlign.Center)\n      .backgroundColor($r('app.color.foreground'))\n      .height('100%')\n      .width('100%')\n      .borderRadius(8)\n    }\n    .padding(3)\n    .height('100%')\n    .layoutWeight(1)\n  }\n\n  @State @Watch('refreshData') startDate: number[] = []\n  @State data2: number[][] = new Array(5).fill([])\n  @State checkNeedCloseArr: boolean[] = new Array(5).fill(false)\n  @State showSixWeek: boolean = false;\n\n  startDatesChanged() {\n    this.startDate = this.startDates[this.index]\n  }\n\n  isShowsChanged() {\n    this.isShow = this.isShows[this.index]\n  }\n\n  refreshData() {\n    let temp = this.getStartDate(this.startDate)\n    this.data2 = new Array(5).fill([])\n    this.checkNeedCloseArr = new Array(5).fill(false)\n    this.showSixWeek = false;\n    for (let i = 0; i < 5; i++) {\n      this.data2[i] = this.getNextNDay(temp, i * 7)\n      this.checkNeedCloseArr[i] = this.checkNeedClose(this.data2[i])\n    }\n    if (this.getNextNDay(temp, 35)[1] == this.startDate[1]) {\n      this.showSixWeek = true;\n      this.data2.push(this.getNextNDay(temp, 35))\n      this.checkNeedCloseArr.push(this.checkNeedClose(this.data2[5]))\n    }\n  }\n\n  aboutToAppear() {\n    this.startDatesChanged()\n    this.isShowsChanged()\n    this.refreshData()\n  }\n\n  build() {\n    Column() {\n      ForEach(this.data2, (item: number[], index: number) => {\n        Row() {\n          CalendarWeek({\n            startDate: item,\n            isNeedClose: this.checkNeedCloseArr[index],\n            showDate: $startDate,\n            accentColor: $accentColor,\n            translucentSaturationAccentColor: $translucentSaturationAccentColor,\n            showSixLine: $showSixWeek,\n            isShow: $isShow\n          })\n        }\n        .backgroundColor($r('app.color.background'))\n      },)\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    }\n    .width('100%')\n    .height('100%')\n    .animation({\n      delay: 150,\n      duration: 300, \n      curve: Curve.EaseOut, \n    })\n    .gesture(\n      GestureGroup(GestureMode.Parallel,\n        PanGesture({ direction: PanDirection.Up, distance: 1 })\n          .onActionEnd(() => {\n            this.openCalendar = true\n          }),\n        PanGesture({ direction: PanDirection.Down, distance: 1 })\n          .onActionEnd(() => {\n            this.openCalendar = false\n          })\n      )\n    )\n  }\n}\n", "path": "biandan-satge-master\\entry\\src\\main\\ets\\pages\\element\\CalendarMonth.ets", "project_name": "biandan-satge-master", "id": "5101ce29536b520378a00f9eac1f5ef7ad4cc70befc5e8ed0a3ad8ea694c6df2"}
{"text": "import { getResource } from '../../control/EventsController';\nimport { CalendarDate } from '../element/CalendarDate';\n\n@Component\nexport struct CalendarWeek {\n  @Link showDate: number[]\n  private data3: number[] = [1, 2, 3, 4, 5, 6, 7]\n  @State @Watch('aboutToAppear') startDate: number[] = []\n  @StorageLink('openCalendar') @Watch('openCalendarChanged') openCalendar: boolean = false\n  @State @Watch('changeShow') openCalendarDelay:boolean = this.openCalendar;\n\n  @Link accentColor: Resource\n  @Link translucentSaturationAccentColor: Resource\n\n  private isNeedClose: boolean = false;\n  @Link showSixLine: boolean;\n  @Link @Watch('changeShow') isShow: boolean;\n  @State isShowItem: boolean = this.isShow && (!(this.openCalendarDelay || this.openCalendar) || !this.isNeedClose)\n\n  openCalendarChanged() {\n    setTimeout(()=> {\n      this.openCalendarDelay = this.openCalendar;\n      this.changeShow()\n    }, 450)\n  }\n\n  \n  private getNextNDay(date: number[], n: number): number[] {\n    var dateTime = new Date(date[0], date[1] - 1, date[2]);\n    dateTime = new Date(dateTime.setDate(dateTime.getDate() + n));\n    return [(dateTime.getFullYear()), (dateTime.getMonth() + 1), (dateTime.getDate())]\n  }\n\n  changeShow() {\n    this.isShowItem = this.isShow && (!(this.openCalendarDelay || this.openCalendar) || !this.isNeedClose)\n  }\n\n  aboutToAppear() {\n    this.changeShow()\n  }\n\n  build() {\n    Column() {\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      Grid() {\n        ForEach(this.data3, (item: number, index: number) => {\n          GridItem() {\n            CalendarDate({\n              date: this.getNextNDay(this.startDate, index),\n              showDate: $showDate,\n              accentColor: $accentColor,\n              translucentSaturationAccentColor: $translucentSaturationAccentColor,\n              isShow: $isShowItem,\n            })\n          }\n        })\n      }\n      .rowsTemplate(\"1fr\")\n      .columnsTemplate(\"1fr 1fr 1fr 1fr 1fr 1fr 1fr\")\n    }\n    .height(this.openCalendar ? (this.isNeedClose ? '0%' : '100%') : (this.showSixLine ? '16.667%' : '20%'))\n  }\n}\n", "path": "biandan-satge-master\\entry\\src\\main\\ets\\pages\\element\\CalendarWeek.ets", "project_name": "biandan-satge-master", "id": "ede6b14a91bed61584e2a91a754f1da2afaeb003a2c598e6bac3c8b1afbea670"}
{"text": "import { ProgressRing } from '../element/ProgressRing'\nimport { getDoneRate } from '../../control/EventsController';\n\n@Component\nexport struct DaraField {\n  @StorageLink('doneNum') @Watch('newRate') doneNum: number = 0\n  @StorageLink('todoNum') @Watch('newRate') todoNum: number = 0\n  @State doneRate: number = 0;\n\n  private newRate() {\n    this.doneRate = getDoneRate()\n  }\n\n  aboutToAppear() {\n    this.newRate();\n  }\n\n  build() {\n    Row() {\n      Row() {\n        Column() {\n          Column() {\n            Stack() {\n              Text($r('app.string.Done_things'))\n                .fontColor($r('app.color.text_level2'))\n                .fontSize(10)\n                .position({\n                  x: 12,\n                  y: 12\n                })\n              Row() {\n                Text(this.doneNum.toString())\n                  .fontColor($r('app.color.text_level1'))\n                  .fontSize(36)\n              }\n              .alignItems(VerticalAlign.Bottom)\n            }\n            .width('100%')\n            .height('100%')\n            .backgroundColor($r('app.color.foreground'))\n            .borderRadius(16)\n          }\n          .width('100%')\n          .height('61.8%')\n          .padding({ right: 6, bottom: 6 })\n\n          Column() {\n            Stack() {\n              Text($r('app.string.Todo_things'))\n                .fontColor($r('app.color.text_level2'))\n                .fontSize(10)\n                .position({\n                  x: 12,\n                  y: 12\n                })\n              Row() {\n                Text(this.todoNum.toString())\n                  .fontColor($r('app.color.text_level1'))\n                  .fontSize(30)\n              }\n              .alignItems(VerticalAlign.Bottom)\n            }\n            .width('100%')\n            .height('100%')\n            .backgroundColor($r('app.color.foreground'))\n            .borderRadius(16)\n          }\n          .width('100%')\n          .height('38.2%')\n          .padding({ right: 6, top: 6 })\n        }\n        .layoutWeight(1)\n        .height('100%')\n\n        ProgressRing({ doneRate: $doneRate })\n\n      }.width('100%')\n    }\n    .width('100%')\n    .height(162)\n  }\n}\n", "path": "biandan-satge-master\\entry\\src\\main\\ets\\pages\\element\\DataField.ets", "project_name": "biandan-satge-master", "id": "a3270b50423f6a2588a880f715c99da63652f6c1c31e63b4e129170e125b1ed9"}
{"text": "import { get_accent } from '../../control/AccentController';\n\n@Component\nexport struct ProgressRing {\n  \n  \n  @Link @Watch(\"doneRateChanged\") doneRate: number;\n  \n  @StorageLink('AccentColor1') @Watch('accentColorChanged') AccentColor1: string = '';\n  @State accentColor: Resource = get_accent()\n  @State ringDoneRate: number = this.doneRate;\n\n  aboutToAppear() {\n    this.accentColor = get_accent()\n  }\n\n  accentColorChanged() {\n    this.accentColor = get_accent()\n  }\n\n  \n  \n  \n  \n  \n  \n\n  delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  easeInOutQuad(s: number, t: number, x: number): number {\n    return s + (t - s) * (x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2);\n  }\n\n  async doneRateChanged() {\n    let s = this.ringDoneRate\n    let t = this.doneRate\n    let temp = 0;\n    var d_rate = 0.01;\n    console.log(\"doneRateChanged ~\", this.doneRate, this.ringDoneRate)\n    for (let i = 0; i < 100; i++) {\n      if (temp == 1) {\n        this.ringDoneRate = this.doneRate;\n        d_rate = 0;\n        break;\n      } else {\n        temp += d_rate;\n        this.ringDoneRate = this.easeInOutQuad(s, t, temp);\n        console.log(\"doneRateChanged :\", this.doneRate, this.ringDoneRate, temp)\n        await this.delay(5);\n      }\n    }\n    \n  }\n\n  build() {\n    Column() {\n      Stack() {\n        Row() {\n          Text((100 * this.ringDoneRate).toFixed(this.ringDoneRate == 1 ? 0 : 1).toString())\n            .fontWeight(FontWeight.Medium)\n            .fontSize(36)\n            .fontColor($r('app.color.text_level1'))\n          Text('%')\n            .fontWeight(FontWeight.Medium)\n            .fontSize(12)\n            .fontColor($r('app.color.text_level2'))\n        }\n        .alignItems(VerticalAlign.Bottom)\n        .offset({\n          x: 4,\n          y: 0\n        })\n\n        Progress({ value: 0, total: 100, type: ProgressType.Ring })\n          .value(this.ringDoneRate * 100)\n          .color(this.accentColor)\n          .backgroundColor($r('app.color.barIcon_fill_off'))\n          .style({ strokeWidth: 18 })\n          .animation({\n            delay: 200,\n            duration: 200, \n            curve: Curve.Linear, \n          })\n          .width('100%')\n          .height('100%')\n\n      }\n      .height('100%')\n      .width('100%')\n    }\n    .height(162)\n    .width(162)\n    .padding({ left: 6 })\n  }\n}\n", "path": "biandan-satge-master\\entry\\src\\main\\ets\\pages\\element\\ProgressRing.ets", "project_name": "biandan-satge-master", "id": "20fda35b7f8dee6259312332acb04518db65d66c4669324fee75ea61be4c84f2"}
{"text": "export default class DataTypeUtils {\n  \n  static isNull(obj: Object): boolean {\n    return (typeof obj === 'undefined' || obj == null || obj === '');\n  }\n\n  \n  static deepCopy(obj: number[]) {\n    let newObj: number[] = [];\n    for (let i = 0; i < obj.length; i++) {\n      newObj[i] = JSON.parse(JSON.stringify(obj[i]));\n    }\n    return newObj;\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\common\\utils\\DataTypeUtils.ets", "project_name": "codelabs-master", "id": "c95d01a5ce85ffddd1284a5d363a1bd785de498930c8b2b862edef42ba5ddaa2"}
{"text": "import display from '@ohos.display';\nimport { GlobalContext } from './GlobalContext';\n\nlet context = getContext(this);\n\n\nconst DESIGN_WIDTH = 360;\n\n\nconst DESIGN_HEIGHT = 780;\n\n\nexport default class DimensionUtil {\n  \n  static adaptDimension(value: number): number {\n    let deviceDisplay = GlobalContext.getContext().getObject('globalDisplay') as display.Display;\n    let widthScale = deviceDisplay.width / DESIGN_WIDTH;\n    let virtualHeight = widthScale * DESIGN_HEIGHT;\n    let designDim = Math.sqrt(DESIGN_WIDTH * DESIGN_WIDTH + DESIGN_HEIGHT * DESIGN_HEIGHT);\n    let virtualDim = Math.sqrt(deviceDisplay.width * deviceDisplay.width + virtualHeight * virtualHeight);\n    return virtualDim * value / designDim; \n  }\n\n  \n  static getPx(value: Resource): number {\n    let beforeVp = context.resourceManager.getNumber(value.id);\n    return DimensionUtil.adaptDimension(beforeVp);\n  }\n\n  \n  static getVp(value: Resource): number {\n    let beforeVp = context.resourceManager.getNumber(value.id);\n    return px2vp(DimensionUtil.adaptDimension(beforeVp));\n  }\n\n  \n  static getFp(value: Resource): number {\n    let beforeFp = context.resourceManager.getNumber(value.id);\n    return px2fp(DimensionUtil.adaptDimension(beforeFp));\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\common\\utils\\DimensionUtil.ets", "project_name": "codelabs-master", "id": "5fbbc03b649fbb3fd80b2e17a110e605754d7f080f429e590602d52a75e0b8b3"}
{"text": "export class GlobalContext {\n  private constructor() {\n  }\n\n  private static instance: GlobalContext;\n  private _objects = new Map<string, Object>();\n\n  public static getContext(): GlobalContext {\n    if (!GlobalContext.instance) {\n      GlobalContext.instance = new GlobalContext();\n    }\n    return GlobalContext.instance;\n  }\n\n  getObject(value: string): Object | undefined {\n    return this._objects.get(value);\n  }\n\n  setObject(key: string, objectClass: Object): void {\n    this._objects.set(key, objectClass);\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\common\\utils\\GlobalContext.ets", "project_name": "codelabs-master", "id": "60ca67486266681dc78a6f1ad71657c16f86f319a6313a16b07dad405447f584"}
{"text": "import hilog from '@ohos.hilog';\n\nclass Logger {\n  private domain: number;\n  private prefix: string;\n  private format: string = '%{public}s, %{public}s';\n\n  \n  constructor(prefix: string = 'AlarmClock', domain: number = 0xFF00) {\n    this.prefix = prefix;\n    this.domain = domain;\n  }\n\n  debug(...args: string[]): void {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }\n\n  info(...args: string[]): void {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }\n\n  warn(...args: string[]): void {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }\n\n  error(...args: string[]): void {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }\n}\n\nexport default new Logger('AlarmClock', 0xFF00);", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\common\\utils\\Logger.ets", "project_name": "codelabs-master", "id": "70b237e57821d70950523a2f5986da2e285750aac923caf8ac41b979a3346fcd"}
{"text": "import display from '@ohos.display';\nimport UIAbility from '@ohos.app.ability.UIAbility';\nimport hilog from '@ohos.hilog';\nimport window from '@ohos.window';\nimport PreferencesHandler from '../model/database/PreferencesHandler';\nimport { GlobalContext } from '../common/utils/GlobalContext';\n\nexport default class EntryAbility extends UIAbility {\n  onCreate() {\n    GlobalContext.getContext().setObject('preference', PreferencesHandler.instance);\n  }\n\n  async onWindowStageCreate(windowStage: window.WindowStage) {\n    \n    let globalDisplay: display.Display = display.getDefaultDisplaySync();\n    GlobalContext.getContext().setObject('globalDisplay', globalDisplay);\n    let preference = GlobalContext.getContext().getObject('preference') as PreferencesHandler;\n    await preference.configure(this.context.getApplicationContext());\n\n    windowStage.loadContent('pages/MainIndex', (err, data) => {\n      if (err.code) {\n        hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(0x0000, 'testTag', 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "752e6bc55fb62258d084cac825c2d67f13a663d961257c40a9b732c81e201877"}
{"text": "import data_preferences from '@ohos.data.preferences';\nimport { CommonConstants } from '../../common/constants/CommonConstants';\nimport PreferencesListener from './PreferencesListener';\n\n\nexport default class PreferencesHandler {\n  static instance: PreferencesHandler = new PreferencesHandler();\n  private preferences: data_preferences.Preferences | null = null;\n  private defaultValue = '';\n  private listeners: PreferencesListener[];\n\n  private constructor() {\n    this.listeners = new Array();\n  }\n\n  \n  public async configure(context: Context) {\n    this.preferences = await data_preferences.getPreferences(context, CommonConstants.PREFERENCE_ID);\n    this.preferences.on('change', (data: Record<string, Object>) => {\n      for (let preferencesListener of this.listeners) {\n        preferencesListener.onDataChanged(data.key as string);\n      }\n    });\n  }\n\n  \n  public async set(key: string, value: string) {\n    if (this.preferences != null) {\n      await this.preferences.put(key, value);\n      await this.preferences.flush();\n    }\n  }\n\n  \n  public async get(key: string) {\n    let data: string = '';\n    if (this.preferences != null) {\n      data = await this.preferences.get(key, this.defaultValue) as string;\n    }\n    return data;\n  }\n\n  \n  public clear() {\n    if (this.preferences != null) {\n      this.preferences.clear();\n    }\n  }\n\n  \n  public addPreferencesListener(listener: PreferencesListener) {\n    this.listeners.push(listener);\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\model\\database\\PreferencesHandler.ets", "project_name": "codelabs-master", "id": "98e791c2a6bc9cef5982812f0f2ffa2fd19c1f822149e30da84799a6ed4990c4"}
{"text": "export default interface PreferencesListener {\n  \n  onDataChanged: (key: string) => void\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\model\\database\\PreferencesListener.ets", "project_name": "codelabs-master", "id": "bc0a44c13a843b23f471c1d9fada72eed2de04014e54eb40704b06aaf7c849d0"}
{"text": "import router from '@ohos.router';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport DimensionUtil from '../common/utils/DimensionUtil';\n\n@Component\nexport default struct BackContainer {\n  private header: string | Resource = $r('app.string.new_alarm');\n  private backImgRes: string | Resource = $r('app.media.ic_cancel');\n  private backFunc?: () => void;\n  @BuilderParam closer?: () => void;\n\n  build() {\n    Row() {\n      Button() {\n        Image(this.backImgRes == null ? $r('app.media.ic_public_back') : this.backImgRes).objectFit(ImageFit.Fill)\n      }\n      .backgroundColor($r('app.color.trans_parent'))\n      .width(DimensionUtil.getVp($r('app.float.title_button_size')))\n      .height(DimensionUtil.getVp($r('app.float.title_button_size')))\n      .onClick(() => {\n          this.backFunc ? this.backFunc() : router.back();\n      })\n\n      Text(this.header)\n        .fontSize(DimensionUtil.getFp($r('app.float.detail_title_font_size')))\n        .lineHeight(DimensionUtil.getVp($r('app.float.title_line_height')))\n        .margin({ left: DimensionUtil.getVp($r('app.float.title_margin')) })\n        .fontColor($r('app.color.grey_divider'))\n        .fontWeight(FontWeight.Bold)\n      Blank()\n      if (this.closer) {\n        this.closer();\n      }\n    }\n    .padding({\n      left: DimensionUtil.getVp($r('app.float.title_horizon_margin')),\n      right: DimensionUtil.getVp($r('app.float.title_horizon_margin'))\n    })\n    .height(DimensionUtil.getVp($r('app.float.page_title_height')))\n    .width(CommonConstants.FULL_LENGTH)\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\BackContainer.ets", "project_name": "codelabs-master", "id": "810b35a018c151735bb9cc06a6148d31b5696bc9ad14f9dfb5aa4be34d600c9a"}
{"text": "import { DetailConstant } from '../../common/constants/DetailConstant';\nimport { CommonConstants } from '../../common/constants/CommonConstants';\nimport DimensionUtil from '../../common/utils/DimensionUtil';\nimport DayDataItem from '../../viewmodel/DayDataItem';\n\n@Component\nexport default struct DatePickArea {\n  build() {\n    Stack({ alignContent: Alignment.Center }) {\n      Row() {\n        ForEach(DetailConstant.DAY_DATA, (item: DayDataItem) => {\n          TextPicker({ range: item.data, selected: item.delSelect })\n            .layoutWeight(CommonConstants.DEFAULT_LAYOUT_WEIGHT)\n            .backgroundColor($r('app.color.grey_light'))\n            .onChange((value: string, index: number) => {\n              item.delSelect = index;\n            })\n        }, (item: DayDataItem) => JSON.stringify(item))\n      }\n    }\n    .height(DimensionUtil.getVp($r('app.float.date_picker_height')))\n    .padding({\n      left: DimensionUtil.getVp($r('app.float.date_picker_padding_horizon')),\n      right: DimensionUtil.getVp($r('app.float.date_picker_padding_horizon'))\n    })\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Detail\\DatePickArea.ets", "project_name": "codelabs-master", "id": "c609b839466925484bf9052dfbaa7a615d8e66d9cd0ca79f6a1bf6fbe4749aa6"}
{"text": "import { CommonConstants } from '../../../common/constants/CommonConstants';\nimport DimensionUtil from '../../../common/utils/DimensionUtil';\n\n@Component\nexport default struct CommonDialog {\n  private title?: string | Resource;\n  private controller?: CustomDialogController;\n  private onConfirm: () => void = () => {\n  };\n  @BuilderParam closer: () => void = () => {\n  };\n\n  build() {\n    Column() {\n      Text(this.title)\n        .fontSize(DimensionUtil.getFp($r('app.float.common_dialog_title_font_size')))\n        .width(CommonConstants.FULL_LENGTH)\n        .fontColor($r('app.color.grey_divider'))\n        .margin({\n          bottom: DimensionUtil.getVp($r('app.float.common_dialog_title_margin_vertical'))\n        })\n      this.closer()\n      Row() {\n        Button($r('app.string.cancel')).actionBtnStyle().onClick(() => {\n          if (!this.controller) {\n            return;\n          }\n          this.controller.close();\n        })\n        if (this.onConfirm) {\n          Button($r('app.string.confirm')).actionBtnStyle().onClick(() => {\n            this.onConfirm();\n            if (!this.controller) {\n             return;\n            }\n            this.controller.close();\n          })\n        }\n      }\n      .margin({ top: DimensionUtil.getVp($r('app.float.common_dialog_margin_vertical')) })\n    }\n    .width(CommonConstants.FULL_LENGTH)\n    .padding(DimensionUtil.getVp($r('app.float.common_dialog_padding')))\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Button)\nfunction actionBtnStyle() {\n  .fontSize(DimensionUtil.getFp($r('app.float.common_dialog_button_font_size')))\n  .height(DimensionUtil.getVp($r('app.float.common_dialog_button_height')))\n  .layoutWeight(CommonConstants.DEFAULT_LAYOUT_WEIGHT)\n  .fontColor($r('app.color.green_light'))\n  .backgroundColor($r('app.color.trans_parent'))\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Detail\\dialog\\CommonDialog.ets", "project_name": "codelabs-master", "id": "190cb9e8efd89e67b695094be15e3c774e4551f24346548768d18a116a6a7d0e"}
{"text": "import { CommonConstants } from '../../../common/constants/CommonConstants';\nimport { DetailConstant } from '../../../common/constants/DetailConstant';\nimport AlarmItem from '../../../viewmodel/AlarmItem';\nimport CommonDialog from './CommonDialog';\nimport DimensionUtil from '../../../common/utils/DimensionUtil';\n\n@CustomDialog\nexport default struct DurationDialog {\n  @Consume(DetailConstant.DEFAULT_PROVIDER_KEY) alarmItem: AlarmItem;\n  private durations: Array<number> = DetailConstant.RING_DURATION; \n  controller?: CustomDialogController;\n\n  build() {\n    Flex() {\n      CommonDialog({\n        title: $r('app.string.ring_duration'),\n        controller: this.controller\n      }) {\n        ForEach(this.durations, (item: number) => {\n          Row() {\n            Text(item + CommonConstants.DEFAULT_STRING_SPACE + DetailConstant.DEFAULT_STRING_MINUTE)\n              .layoutWeight(CommonConstants.DEFAULT_LAYOUT_WEIGHT)\n              .fontColor($r('app.color.grey_divider'))\n              .fontSize(DimensionUtil.getFp($r('app.float.duration_dialog_content_font_size')))\n            Radio({ value: item.toString(), group: DetailConstant.DEFAULT_STRING_GROUP_NAME })\n              .checked(item === this.alarmItem.duration ? true : false)\n              .height(DimensionUtil.getVp($r('app.float.duration_dialog_radio_size')))\n              .width(DimensionUtil.getVp($r('app.float.duration_dialog_radio_size')))\n              .onChange(() => {\n                if (!this.controller) {\n                  return;\n                }\n                this.controller.close();\n                this.alarmItem.duration = item\n              })\n          }\n          .width(CommonConstants.FULL_LENGTH)\n\n          Divider()\n            .opacity($r('app.float.divider_opacity'))\n            .color($r('app.color.grey_divider'))\n            .lineCap(LineCapStyle.Round)\n        })\n      }\n    }\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Detail\\dialog\\DurationDialog.ets", "project_name": "codelabs-master", "id": "3e71567429f51d508a202f5e02ff73e50cf25950b099665e0f8a6b7275312438"}
{"text": "import { CommonConstants } from '../../../common/constants/CommonConstants';\nimport { DetailConstant } from '../../../common/constants/DetailConstant';\nimport AlarmItem from '../../../viewmodel/AlarmItem';\nimport CommonDialog from './CommonDialog';\nimport DimensionUtil from '../../../common/utils/DimensionUtil';\n\n@CustomDialog\nexport default struct IntervalDialog {\n  @Consume(DetailConstant.DEFAULT_PROVIDER_KEY) alarmItem: AlarmItem;\n  @State intervalMinuteSelect: number = 0;\n  @State intervalTimesSelect: number = 0;\n  controller?: CustomDialogController;\n\n  aboutToAppear(): void{\n    this.intervalMinuteSelect = this.alarmItem.intervalMinute;\n    this.intervalTimesSelect = this.alarmItem.intervalTimes;\n  }\n\n  build() {\n    Flex() {\n      if ((this.intervalTimesSelect | this.intervalMinuteSelect) > 0) {\n        CommonDialog({\n          title: $r('app.string.ring_interval'),\n          controller: this.controller,\n          onConfirm: () => {\n            this.alarmItem.intervalMinute = Number(this.intervalMinuteSelect.toFixed(0))\n            this.alarmItem.intervalTimes = Number(this.intervalTimesSelect.toFixed(0))\n          }\n        }) {\n          this.IntervalItem($r('app.string.ring_interval_content'), 0)\n          Divider()\n            .opacity($r('app.float.divider_opacity'))\n            .color($r('app.color.grey_divider'))\n            .lineCap(LineCapStyle.Round)\n          this.IntervalItem($r('app.string.ring_times_content'), CommonConstants.DEFAULT_SINGLE)\n        }\n      }\n    }\n  }\n\n  @Builder IntervalItem(title: string | Resource, intervalType: number) {\n    Text(title)\n      .fontSize(DimensionUtil.getFp($r('app.float.interval_dialog_title_font_size')))\n      .width(CommonConstants.FULL_LENGTH)\n      .textAlign(TextAlign.Start)\n      .margin({\n        top: DimensionUtil.getVp($r('app.float.interval_dialog_title_margin_top'))\n      })\n    Row() {\n      Slider({\n        value: (intervalType === 0 ? this.intervalMinuteSelect : this.intervalTimesSelect),\n        min: (intervalType === 0 ? CommonConstants.DEFAULT_INTERVAL_STEP : 0),\n        max: (intervalType === 0\n          ? CommonConstants.DEFAULT_INTERVAL_MINUTE_MAX\n          : CommonConstants.DEFAULT_INTERVAL_TIME_MAX),\n        step: (intervalType === 0 ? CommonConstants.DEFAULT_INTERVAL_STEP : CommonConstants.DEFAULT_DOUBLE),\n        style: SliderStyle.OutSet\n      })\n        .blockColor(Color.Blue)\n        .trackColor(Color.Gray)\n        .selectedColor(Color.Blue)\n        .showSteps(true)\n        .showTips(false)\n        .onChange((value: number) => {\n          if (intervalType === 0) {\n            this.intervalMinuteSelect = value;\n          } else {\n            this.intervalTimesSelect = value;\n          }\n        })\n      Text((intervalType === 0 ? this.intervalMinuteSelect : this.intervalTimesSelect).toFixed(0))\n        .fontSize(DimensionUtil.getFp($r('app.float.interval_dialog_result_font_size')))\n    }\n    .width(CommonConstants.FULL_LENGTH)\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Detail\\dialog\\IntervalDialog.ets", "project_name": "codelabs-master", "id": "12821a6a46504c91c16d46d5a0c028f417b83e92b4f60171d9d643564b49e13b"}
{"text": "import { CommonConstants } from '../../../common/constants/CommonConstants';\nimport { DetailConstant } from '../../../common/constants/DetailConstant';\nimport AlarmItem from '../../../viewmodel/AlarmItem';\nimport CommonDialog from './CommonDialog';\nimport DimensionUtil from '../../../common/utils/DimensionUtil';\n\n@CustomDialog\nexport default struct RenameDialog {\n  @Consume(DetailConstant.DEFAULT_PROVIDER_KEY) alarmItem: AlarmItem;\n  private name: string = '';\n  controller: CustomDialogController = new CustomDialogController({\n    builder: RenameDialog(),\n    autoCancel: true\n  });\n\n  build() {\n    Flex() {\n      CommonDialog({\n        title: $r('app.string.alarm_name'),\n        controller: this.controller,\n        onConfirm: () => {\n          this.alarmItem.name = this.name;\n        }\n      }) {\n        TextArea({ text: this.alarmItem.name })\n          .width(CommonConstants.FULL_LENGTH)\n          .margin({ bottom: DimensionUtil.getVp($r('app.float.rename_dialog_text_margin_bottom')) })\n          .onChange((value: string) => {\n            this.name = value;\n          })\n        Divider()\n          .opacity($r('app.float.divider_opacity'))\n          .color($r('app.color.grey_divider'))\n          .lineCap(LineCapStyle.Round)\n      }\n    }\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Detail\\dialog\\RenameDialog.ets", "project_name": "codelabs-master", "id": "27f0a3c8b13cf658d49ac08ead4c693a458ded88b1705183a4f27da9a3e25151"}
{"text": "import router from '@ohos.router';\nimport { CommonConstants } from '../../common/constants/CommonConstants';\nimport AlarmItem from '../../viewmodel/AlarmItem';\nimport AlarmListItem from '../Main/AlarmListItem';\nimport DimensionUtil from '../../common/utils/DimensionUtil';\n\n@Component\nexport default struct AlarmList {\n  @Link alarmItems: Array<AlarmItem>;\n\n  build() {\n    List({ space: DimensionUtil.getVp($r('app.float.alarm_list_space')) }) {\n      ForEach(this.alarmItems, (item: AlarmItem) => {\n        ListItem() {\n          AlarmListItem({ alarmItem: item })\n        }.onClick(() => {\n          router.pushUrl({ url: 'pages/DetailIndex', params: { alarmItem: item } });\n        })\n      }, (item: AlarmItem) => JSON.stringify(item))\n    }\n    .padding({\n      left: DimensionUtil.getVp($r('app.float.alarm_list_content_distance')),\n      right: DimensionUtil.getVp($r('app.float.alarm_list_content_distance'))\n    })\n    .listDirection(Axis.Vertical)\n    .layoutWeight(CommonConstants.DEFAULT_LAYOUT_WEIGHT)\n    .margin({ top: DimensionUtil.getVp($r('app.float.alarm_list_content_distance')) })\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Main\\AlarmList.ets", "project_name": "codelabs-master", "id": "269977e2363f8c6775dbe79bf22297f478991048866a0007246f091fb2fe3045"}
{"text": "import MainModel from './../../viewmodel/MainViewModel';\nimport { CommonConstants } from '../../common/constants/CommonConstants';\nimport AlarmItem from '../../viewmodel/AlarmItem';\nimport DimensionUtil from '../../common/utils/DimensionUtil';\n\n@Component\nexport default struct AlarmListItem {\n  private mainModel: MainModel = MainModel.instant;\n  private alarmItem: AlarmItem = new AlarmItem();\n\n  build() {\n    Row() {\n      Column() {\n        Row() {\n          Text(this.mainModel.getNoonContent(this.alarmItem.hour))\n            .CommonTextAttr(DimensionUtil.getFp($r('app.float.alarms_item_noon_font_size')),\n              FontWeight.Regular)\n          Text(this.mainModel.getTaskTimeContent(this.alarmItem.hour, this.alarmItem.minute))\n            .CommonTextAttr(DimensionUtil.getFp($r('app.float.alarms_item_time_font_size')),\n              FontWeight.Regular,\n              { left: DimensionUtil.getVp($r('app.float.alarms_item_time_margin_left')) })\n        }\n\n        Text(this.mainModel.getDescContent(this.alarmItem))\n          .CommonTextAttr(DimensionUtil.getFp($r('app.float.alarms_item_dec_font_size')),\n            FontWeight.Normal,\n            { top: DimensionUtil.getVp($r('app.float.alarms_item_dec_margin_top')) },\n            $r('app.float.alarms_item_desc_text_opacity'))\n      }\n      .width(CommonConstants.FULL_LENGTH)\n      .alignItems(HorizontalAlign.Start)\n      .layoutWeight(CommonConstants.DEFAULT_LAYOUT_WEIGHT)\n\n      Toggle({ type: ToggleType.Switch, isOn: this.alarmItem.isOpen })\n        .onChange((isOn: boolean) => {\n          this.mainModel.openAlarm(this.alarmItem.id, isOn);\n        })\n        .width(DimensionUtil.getVp($r('app.float.alarms_item_toggle_width')))\n        .height(DimensionUtil.getVp($r('app.float.alarms_item_toggle_height')))\n    }\n    .padding({\n      left: DimensionUtil.getVp($r('app.float.alarm_list_content_distance')),\n      right: DimensionUtil.getVp($r('app.float.alarm_list_content_distance'))\n    })\n    .width(CommonConstants.FULL_LENGTH)\n    .height(DimensionUtil.getVp($r('app.float.alarms_item_height')))\n    .backgroundColor(Color.White)\n    .borderRadius(DimensionUtil.getVp($r('app.float.alarms_item_radius')))\n  }\n}\n\n@Extend(Text)\nfunction CommonTextAttr(fontSize: number, fontWeight: number, margin?: Margin,\n                        opacity?: Resource) {\n  .fontColor($r('app.color.grey_divider'))\n  .fontSize(fontSize)\n  .fontWeight(fontWeight)\n  .margin(margin != undefined ? margin : 0)\n  .opacity(opacity != undefined ? opacity : 1)\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\view\\Main\\AlarmListItem.ets", "project_name": "codelabs-master", "id": "0e08e1a800cfce539f71de86af68fe2fd9a8588b45e2a8fcd3ced2e149bcd285"}
{"text": "import { AlarmSettingType } from '../common/constants/AlarmSettingType';\n\n\nexport default class AlarmSettingItem {\n  \n  public title: string;\n  \n  public content: string;\n  \n  public sType: AlarmSettingType;\n\n  constructor(title: string, content: string, sType: AlarmSettingType) {\n    this.title = title;\n    this.content = content;\n    this.sType = sType;\n  }\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\viewmodel\\AlarmSettingItem.ets", "project_name": "codelabs-master", "id": "e91ecf9c15b9f72548c3a802ed5dd6800c244a500b9edbc417adc47ee107dd91"}
{"text": "export default class DayDataItem {\n  timeType: number = 0;\n  delSelect: number = 0;\n  data: Array<string> = [];\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\viewmodel\\DayDataItem.ets", "project_name": "codelabs-master", "id": "6ead2f65af11eb8828deae8eaf122fad3e329bdf59d1a74f438c6e3eb12a8270"}
{"text": "import reminderAgent from '@ohos.reminderAgentManager';\n\nexport default class ReminderItem {\n  id: number = 0;\n  remindType: reminderAgent.ReminderType = reminderAgent.ReminderType.REMINDER_TYPE_ALARM;\n  name: string = '';\n  hour: number = 0;\n  minute: number = 0;\n  duration: number = 0;\n  intervalMinute: number = 0;\n  intervalTimes: number = 0;\n  repeatDays: Array<number> = [];\n  notificationId: number = 0;\n}", "path": "codelabs-master\\AlarmClock\\entry\\src\\main\\ets\\viewmodel\\ReminderItem.ets", "project_name": "codelabs-master", "id": "8536ad990e8a8cb426af6c3b32f3aa50f32ecb3c3bb759b99cc7171eecc0bfe4"}
{"text": "import window from '@ohos.window';\nimport display from '@ohos.display';\nimport Want from '@ohos.app.ability.Want';\nimport Ability from '@ohos.app.ability.UIAbility';\nimport { GlobalContext } from '../common/utils/GlobalContext';\n\nexport default class EntryAbility extends Ability {\n  onCreate(want: Want) {\n    GlobalContext.getContext().setObject('abilityWant', want);\n  }\n\n  async onWindowStageCreate(windowStage: window.WindowStage) {\n    GlobalContext.getContext().setObject('display', await display.getDefaultDisplaySync());\n    windowStage.loadContent('pages/TabIndex');\n  }\n};\n", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "c2a4cd10adaa3273ae9140a071783f5b511243f6fb4436d768f3a293effee534"}
{"text": "import display from '@ohos.display';\nimport RefreshComponent from '../view/RefreshComponent';\nimport { RefreshHeaderStyle, RefreshState, RefreshConstants } from '../common/constants/RefreshConstants';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport DimensionUtil from '../common/utils/DimensionUtil';\nimport { GlobalContext } from '../common/utils/GlobalContext';\n\n\n@Component\nexport default struct FileManagerIndex {\n  @Provide(RefreshConstants.REFRESH_STATE_TAG) state: number = RefreshState.REFRESHING;\n  private deviceDisplay: display.Display = GlobalContext.getContext().getObject('display') as display.Display;\n\n  @Builder\n  ContentBody() {\n    Image($r('app.media.bg_content'))\n      .width(CommonConstants.FULL_LENGTH)\n      .height(DimensionUtil.getVp($r('app.float.content_height')))\n      .objectFit(ImageFit.Fill)\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Top }) {\n      Text($r('app.string.file_index_title'))\n        .backgroundColor(Color.White)\n        .width(CommonConstants.FULL_LENGTH)\n        .height(DimensionUtil.getVp($r('app.float.file_index_title_height')))\n        .fontSize(DimensionUtil.getFp($r('app.float.file_index_title_size')))\n        .fontWeight(FontWeight.Regular)\n        .padding({ left: DimensionUtil.getVp($r('app.float.file_index_title_padding')) })\n        .zIndex(CommonConstants.FILE_MANAGER_Z_INDEX)\n      RefreshComponent({\n        headerStyle: RefreshHeaderStyle.CLOUD,\n        itemLayout: (): void => this.ContentBody(),\n        displayHeight: (\n          px2vp(this.deviceDisplay.height) - DimensionUtil.getVp($r('app.float.file_index_title_height'))),\n        onRefresh: () => {\n          setTimeout(() => {\n            this.state = RefreshState.COMPLETE;\n          }, CommonConstants.REFRESH_DEFAULT_TIMEOUT);\n        }\n      })\n        .width(CommonConstants.FULL_LENGTH)\n        .margin({ top: DimensionUtil.getVp($r('app.float.file_index_title_height')) })\n    }\n    .height(CommonConstants.FULL_LENGTH)\n  }\n}", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\pages\\FileManagerIndex.ets", "project_name": "codelabs-master", "id": "4eea97fe482b0a9be680aeba5cb706f3ff92195cb98426dc4c55184b7d7b2807"}
{"text": "import FileManagerIndex from './FileManagerIndex';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport DimensionUtil from '../common/utils/DimensionUtil';\nimport CardModel from '../viewmodel/CardModel';\n\n\n@Entry\n@Component\nstruct TabIndex {\n  @State currentPage: number = CommonConstants.INDEX_DEFAULT_SELECT;\n\n  @Builder TabBuilder(item: CardModel, index: number | undefined) {\n    Column() {\n      Image(this.currentPage === index ? item.selectedIcon : item.defaultIcon)\n        .width(DimensionUtil.getVp($r('app.float.index_tab_icon_size')))\n        .height(DimensionUtil.getVp($r('app.float.index_tab_icon_size')))\n        .objectFit(ImageFit.Contain)\n      Text(item.content)\n        .fontColor(this.currentPage === index ? $r('app.color.index_tab_font_color') : Color.Black)\n        .fontSize(DimensionUtil.getFp($r('app.float.index_tab_font_size')))\n        .margin({ top: DimensionUtil.getVp($r('app.float.index_tab_vertical_margin')) })\n        .opacity(this.currentPage === index\n          ? $r('app.float.index_tab_font_selected_opacity')\n          : $r('app.float.index_tab_font_default_opacity'))\n    }\n    .justifyContent(FlexAlign.Center)\n    .width(CommonConstants.FULL_LENGTH)\n    .height(CommonConstants.FULL_LENGTH)\n  }\n\n  build() {\n    Tabs({ barPosition: BarPosition.End, index: this.currentPage }) {\n      ForEach(CommonConstants.INDEX_TAB, (item: CardModel, index: number | undefined) => {\n        TabContent() {\n          if (index === CommonConstants.INDEX_DEFAULT_SELECT) {\n            FileManagerIndex()\n          }\n        }\n        .tabBar(this.TabBuilder(item, index))\n      }, (item: CardModel) => JSON.stringify(item))\n    }\n    .width(CommonConstants.FULL_LENGTH)\n    .height(CommonConstants.FULL_LENGTH)\n    .barMode(BarMode.Fixed)\n    .onChange((index: number) => {\n      this.currentPage = index;\n    })\n  }\n}", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\pages\\TabIndex.ets", "project_name": "codelabs-master", "id": "85543384277b58a870621230ea5bdd95a7c12cc99d5cc9796fee298077c3e80c"}
{"text": "import { RefreshState, RefreshConstants } from '../common/constants/RefreshConstants';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport DimensionUtil from '../common/utils/DimensionUtil';\nimport ClassifyModel from '../viewmodel/AnimationModel';\n\n@Component\nexport default struct RefreshAnimHeader {\n  @Consume(RefreshConstants.REFRESH_STATE_TAG) @Watch('onStateCheck') state: number;\n  @State iconWidth: number = CommonConstants.REFRESH_HEADER_ITEM_DEFAULT_WIDTH;\n\n  private onStateCheck() {\n    if (this.state === RefreshState.REFRESHING) {\n      this.iconWidth = CommonConstants.REFRESH_HEADER_ITEM_SCALE_WIDTH;\n    } else {\n      this.iconWidth = CommonConstants.REFRESH_HEADER_ITEM_DEFAULT_WIDTH;\n    }\n  }\n\n  @Builder AttrAnimIcons(iconItem: ClassifyModel) {\n    Image(iconItem.imgRes)\n      .width(px2vp(DimensionUtil.adaptDimension(this.iconWidth)))\n      .position({ x: iconItem.posX })\n      .objectFit(ImageFit.Contain)\n      .animation({\n        duration: CommonConstants.REFRESH_HEADER_ITEM_ANIM_DURATION,\n        tempo: CommonConstants.REFRESH_HEADER_ITEM_ANIM_TEMPO,\n        delay: iconItem.delay,\n        curve: Curve.Linear,\n        playMode: PlayMode.Alternate,\n        iterations: CommonConstants.REFRESH_HEADER_ITEM_ANIM_ITERATIONS\n      })\n  }\n\n  build() {\n    Row() {\n      if (this.state !== RefreshState.IDLE) { \n        ForEach(CommonConstants.REFRESH_HEADER_FEATURE, (iconItem: ClassifyModel) => {\n          this.AttrAnimIcons(iconItem)\n        }, (item: ClassifyModel) => JSON.stringify(item))\n      }\n    }\n    .width(CommonConstants.FULL_LENGTH)\n    .height(CommonConstants.FULL_LENGTH)\n    .onAppear(() => {\n      this.onStateCheck();\n    })\n  }\n}", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\view\\RefreshAnimHeader.ets", "project_name": "codelabs-master", "id": "130d7f83f15886009fc07e7428a6c631604476574e247e344dff984343f7af84"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\nimport { RefreshConstants, RefreshState } from '../common/constants/RefreshConstants';\nimport DimensionUtil from '../common/utils/DimensionUtil';\n\n@Component\nexport default struct RefreshDefaultHeader {\n  @State refreshTitle: Resource = $r('app.string.refresh_default_header_hint');\n  @Consume(RefreshConstants.REFRESH_STATE_TAG) @Watch('onStateCheck') state: number;\n\n  private onStateCheck() {\n    switch (this.state) {\n      case RefreshState.IDLE:\n        this.refreshTitle = $r('app.string.refresh_default_header_hint');\n        break;\n      case RefreshState.DRAGGING_REFRESHABLE:\n        this.refreshTitle = $r('app.string.refresh_default_header_load');\n        break;\n      case RefreshState.REFRESHING:\n        this.refreshTitle = $r('app.string.refresh_default_header_loading');\n        break;\n    }\n  }\n\n  build() {\n    if (this.state !== RefreshState.IDLE) {\n      Text(this.refreshTitle)\n        .height(CommonConstants.FULL_LENGTH)\n        .width(CommonConstants.FULL_LENGTH)\n        .textAlign(TextAlign.Center)\n        .fontSize(DimensionUtil.getFp($r('app.float.default_header_font_size')))\n        .onAppear(() => {\n          this.onStateCheck();\n        })\n    }\n  }\n}", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\view\\RefreshDefaultHeader.ets", "project_name": "codelabs-master", "id": "faec38760147eb7372b2a08bbeca10f3c8e10a578a53cf6bfeec39abdca6e8bb"}
{"text": "export default class ClassifyModel {\n  imgRes: Resource;\n  posX: number;\n  delay: number;\n\n  constructor(imgRes: Resource, posX: number, delay: number) {\n    this.imgRes = imgRes;\n    this.posX = posX;\n    this.delay = delay;\n  }\n}", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\viewmodel\\AnimationModel.ets", "project_name": "codelabs-master", "id": "2f6dc8a58ab4da4e36e95adb8f23dfe5b25b80896d531f9728ff00b981451aa0"}
{"text": "export default class CardModel {\n  selectedIcon: Resource;\n  defaultIcon: Resource;\n  content: string;\n\n  constructor(selectedIcon: Resource, defaultIcon: Resource, content: string) {\n    this.selectedIcon = selectedIcon;\n    this.defaultIcon = defaultIcon;\n    this.content = content;\n  }\n}", "path": "codelabs-master\\AnimateRefresh\\entry\\src\\main\\ets\\viewmodel\\CardModel.ets", "project_name": "codelabs-master", "id": "d1405e42e032840274f980d0800f48fff9b81eaa52278b8ed44d44a60b3e78d8"}
{"text": "import { AnimationWidgets } from '../view/AnimationWidgets';\nimport { CountController } from '../view/CountController';\nimport Common from '../common/constants/Const';\nimport {IconsModel} from '../viewmodel/IconsModel';\n\n@Entry\n@Component\nstruct Index {\n  @State quantity: number = Common.IMAGES_MIN;\n  @Provide iconModel: IconsModel = new IconsModel(this.quantity, Common.OFFSET_RADIUS);\n\n\n  build() {\n    Column() {\n      AnimationWidgets({\n        quantity: $quantity\n      })\n\n      CountController({\n        quantity: $quantity\n      })\n    }\n    .width(Common.DEFAULT_FULL_WIDTH)\n    .height(Common.DEFAULT_FULL_HEIGHT)\n    .backgroundColor($r('app.color.bgColor'))\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "b8b35fe2755cd468bb2c3cd066574d1d80192db4f925e38f2a013dfdb47cd094"}
{"text": "import { IconsModel } from '../viewmodel/IconsModel';\nimport { IconAnimation } from './IconAnimation';\nimport Common from '../common/constants/Const';\nimport IconItem from '../viewmodel/IconItem';\n\n@Component\nexport struct AnimationWidgets {\n  @State mainFlag: boolean = false;\n  @Link @Watch('onQuantityChange') quantity: number;\n  @Consume iconModel: IconsModel;\n\n  onQuantityChange() {\n    this.iconModel.addImage(this.quantity);\n  }\n\n  aboutToAppear() {\n    this.onQuantityChange();\n  }\n\n  animate() {\n    animateTo(\n      {\n        delay: Common.DELAY_10,\n        tempo: Common.TEMPO,\n        iterations: 1,\n        duration: Common.DURATION_500,\n        curve: Curve.Smooth,\n        playMode: PlayMode.Normal\n      }, () => {\n        this.mainFlag = !this.mainFlag;\n    })\n  }\n\n  build() {\n    Stack() {\n      Stack() {\n        ForEach(this.iconModel.imagerArr, (item: IconItem) => {\n          IconAnimation({\n            item: item,\n            mainFlag: $mainFlag\n          })\n        }, (item: IconItem) => JSON.stringify(item.index))\n      }\n      .width(Common.DEFAULT_FULL_WIDTH)\n      .height(Common.DEFAULT_FULL_HEIGHT)\n      .rotate({\n        x: 0,\n        y: 0,\n        z: 1,\n        angle: this.mainFlag ? Common.ROTATE_ANGLE_360 : 0\n      })\n\n      Image(\n          this.mainFlag\n          ? $r(\"app.media.imgActive\")\n          : $r(\"app.media.imgInit\")\n      )\n        .width($r('app.float.size_64'))\n        .height($r('app.float.size_64'))\n        .objectFit(ImageFit.Contain)\n        .scale({\n          x: this.mainFlag ? Common.INIT_SCALE : 1,\n          y: this.mainFlag ? Common.INIT_SCALE : 1\n        })\n        .onClick(() => {\n          this.iconModel.reset();\n          this.animate();\n        })\n\n      Text($r('app.string.please_click_button'))\n        .fontSize($r('app.float.size_16'))\n        .opacity(Common.OPACITY_06)\n        .fontColor($r('app.color.fontGrayColor'))\n        .fontWeight(Common.FONT_WEIGHT_500)\n        .margin({\n          top: $r('app.float.size_100')\n        })\n    }\n    .width(Common.DEFAULT_FULL_WIDTH)\n    .layoutWeight(1)\n\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\view\\AnimationWidgets.ets", "project_name": "codelabs-master", "id": "817af5be0d4481f036fd68cba60b1a6ba2c3d1e404b502804e4174e41eb6d2f0"}
{"text": "import Common from '../common/constants/Const';\n\n@Extend(Text) function textStyle () {\n  .fontSize($r('app.float.size_16'))\n  .fontWeight(Common.FONT_WEIGHT_500)\n}\n\n@Component\nexport struct CountController {\n  @Link quantity: number;\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.count'))\n          .textStyle()\n\n        Text(this.quantity.toFixed(0))\n          .textStyle()\n      }\n      .justifyContent(FlexAlign.SpaceBetween)\n      .width(Common.DEFAULT_FULL_WIDTH)\n      .margin({\n        top: $r('app.float.size_4')\n      })\n\n\n      Slider({\n        value: this.quantity,\n        min: Common.IMAGES_MIN,\n        max: Common.IMAGES_TOTAL,\n        step: 1,\n        style: SliderStyle.InSet\n      })\n        .blockColor(Color.White)\n        .selectedColor($r('app.color.SliderSelectColor'))\n        .margin({\n          top: $r('app.float.size_5')\n        })\n        .showSteps(true)\n        .trackThickness($r('app.float.size_20'))\n        .onChange((value: number) => {\n          this.quantity = value;\n        })\n    }\n    .height(Common.CONTROLLER_WIDTH)\n    .padding({\n      top: $r('app.float.size_12'),\n      bottom: $r('app.float.size_12'),\n      left: $r('app.float.size_16'),\n      right: $r('app.float.size_16')\n    })\n    .margin({\n      bottom: $r('app.float.size_48')\n    })\n    .width(Common.CONTROLLER_HEIGHT)\n    .borderRadius($r('app.float.size_24'))\n    .backgroundColor($r('app.color.white'))\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\view\\CountController.ets", "project_name": "codelabs-master", "id": "dddd1f753e73a88f24705f89dc9755b82879a9e541266a1f9a65c70f469f4788"}
{"text": "import IconItem from '../viewmodel/IconItem';\nimport Common from '../common/constants/Const';\n\n@Component\nexport struct IconAnimation {\n  @Link mainFlag: boolean;\n  @ObjectLink item: IconItem;\n\n  build() {\n    Image(this.item.image)\n      .width(Common.ICON_WIDTH)\n      .height(Common.ICON_HEIGHT)\n      .objectFit(ImageFit.Contain)\n      .translate(\n        this.mainFlag\n          ? { x: this.item.point.x, y: this.item.point.y }\n          : { x: 0, y: 0 }\n      )\n      .rotate({\n        x: 0,\n        y: 1,\n        z: 0,\n        angle: this.item.clicked ? Common.ROTATE_ANGLE_360 : 0\n      })\n      .scale(\n        this.item.clicked\n          ? { x: Common.SCALE_RATIO, y: Common.SCALE_RATIO }\n          : { x: 1, y: 1 }\n      )\n      .opacity(this.item.clicked ? Common.OPACITY_06 : 1)\n      .onClick(() => {\n        this.item.clicked = !this.item.clicked;\n      })\n      .animation(\n        {\n          delay: Common.DELAY_10,\n          duration: Common.DURATION_1000,\n          iterations: 1,\n          curve: Curve.Smooth,\n          playMode: PlayMode.Normal\n        }\n      )\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\view\\IconAnimation.ets", "project_name": "codelabs-master", "id": "d8f0bc8f84b7e200cc13b44710e8159906a4abf7ba7a8dc8d7882cbae707b9ad"}
{"text": "import Point from './Point';\n\n@Observed\nexport default class IconItem {\n  index: number = 0;\n  clicked: boolean = false;\n  image: Resource = $r('app.media.badge1');\n  point: Point = new Point(0, 0);\n\n  constructor(index: number, image: Resource, clicked: boolean, point: Point) {\n    this.index = index;\n    this.image = image;\n    this.clicked = clicked;\n    this.point = point;\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\viewmodel\\IconItem.ets", "project_name": "codelabs-master", "id": "051e48a3715be7a945f95e5d9a88eb8cd5615467a7dfaaaad017ab60d24721a7"}
{"text": "import Common from '../common/constants/Const';\nimport IconItem from './IconItem';\nimport Point from './Point';\n\nconst TWO_PI: number = 2 * Math.PI;\n\n@Observed\nexport class IconsModel {\n  public imagerArr: Array<IconItem> = [];\n  private num: number = Common.IMAGES_MIN;\n  private radius: number;\n\n  constructor(num: number, radius: number) {\n    this.radius = radius;\n    this.addImage(num);\n  }\n\n  public addImage(num: number) {\n    this.num = num;\n    if (this.imagerArr.length === num) {\n      return;\n    }\n    if (this.imagerArr.length > num) {\n      this.imagerArr.splice(num, this.imagerArr.length - num);\n    } else {\n      for (let i = this.imagerArr.length; i < num; i++) {\n        const point = this.genPointByIndex(i);\n        this.imagerArr.push(new IconItem(i, Common.IMAGE_RESOURCE[i], false, point));\n      }\n    }\n\n    this.refreshPoint(num);\n  }\n\n  public refreshPoint(num: number) {\n    for (let i = 0; i < num; i++) {\n      this.imagerArr[i].point = this.genPointByIndex(i);\n    }\n  }\n\n  public genPointByIndex(index: number): Point {\n    const x = this.radius * Math.cos(TWO_PI * index / this.num);\n    const y = this.radius * Math.sin(TWO_PI * index / this.num);\n    return new Point(x, y);\n  }\n\n  public reset() {\n    for (let i = 0; i < this.num; i++) {\n      if (this.imagerArr[i].clicked) {\n        this.imagerArr[i].clicked = false;\n      }\n    }\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\viewmodel\\IconsModel.ets", "project_name": "codelabs-master", "id": "e36b1d2e8bcbfd9e7f6d1e362d4885abaaec0f44c994437b69bd32f47e434c80"}
{"text": "export default class Point {\n  public x: number = 0;\n  public y: number = 0;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}", "path": "codelabs-master\\Animation\\entry\\src\\main\\ets\\viewmodel\\Point.ets", "project_name": "codelabs-master", "id": "c30d1f0f0a99c5bbc53aad9ecdaa9e16d9f89e530aebe09a559dc8191091c2c7"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\nimport Home from \"../view/Home\"\nimport Setting from \"../view/Setting\"\n\n\n@Entry\n@Component\nstruct MainPage {\n  @State currentIndex: number = CommonConstants.HOME_TAB_INDEX;\n  private tabsController: TabsController = new TabsController();\n\n  @Builder TabBuilder(title: string, index: number, selectedImg: Resource, normalImg: Resource) {\n    Column() {\n      Image(this.currentIndex === index ? selectedImg : normalImg)\n        .width($r('app.float.mainPage_baseTab_size'))\n        .height($r('app.float.mainPage_baseTab_size'))\n      Text(title)\n        .margin({ top: $r('app.float.mainPage_baseTab_top') })\n        .fontSize($r('app.float.main_tab_fontSize'))\n        .fontColor(this.currentIndex === index ? $r('app.color.mainPage_selected') : $r('app.color.mainPage_normal'))\n    }\n    .justifyContent(FlexAlign.Center)\n    .height($r('app.float.mainPage_barHeight'))\n    .width(CommonConstants.FULL_PARENT)\n    .onClick(() => {\n      this.currentIndex = index;\n      this.tabsController.changeIndex(this.currentIndex);\n    })\n  }\n\n  build() {\n    Tabs({\n      barPosition: BarPosition.End,\n      controller: this.tabsController\n    }) {\n      TabContent() {\n        Home()\n      }\n      .padding({ left: $r('app.float.mainPage_padding'), right: $r('app.float.mainPage_padding') })\n      .backgroundColor($r('app.color.mainPage_backgroundColor'))\n      .tabBar(this.TabBuilder(CommonConstants.HOME_TITLE, CommonConstants.HOME_TAB_INDEX,\n        $r('app.media.home_selected'), $r('app.media.home_normal')))\n\n      TabContent() {\n        Setting()\n      }\n      .padding({ left: $r('app.float.mainPage_padding'), right: $r('app.float.mainPage_padding') })\n      .backgroundColor($r('app.color.mainPage_backgroundColor'))\n      .tabBar(this.TabBuilder(CommonConstants.MINE_TITLE, CommonConstants.MINE_TAB_INDEX,\n        $r('app.media.mine_selected'), $r('app.media.mine_normal')))\n    }\n    .width(CommonConstants.FULL_PARENT)\n    .backgroundColor(Color.White)\n    .barHeight($r('app.float.mainPage_barHeight'))\n    .barMode(BarMode.Fixed)\n    .onChange((index: number) => {\n      this.currentIndex = index;\n    })\n  }\n}", "path": "codelabs-master\\ArkTSComponents\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "432825bddeb3581add64dd09e50a69acd70ade63698ec2a7b23f5e0b12380d17"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\nimport mainViewModel from '../viewmodel/MainViewModel';\nimport ItemData from '../viewmodel/ItemData';\n\n\n@Component\nexport default struct Home {\n  private swiperController: SwiperController = new SwiperController();\n\n  build() {\n    Scroll() {\n      Column({ space: CommonConstants.COMMON_SPACE }) {\n        Column() {\n          Text($r('app.string.mainPage_tabTitles_home'))\n            .fontWeight(FontWeight.Medium)\n            .fontSize($r('app.float.page_title_text_size'))\n            .margin({ top: $r('app.float.mainPage_tabTitles_margin') })\n            .padding({ left: $r('app.float.mainPage_tabTitles_padding') })\n        }\n        .width(CommonConstants.FULL_PARENT)\n        .alignItems(HorizontalAlign.Start)\n\n        Swiper(this.swiperController) {\n          ForEach(mainViewModel.getSwiperImages(), (img: Resource) => {\n            Image(img).borderRadius($r('app.float.home_swiper_borderRadius'))\n          }, (img: Resource) => JSON.stringify(img.id))\n        }\n        .margin({ top: $r('app.float.home_swiper_margin') })\n        .autoPlay(true)\n\n        Grid() {\n          ForEach(mainViewModel.getFirstGridData(), (item: ItemData) => {\n            GridItem() {\n              Column() {\n                Image(item.img)\n                  .width($r('app.float.home_homeCell_size'))\n                  .height($r('app.float.home_homeCell_size'))\n                Text(item.title)\n                  .fontSize($r('app.float.little_text_size'))\n                  .margin({ top: $r('app.float.home_homeCell_margin') })\n              }\n            }\n          }, (item: ItemData) => JSON.stringify(item))\n        }\n        .columnsTemplate('1fr 1fr 1fr 1fr')\n        .rowsTemplate('1fr 1fr')\n        .columnsGap($r('app.float.home_grid_columnsGap'))\n        .rowsGap($r('app.float.home_grid_rowGap'))\n        .padding({ top: $r('app.float.home_grid_padding'), bottom: $r('app.float.home_grid_padding') })\n        .height($r('app.float.home_grid_height'))\n        .backgroundColor(Color.White)\n        .borderRadius($r('app.float.home_grid_borderRadius'))\n\n        Text($r('app.string.home_list'))\n          .fontSize($r('app.float.normal_text_size'))\n          .fontWeight(FontWeight.Medium)\n          .width(CommonConstants.FULL_PARENT)\n          .margin({ top: $r('app.float.home_text_margin') })\n\n        Grid() {\n          ForEach(mainViewModel.getSecondGridData(), (secondItem: ItemData) => {\n            GridItem() {\n              Column() {\n                Text(secondItem.title)\n                  .fontSize($r('app.float.normal_text_size'))\n                  .fontWeight(FontWeight.Medium)\n                Text(secondItem.others)\n                  .margin({ top: $r('app.float.home_list_margin') })\n                  .fontSize($r('app.float.little_text_size'))\n                  .fontColor($r('app.color.home_grid_fontColor'))\n              }\n              .alignItems(HorizontalAlign.Start)\n            }\n            .padding({ top: $r('app.float.home_list_padding'), left: $r('app.float.home_list_padding') })\n            .borderRadius($r('app.float.home_backgroundImage_borderRadius'))\n            .align(Alignment.TopStart)\n            .backgroundImage(secondItem.img)\n            .backgroundImageSize(ImageSize.Cover)\n            .width(CommonConstants.FULL_PARENT)\n            .height(CommonConstants.FULL_PARENT)\n          }, (secondItem: ItemData) => JSON.stringify(secondItem))\n        }\n        .width(CommonConstants.FULL_PARENT)\n        .height($r('app.float.home_secondGrid_height'))\n        .columnsTemplate('1fr 1fr')\n        .rowsTemplate('1fr 1fr')\n        .columnsGap($r('app.float.home_grid_columnsGap'))\n        .rowsGap($r('app.float.home_grid_rowGap'))\n        .margin({ bottom: $r('app.float.setting_button_bottom') })\n      }\n    }\n    .height(CommonConstants.FULL_PARENT)\n  }\n}\n", "path": "codelabs-master\\ArkTSComponents\\entry\\src\\main\\ets\\view\\Home.ets", "project_name": "codelabs-master", "id": "b5cdaf852bdfd594c337cdb779b84fcee0a271f328b599b6b65bd45dbacf8102"}
{"text": "export default class PageResource {\n  \n  title: Resource;\n  \n  img: Resource;\n  \n  others?: Resource;\n\n  constructor(title: Resource, img: Resource, others?: Resource) {\n    this.title = title;\n    this.img = img;\n    this.others = others;\n  }\n}", "path": "codelabs-master\\ArkTSComponents\\entry\\src\\main\\ets\\viewmodel\\ItemData.ets", "project_name": "codelabs-master", "id": "56195cc2a45cd292235f1fd70e21061078eca5caccfdbada6467ba9cb0f65b99"}
{"text": "class CheckEmptyUtils {\n  \n  isEmptyObj(obj: object | string) {\n    return (typeof obj === 'undefined' || obj === null || obj === '');\n  }\n\n  \n  isEmptyStr(str: string) {\n    return str.trim().length === 0;\n  }\n\n  \n  isEmptyArr(arr: Array<string>) {\n    return arr.length === 0;\n  }\n}\n\nexport default new CheckEmptyUtils();", "path": "codelabs-master\\CanvasComponent\\entry\\src\\main\\ets\\common\\utils\\CheckEmptyUtils.ets", "project_name": "codelabs-master", "id": "d19ceb8ac22405f17a63e3f36f02d1fe8423ccf78a54d6b50bcc1c1a05742e02"}
{"text": "import matrix4 from '@ohos.matrix4';\nimport PrizeData from '../viewmodel/PrizeData';\nimport StyleConstants from '../common/constants/StyleConstants';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n@CustomDialog\nexport default struct PrizeDialog {\n  @Link prizeData: PrizeData;\n  @Link enableFlag: boolean;\n  private controller?: CustomDialogController;\n\n  build() {\n    Column() {\n      Image(this.prizeData.imageSrc !== undefined ? this.prizeData.imageSrc : '')\n        .width($r('app.float.dialog_image_size'))\n        .height($r('app.float.dialog_image_size'))\n        .margin({\n          top: $r('app.float.dialog_image_top'),\n          bottom: $r('app.float.dialog_image_bottom')\n        })\n        .transform(matrix4.identity().rotate({\n          x: 0,\n          y: 0,\n          z: 1,\n          angle: CommonConstants.TRANSFORM_ANGLE\n        }))\n\n      Text(this.prizeData.message)\n        .fontSize($r('app.float.dialog_font_size'))\n        .textAlign(TextAlign.Center)\n        .margin({ bottom: $r('app.float.dialog_message_bottom') })\n\n      Text($r('app.string.text_confirm'))\n        .fontColor($r('app.color.text_font_color'))\n        .fontWeight(StyleConstants.FONT_WEIGHT)\n        .fontSize($r('app.float.dialog_font_size'))\n        .textAlign(TextAlign.Center)\n        .onClick(() => {\n          this.controller?.close();\n          this.enableFlag = !this.enableFlag;\n        })\n    }\n    .backgroundColor($r('app.color.dialog_background'))\n    .width(StyleConstants.FULL_PERCENT)\n    .height($r('app.float.dialog_height'))\n  }\n}", "path": "codelabs-master\\CanvasComponent\\entry\\src\\main\\ets\\view\\PrizeDialog.ets", "project_name": "codelabs-master", "id": "c23a0c8b4e3a94471dbe555d6fe34d10e891bd49f41990e17b507206d7ba0aac"}
{"text": "export default class FillArcData {\n  \n  x: number;\n\n  \n  y: number;\n\n  \n  radius: number;\n\n  \n  startAngle: number;\n\n  \n  endAngle: number;\n\n  \n  constructor(x: number, y: number, radius: number, startAngle: number, endAngle: number) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n  }\n}\n", "path": "codelabs-master\\CanvasComponent\\entry\\src\\main\\ets\\viewmodel\\FillArcData.ets", "project_name": "codelabs-master", "id": "3c608ce87f03847981b6927bcd71bd2d8d6238449801f0188542edd24f9eeb7b"}
{"text": "export default class PrizeData {\n  \n  message?: Resource;\n\n  \n  imageSrc?: string;\n}\n", "path": "codelabs-master\\CanvasComponent\\entry\\src\\main\\ets\\viewmodel\\PrizeData.ets", "project_name": "codelabs-master", "id": "f76663db7f8c26365cfc47934e70cdd9dca52e2b205e1b86e551f3337afd51eb"}
{"text": "export default {\n  onCreate() {\n    console.info('Application onCreate')\n  },\n  onDestroy() {\n    console.info('Application onDestroy')\n  },\n}\n", "path": "codelabs-master\\DistributeNewsETS\\entry\\src\\main\\ets\\default\\app.ets", "project_name": "codelabs-master", "id": "4a79e135c958367601c038fc3f5dfaf289b55924ec68a81cbd5b040aa49b8aef"}
{"text": "import deviceManager from '@ohos.distributedHardware.deviceManager';\nimport {NewsData} from '../model/NewsData'\nimport {DeviceListDialog} from '../component/DeviceListDialog'\n\n\n@Component\nexport struct DetailComponent {\n  build() {\n    Column() {\n      Scroll() {\n        NewsInfo()\n      }\n      .flexGrow(1).width(\"100%\")\n\n      NewsBottom()\n    }.height(\"100%\").width(\"100%\")\n  }\n}\n\n\n@Component\nstruct NewsInfo {\n\n  @Consume newsData: NewsData;\n\n  build() {\n    Column() {\n      Column() {\n        Text(this.newsData.title)\n          .fontSize(25)\n          .margin({ right: 20, left: 20, top: 10, bottom: 10 })\n        Text(\"reads:\" + this.newsData.reads + \"  likes:\" + this.newsData.likes)\n          .fontSize(16)\n          .margin({ right: 20, left: 20, bottom: 10 })\n        Image(this.newsData.imgUrl).width(\"100%\").height(180)\n          .margin({ left: 20, right: 20, bottom: 15 })\n        Text(this.newsData.content).fontSize(18).margin({ left: 20, right: 20 })\n      }.alignItems(HorizontalAlign.Start)\n    }\n  }\n}\n\n\n@Component\nstruct NewsBottom {\n\n  @Provide deviceList: any[]= [];\n  @Consume newsData: NewsData\n\n  private deviceMag: any= null\n\n  build() {\n    Column() {\n      Divider()\n        .vertical(false)\n        .color(\"#c1bdc1\")\n        .strokeWidth(1)\n        .height(1)\n        .width('100%')\n        .margin({ bottom: 5 })\n\n      Row() {\n        Button(\"Enter a comment.       \").fontSize(15)\n          .margin({ left: 20, right: 35 }).backgroundColor(\"#dbd8db\").fontColor(\"#4b494b\")\n        Image($rawfile('icon_message.png')).width(25).height(21).margin({ right: 10 })\n        Image($rawfile('icon_star.png')).width(25).height(21).margin({ right: 10 })\n        Image($rawfile('icon_good.png')).width(25).height(21).margin({ right: 10 })\n        Image($rawfile('icon_share.png')).width(25).height(21).margin({ right: 10 })\n          .onClick(() => {\n            this.getDeviceList()\n          })\n      }\n      .margin({ bottom: 5 }).height(40).width(\"100%\")\n    }\n  }\n\n\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: DeviceListDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom\n  });\n\n\n  getDeviceList() {\n    if (this.deviceMag != null) {\n      \n      this.deviceList = this.deviceMag.getTrustedDeviceListSync();\n    } else {\n      \n      deviceManager.createDeviceManager(\"com.huawei.codelab\", (err, data) => {\n        if (err) {\n          console.error(\"createDeviceManager failed err: \" + JSON.stringify(err));\n          return;\n        }\n        console.info('createDeviceManager successful. Data: ' + JSON.stringify(data))\n        this.deviceMag = data;\n        this.deviceList = this.deviceMag.getTrustedDeviceListSync();\n      });\n    }\n    \n    this.dialogController.open()\n  }\n\n\n  aboutToDisappear() {\n    this.deviceMag.release();\n  }\n}\n\n\n", "path": "codelabs-master\\DistributeNewsETS\\entry\\src\\main\\ets\\default\\component\\DetailComponent.ets", "project_name": "codelabs-master", "id": "6fe1f2211e840e1cafbcb50d403d824a63c66b4106de665a99f38fa5e28e8694"}
{"text": "export class NewsData {\n  newsId: string;\n  title: string;\n  newsType: string;\n  imgUrl: Resource;\n  reads: string;\n  likes: string;\n  content: string;\n\n  constructor(newsId: string, title: string, newsType: string, imgUrl: Resource, reads: string, likes: string, content: string) {\n    this.newsId = newsId;\n    this.title = title;\n    this.newsType = newsType;\n    this.imgUrl = imgUrl;\n    this.reads = reads;\n    this.likes = likes;\n    this.content = content;\n  }\n}", "path": "codelabs-master\\DistributeNewsETS\\entry\\src\\main\\ets\\default\\model\\NewsData.ets", "project_name": "codelabs-master", "id": "db8813f759a7346593cb647d817d50c3bdbb4eb3f4ae63da3a1015dba5b4e950"}
{"text": "import featureAbility from '@ohos.ability.featureAbility';\nimport wantConstant from '@ohos.ability.wantConstant';\n\n\nexport function startRemoteAbilities(deviceIds, newsId) {\n  for (var i = 0; i < deviceIds.length; i++) {\n    var want = {\n      \"want\": {\n        \"deviceId\": deviceIds[i],\n        \"bundleName\": \"com.huawei.codelab\",\n        \"abilityName\": \"com.huawei.codelab.MainAbility\",\n        \n        \"flags\": wantConstant.Flags.FLAG_ABILITYSLICE_MULTI_DEVICE,\n        \"parameters\": {\n          \n          \"url\": 'pages/NewsDetail',\n          \n          \"newsId\": newsId\n        },\n      }\n    };\n    featureAbility.startAbility(want, (err, data) => {\n      if (err) {\n        console.error('startRemoteAbility err:' + JSON.stringify(err));\n        return;\n      }\n      console.info('startRemoteAbility successful. Data: ' + JSON.stringify(data))\n    });\n  }\n}", "path": "codelabs-master\\DistributeNewsETS\\entry\\src\\main\\ets\\default\\model\\Utils.ets", "project_name": "codelabs-master", "id": "4d4323a3b207e594971b68988ec57720de8eb2f8f0610c0bef9d6a7478f526ae"}
{"text": "import router from '@system.router'\nimport featureAbility from '@ohos.ability.featureAbility';\nimport {NewsData} from '../model/NewsData'\nimport {DetailComponent} from '../Component/DetailComponent'\nimport {getDefaultData} from '../model/NewsDataModel'\nimport {getNewsDatas} from '../model/NewsDataModel'\n\n@Entry\n@Component\nstruct NewsDetail {\n  @Provide newsData: NewsData= getDefaultData()\n  private newsItems: NewsData[] = getNewsDatas()\n\n  build() {\n    Column() {\n      DetailComponent()\n    }.height(\"100%\").width(\"100%\")\n  }\n\n  aboutToAppear() {\n    if (router.getParams()) {\n      \n      this.newsData = router.getParams().newsItem\n    } else {\n      \n      featureAbility.getWant()\n        .then((want) => {\n          console.info('getWant successful. Data: ' + JSON.stringify(want));\n          \n          let newsId = want.parameters.newsId\n          \n          this.newsData = this.newsItems.filter(item => (item.newsId === newsId))[0]\n        }).catch((error) => {\n        console.error('getWant failed. Cause: ' + JSON.stringify(error));\n      })\n    }\n  }\n}\n\n", "path": "codelabs-master\\DistributeNewsETS\\entry\\src\\main\\ets\\default\\pages\\NewsDetail.ets", "project_name": "codelabs-master", "id": "cfbf28979174dbe8bfe156e98a3275311b333192bb5442c4462d04bdfc743032"}
{"text": "import wantAgent, { WantAgent } from '@ohos.app.ability.wantAgent';\nimport notification from '@ohos.notificationManager';\nimport CommonConstants from '../constants/CommonConstants';\nimport Logger from '../utils/Logger';\n\n\nexport function createWantAgent(bundleName: string, abilityName: string): Promise<WantAgent> {\n  let wantAgentInfo = {\n    wants: [\n      {\n        bundleName: bundleName,\n        abilityName: abilityName\n      }\n    ],\n    operationType: wantAgent.OperationType.START_ABILITY,\n    requestCode: 0,\n    wantAgentFlags: [wantAgent.WantAgentFlags.CONSTANT_FLAG]\n  } as wantAgent.WantAgentInfo;\n  return wantAgent.getWantAgent(wantAgentInfo);\n}\n\n\nexport function publishNotification(progress: number, title: string, wantAgentObj: WantAgent) {\n  let template:notification.NotificationTemplate = {\n    name: 'downloadTemplate',\n    data: {\n      progressValue: progress,\n      progressMaxValue: CommonConstants.PROGRESS_TOTAL,\n      isProgressIndeterminate: false\n    }\n  };\n  let notificationRequest: notification.NotificationRequest = {\n    id: CommonConstants.NOTIFICATION_ID,\n    slotType: notification.SlotType.CONTENT_INFORMATION,\n    \n    template: template,\n    content: {\n      contentType: notification.ContentType.NOTIFICATION_CONTENT_BASIC_TEXT,\n      normal: {\n        title: `${title}：${CommonConstants.DOWNLOAD_FILE}`,\n        text: '',\n        additionalText: `${progress}%`\n      }\n    },\n    wantAgent: wantAgentObj\n  };\n  notification.publish(notificationRequest).catch((err: Error) => {\n    Logger.error(`[ANS] publish failed,message is ${err}`);\n  });\n}\n\n\nexport function openNotificationPermission() {\n  notification.requestEnableNotification().then(() => {\n    Logger.info('Enable notification success');\n  }).catch((err) => {\n    Logger.error('Enable notification failed because ' + JSON.stringify(err));\n  });\n}", "path": "codelabs-master\\DownloadNotification\\entry\\src\\main\\ets\\common\\utils\\NotificationUtil.ets", "project_name": "codelabs-master", "id": "769925cb251c057df5200d52aaff5f641660b186f874de7157d10e4762505cbe"}
{"text": "import Logger from '../utils/Logger';\n\n\nexport async function getStringByRes(resource: Resource, component: Object): Promise<string> {\n  if (!resource) {\n    Logger.error('getStringByRes resource is invalid');\n    return '';\n  }\n  let string = await getContext(component).resourceManager.getStringValue(resource.id);\n  return string;\n}", "path": "codelabs-master\\DownloadNotification\\entry\\src\\main\\ets\\common\\utils\\ResourseUtil.ets", "project_name": "codelabs-master", "id": "ba67fa99cc4617460e360ef1b80f08de07ff540697482efb1db91999fb3ec52b"}
{"text": "import router from '@ohos.router';\nimport Constants from '../common/constants/Constants';\nimport PhotoItem from '../view/PhotoItem';\n\n@Entry\n@Component\nstruct IndexPage {\n  swiperController: SwiperController = new SwiperController();\n  scroller: Scroller = new Scroller();\n  @State currentIndex: number = 0;\n  @State angle: number = 0;\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.EntryAbility_label'))\n          .fontSize($r('app.float.title_font_size'))\n          .fontWeight(Constants.TITLE_FONT_WEIGHT)\n      }\n      .height($r('app.float.navi_bar_height'))\n      .alignItems(VerticalAlign.Center)\n      .justifyContent(FlexAlign.Start)\n      .margin({ top: $r('app.float.grid_padding') })\n      .padding({ left: $r('app.float.title_padding') })\n      .width(Constants.FULL_PERCENT)\n\n      Swiper(this.swiperController) {\n        ForEach(Constants.BANNER_IMG_LIST, (item: Resource) => {\n          Row() {\n            Image(item)\n              .width(Constants.FULL_PERCENT)\n              .height(Constants.FULL_PERCENT)\n          }\n          .width(Constants.FULL_PERCENT)\n          .aspectRatio(Constants.BANNER_ASPECT_RATIO)\n        }, (item: Resource, index?: number) => JSON.stringify(item) + index)\n      }\n      .autoPlay(true)\n      .loop(true)\n      .margin($r('app.float.grid_padding'))\n      .borderRadius($r('app.float.img_border_radius'))\n      .clip(true)\n      .duration(Constants.BANNER_ANIMATE_DURATION)\n      .indicator(false)\n\n      Grid() {\n        ForEach(Constants.IMG_ARR, (photoArr: Array<Resource>) => {\n          GridItem() {\n            PhotoItem({ photoArr })\n          }\n          .width(Constants.FULL_PERCENT)\n          .aspectRatio(Constants.STACK_IMG_RATIO)\n          .onClick(() => {\n            router.pushUrl({\n              url: Constants.URL_LIST_PAGE,\n              params: { photoArr: photoArr }\n            });\n          })\n        }, (item: Array<Resource>, index?: number) => JSON.stringify(item) + index)\n      }\n      .columnsTemplate(Constants.INDEX_COLUMNS_TEMPLATE)\n      .columnsGap($r('app.float.grid_padding'))\n      .rowsGap($r('app.float.grid_padding'))\n      .padding({ left: $r('app.float.grid_padding'), right: $r('app.float.grid_padding') })\n      .width(Constants.FULL_PERCENT)\n      .layoutWeight(1)\n    }\n    .width(Constants.FULL_PERCENT)\n    .height(Constants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\ElectronicAlbum\\entry\\src\\main\\ets\\pages\\IndexPage.ets", "project_name": "codelabs-master", "id": "b688ec1555be39a51c5dc88be928366df6220c3e24b20a9fb548e1bacb95e2f3"}
{"text": "import router from '@ohos.router';\nimport Constants from '../common/constants/Constants';\n\n@Entry\n@Component\nstruct ListPage {\n  photoArr: Array<Resource> = (router.getParams() as Record<string, Array<Resource>>)[`${Constants.PARAM_PHOTO_ARR_KEY}`];\n  @StorageLink('selectedIndex') selectedIndex: number = 0;\n\n  build() {\n    Navigation() {\n      Grid() {\n        ForEach(this.photoArr, (img: Resource, index?: number) => {\n          GridItem() {\n            Image(img)\n              .height(Constants.FULL_PERCENT)\n              .width(Constants.FULL_PERCENT)\n              .objectFit(ImageFit.Cover)\n              .onClick(() => {\n                if (!index) {\n                  index = 0;\n                }\n                this.selectedIndex = index;\n                router.pushUrl({\n                  url: Constants.URL_DETAIL_LIST_PAGE,\n                  params: {\n                    photoArr: this.photoArr,\n                  }\n                });\n              })\n          }\n          .width(Constants.FULL_PERCENT)\n          .aspectRatio(1)\n        }, (item: Resource) => JSON.stringify(item))\n      }\n      .columnsTemplate(Constants.GRID_COLUMNS_TEMPLATE)\n      .rowsGap(Constants.LIST_ITEM_SPACE)\n      .columnsGap(Constants.LIST_ITEM_SPACE)\n      .layoutWeight(1)\n    }\n    .title(Constants.PAGE_TITLE)\n    .hideBackButton(false)\n    .titleMode(NavigationTitleMode.Mini)\n  }\n}", "path": "codelabs-master\\ElectronicAlbum\\entry\\src\\main\\ets\\pages\\ListPage.ets", "project_name": "codelabs-master", "id": "a180615a6400119af94d102bb93a5e54dc214d0265eb5f25c0c63c438cbee0cb"}
{"text": "import Constants from '../common/constants/Constants';\n\n@Component\nexport default struct PhotoItem {\n  photoArr: Array<Resource> = [];\n  @State currentIndex: number = 0;\n  private showCount: number = Constants.SHOW_COUNT / Constants.DOUBLE_NUMBER;\n\n  @Builder albumPicBuilder(img: Resource, index: number) {\n    Column() {\n      Image(img)\n        .width(Constants.FULL_PERCENT)\n        .height(Constants.FULL_PERCENT)\n        .borderRadius($r('app.float.img_border_radius'))\n        .opacity(1 - (this.showCount - index - 1) * Constants.ITEM_OPACITY_OFFSET)\n    }\n    .padding((this.showCount - index - 1) * Constants.PHOTO_ITEM_PADDING)\n    .offset({ y: (this.showCount - index - 1) * Constants.PHOTO_ITEM_OFFSET })\n    .height(Constants.PHOTO_ITEM_PERCENT)\n    .width(Constants.FULL_PERCENT)\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Top }) {\n      ForEach(Constants.CACHE_IMG_LIST, (image: string, index?: number) => {\n        if (index) {\n          this.albumPicBuilder(this.photoArr[this.showCount - index - 1], index)\n        }\n      }, (item: string, index?: number) => JSON.stringify(item) + index)\n    }\n    .width(Constants.FULL_PERCENT)\n    .height(Constants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\ElectronicAlbum\\entry\\src\\main\\ets\\view\\PhotoItem.ets", "project_name": "codelabs-master", "id": "2c09a7ece7cfb423dff66b575d840e6d095a0d8a8ef144c21fc0725e14aaed80"}
{"text": "import UIAbility from '@ohos.app.ability.UIAbility';\nimport Logger from '../common/utils/Logger';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport Want from '@ohos.app.ability.Want';\nimport window from '@ohos.window';\n\n\nexport default class EntryAbility extends UIAbility {\n  onCreate(want: Want) {\n\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    Logger.info(CommonConstants.ENTRY_ABILITY_TAG, 'onWindowStageCreate');\n    windowStage.loadContent('pages/LauncherPage', (err, data) => {\n      if (err.code) {\n        Logger.error(CommonConstants.ENTRY_ABILITY_TAG, 'Failed to load the content. Cause:' + JSON.stringify(err));\n        return;\n      }\n      Logger.info(CommonConstants.ENTRY_ABILITY_TAG, 'Succeeded in loading the content. Data: ' + JSON.stringify(data));\n    });\n  }\n};\n", "path": "codelabs-master\\FirstStartDemo_HOS\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "d6c866e08326acd637a676c6ec0e267e671dd07d230415cd0736dcba392d1db9"}
{"text": "import router from '@ohos.router';\nimport Logger from '../common/utils/Logger';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n\n@Entry\n@Component\nstruct AdvertisingPage {\n  @State countDownSeconds: number = CommonConstants.ADVERTISING_COUNT_DOWN_SECONDS;\n  private timeId: number = 0;\n\n  onPageShow() {\n    this.timeId = setInterval(() => {\n      if (this.countDownSeconds === 0) {\n        this.jumpToAppHomePage();\n      } else {\n        this.countDownSeconds--;\n      }\n    }, CommonConstants.ADVERTISING_INTERVAL_TIME);\n  }\n\n  onPageHide() {\n    router.clear();\n    clearInterval(this.timeId);\n  }\n\n  \n  jumpToAppHomePage() {\n    router.pushUrl({\n      url: CommonConstants.APP_HOME_PAGE_URL\n    }).catch((error: Error) => {\n      Logger.error(CommonConstants.ADVERTISING_PAGE_TAG, 'AdvertisingPage pushUrl error ' + JSON.stringify(error));\n    });\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Top }) {\n      Image($r('app.media.ic_advertising_background'))\n        .width(CommonConstants.FULL_WIDTH)\n        .height(CommonConstants.FULL_HEIGHT)\n      Text($r('app.string.advertising_text_title', this.countDownSeconds))\n        .fontColor(Color.White)\n        .fontSize($r('app.float.advertising_text_font_size'))\n        .letterSpacing(CommonConstants.ADVERTISING_TITLE_TEXT_LETTER_SPACING)\n        .backgroundColor($r('app.color.advertising_text_background_color'))\n        .border({\n          radius: $r('app.float.advertising_text_radius'),\n          width: $r('app.float.advertising_text_border_width'),\n          color: Color.White\n        })\n        .margin({\n          top: $r('app.float.advertising_title_text_margin_top'),\n          left: $r('app.float.advertising_title_text_margin_left')\n        })\n        .padding({\n          left: $r('app.float.advertising_text_padding_left'),\n          top: $r('app.float.advertising_text_padding_top'),\n          right: $r('app.float.advertising_text_padding_left'),\n          bottom: $r('app.float.advertising_text_padding_bottom')\n        })\n        .onClick(() => {\n          this.jumpToAppHomePage();\n        })\n      Row() {\n        Image($r('app.media.ic_logo'))\n          .width($r('app.float.advertising_image_width'))\n          .height($r('app.float.advertising_image_height'))\n          .margin({ bottom: CommonConstants.ADVERTISING_ROW_MARGIN_BOTTOM })\n        Column() {\n          Text($r('app.string.healthy_life_text'))\n            .bottomTextStyle(FontWeight.Bolder,\n            CommonConstants.ADVERTISING_HEALTHY_LIFE_TEXT_SPACING,\n              $r('app.float.advertising_text_title_size'),\n              $r('app.color.advertising_text_title_color'))\n          Text($r('app.string.healthy_life_introduce'))\n            .bottomTextStyle(FontWeight.Normal,\n            CommonConstants.ADVERTISING_TEXT_INTRODUCE_LETTER_SPACING,\n              $r('app.float.advertising_text_introduce_size'),\n              $r('app.color.launcher_text_introduce_color'))\n            .opacity($r('app.float.advertising_text_opacity'))\n            .margin({ top: CommonConstants.ADVERTISING_TEXT_INTRODUCE_MARGIN_TOP })\n        }\n        .alignItems(HorizontalAlign.Start)\n        .margin({\n          left: CommonConstants.ADVERTISING_COLUMN_MARGIN_LEFT,\n          bottom: CommonConstants.ADVERTISING_ROW_MARGIN_BOTTOM\n        })\n      }\n      .alignItems(VerticalAlign.Bottom)\n      .height(CommonConstants.FULL_HEIGHT)\n    }\n    .width(CommonConstants.FULL_WIDTH)\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n}\n\n@Extend(Text) function bottomTextStyle (fontWeight: number,\n  textAttribute: number, fontSize: Resource, fontColor: Resource) {\n    .fontWeight(fontWeight)\n    .letterSpacing(textAttribute)\n    .fontSize(fontSize)\n    .fontColor(fontColor)\n}\n", "path": "codelabs-master\\FirstStartDemo_HOS\\entry\\src\\main\\ets\\pages\\AdvertisingPage.ets", "project_name": "codelabs-master", "id": "062654e0f125521d585fe1638c06be8448fc3c6f7345aceaba43e215b04ed44c"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\n\n\n@Entry\n@Component\nstruct AppHomePage {\n  build() {\n    Stack() {\n      Image($r('app.media.ic_home_page_background'))\n        .width(CommonConstants.FULL_WIDTH)\n        .height(CommonConstants.FULL_HEIGHT)\n      Text($r('app.string.home_page_text'))\n        .fontSize($r('app.float.home_page_text_size'))\n        .fontColor($r('app.color.home_page_text_color'))\n        .fontWeight(FontWeight.Bold)\n        .textAlign(TextAlign.Center)\n        .height(CommonConstants.FULL_HEIGHT)\n        .width(CommonConstants.FULL_WIDTH)\n    }\n  }\n}", "path": "codelabs-master\\FirstStartDemo_HOS\\entry\\src\\main\\ets\\pages\\AppHomePage.ets", "project_name": "codelabs-master", "id": "e0f2997757e12e59a3c661950854ca43e0eda1377020e5a1233b637bd10a2aa5"}
{"text": "import router from '@ohos.router';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport { GlobalContext } from '../common/utils/GlobalContext';\n\n\n@Entry\n@Component\nstruct PrivacyPage {\n  build() {\n    Column() {\n      Text($r('app.string.privacy_text_title'))\n        .fontSize($r('app.float.privacy_text_title_size'))\n        .textAlign(TextAlign.Center)\n        .margin({\n          top: $r('app.float.privacy_text_margin_top'),\n          bottom: $r('app.float.privacy_text_margin_bottom')\n        })\n      Text($r('app.string.privacy_text_content'))\n        .fontSize($r('app.float.dialog_common_text_size'))\n        .margin({\n          left: $r('app.float.privacy_text_content_left'),\n          right: $r('app.float.privacy_text_content_right')\n        })\n      Text($r('app.string.privacy_back'))\n        .fontColor($r('app.color.privacy_back_text'))\n        .fontSize($r('app.float.privacy_back_text_size'))\n        .textAlign(TextAlign.Center)\n        .fontWeight(FontWeight.Medium)\n        .onClick(() => {\n          \n          GlobalContext.getContext().setObject('isJumpPrivacy', false);\n          router.back();\n        })\n        .margin({ top: $r('app.float.privacy_bottom_text_margin') })\n    }\n    .justifyContent(FlexAlign.Center)\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n\n  onBackPress() {\n    \n    GlobalContext.getContext().setObject('isJumpPrivacy', false);\n  }\n}", "path": "codelabs-master\\FirstStartDemo_HOS\\entry\\src\\main\\ets\\pages\\PrivacyPage.ets", "project_name": "codelabs-master", "id": "70043d02a3f8f0740a85237b86d5c056beee82600d2b1881fe328f5c7c42142b"}
{"text": "import StyleConstants from '../common/constants/StyleConstants';\nimport SearchInput from '../view/SearchInput';\nimport ClearSearch from '../view/ClearSearch';\nimport FlexLayout from '../view/FlexLayout';\nimport SearchViewModel from '../viewmodel/SearchViewModel';\n\n@Entry\n@Component\nstruct HomePage {\n  @State searchArr: Array<string> = SearchViewModel.getSearchArrData();\n\n  build() {\n    Column() {\n      \n      SearchInput({ searchArr: $searchArr})\n      \n      ClearSearch({ searchArr: $searchArr })\n      \n      FlexLayout({ searchArr: $searchArr })\n    }\n    .height(StyleConstants.FULL_PERCENT)\n    .width(StyleConstants.FULL_PERCENT)\n    .alignItems(HorizontalAlign.Center)\n    .backgroundColor($r('app.color.index_background'))\n  }\n}", "path": "codelabs-master\\FlexLayout\\entry\\src\\main\\ets\\pages\\HomePage.ets", "project_name": "codelabs-master", "id": "32f495b72bf955948b9e7207e8f7c2e0bf0cf4955d35d689ba63ec403cc4988a"}
{"text": "import StyleConstants from '../common/constants/StyleConstants';\n\n@Component\nexport default struct ClearSearch {\n  @Link searchArr: Array<string>;\n\n  build() {\n    Flex({ alignItems: ItemAlign.Center }) {\n      if (this.searchArr.length > 0) {\n        Text($r('app.string.recent_searches'))\n          .fontSize($r('app.float.font_size'))\n          .fontColor($r('app.color.recent_search_font_color'))\n          .fontWeight(StyleConstants.FONT_WEIGHT)\n          .height(StyleConstants.RECENT_TEXT_HEIGHT)\n          .layoutWeight(StyleConstants.LAYOUT_WEIGHT)\n          .margin({\n            left: $r('app.float.margin_left'),\n            top: $r('app.float.clear_text_top'),\n            bottom: $r('app.float.clear_text_bottom')\n          })\n\n        Image($r('app.media.ic_delete'))\n          .height(StyleConstants.DELETE_IMAGE_HEIGHT)\n          .width(StyleConstants.DELETE_IMAGE_WIDTH)\n          .margin({ right: $r('app.float.clear_image_right') })\n          .onClick(() => {\n            this.searchArr.splice(0, this.searchArr.length);\n            this.searchArr.length = 0;\n          })\n      } else {\n        Column() {\n          Image($r('app.media.ic_no_search'))\n            .height(StyleConstants.NO_SEARCH_IMAGE_HEIGHT)\n            .width(StyleConstants.NO_SEARCH_IMAGE_WIDTH)\n            .margin({\n              top: $r('app.float.clear_no_search_top'),\n              bottom: $r('app.float.margin_top_bottom')\n            })\n\n          Text($r('app.string.no_search_content'))\n            .fontSize($r('app.float.font_size'))\n            .fontColor($r('app.color.no_search_font_color'))\n            .height(StyleConstants.NO_SEARCH_TEXT_HEIGHT)\n            .width(StyleConstants.NO_SEARCH_TEXT_WIDTH)\n        }\n        .width(StyleConstants.FULL_PERCENT)\n        .justifyContent(FlexAlign.Center)\n      }\n    }\n  }\n}", "path": "codelabs-master\\FlexLayout\\entry\\src\\main\\ets\\view\\ClearSearch.ets", "project_name": "codelabs-master", "id": "6bc102fa1ab3659bf95a711ee950236556aba36c7ccf1d0e44d7495747576df8"}
{"text": "import StyleConstants from '../common/constants/StyleConstants';\n\n@Component\nexport default struct SearchInput {\n  @State searchInput: string = '';\n  @Link searchArr: Array<string>;\n\n  build() {\n    Flex({ alignItems: ItemAlign.Center }) {\n      \n      Search({\n        value: this.searchInput,\n        placeholder: StyleConstants.SEARCH_PLACEHOLDER,\n        icon: StyleConstants.SEARCH_ICON\n      })\n        .placeholderColor($r('app.color.placeholder_color'))\n        .placeholderFont({ size: $r('app.float.font_size') })\n        .textFont({ size: $r('app.float.font_size') })\n        .height(StyleConstants.SEARCH_HEIGHT)\n        .width(StyleConstants.SEARCH_WIDTH)\n        .backgroundColor(Color.White)\n        .margin({\n          left: $r('app.float.margin_left'),\n          right: $r('app.float.margin_right'),\n          top: $r('app.float.margin_top_bottom'),\n          bottom: $r('app.float.margin_top_bottom')\n        })\n        .border({\n          width: $r('app.float.border_width'),\n          color: $r('app.color.border_color'),\n          radius: $r('app.float.border_radius'),\n          style: BorderStyle.Solid\n        })\n        .onChange((value: string) => {\n          this.searchInput = value;\n        })\n\n      \n      Text($r('app.string.search'))\n        .fontSize($r('app.float.font_size'))\n        .fontColor($r('app.color.search_font_color'))\n        .onClick(() => {\n          if (this.searchInput !== '' && this.searchInput.trim().length > 0) {\n            \n            this.searchArr.unshift(this.searchInput.trim());\n          }\n          this.searchInput = '';\n        })\n    }\n    .width(StyleConstants.FULL_PERCENT)\n  }\n}\n", "path": "codelabs-master\\FlexLayout\\entry\\src\\main\\ets\\view\\SearchInput.ets", "project_name": "codelabs-master", "id": "785b7dd383fdf6439c4d5e51c65e2cb0afdfd704ec2a085fbddd6898dab55d29"}
{"text": "class SearchViewModel {\n  \n  getSearchArrData() {\n    let listItems: Array<string> = [\n      'Text', 'Button', 'TextField', 'Image',\n      'Switch', 'Checkbox', 'RadioButton',\n      'ProgressBar', 'ScrollView'\n    ];\n    return listItems;\n  }\n}\n\nexport default new SearchViewModel();", "path": "codelabs-master\\FlexLayout\\entry\\src\\main\\ets\\viewmodel\\SearchViewModel.ets", "project_name": "codelabs-master", "id": "80c3bb2737e7b5a1f44a9e1cd0157faeeef10785353b022037d541ce364f4cc2"}
{"text": "import distributedKVStore from '@ohos.data.distributedKVStore';\nimport { ListItemData } from '../../viewmodel/ListItemData';\n\n\nclass CheckEmptyUtils {\n  \n  isEmptyObj(obj: object) {\n    return (typeof obj === 'undefined');\n  }\n\n  \n  isEmptyStr(str: string) {\n    return str.trim().length === 0;\n  }\n\n  \n  isEmptyArr(arr: Array<ListItemData> | distributedKVStore.Entry[]) {\n    return arr.length === 0;\n  }\n}\n\nexport default new CheckEmptyUtils();", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedContacts\\entry\\src\\main\\ets\\common\\util\\CheckEmptyUtils.ets", "project_name": "codelabs-master", "id": "f20d09cfe7b244f9292aab2a0a5df222517b6feca272072a5f7a9baf647e689f"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\n\n@CustomDialog\nexport struct DeleteDialog {\n  private controller: CustomDialogController;\n  private cancel: () => void = () => {\n  };\n  private confirm: () => void = () => {\n  };\n  private promptMessage: Resource = $r('app.string.batch_delete_text');\n\n  build() {\n    Column() {\n      Text(this.promptMessage)\n        .fontSize($r('app.float.popup_font_size'))\n        .margin({\n          top: $r('app.float.delete_text_margin_top'),\n          bottom: $r('app.float.delete_text_margin_bottom')\n        })\n      Row() {\n        Button($r('app.string.delete_cancel_text'))\n          .onClick(() => {\n            this.controller.close();\n            this.cancel();\n          })\n          .backgroundColor(Color.White)\n          .fontColor($r('app.color.cancel_font_color'))\n        Divider()\n          .width($r('app.float.divider_height'))\n          .height(CommonConstants.BOTTOM_COMPONENT_WIDTH)\n          .backgroundColor($r('app.color.list_divider'))\n          .margin({\n            right: $r('app.float.delete_divider_margin'),\n            left: $r('app.float.delete_divider_margin')\n          })\n        Button($r('app.string.bottom_text_deletion'))\n          .onClick(() => {\n            this.controller.close();\n            this.confirm();\n          })\n          .backgroundColor(Color.White)\n          .fontColor(Color.Red)\n      }\n      .width(CommonConstants.PERCENTAGE_MAX)\n      .height($r('app.float.delete_height'))\n      .margin({ bottom: $r('app.float.delete_dialog_margin') })\n      .justifyContent(FlexAlign.Center)\n    }\n    .justifyContent(FlexAlign.Center)\n    .height($r('app.float.delete_dialog_height'))\n    .backgroundColor(Color.White)\n    .border({\n      color: Color.White,\n      radius: ($r('app.float.device_list_border_radius'))\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedContacts\\entry\\src\\main\\ets\\view\\DeleteDialog.ets", "project_name": "codelabs-master", "id": "cb46e2b44c327930df897dfefeeb9b0a25cbe3a1eee7612205af37f9c90b6326"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\n\n@Component\nexport default struct DetailItemComponent {\n  @Link topContent: string;\n  @Link bottomContent: string;\n  private componentId: number = CommonConstants.PHONE_COMPONENTS_ID;\n  private bottomSubtitle: Resource = $r('app.string.item_personal_email');\n  private leftIcon: Resource = $r('app.media.ic_phone_icon');\n  private rightIcon: Resource = $r('app.media.ic_message');\n\n  build() {\n    Column() {\n      Row() {\n        Column() {\n          Text(this.getTopContent())\n            .fontColor(Color.Black)\n            .fontSize($r('app.float.details_item_font_size'))\n            .fontWeight(500)\n            .margin({ bottom: $r('app.float.details_item_margin') })\n          Text(this.getBottomContent())\n            .fontColor($r('app.color.font_color'))\n            .fontSize($r('app.float.details_bottom_item_size'))\n            .fontWeight(400)\n            .opacity(0.6)\n        }\n        .width(CommonConstants.DETAIL_ITEM_WIDTH)\n        .alignItems(HorizontalAlign.Start)\n\n        Row() {\n          if (this.componentId !== CommonConstants.Note_COMPONENTS_ID) {\n            if (this.componentId === CommonConstants.PHONE_COMPONENTS_ID) {\n              Image(this.leftIcon)\n                .width($r('app.float.details_item_size'))\n                .height($r('app.float.details_item_size'))\n                .objectFit(ImageFit.Contain)\n                .margin({ right: $r('app.float.details_margin_right') })\n            }\n            Image(this.rightIcon)\n              .width($r('app.float.details_item_size'))\n              .height($r('app.float.details_item_size'))\n              .objectFit(ImageFit.Contain)\n          }\n        }\n        .layoutWeight(CommonConstants.WEIGHT)\n        .justifyContent(FlexAlign.End)\n      }\n      .height($r('app.float.details_item_height'))\n\n      Divider()\n        .height($r('app.float.divider_height'))\n        .backgroundColor($r('app.color.list_divider'))\n    }\n  }\n\n  getTopContent(): string {\n    if (this.componentId === CommonConstants.PHONE_COMPONENTS_ID && this.topContent.length === 11) {\n      let phoneNumberStr = '';\n      for (let i = 0; i < this.topContent.length; i++) {\n        if (i === 2 || i === 6) {\n          phoneNumberStr += this.topContent[i] + ' ';\n        } else {\n          phoneNumberStr += this.topContent[i];\n        }\n      }\n      return phoneNumberStr;\n    } else {\n      return this.topContent;\n    }\n  }\n\n  getBottomContent(): string | Resource {\n    if (this.componentId === CommonConstants.PHONE_COMPONENTS_ID) {\n      return this.bottomContent;\n    } else {\n      return this.bottomSubtitle;\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedContacts\\entry\\src\\main\\ets\\view\\DetailItemComponent.ets", "project_name": "codelabs-master", "id": "cec6e0140e0e771404590bb69f514ae00b3607944b7aa44e8433a1b02829fe47"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\nimport PageViewModel from '../viewmodel/PageViewModel';\nimport { ListItemData } from '../viewmodel/ListItemData';\nimport { ListItemComponent } from './ListItemComponent';\n\n@Component\nexport struct ListAreaComponent {\n  @Link contactData: Array<ListItemData>;\n\n  build() {\n    Column() {\n      List() {\n        ForEach(this.contactData, (item: ListItemData) => {\n          ListItem() {\n            ListItemComponent({ itemInfo: item })\n          }\n          .onClick(() => {\n            PageViewModel.redirectDetailPage(item);\n          })\n        }, (item: ListItemData) => JSON.stringify(item))\n      }\n      .scrollBar(BarState.Off)\n      .width(CommonConstants.LIST_WIDTH_PERCENT)\n      .height(CommonConstants.PERCENTAGE_HEIGHT_MAX)\n      .margin({ bottom: $r('app.float.list_area_height') })\n    }\n    .width(CommonConstants.PERCENTAGE_MAX)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedContacts\\entry\\src\\main\\ets\\view\\ListAreaComponent.ets", "project_name": "codelabs-master", "id": "cd44968a634fc601288cbfa344dba85ceca20fbd24c1054251906d79619a8a58"}
{"text": "export default class ContactData {\n  \n  name: string;\n\n  \n  address?: string;\n\n  \n  telephony?: string;\n\n  \n  email?: string;\n\n  \n  remarks?: string;\n\n  constructor(name: string, address?: string, telephony?: string, email?: string, remarks?: string) {\n    this.name = name;\n    this.address = address;\n    this.telephony = telephony;\n    this.email = email;\n    this.remarks = remarks;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedContacts\\entry\\src\\main\\ets\\viewmodel\\ContactData.ets", "project_name": "codelabs-master", "id": "5ae1247d07fe958924ed2f48a7ba286d86d5d76a2522882d23ed86b6e0b0651f"}
{"text": "import promptAction from '@ohos.promptAction';\nimport CommonConstants from '../common/constants/CommonConstants';\n\nexport class DeletePageViewModel {\n  \n  unCheckedContact(): void {\n    promptAction.showToast({\n      message: $r('app.string.prompt_delete'),\n      duration: CommonConstants.PROMPT_DURATION\n    });\n  }\n\n  \n  cancelDialog(): void {\n    promptAction.showToast({\n      message: $r('app.string.delete_cancel_text'),\n      duration: CommonConstants.PROMPT_DURATION\n    });\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedContacts\\entry\\src\\main\\ets\\viewmodel\\DeletePageViewModel.ets", "project_name": "codelabs-master", "id": "98f7859b610bd859831d04bf10f58f5434b1c6897414c273be421c473a9cf94e"}
{"text": "import { AppendixFile, FileType } from './AppendixItem';\n\nexport const imageIndex: Array<AppendixFile> = [\n  { index: FileType.TXT, fileType: 'txt', icon: $r('app.media.ic_files_grid_txt') },\n  { index: FileType.DOC, fileType: 'doc', icon: $r('app.media.ic_files_documents') },\n  { index: FileType.PDF, fileType: 'pdf', icon: $r('app.media.ic_files_pdf') }\n];", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedMail\\entry\\src\\main\\ets\\viewmodel\\AppendixIndexModel.ets", "project_name": "codelabs-master", "id": "f40e9e122a9a60508fb7993bc408813e9684cf69aa781e8d3939efca99999e33"}
{"text": "export class MailInfo {\n  private recipient: string | undefined;\n  private sender: string | undefined;\n  private subject: string | undefined;\n  private emailContent: string | undefined;\n\n  constructor(recipient: string | undefined, sender: string | undefined, subject: string | undefined, emailContent: string | undefined) {\n    this.recipient = recipient;\n    this.sender = sender;\n    this.subject = subject;\n    this.emailContent = emailContent;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\DistributedMail\\entry\\src\\main\\ets\\viewmodel\\MailInfo.ets", "project_name": "codelabs-master", "id": "def9392e12cb598d1dad88c0d2cfd311eb3b897c15b43f93751c59027589d6e6"}
{"text": "import picker from '@ohos.file.picker';\nimport { BusinessError } from '@ohos.base';\nimport Logger from './Logger';\n\n\n\nlet uris: Array<string> = [];\n\n\nexport async function photoPickerGetUri(): Promise<string> {\n  try {\n    let PhotoSelectOptions = new picker.PhotoSelectOptions();\n    PhotoSelectOptions.MIMEType = picker.PhotoViewMIMETypes.IMAGE_TYPE;\n    PhotoSelectOptions.maxSelectNumber = 1;\n    let photoPicker = new picker.PhotoViewPicker();\n    await photoPicker.select(PhotoSelectOptions).then((PhotoSelectResult: picker.PhotoSelectResult) => {\n      Logger.info('PhotoViewPicker.select successfully, PhotoSelectResult uri: ' + JSON.stringify(PhotoSelectResult));\n      uris = PhotoSelectResult.photoUris;\n    }).catch((err: BusinessError) => {\n      Logger.error('PhotoViewPicker.select failed with err: ' + JSON.stringify(err));\n    });\n  } catch (error) {\n    let err = error as BusinessError;\n    Logger.error('PhotoViewPicker failed with err: ' + err.message);\n  }\n  return uris[0].toString();\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\FilesManger\\entry\\src\\main\\ets\\common\\utils\\PictureSaving.ets", "project_name": "codelabs-master", "id": "fddbee0c89b1425ffdafeabad54f497d184642e7d14157b847925c2fb6d78204"}
{"text": "import fs from '@ohos.file.fs';\nimport common from '@ohos.app.ability.common';\nimport buffer from '@ohos.buffer';\n\n\nlet context = getContext(this) as common.UIAbilityContext;\nlet filesDir = context.filesDir;\nlet res: string = '';\n\n\nexport function readFile(): string {\n  let filePath = filesDir + '/test.txt';\n  let stat = fs.statSync(filePath);\n  let size = stat.size;\n  let buf = new ArrayBuffer(size);\n  \n  let fileStream = fs.createStreamSync(filePath, \"r+\");\n  \n  fileStream.readSync(buf);\n  \n  let con = buffer.from(buf, 0);\n  res = con.toString();\n  fileStream.close()\n  return res;\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\FilesManger\\entry\\src\\main\\ets\\common\\utils\\ReadFile.ets", "project_name": "codelabs-master", "id": "4bd879325d255fd7e2933e1793efa7ed1b926fd36f94144c51f84e88d47c53de"}
{"text": "import fs from '@ohos.file.fs';\nimport common from '@ohos.app.ability.common';\n\nlet context = getContext(this) as common.UIAbilityContext;\nlet filesDir = context.filesDir;\n\n\nexport function writeFile(content: string): void {\n  let filePath = filesDir + '/test.txt';\n  \n  let fileStream = fs.createStreamSync(filePath, \"w+\");\n  fileStream.writeSync(content)\n  fileStream.close()\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\FilesManger\\entry\\src\\main\\ets\\common\\utils\\WriteFile.ets", "project_name": "codelabs-master", "id": "a27c4a61d8f2ed023ea7b106bba40f977d03b8374d02837b124ae5cd4ccf9854"}
{"text": "import dataRdb from '@ohos.data.relationalStore';\nimport DayInfo from '../../../viewmodel/DayInfo';\nimport { CommonConstants as Const } from '../../constants/CommonConstants'\nimport RdbUtils from '../Rdb/RdbUtils';\nimport Logger from '../../utils/Logger';\n\nclass DayInfoApi {\n\n  \n  insertData(dayInfo: DayInfo, callback: Function): void {\n    const valueBucket = generateBucket(dayInfo);\n    RdbUtils.insert('dayInfo', valueBucket).then(result => {\n      callback(result);\n    })\n    Logger.info('DayInfoTable', 'Insert dayInfo finished.');\n  }\n\n  \n  updateData(dayInfo: DayInfo, callback: Function): void {\n    const valueBucket = generateBucket(dayInfo);\n    let predicates: dataRdb.RdbPredicates = new dataRdb.RdbPredicates(Const.DAY_INFO.tableName ? Const.DAY_INFO.tableName : '');\n    predicates.equalTo('date', dayInfo.date);\n    RdbUtils.update(valueBucket, predicates).then((result: number) => {\n      callback(result);\n    });\n    Logger.info('DayInfoTable', 'Update dayInfo finished.');\n  }\n\n  \n  query(date: string, callback: Function): void {\n    let predicates: dataRdb.RdbPredicates = new dataRdb.RdbPredicates(Const.DAY_INFO.tableName ? Const.DAY_INFO.tableName : '');\n    predicates.equalTo('date', date);\n    RdbUtils.query(predicates).then(resultSet => {\n      let count = resultSet.rowCount;\n      if (count === 0) {\n        Logger.info('DayInfoTable', 'query no results.');\n        let result = new DayInfo('', 0, 0);\n        callback(result);\n      } else {\n        let result = new DayInfo('', 0, 0);\n        resultSet.goToFirstRow();\n        result.date = resultSet.getString(resultSet.getColumnIndex('date'));\n        result.targetTaskNum = resultSet.getDouble(resultSet.getColumnIndex('targetTaskNum'));\n        result.finTaskNum = resultSet.getDouble(resultSet.getColumnIndex('finTaskNum'));\n        callback(result);\n      }\n      return;\n    });\n  }\n\n  \n  queryList(dates: string[], callback: Function): void {\n    let predicates: dataRdb.RdbPredicates = new dataRdb.RdbPredicates(Const.DAY_INFO.tableName ? Const.DAY_INFO.tableName : '');\n    predicates.in('date', dates);\n    RdbUtils.query(predicates).then(resultSet => {\n      let count = resultSet.rowCount;\n      if (count === 0) {\n        Logger.info('DayInfoTable', 'query no results.');\n        let result: DayInfo[] = [];\n        callback(result);\n      } else {\n        resultSet.goToFirstRow();\n        let result: DayInfo[] = [];\n        for (let i = 0; i < count; i++) {\n          let tmp = new DayInfo('', 0, 0);\n          tmp.date = resultSet.getString(resultSet.getColumnIndex('date'));\n          tmp.targetTaskNum = resultSet.getDouble(resultSet.getColumnIndex('targetTaskNum'));\n          tmp.finTaskNum = resultSet.getDouble(resultSet.getColumnIndex('finTaskNum'));\n          result[i] = tmp;\n          resultSet.goToNextRow();\n        }\n        callback(result);\n      }\n    });\n  }\n}\n\nfunction generateBucket(dayInfo: DayInfo): dataRdb.ValuesBucket {\n  let valueBucket = {} as dataRdb.ValuesBucket;\n  Const.DAY_INFO.columns?.forEach((item: string) => {\n    switch (item) {\n      case 'date':\n        valueBucket.date = dayInfo.date;\n        break;\n      case 'targetTaskNum':\n        valueBucket.targetTaskNum = dayInfo.targetTaskNum;\n        break;\n      case 'finTaskNum':\n        valueBucket.finTaskNum = dayInfo.finTaskNum;\n        break;\n      default:\n        break;\n    }\n  });\n  return valueBucket;\n}\n\nlet dayInfoApi = new DayInfoApi();\n\nexport default dayInfoApi as DayInfoApi;", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\common\\database\\tables\\DayInfoApi.ets", "project_name": "codelabs-master", "id": "cf02edc506d8f1a23d82a7f6a2705bcff447a292742d82e9686ea5fa7c347ee2"}
{"text": "import dataRdb from '@ohos.data.relationalStore';\nimport FormInfo from '../../../viewmodel/FormInfo';\nimport { CommonConstants as Const } from '../../constants/CommonConstants';\nimport RdbUtils from '../Rdb/RdbUtils';\nimport Logger from '../../utils/Logger';\n\nclass FormInfoApi {\n  \n  public insertData(formInfo: FormInfo, callback: Function): void {\n    const valueBucket = generateBucket(formInfo);\n    RdbUtils.insert('formInfo', valueBucket).then(result => {\n      callback(result);\n    });\n    Logger.info('FormInfoTable', 'Insert formInfo finished.');\n  }\n\n  \n  public queryFormData(callback: Function): void {\n    let predicates = new dataRdb.RdbPredicates(Const.FORM_INFO.tableName ? Const.FORM_INFO.tableName : '');\n    RdbUtils.query(predicates).then(resultSet => {\n      let count = resultSet.rowCount;\n      if (count === 0) {\n        callback([]);\n      } else {\n        resultSet.goToFirstRow();\n        let resultArray: Array<FormInfo> = new Array<FormInfo>();\n        do {\n          let result = new FormInfo();\n          result.formId = resultSet.getString(resultSet.getColumnIndex('formId'));\n          result.formName = resultSet.getString(resultSet.getColumnIndex('formName'));\n          result.formDimension = resultSet.getLong(resultSet.getColumnIndex('formDimension'));\n          resultArray.push(result);\n        } while (resultSet.goToNextRow());\n        resultSet.close();\n        callback(resultArray);\n      }\n    }).catch((error: Error) => {\n      Logger.error('FormInfoTable', 'queryFormData error ' + JSON.stringify(error));\n    });\n  }\n\n  \n  public deleteFormData(formId: string): void {\n    let predicates = new dataRdb.RdbPredicates(Const.FORM_INFO.tableName ? Const.FORM_INFO.tableName : '');\n    predicates.equalTo('formId', formId);\n    RdbUtils.del(predicates).catch((error: Error) => {\n      Logger.error('FormInfoTable', 'deleteFormData error ' + JSON.stringify(error));\n    });\n  }\n\n}\n\nfunction generateBucket(formInfo: FormInfo): dataRdb.ValuesBucket {\n  let valueBucket = {} as dataRdb.ValuesBucket;\n  Const.FORM_INFO.columns?.forEach((item: string) => {\n    if (item !== 'id') {\n      switch (item) {\n        case 'formId':\n          valueBucket[item] = formInfo.formId;\n          break;\n        case 'formName':\n          valueBucket[item] = formInfo.formName;\n          break;\n        case 'formDimension':\n          valueBucket[item] = formInfo.formDimension;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n  return valueBucket;\n}\n\nlet formInfoApi = new FormInfoApi();\n\nexport default formInfoApi as FormInfoApi;", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\common\\database\\tables\\FormInfoApi.ets", "project_name": "codelabs-master", "id": "2e249171875b6be0757644dd4787bdecb430053742fd9344bbf002af892d628e"}
{"text": "import dataRdb from '@ohos.data.relationalStore';\nimport GlobalInfo from '../../../viewmodel/GlobalInfo';\nimport { CommonConstants as Const } from '../../constants/CommonConstants'\nimport RdbUtils from '../Rdb/RdbUtils';\nimport Logger from '../../utils/Logger';\n\nclass GlobalInfoApi {\n\n  \n  insertData(globalInfo: GlobalInfo, callback: Function): void {\n    const valueBucket = generateBucket(globalInfo);\n    RdbUtils.insert('GlobalInfo', valueBucket).then(result => {\n      callback(result);\n    });\n    Logger.info('GlobalInfoTable', 'Insert globalInfo finished.');\n  }\n\n  \n  updateData(globalInfo: GlobalInfo, callback: Function): void {\n    const valueBucket = generateBucket(globalInfo);\n    let predicates = new dataRdb.RdbPredicates(Const.GLOBAL_INFO.tableName ? Const.GLOBAL_INFO.tableName : '');\n    predicates.equalTo('id', 0);\n    RdbUtils.update(valueBucket, predicates).then((result: number) => {\n      callback(result);\n    });\n    Logger.info('GlobalInfoTable', 'Update globalInfo finished.');\n  }\n\n  \n  query(callback: Function): void {\n    let predicates = new dataRdb.RdbPredicates(Const.GLOBAL_INFO.tableName ? Const.GLOBAL_INFO.tableName : '');\n    predicates.equalTo('id', 0);\n    RdbUtils.query(predicates).then(resultSet => {\n      let count = resultSet.rowCount;\n      if (count === 0) {\n        Logger.info('GlobalInfoTable', 'query no results!');\n        let result = new GlobalInfo('', '', 0, '');\n        callback(result);\n      } else {\n        let result = new GlobalInfo('', '', 0, '');\n        resultSet.goToFirstRow();\n        result.firstDate = resultSet.getString(resultSet.getColumnIndex('firstDate'));\n        result.lastDate = resultSet.getString(resultSet.getColumnIndex('lastDate'));\n        result.checkInDays = resultSet.getDouble(resultSet.getColumnIndex('checkInDays'));\n        result.achievements = resultSet.getString(resultSet.getColumnIndex('achievements'));\n        callback(result);\n      }\n    });\n  }\n}\n\nfunction generateBucket(globalInfo: GlobalInfo): dataRdb.ValuesBucket {\n  let valueBucket = {} as dataRdb.ValuesBucket;\n  Const.GLOBAL_INFO.columns?.forEach((item: string) => {\n    if (item === 'id') {\n      valueBucket[item] = 0;\n    } else {\n      switch (item) {\n        case 'firstDate':\n          valueBucket[item] = globalInfo.firstDate;\n          break;\n        case 'lastDate':\n          valueBucket[item] = globalInfo.lastDate;\n          break;\n        case 'checkInDays':\n          valueBucket[item] = globalInfo.checkInDays;\n          break;\n        case 'achievements':\n          valueBucket[item] = globalInfo.achievements;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n  return valueBucket;\n}\n\nlet globalInfoApi = new GlobalInfoApi();\n\nexport default globalInfoApi as GlobalInfoApi;\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\common\\database\\tables\\GlobalInfoApi.ets", "project_name": "codelabs-master", "id": "0568108a33e109479f9e5ac0653430eae87b47252f914253cb7dbfa7f42917d7"}
{"text": "import { BroadCast } from './BroadCast';\nimport Logger from './Logger';\n\nconst APP_KEY_GROUP_DATA_SOURCE_MANAGER = 'app_key_group_data_source_manager';\n\nexport class HealthDataSrcMgr {\n  private broadCast: BroadCast;\n\n  constructor() {\n    Logger.debug('HealthDataSourceManager', 'constructor');\n    this.broadCast = new BroadCast();\n  }\n\n  public static getInstance(): HealthDataSrcMgr {\n    if (!AppStorage.Get<HealthDataSrcMgr>(APP_KEY_GROUP_DATA_SOURCE_MANAGER)) {\n      AppStorage.SetOrCreate<HealthDataSrcMgr>(APP_KEY_GROUP_DATA_SOURCE_MANAGER, new HealthDataSrcMgr());\n    }\n    let healthDataSrcMgr = AppStorage.Get<HealthDataSrcMgr>(APP_KEY_GROUP_DATA_SOURCE_MANAGER);\n    return healthDataSrcMgr ? healthDataSrcMgr : new HealthDataSrcMgr();\n  }\n\n  public getBroadCast(): BroadCast {\n    return this.broadCast;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\common\\utils\\HealthDataSrcMgr.ets", "project_name": "codelabs-master", "id": "e73d8911b70f5bb3d81c41bb9d4349c9c60681542f80382f6c07eea6c50df010"}
{"text": "import FormExtensionAbility from '@ohos.app.form.FormExtensionAbility';\nimport formBindingData from '@ohos.app.form.formBindingData';\nimport FormInfo from '../viewmodel/FormInfo';\nimport FormUtils from '../common/utils/FormUtils';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport Want from '@ohos.app.ability.Want';\n\nexport default class EntryFormAbility extends FormExtensionAbility {\n  onAddForm(want: Want) {\n    let parameters = want.parameters;\n    if (parameters) {\n      let formId: string = parameters[Const.FORM_PARAM_IDENTITY_KEY] as string;\n      let formName: string = parameters[Const.FORM_PARAM_NAME_KEY] as string;\n      let formDimension: number = parameters[Const.FORM_PARAM_DIMENSION_KEY] as number;\n      let formInfo: FormInfo = {\n        formId: formId,\n        formName: formName,\n        formDimension: formDimension\n      };\n      FormUtils.insertFormData(this.context, formInfo);\n    }\n    \n    let formData = formBindingData.createFormBindingData('');\n    return formData;\n  }\n\n  onUpdateForm() {\n    FormUtils.updateCards(this.context);\n  }\n\n  onRemoveForm(formId: string) {\n    FormUtils.deleteFormData(this.context, formId);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\entryformability\\EntryFormAbility.ets", "project_name": "codelabs-master", "id": "354dbd81f190bcdeb705b03842af8f3f93c9929ceb0cef3c28e2d739e185ab60"}
{"text": "import { ACHIEVEMENT_LEVEL_LIST } from './TaskInitList';\nimport GlobalInfo from '../viewmodel/GlobalInfo';\nimport GlobalInfoApi from '../common/database/tables/GlobalInfoApi';\n\nexport const ACHIEVEMENT_LEVEL_KEY = 'AchievementLevelKey';\n\nexport function getAchievementLevel() {\n  GlobalInfoApi.query((res: GlobalInfo) => {\n    let globalInfo: GlobalInfo = res;\n\n    let achievementStr = globalInfo.achievements??'';\n    let achievements = achievementStr.split(',');\n    if (achievements.length > 0) {\n      AppStorage.Set<Number>(ACHIEVEMENT_LEVEL_KEY, Number(achievements[achievements.length - 1]));\n    }\n  })\n\n}\n\nexport function isReachNewAchievement(globalInfo: GlobalInfo): boolean {\n  let achievementStr = globalInfo.achievements??'';\n  let achievements = achievementStr.split(',');\n\n  if (ACHIEVEMENT_LEVEL_LIST.indexOf(globalInfo.checkInDays) >= 0 && achievements.indexOf(String(globalInfo.checkInDays)) < 0) {\n    return true;\n  }\n  return false;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\model\\AchieveModel.ets", "project_name": "codelabs-master", "id": "bd0753392078134e8b1ca9a337e90236795a3c995c887bc1ed4c7c44727ecf08"}
{"text": "export interface InfoItem {\n  id: string;\n  title: Resource;\n  icon?: Resource;\n}\n\nexport const MineInfoList: InfoItem[] = [\n  {\n    id: '1',\n    title: $r('app.string.mine_personal_data')\n  },\n  {\n    id: '2',\n    title: $r('app.string.mine_check_updates')\n  },\n  {\n    id: '3',\n    title: $r('app.string.mine_about')\n  }\n];", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\model\\Mine.ets", "project_name": "codelabs-master", "id": "ad09773d4a385752cf3fa591670be6c749fc05fbbc00d6d5ba5573f9619cd7e1"}
{"text": "export interface NavItem {\n  icon: Resource;\n  icon_selected: Resource;\n  text: Resource;\n  id: number;\n}\n\n\nexport enum TabId {\n  HOME,\n  ACHIEVEMENT,\n  MINE\n}\n\nexport const NavList: NavItem[] = [\n  {\n    icon: $r('app.media.ic_tabs_home_normal'),\n    icon_selected: $r('app.media.ic_tabs_home_sel'),\n    text: $r('app.string.tab_home'),\n    id: TabId.HOME\n  },\n  {\n    icon: $r('app.media.ic_tabs_achievement_normal'),\n    icon_selected: $r('app.media.ic_tabs_achievement_sel'),\n    text: $r('app.string.tab_achievement'),\n    id: TabId.ACHIEVEMENT\n  },\n  {\n    icon: $r('app.media.ic_tabs_mine_normal'),\n    icon_selected: $r('app.media.ic_tabs_mine_sel'),\n    text: $r('app.string.tab_mine'),\n    id: TabId.MINE\n  },\n]", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\model\\NavItemModel.ets", "project_name": "codelabs-master", "id": "dea6e2c7030df59af88134f8fc99c66901b975d7bb4fb3e480001bc9224db3aa"}
{"text": "import TaskInfo from '../viewmodel/TaskInfo';\nimport DayInfo from '../viewmodel/DayInfo';\nimport { WEEK_TITLES, dateToStr } from '../common/utils/Utils'\nimport Logger from '../common/utils/Logger'\nimport WeekCalendarInfo from '../viewmodel/WeekCalendarInfo';\n\n\nexport const WEEK_DAY_NUM: number = 7;\n\nexport class WeekDateModel {\n  weekTitle: string;\n  dateStr: string;\n  date: Date;\n  dayInfo: DayInfo = new DayInfo('', 0, 0);\n  taskList: TaskInfo[] = [];\n\n  constructor(weekTitle: string, dateStr: string, date: Date) {\n    this.weekTitle = weekTitle;\n    this.dateStr = dateStr;\n    this.date = date;\n  }\n}\n\n\nexport function initializeOnStartUp(date: Date): WeekCalendarInfo {\n  let weekCalendarInfo: WeekCalendarInfo = new WeekCalendarInfo();\n  let arr: Array<WeekDateModel> = [];\n  let strArr: Array<string> = [];\n  let currentDay = date.getDay() - 1;\n  if (date.getDay() === 0) {\n    currentDay = 6;\n  }\n  Logger.debug('WeekCalendarModel', date.toISOString());\n  \n  date.setDate(date.getDate() - currentDay)\n  for (let index = 0; index < WEEK_DAY_NUM; index++) {\n    let tempDate = new Date(date);\n    tempDate.setDate(date.getDate() + index);\n    let dateStr = dateToStr(tempDate);\n    strArr.push(dateStr);\n    arr.push(new WeekDateModel(WEEK_TITLES[tempDate.getDay()], dateStr, tempDate))\n  }\n  Logger.debug('WeekCalendarModel', 'initialWeekDate' + JSON.stringify(arr))\n  weekCalendarInfo.arr = arr;\n  weekCalendarInfo.strArr = strArr;\n  return weekCalendarInfo;\n}\n\n\nexport function getPreviousWeek(showDate: Date): WeekCalendarInfo {\n  Logger.debug('WeekCalendarModel', 'get week date by date: ' + showDate.toDateString());\n  let weekCalendarInfo: WeekCalendarInfo = new WeekCalendarInfo();\n  let arr: Array<WeekDateModel> = [];\n  let strArr: Array<string> = [];\n  let currentDay = showDate.getDay() - 1;\n  \n  showDate.setDate(showDate.getDate() - currentDay);\n  for (let index = WEEK_DAY_NUM; index > 0; index--) {\n    let tempDate = new Date(showDate);\n    tempDate.setDate(showDate.getDate() - index);\n    let dateStr = dateToStr(tempDate);\n    strArr.push(dateStr);\n    arr.push(new WeekDateModel(WEEK_TITLES[tempDate.getDay()], dateStr, tempDate));\n  }\n  Logger.debug('WeekCalendarModel', JSON.stringify(arr));\n  weekCalendarInfo.arr = arr;\n  weekCalendarInfo.strArr = strArr;\n  return weekCalendarInfo;\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\model\\WeekCalendarModel.ets", "project_name": "codelabs-master", "id": "de4adb57cd2f69922b7b73474d179895c404be583d7ff8c9852aade4eb73089e"}
{"text": "import router from '@ohos.router';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct AdvertisingPage {\n  @State duration: number = Const.AD_DURATION;\n  private intervalId: number = -1;\n\n  goToHomePage() {\n    clearInterval(this.intervalId);\n    router.replaceUrl({ url: 'pages/MainPage' });\n  }\n\n  aboutToAppear() {\n    this.intervalId = setInterval(() => {\n      if (this.duration > 0) {\n        this.duration -= 1;\n      } else {\n        this.goToHomePage();\n      }\n    }, Const.DURATION_1000)\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.jump_ad', this.duration))\n          .fontSize($r('app.float.default_12'))\n          .fontColor($r('app.color.white'))\n          .borderRadius($r('app.float.default_16'))\n          .letterSpacing(Const.LETTER_1)\n          .height($r('app.float.default_36'))\n          .backgroundColor('rgba(0,0,0,0.20)')\n          .border({ color: $r('app.color.white'), width: $r('app.float.default_1') })\n          .margin({ top: $r('app.float.default_36') })\n          .padding($r('app.float.default_8'))\n          .onClick(() => this.goToHomePage())\n      }\n      .width('90%')\n      .justifyContent(FlexAlign.End)\n\n      Row() {\n        Image($r('app.media.logo'))\n          .width($r('app.float.default_56'))\n          .height($r('app.float.default_56'))\n          .objectFit(ImageFit.Contain)\n        Column({ space: Const.SPACE_4 }) {\n          Text($r('app.string.EntryAbility_label'))\n            .fontFamily($r('app.string.HarmonyHeiTi_Bold'))\n            .fontSize($r('app.float.default_26'))\n            .fontColor($r('app.color.titleColor'))\n            .fontWeight(Const.FONT_WEIGHT_700)\n            .letterSpacing(Const.LETTER_1)\n          Text($r('app.string.EntryAbility_desc'))\n            .fontFamily($r('app.string.HarmonyHeiTi'))\n            .fontColor($r('app.color.titleColor'))\n            .fontWeight(Const.FONT_WEIGHT_400)\n            .letterSpacing(Const.LETTER_34)\n            .opacity(Const.OPACITY_4)\n            .fontSize($r('app.float.default_16'))\n        }\n        .alignItems(HorizontalAlign.Start)\n        .margin({ left: $r('app.float.default_12') })\n      }\n      .height($r('app.float.default_100'))\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundImagePosition({x: 0, y: 0})\n    .backgroundImage($r('app.media.ic_ad_bg'))\n    .backgroundImageSize({ width: '100%', height: '100%' })\n    .justifyContent(FlexAlign.SpaceBetween)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\pages\\AdvertisingPage.ets", "project_name": "codelabs-master", "id": "772c31d0996138463cc5fd92014fd1040f8a2a1de966624511ca89d7e2b431ff"}
{"text": "import { ListInfo } from '../view/ListInfo';\nimport { UserBaseInfo } from '../view/UserBaseInfo';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Component\nexport struct MineIndex {\n  @State nickname: string = Const.NICK_NAME;\n  @State signature: string = Const.SIGNATURE;\n\n  build() {\n    Column() {\n      UserBaseInfo({\n        nickname: this.nickname,\n        signature: this.signature\n      });\n\n      ListInfo();\n    }\n    .height(Const.FULL_HEIGHT)\n    .backgroundColor($r('app.color.mineBgColor'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\pages\\MinePage.ets", "project_name": "codelabs-master", "id": "19776f34954f8bef3c93f0abf860a431d89357405ed5cd6a396206afc6d748a1"}
{"text": "import common from '@ohos.app.ability.common';\nimport router from '@ohos.router';\nimport data_preferences from '@ohos.data.preferences';\nimport Logger from '../common/utils/Logger';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport UserPrivacyDialog from '../view/dialog/UserPrivacyDialog';\n\n\nconst H_STORE: string = 'healthAppStore';\nconst IS_PRIVACY: string = 'isPrivacy';\n\n@Entry\n@Component\nstruct SplashIndex {\n  context: common.UIAbilityContext = getContext(this) as common.UIAbilityContext;\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: UserPrivacyDialog(\n      {\n        cancel: () => { this.exitApp() },\n        confirm: () => { this.onConfirm() }\n      }),\n    cancel: () => { this.exitApp() },\n    autoCancel: false,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: 0, dy: Const.OFFSET_24 }\n  });\n\n  onConfirm() {\n    let preferences = data_preferences.getPreferences(this.context, H_STORE);\n    preferences.then((res) => {\n      res.put(IS_PRIVACY, true).then(() => {\n        res.flush();\n        Logger.info('SplashPage','isPrivacy is put success');\n      }).catch((err: Error) => {\n        Logger.info('SplashPage','isPrivacy put failed. Cause:' + err);\n      });\n    })\n    this.jumpAdPage();\n  }\n\n  exitApp() {\n    this.context.terminateSelf();\n  }\n\n  jumpAdPage() {\n    setTimeout(() => {\n      router.replaceUrl({ url: 'pages/AdvertisingPage' });\n    }, Const.LAUNCHER_DELAY_TIME);\n  }\n\n  aboutToAppear() {\n    let preferences = data_preferences.getPreferences(this.context, H_STORE);\n    preferences.then((res) => {\n      res.get(IS_PRIVACY, false).then((isPrivate) => {\n        if (isPrivate === true) {\n          this.jumpAdPage();\n        } else {\n          this.dialogController.open();\n        }\n      });\n    });\n  }\n\n  aboutToDisappear() {\n    clearTimeout();\n  }\n\n  build() {\n    Column() {\n      Image($r('app.media.logo'))\n        .width($r('app.float.default_120'))\n        .aspectRatio(1)\n        .margin({ top: $r('app.float.default_120') });\n      Text($r('app.string.EntryAbility_label'))\n        .fontFamily($r('app.string.HarmonyHeiTi_Bold'))\n        .fontSize($r('app.float.default_24'))\n        .fontColor($r('app.color.titleColor'))\n        .fontWeight(Const.FONT_WEIGHT_700)\n        .letterSpacing(Const.LETTER_1)\n        .margin({\n          top: $r('app.float.default_20'),\n          bottom: $r('app.float.default_8') })\n      Text($r('app.string.EntryAbility_desc'))\n        .fontFamily($r('app.string.HarmonyHeiTi'))\n        .fontColor($r('app.color.titleColor'))\n        .fontWeight(Const.FONT_WEIGHT_400)\n        .letterSpacing(Const.LETTER_34)\n        .opacity(Const.OPACITY_6)\n        .fontSize($r('app.float.default_16'))\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundImagePosition({x: 0, y: 0})\n    .backgroundImage($r('app.media.ic_splash_bg'))\n    .backgroundImageSize({ width: '100%', height: '100%' })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\pages\\SplashPage.ets", "project_name": "codelabs-master", "id": "c9f377cc4d80dd3039969bbb5ebf19eade89b4ecac97391cacbc035d3fcc0172"}
{"text": "import TaskDetail from '../view/task/TaskDetailComponent';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct TaskEdit {\n  build() {\n    Row() {\n      Navigation() {\n        Column() {\n          TaskDetail()\n        }\n        .width(Const.THOUSANDTH_1000)\n        .height(Const.THOUSANDTH_1000)\n      }\n      .size({ width: Const.THOUSANDTH_1000, height: Const.THOUSANDTH_1000 })\n      .title(Const.EDIT_TASK_TITLE)\n      .titleMode(NavigationTitleMode.Mini)\n    }\n    .height(Const.THOUSANDTH_1000)\n    .backgroundColor($r('app.color.primaryBgColor'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\pages\\TaskEditPage.ets", "project_name": "codelabs-master", "id": "ffe7c817352d58b856a4dbe9316d854d89810841d9ce7eeeddcfff36a7223d93"}
{"text": "import { ITaskItem } from '../model/TaskInitList';\nimport TaskList from '../view/task/TaskListComponent';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { getAllTask, taskIndexDataInit, taskOriginData } from '../viewmodel/TaskViewModel';\nimport TaskInfo from '../viewmodel/TaskInfo';\n\n@Entry\n@Component\n@Preview\nstruct TaskIndex {\n  @Provide taskList: ITaskItem[] = taskOriginData;\n\n  onPageShow() {\n    getAllTask().then((res: TaskInfo[]) => {\n      let deepCopyDataStr = JSON.stringify(this.taskList);\n      let deepCopyData: ITaskItem[] = JSON.parse(deepCopyDataStr);\n      this.taskList = taskIndexDataInit(deepCopyData, res);\n    })\n  }\n\n  build() {\n    Row() {\n      Navigation() {\n        Column() {\n          TaskList()\n        }\n        .width(Const.THOUSANDTH_1000)\n        .justifyContent(FlexAlign.Center)\n      }\n      .size({ width: Const.THOUSANDTH_1000, height: Const.THOUSANDTH_1000 })\n      .title(Const.ADD_TASK_TITLE)\n      .titleMode(NavigationTitleMode.Mini)\n    }\n    .backgroundColor($r('app.color.primaryBgColor'))\n    .height(Const.THOUSANDTH_1000)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\pages\\TaskListPage.ets", "project_name": "codelabs-master", "id": "4f437a5ddab12e74af060d9817d5e7de94d3dbc4fcfee5aa1310f4d62cf5d0a4"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { BadgePanel } from './BadgePanelComponent';\nimport { TitleBar } from './TitleBarComponent';\nimport Logger from '../common/utils/Logger';\n\n@Component\nexport struct AchievementIndex {\n  aboutToAppear(){\n    Logger.debug('AchievementIndex', 'aboutToAppear')\n  }\n\n  onPageShow () {\n    Logger.debug('AchievementIndex', 'onPageShow')\n  }\n\n  build() {\n    Column({space: Const.DEFAULT_20}) {\n      TitleBar()\n      BadgePanel()\n    }\n    .padding(Const.DEFAULT_10)\n    .height(Const.FULL_HEIGHT)\n    .width(Const.FULL_WIDTH)\n    .backgroundColor($r('app.color.black'))\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\AchievementComponent.ets", "project_name": "codelabs-master", "id": "ef49571ccc30825bb012cbd21117aa29b4469a4e9b0aa33bb6bb30ed871c3d3a"}
{"text": "import { ratio2percent } from '../common/utils/Utils'\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Component\nexport struct BadgeCard {\n  @Prop content: string = '';\n  imgSrc: Resource = $r('app.string.empty');\n\n  build() {\n    Column({space: Const.DEFAULT_18}) {\n      Image(this.imgSrc)\n        .width(Const.FULL_WIDTH)\n        .height(Const.ACHIEVE_CARD_IMG_HEIGHT)\n        .objectFit(ImageFit.Contain)\n      Text($r('app.string.task_achievement_level', Number(this.content)))\n        .lineHeight($r('app.float.default_16'))\n        .fontSize($r('app.float.default_12'))\n        .fontColor($r('app.color.white'))\n    }\n    .width(ratio2percent(Const.ACHIEVE_SPLIT_RATIO))\n    .padding({top: Const.ACHIEVE_CARD_TOP, bottom: Const.ACHIEVE_CARD_BOTTOM})\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\BadgeCardComponent.ets", "project_name": "codelabs-master", "id": "55ba5e1b110507fd16b7874f16dfdb02e8d8f3393c42ac24e2a1174f2861e3d3"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants'\n\n@Component\nexport default struct HealthText {\n  @Prop title: string = '';\n  titleResource: Resource = $r('app.string.empty');\n  fontSize: number | string | Resource = $r('app.float.default_16');\n  fontWeight: number | FontWeight | string = Const.FONT_WEIGHT_500;\n  fontColor: ResourceColor = $r('app.color.titleColor');\n  fontFamily: string | Resource = $r('app.string.HarmonyHeiTi_Medium');\n\n  build() {\n    Text(this.title || this.titleResource)\n      .fontSize(this.fontSize)\n      .fontWeight(this.fontWeight)\n      .fontColor(this.fontColor)\n      .fontFamily(this.fontFamily)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\HealthTextComponent.ets", "project_name": "codelabs-master", "id": "098b4b0ae63b7186055018713b0b1b2d49fcc6515682cfc52fbb57bb9a4c55cc"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Component\nexport struct TitleBar {\n  build() {\n    Row() {\n      Text($r('app.string.achievement'))\n        .fontSize($r('app.float.default_24'))\n        .fontColor($r('app.color.white'))\n        .align(Alignment.Start)\n        .padding({left: Const.ACHIEVE_TITLE_BAR_LEFT,top: Const.ACHIEVE_TITLE_BAR_TOP})\n    }\n    .width(Const.FULL_WIDTH)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\TitleBarComponent.ets", "project_name": "codelabs-master", "id": "d161c1839a428832057a8f10cda02a11665a9b9a21b3a6b75a48662a74b8e19b"}
{"text": "@Component\nexport struct UserBaseInfo {\n  @Prop nickname: string = '';\n  @Prop signature: string = '';\n\n  build() {\n    Column() {\n      \n      Image($r('app.media.ic_user'))\n        .objectFit(ImageFit.Contain)\n        .height($r('app.float.default_66'))\n        .width($r('app.float.default_66'))\n        .margin({ top: $r('app.float.default_71') })\n\n      Column() {\n        Text('LV.7')\n          .fontSize($r('app.float.default_12'))\n          .fontWeight(FontWeight.Bolder)\n          .fontColor($r('app.color.leveColor'))\n      }\n      .width($r('app.float.default_44'))\n      .height($r('app.float.default_16'))\n      .margin({ top: $r('app.float.default_n8') })\n      .border({ radius: $r('app.float.default_5') })\n      .backgroundColor($r('app.color.leveBgColor'))\n      .justifyContent(FlexAlign.Center)\n\n      \n      Text(this.nickname)\n        .fontSize($r('app.float.default_20'))\n        .fontFamily($r('app.string.Helvetica'))\n        .margin({ bottom: $r('app.float.default_6') })\n        .fontWeight(FontWeight.Normal)\n        .fontColor($r('app.color.black'))\n\n      \n      Text(this.signature).fontSize($r('app.float.default_16')).fontWeight(FontWeight.Normal)\n        .fontFamily($r('app.string.PingFangSC_Regular'))\n        .fontColor($r('app.color.signatureColor'))\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\UserBaseInfo.ets", "project_name": "codelabs-master", "id": "b24b43265a7ce5d81455a1acbd2d6ce9ab718263974c6673d0b0dab5c20668f2"}
{"text": "import { CommonConstants as Const } from '../../common/constants/CommonConstants';\nimport { AchievementMap } from '../../model/TaskInitList';\n\nconst ANGLE_LARGE = 360;\n\n@CustomDialog\nexport struct AchievementDialog {\n  controller: CustomDialogController = new CustomDialogController({ builder: 0 });\n  @Consume achievementLevel: number;\n  @State private opacityValue: number = 0;\n  @State private angle: number = 0;\n  @State private scaleValue: number = 0;\n  @State achievementMapValue: Resource = $r('app.string.empty');\n\n  aboutToAppear() {\n    switch (this.achievementLevel) {\n      case 3:\n        this.achievementMapValue = AchievementMap.on_3;\n        break;\n      case 7:\n        this.achievementMapValue = AchievementMap.on_7;\n        break;\n      case 30:\n        this.achievementMapValue = AchievementMap.on_30;\n        break;\n      case 50:\n        this.achievementMapValue = AchievementMap.on_50;\n        break;\n      case 73:\n        this.achievementMapValue = AchievementMap.on_73;\n        break;\n      case 99:\n        this.achievementMapValue = AchievementMap.on_99;\n        break;\n      default:\n        break;\n    }\n  }\n\n  build() {\n    Column() {\n\n      Image(this.achievementMapValue)\n        .width(Const.THOUSANDTH_560)\n        .height(Const.THOUSANDTH_400)\n        .objectFit(ImageFit.Contain)\n\n      Text($r('app.string.task_achievement_level', this.achievementLevel))\n        .fontSize($r('app.float.default_24'))\n        .fontWeight(Const.FONT_WEIGHT_500)\n        .fontColor($r('app.color.white'))\n        .fontFamily($r('app.string.HarmonyHeiTi'))\n        .margin({ top: $r('app.float.default_12') })\n    }\n    .height(Const.THOUSANDTH_800)\n    .width(Const.THOUSANDTH_1000)\n    .justifyContent(FlexAlign.Center)\n    .gesture(TapGesture().onAction(() => {\n      this.controller.close();\n    }))\n    .scale({ x: this.scaleValue, y: this.scaleValue })\n    .rotate({ x: 0, y: 1, z: 0, angle: this.angle })\n    .opacity(this.opacityValue)\n    .onAppear(() => {\n      animateTo({\n        duration: Const.DURATION_800,\n        curve: Curve.EaseOut,\n        delay: Const.DURATION_100,\n        iterations: 1\n      }, () => {\n        this.opacityValue = 1;\n        this.scaleValue = 1;\n        this.angle = ANGLE_LARGE;\n      });\n    })\n  }\n}\n\n\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\dialog\\AchievementDialog.ets", "project_name": "codelabs-master", "id": "e3fae2ab60db30b0fda664787c59ff92f94495909601ef08529e22c86c2f1b21"}
{"text": "import { AchievementDialog } from './AchievementDialog';\nimport { TaskDetailDialog } from './TaskDetailDialog';\nimport { BroadCast, BroadCastType } from '../../common/utils/BroadCast';\nimport { TaskItem } from '../../model/TaskInitList';\nimport TaskInfo from '../../viewmodel/TaskInfo';\nimport Logger from '../../common/utils/Logger';\n\nexport class CustomDialogCallback {\n  confirmCallback: Function = () => {};\n  cancelCallback: Function = () => {};\n}\n\n@Component\nexport struct CustomDialogView {\n  @State isShow: boolean = false;\n  @Provide achievementLevel: number = 0;\n  @Consume broadCast: BroadCast;\n  @Provide currentTask: TaskInfo = TaskItem;\n  @Provide dialogCallBack: CustomDialogCallback = new CustomDialogCallback();\n\n  \n  achievementDialog: CustomDialogController = new CustomDialogController({\n    builder: AchievementDialog(),\n    autoCancel: true,\n    customStyle: true\n  });\n\n  \n  taskDialog: CustomDialogController = new CustomDialogController({\n    builder: TaskDetailDialog(),\n    autoCancel: true,\n    customStyle: true\n  });\n\n  aboutToAppear() {\n    Logger.debug('CustomDialogView', 'aboutToAppear');\n    \n    this.broadCast.on(BroadCastType.SHOW_ACHIEVEMENT_DIALOG, (achievementLevel: number) => {\n      Logger.debug('CustomDialogView', 'SHOW_ACHIEVEMENT_DIALOG');\n      this.achievementLevel = achievementLevel;\n      this.achievementDialog.open();\n    });\n\n    \n    this.broadCast.on(BroadCastType.SHOW_TASK_DETAIL_DIALOG,\n      (currentTask: TaskInfo, dialogCallBack: CustomDialogCallback) => {\n        Logger.debug('CustomDialogView', 'SHOW_TASK_DETAIL_DIALOG');\n        this.currentTask = currentTask || TaskItem;\n        this.dialogCallBack = dialogCallBack;\n        this.taskDialog.open();\n      });\n  }\n\n  aboutToDisappear() {\n    Logger.debug('CustomDialogView', 'aboutToDisappear');\n  }\n\n  build() {\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\dialog\\CustomDialogView.ets", "project_name": "codelabs-master", "id": "522aed6b9b0b026639712d74686bab36d52aed89ce98e3f043326ff60a178cf7"}
{"text": "import { CustomDialogCallback } from './CustomDialogView';\nimport TaskInfo from '../../viewmodel/TaskInfo';\nimport { TaskMapById } from '../../model/TaskInitList';\nimport { CommonConstants as Const } from '../../common/constants/CommonConstants';\nimport { GlobalContext } from '../../common/utils/GlobalContext';\n\n@Extend(Text) function textStyle () {\n  .fontColor($r('app.color.white'))\n  .fontFamily($r('app.string.HarmonyHeiTi'))\n}\n\n@Extend(Text) function taskTextStyle () {\n  .fontColor($r('app.color.white'))\n  .width('100%')\n}\n\n@CustomDialog\nexport struct TaskDetailDialog {\n  controller: CustomDialogController = new CustomDialogController({ builder: '' });\n  @Consume currentTask: TaskInfo;\n  @State showButton: boolean = true;\n  @Consume dialogCallBack: CustomDialogCallback;\n\n  build() {\n    Column() {\n      TaskBaseInfo({\n        taskName: TaskMapById[this.currentTask?.taskID - 1].taskName\n      });\n\n      TaskClock({\n        confirm: () => {\n          this.dialogCallBack.confirmCallback(this.currentTask);\n          this.controller.close();\n        },\n        cancel: () => {\n          this.controller.close();\n        },\n        showButton: this.showButton\n      })\n    }\n    .height($r('app.float.default_451'))\n    .width($r('app.float.default_316'))\n    .backgroundImage(TaskMapById[this.currentTask?.taskID - 1].dialogBg, ImageRepeat.NoRepeat)\n    .backgroundImageSize({\n      width: '100%',\n      height: '100%'\n    })\n    .justifyContent(FlexAlign.End)\n    .padding({\n      bottom: $r('app.float.default_12'),\n      left: $r('app.float.default_20')\n    })\n  }\n}\n\n@Component\nstruct TaskBaseInfo {\n  taskName: string | Resource = '';\n\n  build() {\n    Column({ space: Const.DEFAULT_8 }) {\n      Text(this.taskName)\n        .fontSize($r('app.float.default_22'))\n        .fontWeight(FontWeight.Bold)\n        .fontFamily($r('app.string.HarmonyHeiTi_Bold'))\n        .taskTextStyle()\n        .margin({left: $r('app.float.default_12')})\n    }\n    .position({ y: $r('app.float.default_267') })\n  }\n}\n\n@Component\nstruct TaskClock {\n  confirm: Function = () => {};\n  cancel: Function = () => {};\n  showButton: boolean = false;\n\n  build() {\n    Column({ space: Const.DEFAULT_12 }) {\n      Button() {\n        Text($r('app.string.clock_in'))\n          .height($r('app.float.default_42'))\n          .fontSize($r('app.float.default_20'))\n          .fontWeight(FontWeight.Normal)\n          .textStyle()\n      }\n      .width($r('app.float.default_220'))\n      .borderRadius($r('app.float.default_24'))\n      .backgroundColor('rgba(255,255,255,0.40)')\n      .onClick(() => {\n        GlobalContext.getContext().setObject('taskListChange', true);\n        this.confirm();\n      })\n      .visibility(!this.showButton ? Visibility.None : Visibility.Visible)\n\n      Text($r('app.string.got_it'))\n        .fontSize($r('app.float.default_14'))\n        .fontWeight(FontWeight.Regular)\n        .textStyle()\n        .onClick(() => {\n          this.cancel();\n        })\n    }\n  }\n}\n\n\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\dialog\\TaskDetailDialog.ets", "project_name": "codelabs-master", "id": "266d31cd9445617dc6741edc4fa7302fd6d468fbe64c0d5dcb32f598381fb91e"}
{"text": "import { TargetSettingDialog, RemindTimeDialog, FrequencyDialog } from './TaskSettingDialog';\nimport { BroadCast, BroadCastType } from '../../common/utils/BroadCast';\nimport Logger from '../../common/utils/Logger';\nimport { CommonConstants as Const } from '../../common/constants/CommonConstants';\n\nexport interface CustomDialogCallback {\n  confirmCallback: Function;\n  cancelCallback: Function;\n}\n\n@Component\nexport struct TaskDialogView {\n  @State isShow: boolean = false;\n  @Consume broadCast: BroadCast;\n\n  \n  targetSettingDialog: CustomDialogController = new CustomDialogController({\n    builder: TargetSettingDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: Const.ZERO, dy: Const.MINUS_20 }\n  });\n  \n  RemindTimeDialogController: CustomDialogController = new CustomDialogController({\n    builder: RemindTimeDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: Const.ZERO, dy: Const.MINUS_20 }\n  });\n  \n  FrequencyDialogController: CustomDialogController = new CustomDialogController({\n    builder: FrequencyDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: Const.ZERO, dy: Const.MINUS_20 }\n  });\n\n  aboutToAppear() {\n    Logger.debug('CustomDialogView', 'aboutToAppear');\n\n    \n    this.broadCast.on(BroadCastType.SHOW_TARGET_SETTING_DIALOG, () => {\n      this.targetSettingDialog.open();\n    })\n    \n    this.broadCast.on(BroadCastType.SHOW_REMIND_TIME_DIALOG, () => {\n      this.RemindTimeDialogController.open();\n    })\n    \n    this.broadCast.on(BroadCastType.SHOW_FREQUENCY_DIALOG, () => {\n      this.FrequencyDialogController.open();\n    })\n  }\n\n  aboutToDisappear() {\n    Logger.debug('CustomDialogView', 'aboutToDisappear');\n  }\n\n  build() {\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\dialog\\TaskDialogView.ets", "project_name": "codelabs-master", "id": "b62343bc36191c6e960326f7b6ee421bb8e65e1483abdbd825d0eb7d8bd8c40f"}
{"text": "import { CommonConstants as Const } from '../../common/constants/CommonConstants';\n\n@Styles function allSize () {\n  .width(Const.THOUSANDTH_1000)\n  .height(Const.THOUSANDTH_1000)\n}\n\n@Component\nexport default struct AddBtn {\n  clickAction: Function = () => {};\n\n  build() {\n    Button({ type: ButtonType.Circle, stateEffect: false }) {\n      Image($r('app.media.ic_home_add'))\n        .allSize()\n        .borderRadius(Const.BORDER_RADIUS_PERCENT_50)\n    }\n    .onClick(() => this.clickAction())\n    .zIndex(Const.HOME_BTN_Z)\n    .position({ x: Const.THOUSANDTH_830, y: Const.THOUSANDTH_880 })\n    .width($r('app.float.default_48'))\n    .height($r('app.float.default_48'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\home\\AddBtnComponent.ets", "project_name": "codelabs-master", "id": "1e6ad561ad90adfb1e1911fbc559fc78b42df1d640ef11e02293a7d2dfa2a509"}
{"text": "import { HomeStore } from '../../viewmodel/HomeViewModel';\nimport { WeekCalendar } from './WeekCalendarComponent';\nimport { CommonConstants as Const } from '../../common/constants/CommonConstants';\nimport HealthText from '../../view/HealthTextComponent';\n\n@Extend(Text) function titleTextStyle () {\n  .fontSize($r('app.float.default_16'))\n  .fontWeight(Const.FONT_WEIGHT_500)\n  .width(Const.THOUSANDTH_1000)\n  .fontFamily($r('app.string.HarmonyHeiTi_Medium'))\n  .fontColor($r(`app.element.color.titleColor`))\n}\n\n@Component\nexport default struct HomeTopView {\n  @Link homeStore: HomeStore;\n\n  build() {\n    Column() {\n      Text($r('app.string.target_progress'))\n        .titleTextStyle()\n        .opacity(Const.OPACITY_6)\n        .padding({ left: $r('app.float.default_24') })\n      Row() {\n        HealthText({\n          title: this.homeStore.getDonePercent(),\n          fontSize: $r('app.float.default_72'),\n          fontFamily: $r('app.string.HarmonyHeiTi_Bold'),\n          fontWeight: Const.FONT_WEIGHT_700\n        })\n        Text('%')\n          .titleTextStyle()\n          .fontSize($r('app.float.default_40'))\n          .margin({ top: $r('app.float.default_12'), left: $r('app.float.default_8') })\n      }\n      .width(Const.THOUSANDTH_1000)\n      .padding({ left: $r('app.float.default_24') })\n\n      WeekCalendar({ homeStore:  $homeStore })\n    }\n    .height(Const.THOUSANDTH_500)\n    .backgroundImagePosition({x: 0, y: 0})\n    .backgroundImage($r('app.media.ic_home_bg'))\n    .backgroundImageSize({ width: Const.THOUSANDTH_1000, height: Const.THOUSANDTH_900 })\n    .justifyContent(FlexAlign.End)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\home\\HomeTopComponent.ets", "project_name": "codelabs-master", "id": "03e499ba1009faa69c30de6ca3f4bc3b76c866daa116dff945e8b99bb23ec95e"}
{"text": "import { TaskMapById } from '../../model/TaskInitList';\nimport HealthText from '../../view/HealthTextComponent';\nimport { CommonConstants as Const } from '../../common/constants/CommonConstants';\nimport TaskInfo from '../../viewmodel/TaskInfo';\n\n@Styles function allSize () {\n  .width(Const.THOUSANDTH_1000)\n  .height(Const.THOUSANDTH_1000)\n}\n\n@Extend(Text) function labelTextStyle () {\n  .fontSize($r('app.float.default_16'))\n  .fontWeight(Const.FONT_WEIGHT_500)\n  .opacity(Const.OPACITY_6)\n  .fontFamily($r('app.string.HarmonyHeiTi'))\n}\n\n@Component\nexport struct TaskCard {\n  @Prop taskInfoStr: string = '';\n  clickAction: Function = (isClick: boolean) => {};\n  @State taskInfo: TaskInfo = new TaskInfo(-1, '', -1, '', false, '', '', '', false, '', false);\n\n  aboutToAppear() {\n    this.taskInfo = JSON.parse(this.taskInfoStr);\n  }\n\n  @Builder targetValueBuilder() {\n    if (this.taskInfo.isDone) {\n      HealthText({ title: '', titleResource: $r('app.string.task_done') })\n    } else {\n      Row() {\n        HealthText({\n          title: this.taskInfo.finValue || `--`,\n          fontSize: $r('app.float.default_24')\n        })\n        Text(` / ${this.taskInfo.targetValue} ${TaskMapById[this.taskInfo.taskID - 1].unit}`)\n          .labelTextStyle()\n          .fontWeight(Const.FONT_WEIGHT_400)\n      }\n    }\n  }\n\n  build() {\n    Row() {\n      Row({ space: Const.DEFAULT_6 }) {\n        Image(TaskMapById[this.taskInfo.taskID - 1].icon)\n          .width($r('app.float.default_36')).height($r('app.float.default_36'))\n          .objectFit(ImageFit.Contain)\n        HealthText({\n          title: '',\n          titleResource: TaskMapById[this.taskInfo.taskID - 1].taskName,\n          fontFamily: $r('app.string.HarmonyHeiTi')\n        })\n      }\n\n      this.targetValueBuilder();\n    }\n    .allSize()\n    .justifyContent(FlexAlign.SpaceBetween)\n    .borderRadius($r('app.float.default_24'))\n    .padding({ left: Const.THOUSANDTH_50, right: Const.THOUSANDTH_33 })\n    .backgroundColor($r('app.color.white'))\n    .onClick(() => this.clickAction(true))\n    .gesture(LongPressGesture().onAction(() => this.clickAction(false)))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\view\\home\\TaskCardComponent.ets", "project_name": "codelabs-master", "id": "f62e9741f2cdb782dc03970f389e8ba7a83dab71efbcfdfe29011a4aa83e4a69"}
{"text": "export default class AchievementInfo {\n  achievementLevel: number = 0;\n  showAchievement: boolean = false;\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\AchievementInfo.ets", "project_name": "codelabs-master", "id": "5a240b7c550e6f09f870fed4076c1ae56eda6885e86fb820e275b02e98c756b9"}
{"text": "export default class AchievementMapInfo {\n  off_3: Resource = $r('app.media.ic_badge_3_off');\n  on_3: Resource = $r('app.media.ic_badge_3_on');\n  off_7: Resource = $r('app.media.ic_badge_7_off');\n  on_7: Resource = $r('app.media.ic_badge_7_on');\n  off_30: Resource = $r('app.media.ic_badge_30_off');\n  on_30: Resource = $r('app.media.ic_badge_30_on');\n  off_50: Resource = $r('app.media.ic_badge_50_off');\n  on_50: Resource = $r('app.media.ic_badge_50_on');\n  off_73: Resource = $r('app.media.ic_badge_73_off');\n  on_73: Resource = $r('app.media.ic_badge_73_on');\n  off_99: Resource = $r('app.media.ic_badge_99_off');\n  on_99: Resource = $r('app.media.ic_badge_99_on');\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\AchievementMapInfo.ets", "project_name": "codelabs-master", "id": "68726ddaa478e66480be3a15a4961f017e19ac92c7f3608ad131369a0cc67a80"}
{"text": "export default class BroadCastCallBackInfo {\n   showAchievementDialog: Function = () => {};\n   showTaskDetailDialog: Function = () => {};\n   showTargetSettingDialog: Function = () => {};\n   showRemindTimeDialog: Function = () => {};\n   showFrequencyDialog: Function = () => {};\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\BroadCastCallBackInfo.ets", "project_name": "codelabs-master", "id": "c1f553240de47ea94cecf699b2d511bde8b6aa307f94aa5275a4803f97b351ec"}
{"text": "import { WeekDateModel } from '../model/WeekCalendarModel';\nimport Logger from '../common/utils/Logger';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport WeekCalendarMethodInfo from './WeekCalendarMethodInfo';\nimport { HomeStore } from './HomeViewModel';\n\nconst LAZY_DATA_PAGE: number = 2; \n\nexport interface ScrollPage {\n  next: boolean;\n  direction?: Axis;\n}\n\nexport interface ScrollTo {\n  xOffset: number | string;\n  yOffset: number | string;\n}\n\nfunction gotoPreviousWeek(isPageScroll: Boolean, homeStore: HomeStore, currentPage: number, scroller: Scroller) {\n  isPageScroll = true;\n  let date: Date = new Date(homeStore.showDate);\n  Logger.info('HomeIndex', 'gotoPreviousWeek: showDate_' + date.toISOString());\n\n  if ((currentPage + LAZY_DATA_PAGE) * Const.WEEK_DAY_NUM > homeStore.dateArr.length) {\n    \n    homeStore.getPreWeekData(date, () => {\n      homeStore.setSelectedShowDate(homeStore.showDate - Const.WEEK_DAY_TIME);\n      currentPage += 1;\n    });\n  } else {\n    scroller.scrollPage({ next: false } as ScrollPage);\n    Logger.info('HomeIndex', 'gotoPreviousWeek');\n    homeStore.setSelectedShowDate(homeStore.showDate - Const.WEEK_DAY_TIME);\n    currentPage += 1;\n  }\n}\n\nfunction goToNextWeek(currentPage: number, isPageScroll: Boolean, homeStore: HomeStore, scroller: Scroller) {\n  if (currentPage <= 0) {\n    Logger.info('HomeIndex', 'goToNextWeek: is the current week');\n    return;\n  }\n  isPageScroll = true;\n  Logger.info('HomeIndex', 'goToNextWeek: nextPage');\n  homeStore.setSelectedShowDate(homeStore.showDate + Const.WEEK_DAY_TIME);\n  currentPage -= 1;\n  scroller.scrollPage({ next: true } as ScrollPage);\n}\n\nfunction calenderItemClickAction(item: WeekDateModel, index: number, homeStore: HomeStore) {\n  Logger.info('HomeIndex', 'click the calendarItem: ' + JSON.stringify(item));\n  homeStore.setSelectedShowDate(item.date.getTime());\n  homeStore.selectedDay = index % Const.WEEK_DAY_NUM;\n}\n\nconst WeekCalendarMethods: WeekCalendarMethodInfo = new WeekCalendarMethodInfo();\nWeekCalendarMethods.gotoPreviousWeek = gotoPreviousWeek;\nWeekCalendarMethods.goToNextWeek = goToNextWeek;\nWeekCalendarMethods.calenderItemClickAction = calenderItemClickAction;\n\nexport default WeekCalendarMethods;", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\CalendarViewModel.ets", "project_name": "codelabs-master", "id": "2df6d5af74d82836fb5d3c0f0df34d4d4171691b83c945e35b24ba04646efbf1"}
{"text": "export default class CardInfo {\n  titleContent: string = '';\n  achievement: Resource = $r('app.string.empty');\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\CardInfo.ets", "project_name": "codelabs-master", "id": "e1e19ef50b87d01ed248b34b0f53fa1a190deb4ef03bd3bb10ee2fcbaa3504c8"}
{"text": "export default class ColumnInfo {\n  name: string;\n  type: string;\n  length?: number;\n  nullable?: boolean;\n  primary?: boolean;\n  autoincrement?: boolean;\n\n  constructor(name: string, type: string, length?: number, nullable?: boolean,\n              primary?: boolean, autoincrement?: boolean) {\n    this.name = name;\n    this.type = type;\n    this.primary = primary;\n    this.length = length;\n    this.nullable = nullable;\n    this.autoincrement = autoincrement;\n  }\n}\n\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\ColumnInfo.ets", "project_name": "codelabs-master", "id": "b53526d0573ec70d695610311b27453b8157dcbbc1ab66bfc4d2dd7d151ba788"}
{"text": "export default class CommonConstantsInfo {\n  dbName?: string = '';\n  tableName?: string = '';\n  columns?: Array<string> = [];\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\CommonConstantsInfo.ets", "project_name": "codelabs-master", "id": "c737efc5afb265e967b39cdec3789db2b7868f71a21c4ea362c61b7e097a555c"}
{"text": "export default class DayInfo {\n    date: string;\n    targetTaskNum: number;\n    finTaskNum: number;\n\n    constructor(date: string, targetTaskNum: number, finTaskNum: number) {\n        this.date = date;\n        this.targetTaskNum = targetTaskNum;\n        this.finTaskNum = finTaskNum;\n    }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\DayInfo.ets", "project_name": "codelabs-master", "id": "dc7de616b95c159c78f4ed9369982d8aa16ef584bb796637fca24eab33ea24b8"}
{"text": "export default class FormInfo {\n  \n  formId: string = '';\n\n  \n  formName: string = '';\n\n  \n  formDimension: number = 0;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\FormInfo.ets", "project_name": "codelabs-master", "id": "e873a426746476d1095e1c37f4445b3c2afad8642e538b577b1a0af2a7745c2a"}
{"text": "export default class GlobalInfo {\n    firstDate: string;\n    lastDate: string;\n    checkInDays: number;\n    achievements: string;\n\n    constructor(firstDate: string, lastDate: string, checkInDays: number, achievements: string) {\n        this.firstDate = firstDate;\n        this.lastDate = lastDate;\n        this.checkInDays = checkInDays;\n        this.achievements = achievements;\n    }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\GlobalInfo.ets", "project_name": "codelabs-master", "id": "e068d6dbc5a461d5d6ddc4954603b718d4f9f9b7d9728308a3512c0de6fd4184"}
{"text": "export default class PublishReminderInfo {\n  hour: number = 0;\n  minute: number = 0;\n  daysOfWeek: Array<number> = [];\n  title: string = '';\n  content: string = '';\n  notificationId: number = 0;\n\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\PublishReminderInfo.ets", "project_name": "codelabs-master", "id": "66292c9bdabdfd398fc8cbcf9974b352aa59ce36527f83d7e6c130c1e7864d26"}
{"text": "export default class ReminderInfo {\n  publishReminder: Function = () => {};\n  cancelReminder: Function = () => {};\n  hasNotificationId: Function = () => {};\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\ReminderInfo.ets", "project_name": "codelabs-master", "id": "c6fc242fa1dcc5fa6a784173fb225b1c89a0af32a96e00028e40833c8ad1e2a4"}
{"text": "import { oneWeekDictFunc } from '../common/utils/Utils';\n\n\nexport default class TaskInfo {\n    id: number;\n    date: string;\n    taskID: number;\n    targetValue: string;\n    isAlarm: boolean;\n    startTime: string;\n    endTime: string;\n    frequency: string;\n    isDone: boolean;\n    finValue: string;\n    isOpen: boolean;\n\n    constructor(id: number, date: string, taskID: number, targetValue: string, isAlarm: boolean, startTime: string,\n                endTime: string, frequency: string, isDone: boolean, finValue: string, isOpen = false) {\n        this.id = id;\n        this.date = date;\n        this.taskID = taskID;\n        this.targetValue = targetValue;\n        this.isAlarm = isAlarm;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.frequency = frequency;\n        this.isDone = isDone;\n        this.finValue = finValue;\n        this.isOpen = isOpen;\n    }\n}\n\nexport enum taskType {\n    'getup' = 1,\n    'drinkWater',\n    'eatApple',\n    'smile',\n    'brushTeeth',\n    'sleepEarly'\n}\n\nexport const oneWeek = oneWeekDictFunc();\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\TaskInfo.ets", "project_name": "codelabs-master", "id": "c157f07d99ba67ddffa6d88b8effc32525fb4d3ff559ff4b63e96d735b35ec51"}
{"text": "import { WeekDateModel } from '../model/WeekCalendarModel';\n\n\nexport default class WeekCalendarInfo {\n  arr: Array<WeekDateModel> = [];\n  strArr: Array<string> = [];\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\WeekCalendarInfo.ets", "project_name": "codelabs-master", "id": "b32f22e4387ad522e54b9d60cafdf10ba7548963eb3f1ced214f264e8db6a2d7"}
{"text": "export default class WeekCalendarMethodInfo {\n  gotoPreviousWeek: Function = () => {};\n  goToNextWeek: Function = () => {};\n  calenderItemClickAction: Function = () => {};\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Healthy_life\\entry\\src\\main\\ets\\viewmodel\\WeekCalendarMethodInfo.ets", "project_name": "codelabs-master", "id": "4ae2aa29e7fcdd34c57e8c6dffd2df329379b120c272719bb573fbe7ab408197"}
{"text": "import http from '@ohos.net.http';\nimport CommonConstant from '../constant/CommonConstants';\n\n\nexport default async function httpGet(url: string) {\n  if (!url) {\n    return undefined;\n  }\n  let request = http.createHttp();\n\n  let result = await request.request(url, {\n    method: http.RequestMethod.GET,\n    header: { 'Content-Type': 'application/json' },\n    readTimeout: CommonConstant.READ_TIMEOUT,\n    connectTimeout: CommonConstant.CONNECT_TIMEOUT\n  });\n  return result;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\HttpsRequest\\entry\\src\\main\\ets\\common\\utils\\HttpUtil.ets", "project_name": "codelabs-master", "id": "a537cd8b32f233a5155274f5abb45a66da21c832a25224f50d16bd691a315c0d"}
{"text": "import fs from '@ohos.file.fs';\nimport image from '@ohos.multimedia.image';\nimport Logger from './LoggerUtil';\nimport { CommonConstants } from '../common/constant/CommonConstants';\n\nconst TAG: string = 'imageEdit_Decode';\n\n\nasync function getResourceFd(component: Object) {\n  const context = getContext(component);\n  const resourceMgr = context.resourceManager;\n  let imageBuffer = await resourceMgr.getMediaContent($r(\"app.media.ic_low\"))\n  let filePath = context.cacheDir + '/' + CommonConstants.RAW_FILE_NAME;\n  let file = fs.openSync(filePath, fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n  fs.writeSync(file.fd, imageBuffer.buffer);\n  return file.fd;\n}\n\n\nexport default async function getPixelMap(component: Object) {\n  const fd = await getResourceFd(component);\n  const imageSourceApi = image.createImageSource(fd);\n  if (!imageSourceApi) {\n    Logger.error(TAG, 'imageSourceAPI created failed!');\n    return;\n  }\n  const pixelMap = await imageSourceApi.createPixelMap({\n    editable: true\n  });\n  return pixelMap;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ImageEdit\\entry\\src\\main\\ets\\utils\\DecodeUtil.ets", "project_name": "codelabs-master", "id": "d5112771a49fea20bb098f64f372a4c0f587ad480259b905d49e0f972af950f9"}
{"text": "import photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport fs from '@ohos.file.fs';\nimport image from '@ohos.multimedia.image';\nimport Logger from './LoggerUtil';\nimport { CommonConstants } from '../common/constant/CommonConstants';\nimport AdjustContentView from '../view/AdjustContentView';\n\nconst TAG: string = 'imageEdit_Encode';\nconst context = getContext(this);\nlet phAccessHelper = photoAccessHelper.getPhotoAccessHelper(context);\n\nexport async function encode(component: Object, pixelMap: PixelMap) {\n  const newPixelMap = pixelMap;\n  \n  const imagePackerApi = image.createImagePacker();\n  const packOptions: image.PackingOption = {\n    format: CommonConstants.ENCODE_FORMAT,\n    quality: CommonConstants.ENCODE_QUALITY\n  }\n  const imageData = await imagePackerApi.packing(newPixelMap, packOptions);\n  Logger.info(TAG, `imageData's length is ${imageData.byteLength}`);\n  \n  const context = getContext(component);\n\n  \n  console.info('createAssetDemo');\n  let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE;\n  let extension: string = 'jpg';\n  phAccessHelper.createAsset(photoType, extension, (err, uri) => {\n    if (uri != undefined) {\n      console.info('createAsset uri' + uri);\n      console.info('createAsset successfully');\n      let file = fs.openSync(uri, fs.OpenMode.READ_WRITE);\n      fs.writeSync(file.fd, imageData);\n      fs.close(file.fd);\n    } else {\n      console.error('createAsset failed, message = ', err);\n    }\n  });\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\ImageEdit\\entry\\src\\main\\ets\\utils\\EncodeUtil.ets", "project_name": "codelabs-master", "id": "9bf67ed08699c4b285c15659bda3cc332c34279afc03cd56c0173ed7194e9136"}
{"text": "import { CommonConstants } from '../common/constant/CommonConstants';\nimport Logger from './LoggerUtil';\n\nconst TAG = 'Opacity';\n\n\nexport async function adjustOpacity(pixelMap: PixelMap, value: number) {\n  if (!pixelMap) {\n    return;\n  }\n  const newPixelMap = pixelMap;\n  newPixelMap.opacity(value / CommonConstants.SLIDER_MAX, (err: Error) => {\n    if (err) {\n      Logger.error(TAG, `Failed adjust opacity with ${err}`);\n    }\n  })\n  return newPixelMap;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ImageEdit\\entry\\src\\main\\ets\\utils\\OpacityUtil.ets", "project_name": "codelabs-master", "id": "4c092134ea4f578b7f34debc1a89f7ebbc0502c16885d883fba77a86477776fd"}
{"text": "export class MessageItem {\n  constructor(buf: ArrayBuffer, last: number, cur: number) {\n    this.buf = buf;\n    this.last = last;\n    this.cur = cur;\n  }\n\n  \n  buf: ArrayBuffer;\n\n  \n  last: number;\n\n  \n  cur: number;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ImageEdit\\entry\\src\\main\\ets\\viewModel\\MessageItem.ets", "project_name": "codelabs-master", "id": "569c0de0adee52df000faf417bdf2f97c788cdcade0e5a67f93fb73adbe28300"}
{"text": "import router from '@ohos.router';\nimport { IndexListItem } from '../viewmodel/IndexListItem';\nimport {\n  TITLE_FONT_WEIGHT,\n  MARGIN_FONT_SIZE_SPACE,\n  EIGHT_POINT_TWO_PERCENT,\n  COMMON_FONT_WEIGHT,\n  INDEX_COMPONENT_WITH_PERCENT,\n  SECOND_PAGE,\n  ALL_PERCENT\n} from '../common/Constants/CommonConstants';\nimport { getIndexList } from '../viewmodel/IndexData';\n\n\n@Entry\n@Component\nstruct LayoutAlignIndex {\n  private indexList: IndexListItem[] = getIndexList();\n\n  build() {\n    Column() {\n      Text($r('app.string.index_title'))\n        .width(ALL_PERCENT)\n        .fontSize(MARGIN_FONT_SIZE_SPACE.SEVENTH_MARGIN)\n        .fontWeight(TITLE_FONT_WEIGHT)\n        .textAlign(TextAlign.Center)\n        .fontColor(Color.Black)\n        .margin({ top: EIGHT_POINT_TWO_PERCENT })\n      List() {\n        ForEach(this.indexList, (item: IndexListItem) => {\n          ListItem() {\n            ListItemComp({ item: item })\n              .margin({ top: MARGIN_FONT_SIZE_SPACE.SECOND_MARGIN })\n          }\n        }, (item: IndexListItem) => JSON.stringify(item))\n      }\n      .height(ALL_PERCENT)\n      .width(ALL_PERCENT)\n      .listDirection(Axis.Vertical)\n      .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n    }\n    .backgroundColor($r('app.color.index_backgroundColor'))\n    .justifyContent(FlexAlign.Start)\n    .alignItems(HorizontalAlign.Start)\n    .width(ALL_PERCENT)\n    .height(ALL_PERCENT)\n  }\n}\n\n@Component\nstruct ListItemComp {\n  private item: IndexListItem = new IndexListItem();\n\n  build() {\n    Row() {\n      Image(this.item.icon)\n        .height(MARGIN_FONT_SIZE_SPACE.SEVENTH_MARGIN)\n        .width(MARGIN_FONT_SIZE_SPACE.SEVENTH_MARGIN)\n        .margin({\n          left: MARGIN_FONT_SIZE_SPACE.SEVENTH_MARGIN,\n          top: MARGIN_FONT_SIZE_SPACE.SIXTH_MARGIN,\n          bottom: MARGIN_FONT_SIZE_SPACE.SIXTH_MARGIN\n        })\n      Text(this.item.name)\n        .fontSize(MARGIN_FONT_SIZE_SPACE.FIFTH_MARGIN)\n        .fontColor(Color.Black)\n        .fontWeight(COMMON_FONT_WEIGHT)\n        .textAlign(TextAlign.Center)\n        .margin({ left: MARGIN_FONT_SIZE_SPACE.FIFTH_MARGIN })\n    }\n    .width(INDEX_COMPONENT_WITH_PERCENT)\n    .height(EIGHT_POINT_TWO_PERCENT)\n    .borderRadius(MARGIN_FONT_SIZE_SPACE.SEVENTH_MARGIN)\n    .margin({ left: MARGIN_FONT_SIZE_SPACE.SECOND_MARGIN, right: MARGIN_FONT_SIZE_SPACE.SECOND_MARGIN })\n    .backgroundColor($r(\"app.color.white\"))\n    .onClick(() => {\n      router.pushUrl({\n        url: SECOND_PAGE,\n        params: {\n          containerType: this.item.containerType,\n          componentName: this.item.name,\n          moduleList: this.item.moduleList\n        }\n      });\n    })\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\pages\\LayoutAlignIndex.ets", "project_name": "codelabs-master", "id": "a8c4a0a078bdf0562657d96ef4d2a83c1a6a9346f38da7842221f0a0ccf1bf95"}
{"text": "import { CommonItem } from './CommonComponent';\nimport {\n  MARGIN_FONT_SIZE_SPACE,\n  LIST,\n  SHOW_LIST_HEIGHT_PERCENT,\n  ALL_PERCENT\n} from '../common/Constants/CommonConstants';\nimport { ColumnAxisAlignRadioList } from './ColumnAxisAlignRadioList';\nimport { ColumnMainAlignRadioList } from './ColumnMainAlignRadioList';\n\n\n@Component\nexport struct ColumnShowList {\n  @Consume currentColumnJustifyContent: FlexAlign;\n  @Consume currentColumnAlignItems: HorizontalAlign;\n\n  build() {\n    Column() {\n      \n      Column() {\n        ForEach(LIST, (item: number) => {\n          CommonItem({ item: item })\n        }, (item: number) => JSON.stringify(item))\n      }\n      .alignItems(this.currentColumnAlignItems)\n      .justifyContent(this.currentColumnJustifyContent)\n      .padding(MARGIN_FONT_SIZE_SPACE.COMMON_PADDING)\n      .width(ALL_PERCENT)\n      .height(SHOW_LIST_HEIGHT_PERCENT.COLUMN_ROW_SHOW_LIST_HEIGHT)\n      .backgroundColor($r(\"app.color.show_list_backgroundColor\"))\n      .margin({ top: MARGIN_FONT_SIZE_SPACE.FIRST_MARGIN })\n\n      \n      ColumnMainAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n      \n      ColumnAxisAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n    }\n    .layoutWeight(1)\n    .height(ALL_PERCENT)\n    .width(ALL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\view\\ColumnShowList.ets", "project_name": "codelabs-master", "id": "0aa0ae688da2886fc0385d7fed9d1bf0585750833941f43e43baffd00d96f943"}
{"text": "import { MARGIN_FONT_SIZE_SPACE } from '../common/Constants/CommonConstants';\n\n\n@Component\nexport struct CommonItem {\n  private item: number = 0;\n\n  build() {\n    Text(this.item.toString())\n      .fontSize(MARGIN_FONT_SIZE_SPACE.FIFTH_MARGIN)\n      .width(MARGIN_FONT_SIZE_SPACE.NINTH_MARGIN)\n      .height(MARGIN_FONT_SIZE_SPACE.NINTH_MARGIN)\n      .fontColor($r(\"app.color.show_list_fontColor\"))\n      .textAlign(TextAlign.Center)\n      .align(Alignment.Center)\n      .backgroundColor($r(\"app.color.white\"))\n      .borderRadius(MARGIN_FONT_SIZE_SPACE.COMMON_PADDING)\n      .margin(MARGIN_FONT_SIZE_SPACE.COMMON_PADDING)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\view\\CommonComponent.ets", "project_name": "codelabs-master", "id": "671e9aa751a1800964f5be60b8b14ab148d671cbcab4f070457f0d3597f70c0f"}
{"text": "import { CommonItem } from './CommonComponent';\nimport { MARGIN_FONT_SIZE_SPACE, SHOW_LIST_HEIGHT_PERCENT, ALL_PERCENT } from '../common/Constants/CommonConstants';\nimport { FlexAxisAlignRadioList } from './FlexAxisAlignRadioList';\nimport { FlexMainAlignRadioList } from './FlexMainAlignRadioList';\nimport { FlexMainDirectionRadioList } from './FlexMainDirectionRadioList';\n\n\n@Component\nexport struct FlexShowList {\n  @Consume list: number[];\n  @Consume currentFlexDirection: FlexDirection;\n  @Consume currentFlexJustifyContent: FlexAlign;\n  @Consume currentFlexAlignItems: ItemAlign;\n  @Consume currentFlexWrap: FlexWrap;\n  @Consume currentFlexAlignContent: FlexAlign;\n\n  build() {\n    Column() {\n      \n      Flex({\n        alignItems: this.currentFlexAlignItems,\n        direction: this.currentFlexDirection,\n        justifyContent: this.currentFlexJustifyContent,\n        wrap: this.currentFlexWrap,\n        alignContent: this.currentFlexAlignContent\n      }) {\n        ForEach(this.list, (item: number) => {\n          CommonItem({ item: item })\n        }, (item: number) => JSON.stringify(item))\n      }\n      .padding(MARGIN_FONT_SIZE_SPACE.COMMON_PADDING)\n      .width(ALL_PERCENT)\n      .height(SHOW_LIST_HEIGHT_PERCENT.FLEX_SHOW_LIST_HEIGHT)\n      .backgroundColor($r(\"app.color.show_list_backgroundColor\"))\n      .margin({ top: MARGIN_FONT_SIZE_SPACE.FIRST_MARGIN })\n\n      \n      FlexMainDirectionRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n      \n      FlexMainAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n      \n      FlexAxisAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n    }\n    .layoutWeight(1)\n    .height(ALL_PERCENT)\n    .width(ALL_PERCENT)\n\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\view\\FlexShowList.ets", "project_name": "codelabs-master", "id": "4f2948e109d56070ae7751cfdc7ef2e64957be2715de5824be7bbbcedfd545dc"}
{"text": "import { CommonItem } from './CommonComponent';\nimport {\n  MARGIN_FONT_SIZE_SPACE,\n  LIST,\n  SHOW_LIST_HEIGHT_PERCENT,\n  ALL_PERCENT\n} from '../common/Constants/CommonConstants';\nimport { RowAxisAlignRadioList } from './RowAxisAlignRadioList';\nimport { RowMainAlignRadioList } from './RowMainAlignRadioList';\n\n\n@Component\nexport struct RowShowList {\n  @Consume currentRowJustifyContent: FlexAlign;\n  @Consume currentRowAlignItems: VerticalAlign;\n\n  build() {\n    Column() {\n      \n      Row() {\n        ForEach(LIST, (item: number) => {\n          CommonItem({ item: item })\n        }, (item: number) => JSON.stringify(item))\n      }\n      .alignItems(this.currentRowAlignItems)\n      .justifyContent(this.currentRowJustifyContent)\n      .padding(MARGIN_FONT_SIZE_SPACE.COMMON_PADDING)\n      .width(ALL_PERCENT)\n      .height(SHOW_LIST_HEIGHT_PERCENT.COLUMN_ROW_SHOW_LIST_HEIGHT)\n      .backgroundColor($r(\"app.color.show_list_backgroundColor\"))\n      .margin({ top: MARGIN_FONT_SIZE_SPACE.FIRST_MARGIN })\n\n      \n      RowMainAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n      \n      RowAxisAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n    }\n    .layoutWeight(1)\n    .height(ALL_PERCENT)\n    .width(ALL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\view\\RowShowList.ets", "project_name": "codelabs-master", "id": "be17bce08e17b536372e2886762ac21ce36f32bcb21cdbfaadfa1c1dc55a3b4f"}
{"text": "import { MARGIN_FONT_SIZE_SPACE, SHOW_LIST_HEIGHT_PERCENT,ALL_PERCENT } from '../common/Constants/CommonConstants';\nimport { StackAlignRadioList } from './StackAlignRadioList';\n\n\n@Component\nexport struct StackComponent {\n  @Consume currentStackAlignContent: Alignment;\n  @Consume message: string;\n  @State textAl: TextAlign = TextAlign.Center;\n\n  build() {\n    Column() {\n      Stack({ alignContent: this.currentStackAlignContent }) {\n        Text('')\n          .width(ALL_PERCENT)\n          .height(ALL_PERCENT)\n          .fontSize(MARGIN_FONT_SIZE_SPACE.FOURTH_MARGIN)\n          .backgroundColor($r('app.color.show_list_backgroundColor'))\n        Text(this.message)\n          .fontSize(MARGIN_FONT_SIZE_SPACE.FOURTH_MARGIN)\n          .fontColor($r('app.color.white'))\n          .width(SHOW_LIST_HEIGHT_PERCENT.STACK_SHOW_SMALL_HEIGHT)\n          .height(SHOW_LIST_HEIGHT_PERCENT.STACK_SHOW_SMALL_HEIGHT)\n          .textAlign(this.textAl)\n          .backgroundColor($r(\"app.color.show_list_fontColor\"))\n      }\n      .margin({ top: MARGIN_FONT_SIZE_SPACE.FIRST_MARGIN })\n      .width(ALL_PERCENT)\n      .height(SHOW_LIST_HEIGHT_PERCENT.STACK_SHOW_LIST_HEIGHT)\n      \n      StackAlignRadioList()\n        .margin({ top: MARGIN_FONT_SIZE_SPACE.EIGHTH_MARGIN })\n    }\n    .layoutWeight(1)\n    .height(ALL_PERCENT)\n    .width(ALL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\view\\StackComponent.ets", "project_name": "codelabs-master", "id": "ab16297f2909006cfe70323070aa78511f0b157df2fe4ab16ca3a6a638d47ae6"}
{"text": "import { ATTRIBUTE, GROUP } from '../common/constants/CommonConstants';\n\n\nexport class ContainerModuleItem {\n   groupName: string = GROUP.MAIN_ALIGN;\n   moduleName: Resource = $r(\"app.string.main_align\");\n   attributeList: string[] = [ATTRIBUTE.START, ATTRIBUTE.CENTER, ATTRIBUTE.END];\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\viewmodel\\ContainerModuleItem.ets", "project_name": "codelabs-master", "id": "d8300fa8cee5ed6e562741705d38903bfe6d3c94803c188bd1197335030f5e35"}
{"text": "import { CONTAINER, CONTAINER_TYPE } from '../common/Constants/CommonConstants';\nimport { FLEX_MODULE, COLUMN_MODULE, ROW_MODULE, STACK_MODULE } from '../viewmodel/AttributeModuleData';\nimport { IndexListItem } from './IndexListItem'\n\n\nexport function getIndexList(): Array<IndexListItem> {\n  let indexModuleArray: Array<IndexListItem> = []\n  INDEX_LIST.forEach((item: IndexListItem) => {\n    indexModuleArray.push(item);\n  })\n  return indexModuleArray;\n}\n\nexport const INDEX_LIST: IndexListItem[] = [\n  {\n    name: CONTAINER.FLEX,\n    icon: $r('app.media.ic_flex'),\n    containerType: CONTAINER_TYPE.FLEX,\n    moduleList: FLEX_MODULE\n  },\n  {\n    name: CONTAINER.COLUMN,\n    icon: $r('app.media.ic_column'),\n    containerType: CONTAINER_TYPE.COLUMN,\n    moduleList: COLUMN_MODULE\n  },\n  {\n    name: CONTAINER.ROW,\n    icon: $r('app.media.ic_row'),\n    containerType: CONTAINER_TYPE.ROW,\n    moduleList: ROW_MODULE\n  },\n  {\n    name: CONTAINER.STACK,\n    icon: $r('app.media.ic_stack'),\n    containerType: CONTAINER_TYPE.STACK,\n    moduleList: STACK_MODULE\n  },\n];", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\viewmodel\\IndexData.ets", "project_name": "codelabs-master", "id": "205fde46880421fcbd1cc86477b93b39aec1ac0a62dd3bca7afc3a6ad878145c"}
{"text": "import { FLEX_MODULE } from './AttributeModuleData';\nimport { CONTAINER, CONTAINER_TYPE } from '../common/constants/CommonConstants';\nimport { ContainerModuleItem } from './ContainerModuleItem'\n\n\nexport class IndexListItem {\n  name: string = CONTAINER.FLEX;\n  icon: Resource = $r('app.media.ic_flex');\n  containerType: number = CONTAINER_TYPE.FLEX;\n  moduleList: ContainerModuleItem[] = FLEX_MODULE;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LayoutAlign\\entry\\src\\main\\ets\\viewmodel\\IndexListItem.ets", "project_name": "codelabs-master", "id": "10adb72d5a1911dfdf5dc3b444ec685f2c75ac557fd249621977915c34e2c29c"}
{"text": "import TabBar from '../view/TabBarsComponent';\nimport { LAYOUT_WIDTH_OR_HEIGHT, STORE } from '../common/CommonConstants';\n\n@Entry\n@Component\nstruct ListIndex {\n  build() {\n    Row() {\n      Navigation() {\n        Column() {\n          TabBar()\n        }\n        .width(LAYOUT_WIDTH_OR_HEIGHT)\n        .justifyContent(FlexAlign.Center)\n      }\n      .size({ width: LAYOUT_WIDTH_OR_HEIGHT, height: LAYOUT_WIDTH_OR_HEIGHT })\n      .title(STORE)\n      .titleMode(NavigationTitleMode.Mini)\n    }\n    .height(LAYOUT_WIDTH_OR_HEIGHT)\n    .backgroundColor($r('app.color.primaryBgColor'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List\\entry\\src\\main\\ets\\pages\\ListIndex.ets", "project_name": "codelabs-master", "id": "4480a097534b7a966dab3329cd4bdd2bad0f06d51749c240c1d732e341f9dcaa"}
{"text": "import * as commonConst from '../common/CommonConstants';\n\n@Component\nexport default struct PutDownRefresh {\n  @Link refreshText: Resource;\n\n  build() {\n    Row() {\n      Image($r('app.media.refreshing'))\n        .width(commonConst.ICON_WIDTH)\n        .height(commonConst.ICON_HEIGHT)\n      Text(this.refreshText).fontSize(commonConst.NORMAL_FONT_SIZE)\n    }\n    .justifyContent(FlexAlign.Center)\n    .width(commonConst.GOODS_LIST_WIDTH)\n    .height(commonConst.GOODS_LIST_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List\\entry\\src\\main\\ets\\view\\PutDownRefreshLayout.ets", "project_name": "codelabs-master", "id": "d63a6897dc03436614b828f4cbee07bd1ccc34990c08a31456e83cee0e40bf99"}
{"text": "import { initTabBarData } from '../viewmodel/InitialData';\nimport {\n  LAYOUT_WIDTH_OR_HEIGHT,\n  NORMAL_FONT_SIZE,\n  BIGGER_FONT_SIZE,\n  MAX_FONT_SIZE,\n  MAX_OFFSET_Y,\n  REFRESH_TIME\n} from '../common/CommonConstants';\nimport GoodsList from './GoodsListComponent';\nimport PutDownRefresh from './PutDownRefreshLayout';\n\n@Component\nexport default struct TabBar {\n  private currentOffsetY: number = 0;\n  private timer: number = 0;\n  @State tabsIndex: number = 0;\n  @State refreshStatus: boolean = false;\n  @State refreshText: Resource = $r('app.string.refresh_text');\n\n  @Builder\n  firstTabBar() {\n    Column() {\n      Text($r('app.string.selected'))\n        .fontSize(this.tabsIndex === 0 ? BIGGER_FONT_SIZE : NORMAL_FONT_SIZE)\n        .fontColor(this.tabsIndex === 0 ? Color.Black : $r('app.color.gray'))\n    }\n    .width(LAYOUT_WIDTH_OR_HEIGHT)\n    .height(LAYOUT_WIDTH_OR_HEIGHT)\n    .justifyContent(FlexAlign.Center)\n  }\n\n  @Builder\n  otherTabBar(content: Resource, index: number) {\n    Column() {\n      Text(content)\n        .fontSize(this.tabsIndex === index + 1 ? BIGGER_FONT_SIZE : NORMAL_FONT_SIZE)\n        .fontColor(this.tabsIndex === index + 1 ? Color.Black : $r('app.color.gray'))\n    }\n    .width(LAYOUT_WIDTH_OR_HEIGHT)\n    .height(LAYOUT_WIDTH_OR_HEIGHT)\n    .justifyContent(FlexAlign.Center)\n  }\n\n  putDownRefresh(event?: TouchEvent): void {\n    if (event === undefined) {\n      return;\n    }\n    switch (event.type) {\n      case TouchType.Down:\n        this.currentOffsetY = event.touches[0].y;\n        break;\n      case TouchType.Move:\n        this.refreshStatus = event.touches[0].y - this.currentOffsetY > MAX_OFFSET_Y;\n        break;\n      case TouchType.Cancel:\n        break;\n      case TouchType.Up:\n\n      \n        this.timer = setTimeout(() => {\n          this.refreshStatus = false;\n        }, REFRESH_TIME);\n        break;\n    }\n  }\n\n  aboutToDisappear() {\n    clearTimeout(this.timer);\n  }\n\n  build() {\n    Tabs() {\n      TabContent() {\n        Scroll() {\n          Column() {\n            if (this.refreshStatus) {\n              PutDownRefresh({ refreshText: $refreshText })\n            }\n            GoodsList()\n            Text($r('app.string.to_bottom')).fontSize(NORMAL_FONT_SIZE).fontColor($r('app.color.gray'))\n          }\n          .width(LAYOUT_WIDTH_OR_HEIGHT)\n        }\n        .scrollBar(BarState.Off)\n        .edgeEffect(EdgeEffect.Spring)\n        .width(LAYOUT_WIDTH_OR_HEIGHT)\n        .height(LAYOUT_WIDTH_OR_HEIGHT)\n        .onTouch((event?: TouchEvent) => {\n          this.putDownRefresh(event);\n        })\n      }\n      .tabBar(this.firstTabBar)\n\n      ForEach(initTabBarData, (item: Resource, index?: number) => {\n        TabContent() {\n          Column() {\n            Text(item).fontSize(MAX_FONT_SIZE)\n          }\n          .justifyContent(FlexAlign.Center)\n          .width(LAYOUT_WIDTH_OR_HEIGHT)\n          .height(LAYOUT_WIDTH_OR_HEIGHT)\n        }\n        .tabBar(this.otherTabBar(item, index !== undefined ? index : 0))\n      })\n    }\n    .onChange((index: number) => {\n      this.tabsIndex = index;\n    })\n    .vertical(false)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List\\entry\\src\\main\\ets\\view\\TabBarsComponent.ets", "project_name": "codelabs-master", "id": "bb4f29fbd97f2a9f0e8437f4b714c0edeacdba43d8d2c8a5f056bf10b0b2b9ac"}
{"text": "export const initTabBarData = [\n$r('app.string.mobile_phone'),\n$r('app.string.clothes'),\n$r('app.string.wear'),\n$r('app.string.home_furnishing')\n]\n\nexport class GoodsListItemType {\n  goodsImg: Resource;\n  goodsName: Resource;\n  advertisingLanguage: Resource;\n  evaluate: Resource;\n  price: Resource;\n\n  constructor(goodsImg: Resource, goodsName: Resource, price: Resource) {\n    this.goodsImg = goodsImg;\n    this.goodsName = goodsName;\n    this.advertisingLanguage = $r('app.string.advertising_language');\n    this.evaluate = $r('app.string.evaluate');\n    this.price = price;\n  }\n}\n\nexport const goodsInitialList: GoodsListItemType[] = [\n  new GoodsListItemType($r('app.media.goodsImg'), $r('app.string.goodsName'), $r('app.string.price_199')),\n  new GoodsListItemType($r('app.media.goodsImg_2'), $r('app.string.another_goodsName'), $r('app.string.price_199')),\n  new GoodsListItemType($r('app.media.goodsImg_3'), $r('app.string.goodsName'), $r('app.string.price_199')),\n  new GoodsListItemType($r('app.media.goodsImg_4'), $r('app.string.another_goodsName'), $r('app.string.price_199'))\n]\n", "path": "codelabs-master\\HarmonyOS_NEXT\\List\\entry\\src\\main\\ets\\viewmodel\\InitialData.ets", "project_name": "codelabs-master", "id": "e0e19a1b3502e81441af9d18a9a20af35773943353c0814169d714e3c2e097bf"}
{"text": "export class BroadCast {\n  private callBackArray = [];\n\n  public on(event: string, callback: Function) {\n    (this.callBackArray[event] || (this.callBackArray[event] = [])).push(callback);\n  }\n\n  public off() {\n    this.callBackArray = [];\n  }\n\n  public emit(event: string) {\n    let _self = this;\n    if (!this.callBackArray[event]) {\n      return;\n    }\n    let cbs: Function[] = this.callBackArray[event];\n    if (cbs) {\n      let len = cbs.length;\n      for (let i = 0; i < len; i++) {\n        try {\n          cbs[i](_self);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }\n  }\n}\n\nexport enum BroadCastType {\n  SHOW_TARGET_SETTING_DIALOG = 'showTargetSettingDialog',\n  SHOW_REMIND_TIME_DIALOG = 'showRemindTimeDialog',\n  SHOW_FREQUENCY_DIALOG = 'showFrequencyDialog'\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\common\\utils\\BroadCast.ets", "project_name": "codelabs-master", "id": "ccb5f3166a8ee89333de1534666fec92585f7604059a4d7c08110afb365896ff"}
{"text": "import { BroadCast } from '../common/utils/BroadCast';\n\nconst APP_KEY_GROUP_DATA_SOURCE_MANAGER = 'app_key_group_data_source_manager'\n\nexport class EventSourceManager {\n  private broadCast: BroadCast;\n\n  constructor() {\n    this.broadCast = new BroadCast();\n  }\n\n  public static getInstance(): EventSourceManager {\n    let eventSourceManager: EventSourceManager | undefined = AppStorage.Get(APP_KEY_GROUP_DATA_SOURCE_MANAGER);\n    if (eventSourceManager === undefined) {\n      eventSourceManager = new EventSourceManager();\n      AppStorage.SetOrCreate(APP_KEY_GROUP_DATA_SOURCE_MANAGER, eventSourceManager);\n    }\n    return eventSourceManager;\n  }\n\n  public getBroadCast(): BroadCast {\n    return this.broadCast;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\model\\EventSourceManager.ets", "project_name": "codelabs-master", "id": "2359564e103cb5ee2dcbda0ac055a8439448e8787e42bc105d419c247174ca44"}
{"text": "export enum taskType {\n    'getup' = 1,\n    'drinkWater',\n    'eatApple',\n    'smile',\n    'brushTeeth',\n    'sleepEarly'\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\model\\TaskInfo.ets", "project_name": "codelabs-master", "id": "9bafe65065157ad78e103becbab40c79fe66f9b1ce02e2b25cd2f36266b8dac9"}
{"text": " \n\nimport { TaskListItem, TaskInitList } from '../model/TaskInitList';\nimport TaskList from '../view/TaskList';\nimport { THOUSANDTH_1000, ADD_TASK_TITLE } from '../common/constants/CommonConstant';\n\n@Entry\n@Component\nstruct Index {\n  @Provide taskList: TaskListItem[] = TaskInitList;\n\n  build() {\n    Row() {\n      Navigation() {\n        Column() {\n          TaskList()\n        }\n        .width(THOUSANDTH_1000)\n        .justifyContent(FlexAlign.Center)\n      }\n      .size({ width: THOUSANDTH_1000, height: THOUSANDTH_1000 })\n      .title(ADD_TASK_TITLE)\n      .titleMode(NavigationTitleMode.Mini)\n    }\n    .backgroundColor($r('app.color.primaryBgColor'))\n    .height(THOUSANDTH_1000)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\pages\\ListIndexPage.ets", "project_name": "codelabs-master", "id": "f3d9bc3b5083704400fa9c702e8e66b8aa33f61c688b6b15b1e3e57bbed693ed"}
{"text": "import TaskDetail from '../view/TaskDetail';\nimport { THOUSANDTH_1000, EDIT_TASK_TITLE } from '../common/constants/CommonConstant';\n\n@Entry\n@Component\nstruct TaskEdit {\n  build() {\n    Row() {\n      Navigation() {\n        Column() {\n          TaskDetail()\n        }\n        .width(THOUSANDTH_1000)\n        .height(THOUSANDTH_1000)\n      }\n      .size({ width: THOUSANDTH_1000, height: THOUSANDTH_1000 })\n      .title(EDIT_TASK_TITLE)\n      .titleMode(NavigationTitleMode.Mini)\n    }\n    .height(THOUSANDTH_1000)\n    .backgroundColor($r('app.color.primaryBgColor'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\pages\\TaskEditPage.ets", "project_name": "codelabs-master", "id": "2a46870770f0fcff34b7239eab9ef32908a796ee3ab74a2a536c1bcbbf641530"}
{"text": "import { TargetSettingDialog, RemindTimeDialog, FrequencyDialog } from './TaskSettingDialog';\nimport { BroadCast, BroadCastType } from '../common/utils/BroadCast';\nimport { ZERO, MINUS_20 } from '../common/constants/CommonConstant';\n\n\n@Component\nexport struct CustomDialogView {\n  @State isShow: boolean = false;\n  @Provide achievementLevel: number = 3;\n  @Consume broadCast: BroadCast;\n  \n  targetSettingDialog: CustomDialogController = new CustomDialogController({\n    builder: TargetSettingDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: ZERO, dy: MINUS_20 }\n  });\n  \n  RemindTimeDialogController: CustomDialogController = new CustomDialogController({\n    builder: RemindTimeDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: ZERO, dy: MINUS_20 }\n  });\n  \n  FrequencyDialogController: CustomDialogController = new CustomDialogController({\n    builder: FrequencyDialog(),\n    autoCancel: true,\n    alignment: DialogAlignment.Bottom,\n    offset: { dx: ZERO, dy: MINUS_20 }\n  });\n\n  aboutToAppear() {\n    let self = this;\n\n    \n    this.broadCast.on(\n      BroadCastType.SHOW_TARGET_SETTING_DIALOG,\n      () => {\n        self.targetSettingDialog.open();\n      })\n\n    \n    this.broadCast.on(\n      BroadCastType.SHOW_REMIND_TIME_DIALOG,\n      () => {\n        self.RemindTimeDialogController.open();\n      })\n\n    \n    this.broadCast.on(\n      BroadCastType.SHOW_FREQUENCY_DIALOG,\n      () => {\n        self.FrequencyDialogController.open();\n      })\n  }\n\n  build() {\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\view\\CustomDialogView.ets", "project_name": "codelabs-master", "id": "c85dbace44b983ce847629a0ece9f508845ecece0f98a181ac1bb3894801094f"}
{"text": "import router from '@ohos.router';\nimport * as commonConst from '../common/constants/CommonConstant';\nimport { formatParams } from '../viewmodel/TaskTargetSetting';\nimport { TaskListItem } from '../model/TaskInitList';\n\n@Component\nexport default struct TaskList {\n  @Consume taskList: TaskListItem[];\n\n  build() {\n    List({ space: commonConst.LIST_ITEM_SPACE }) {\n      ForEach(this.taskList, (item: TaskListItem) => {\n        ListItem() {\n          Row() {\n            Row() {\n              Image(item?.icon)\n                .width(commonConst.DEFAULT_24)\n                .height(commonConst.DEFAULT_24)\n                .margin({ right: commonConst.DEFAULT_8 })\n              Text(item?.taskName).fontSize(commonConst.DEFAULT_20).fontColor($r('app.color.titleColor'))\n            }\n            .width(commonConst.THOUSANDTH_500)\n\n            Blank()\n              .layoutWeight(1)\n            if (item?.isOpen) {\n              Text($r('app.string.already_open'))\n                .fontSize(commonConst.DEFAULT_16)\n                .flexGrow(1)\n                .align(Alignment.End)\n                .margin({ right: commonConst.DEFAULT_8 })\n                .fontColor($r('app.color.titleColor'))\n            }\n            Image($r('app.media.right_grey')).width(commonConst.DEFAULT_8).height(commonConst.DEFAULT_16)\n          }\n          .width(commonConst.THOUSANDTH_1000)\n          .justifyContent(FlexAlign.SpaceBetween)\n          .padding({ left: commonConst.DEFAULT_12, right: commonConst.DEFAULT_12 })\n        }\n        .height(commonConst.THOUSANDTH_80)\n        .borderRadius(commonConst.DEFAULT_12)\n        .onClick(() => {\n          router.pushUrl({\n            url: 'pages/TaskEditPage',\n            params: {\n              params: formatParams(item),\n            }\n          })\n        })\n        .backgroundColor($r('app.color.white'))\n      })\n    }\n    .height(commonConst.THOUSANDTH_1000)\n    .width(commonConst.THOUSANDTH_940)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\List-HDC\\entry\\src\\main\\ets\\view\\TaskList.ets", "project_name": "codelabs-master", "id": "54aa82d326edfcfec19e8f85750fe70f6efa1d0cb6b010bb24c477b7c3e2d6bb"}
{"text": "import router from '@ohos.router';\nimport libCheckNapi from 'libentry.so';\nimport promptAction from '@ohos.promptAction';\nimport CommonConstants from '../constants/CommonConstants';\nimport Logger from './Logger';\n\n\nexport class CommonUtils {\n  \n  public loginArkTS(account: string, password: string): void {\n    let check: Resource | string = this.loginCheckArkTS(account, password);\n    if (CommonConstants.LOGIN_TEXT !== check) {\n      Logger.error(CommonConstants.TAG_COMMON_UTILS, 'login account or password is empty');\n      this.showToastContent(check);\n      return;\n    }\n    this.routerPage(CommonConstants.MAIN_PAGE_URL);\n  }\n\n  \n  public loginNative(account: string, password: string): void {\n    let check: string = this.loginCheckNative(account, password);\n    if (CommonConstants.LOGIN_TEXT !== check) {\n      Logger.error(CommonConstants.TAG_COMMON_UTILS, 'login account or password is empty');\n      this.showToastContent(check);\n      return;\n    }\n    this.routerPage(CommonConstants.MAIN_PAGE_URL);\n  }\n\n  \n   private loginCheckArkTS(account: string, password: string): Resource | string {\n    let check: string = '';\n    if (account === '') {\n      return $r('app.string.please_input_account');\n    } else if (password === '') {\n      return $r('app.string.please_input_password');\n    } else {\n      check = CommonConstants.LOGIN_TEXT;\n    }\n    return check;\n  }\n\n  \n  private loginCheckNative(account: string, password: string): string {\n    let check: string = libCheckNapi.nativeCheck(account, password);\n    return check;\n  }\n\n  \n  public routerPage(url: string): void {\n    router.replaceUrl({\n      url: url\n    }).catch((error: Error) => {\n      Logger.error(CommonConstants.TAG_COMMON_UTILS, 'replace url error ' + JSON.stringify(error));\n    });\n  }\n\n  \n  public showToastContent(content: Resource | string): void {\n    promptAction.showToast({\n      message: content,\n      duration: CommonConstants.TOAST_DURATION\n    });\n  }\n}\n\nexport default new CommonUtils();", "path": "codelabs-master\\HarmonyOS_NEXT\\LoginDemo\\entry\\src\\main\\ets\\common\\utils\\CommonUtils.ets", "project_name": "codelabs-master", "id": "3ecab57b604f5cc73a7a86386476763da40bfff0ac3ee13e5723dbdf8ad6ea71"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\nimport StyleConstants from '../common/constants/StyleConstants';\nimport HomePage from '../view/HomePage';\nimport MinePage from '../view/MinePage';\nimport Logger from '../common/utils/Logger';\nimport MultipleDevicesUtils from '../common/utils/MultipleDevicesUtils';\n\n\n@Entry\n@Component\nstruct MainPage {\n  @StorageProp('currentDeviceSize') currentDeviceSize: string = CommonConstants.SM;\n  @State currentIndex: number = CommonConstants.HOME_TAB_INDEX;\n\n  aboutToDisappear() {\n    MultipleDevicesUtils.unregister();\n  }\n\n  build() {\n    Tabs({\n      barPosition: this.currentDeviceSize === CommonConstants.LG ?\n        BarPosition.Start : BarPosition.End,\n      index: this.currentIndex\n    }) {\n      TabContent() {\n        HomePage()\n      }\n      .tabBar(this.TabBuilder(CommonConstants.HOME_TITLE, CommonConstants.HOME_TAB_INDEX,\n        $r('app.media.ic_home_selected'), $r('app.media.ic_home_normal')))\n\n      TabContent() {\n        MinePage()\n      }\n      .tabBar(this.TabBuilder(CommonConstants.MINE_TITLE, CommonConstants.MINE_TAB_INDEX,\n        $r('app.media.ic_mine_selected'), $r('app.media.ic_mine_normal')))\n    }\n    .barWidth(this.currentDeviceSize === CommonConstants.LG ?\n      StyleConstants.BAR_WIDTH_LG : StyleConstants.FULL_PARENT)\n    .barHeight(this.currentDeviceSize === CommonConstants.LG ?\n      StyleConstants.BAR_HEIGHT_LG : StyleConstants.BAR_DEFAULT_HEIGHT)\n    .vertical(this.currentDeviceSize === CommonConstants.LG)\n    .backgroundColor(Color.White)\n    .barMode(BarMode.Fixed)\n    .scrollable(false)\n    .onChange((index: number) => {\n      this.currentIndex = index;\n      Logger.info(CommonConstants.TAG_MAIN_PAGE, 'onChange index ' + JSON.stringify(index));\n    })\n  }\n\n  @Builder TabBuilder(title: string, index: number, selectedImg: Resource, normalImg: Resource) {\n    Column() {\n      Image(this.currentIndex === index ? selectedImg : normalImg)\n        .width($r('app.float.base_tab_size'))\n        .height($r('app.float.base_tab_size'))\n      Text(title)\n        .margin({ top: $r('app.float.base_tab_top') })\n        .fontSize($r(\"app.float.tab_font_size\"))\n        .fontColor(this.currentIndex === index ? $r('app.color.main_page_selected') : $r('app.color.main_page_normal'))\n    }\n    .justifyContent(FlexAlign.Center)\n    .height(StyleConstants.FULL_PARENT)\n    .width(StyleConstants.FULL_PARENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LoginDemo\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "98ccc63e2918bb445b5874efea6b624f811e8bfda78f86408a7196782fab97da"}
{"text": "import ItemData from '../viewmodel/ItemData';\nimport {\n  SWIPER_IMAGES,\n  CENTER_GRID_DATA,\n  LIST_IMAGE_DATA,\n  MINE_LIST_DATA\n} from '../common/data/SourceData';\n\n\nexport class MainViewModel {\n\n  \n  public getSwiperImages(): Array<Resource> {\n    let swiperImages: Array<Resource> = [];\n    SWIPER_IMAGES.forEach((swiperImage: Resource) => {\n      swiperImages.push(swiperImage);\n    });\n    return swiperImages;\n  }\n\n  \n  public getCenterGridData(): Array<ItemData> {\n    let firstGridData: Array<ItemData> = [];\n    CENTER_GRID_DATA.forEach((itemData: ItemData) => {\n      let data: ItemData = {\n        title: itemData.title,\n        img: itemData.img,\n        clickPrompt: itemData.clickPrompt\n      };\n      firstGridData.push(data);\n    });\n    return firstGridData;\n  }\n\n\n  \n  public getListImageData(): Array<ItemData> {\n    let secondGridData: Array<ItemData> = [];\n    LIST_IMAGE_DATA.forEach((itemData: ItemData, index: number) => {\n      let data: ItemData = {\n        id: index,\n        title: itemData.title,\n        img: itemData.img,\n        others: itemData.others,\n        clickPrompt: itemData.clickPrompt\n      };\n      secondGridData.push(data);\n    });\n    return secondGridData;\n  }\n\n\n  \n  public getMineListData(): Array<ItemData> {\n    let settingListData: Array<ItemData> = [];\n    MINE_LIST_DATA.forEach((itemData: ItemData) => {\n      let data: ItemData = {\n        title: itemData.title,\n        img: itemData.img,\n        others: itemData.others,\n        clickPrompt: itemData.clickPrompt\n      };\n      settingListData.push(data);\n    });\n    return settingListData;\n  }\n}\n\nexport default new MainViewModel();", "path": "codelabs-master\\HarmonyOS_NEXT\\LoginDemo\\entry\\src\\main\\ets\\viewmodel\\MainViewModel.ets", "project_name": "codelabs-master", "id": "362bf07c79ccdf96bb861b9aafd5d3204099e1e9ba7e8ba0fa24724f93ce84f1"}
{"text": "import abilityTest from './Ability.test'\nimport LoginFunctionTest from './LoginFunction.test'\n\nexport default function testsuite() {\n  abilityTest()\n  LoginFunctionTest()\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LoginDemo\\entry\\src\\ohosTest\\ets\\test\\List.test.ets", "project_name": "codelabs-master", "id": "a1c685cef6e2c2923b2449cbd74d91e3d1c3f02f9cd4f7418e4760c283aeb427"}
{"text": "import { describe, expect, it } from '@ohos/hypium';\nimport { Driver, ON } from '@ohos.UiTest';\nimport inputMethod from '@ohos.inputMethod';\nimport abilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\nimport { loginCheck } from '../testability/pages/Index';\nimport Logger from '../../../main/ets/common/utils/Logger';\n\nconst delegator = abilityDelegatorRegistry.getAbilityDelegator();\nconst waitUiReadyMs = 1000;\n\nexport default function LoginFunctionTest() {\n\n  describe('loginFunctionTest', () => {\n    it('emptyPasswordTest', 0, () => {\n      expect(loginCheck(\"123\", \"\")).assertEqual(true);\n    })\n\n    it('emptyAccountTest', 0, () => {\n      expect(loginCheck(\"\", \"123456\")).assertEqual(false);\n    })\n\n    it('notEmptyTest', 0, () => {\n      expect(loginCheck(\"123\", \"123456\")).assertEqual(false);\n    })\n  });\n\n  describe('verifyLoginTest', () => {\n    it('loginTest', 0, async () => {\n      await startAbility('com.huawei.logindemo', 'EntryAbility');\n      let driver = Driver.create();\n      await driver.delayMs(waitUiReadyMs);\n      let input = await driver.findComponents(ON.type('TextInput'));\n      await input[0].inputText('123');\n      await driver.delayMs(waitUiReadyMs);\n      await input[1].inputText('123456');\n      await driver.delayMs(waitUiReadyMs);\n      inputMethod.getController().stopInput();\n      let btn = await driver.findComponent(ON.id('loginButtonId'));\n      await btn.click();\n      await driver.delayMs(waitUiReadyMs);\n    });\n  });\n}\n\nasync function startAbility(bundleName: string, abilityName: string) {\n  await delegator.executeShellCommand(`aa start -b ${bundleName} -a ${abilityName}`)\n    .then((result: abilityDelegatorRegistry.ShellCmdResult) => {\n    Logger.info(`UiTestCase, start abilityFinished: ${JSON.stringify(result)}`);\n  }).catch((err: Error) => {\n    Logger.error(`UiTestCase, start abilityFailed: ${JSON.stringify(err)}`);\n  })\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\LoginDemo\\entry\\src\\ohosTest\\ets\\test\\LoginFunction.test.ets", "project_name": "codelabs-master", "id": "4b701fbc411a23ffcaf1cfab4a503988436f5c46bd662f62bbf2ef98ccce53e0"}
{"text": "import hilog from '@ohos.hilog';\n\n@Entry\n@Component\nstruct Index {\n  aboutToAppear() {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'TestAbility index aboutToAppear');\n  }\n @State message: string = 'Hello World'\n   build() {\n         Row() {\n           Column() {\n             Text(this.message)\n               .fontSize(50)\n               .fontWeight(FontWeight.Bold)\n             Button() {\n               Text('next page')\n                 .fontSize(20)\n                 .fontWeight(FontWeight.Bold)\n             }.type(ButtonType.Capsule)\n             .margin({\n               top: 20\n             })\n             .backgroundColor('#0D9FFB')\n             .width('35%')\n             .height('5%')\n             .onClick(()=>{\n             })\n           }\n             .width('100%')\n         }\n             .height('100%')\n   }\n }\n\nexport function loginCheck(account: string, password: string): boolean {\n  if (account === '' || password === '') {\n    return true;\n  } else {\n    return false;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\LoginDemo\\entry\\src\\ohosTest\\ets\\testability\\pages\\Index.ets", "project_name": "codelabs-master", "id": "1dccbec696dd18a669dc344f0dfb25d60b4f9e7f61cc56e34a456502deeed56b"}
{"text": "import { BreakpointConstants } from './BreakpointConstants';\n\nexport class BreakpointType<T> {\n  sm: T;\n  md: T;\n  lg: T;\n\n  constructor(sm: T, md: T, lg: T) {\n    this.sm = sm;\n    this.md = md;\n    this.lg = lg;\n  }\n\n  getValue(currentBreakpoint: string): T {\n    if (currentBreakpoint === BreakpointConstants.BREAKPOINT_MD) {\n      return this.md;\n    }\n    if (currentBreakpoint === BreakpointConstants.BREAKPOINT_LG) {\n      return this.lg;\n    } else {\n      return this.sm;\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\commons\\base\\src\\main\\ets\\constants\\BreakpointType.ets", "project_name": "codelabs-master", "id": "ff1c02167ba68749eaf6e9272bbad7f3dad01726c7bb9c3d46cd30852ab36afe"}
{"text": "export interface CommentItemInterface {\n  icon: ResourceStr;\n  name: ResourceStr;\n  favorCount: number;\n  content: ResourceStr;\n  timePosition: ResourceStr;\n  reviewCnt?: number;\n  subContent?: ResourceStr;\n}\n\nexport class CommentItem implements CommentItemInterface {\n  icon: ResourceStr;\n  name: ResourceStr;\n  favorCount: number;\n  content: ResourceStr;\n  timePosition: ResourceStr;\n  reviewCnt?: number;\n  subContent?: ResourceStr;\n\n  constructor(item: CommentItemInterface) {\n    this.icon = item.icon;\n    this.name = item.name;\n    this.favorCount = item.favorCount;\n    this.content = item.content;\n    this.timePosition = item.timePosition;\n    if (item?.reviewCnt) {\n      this.reviewCnt = item.reviewCnt;\n    }\n    if (item?.subContent) {\n      this.subContent = item.subContent;\n    }\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\commons\\base\\src\\main\\ets\\viewmodel\\CommentViewModel.ets", "project_name": "codelabs-master", "id": "85841e538869340328781a8ca13995b9f50e3b26037e8679cc55124c0fa2831f"}
{"text": "import { CommonConstants as BaseCommon } from '@ohos/base';\nimport { CommonConstants as Common } from '../constants/CommonConstants';\n\nconst TEXTAREA_KEY: string = 'textarea';\nconst BUTTON_KEY: string = 'button';\n\n@Component\nexport struct CommentInputView {\n  @State content: string = '';\n  darkMode: boolean = true;\n\n  build() {\n    Row() {\n      TextArea({ placeholder: $r('app.string.detail_write_comment'), text: this.content })\n        .key(TEXTAREA_KEY)\n        .maxLines(Common.TEXT_AREA_MAX_LINES)\n        .constraintSize({\n          minHeight: $r('app.float.constraint_size')\n        })\n        .enableKeyboardOnFocus(true)\n        .maxLength(Common.TEXT_AREA_MAX_LENGTH)\n        .showCounter(this.content.length === Common.TEXT_AREA_MAX_LENGTH ? true : false)\n        .layoutWeight(1)\n        .onChange((value: string) => {\n          this.content = value;\n        })\n        .onAppear(() => {\n          focusControl.requestFocus(TEXTAREA_KEY);\n        })\n\n      Image($r('app.media.ic_toolbar_sent'))\n        .width($r('app.float.toolbar_sent_width'))\n        .aspectRatio(1)\n        .margin({\n          left: $r('app.float.toolbar_sent_ml'),\n          bottom: $r('app.float.toolbar_sent_mb')\n        })\n        .key(BUTTON_KEY)\n        .onClick(() => {\n          AppStorage.setOrCreate('isShowInput', false);\n          focusControl.requestFocus(BUTTON_KEY);\n        })\n    }\n    .width(BaseCommon.FULL_PERCENT)\n    .padding({\n      left: $r('app.float.dialog_pl'),\n      right: $r('app.float.dialog_pr'),\n      top: $r('app.float.dialog_pt'),\n      bottom: $r('app.float.dialog_pt')\n    })\n    .justifyContent(FlexAlign.SpaceBetween)\n    .alignItems(VerticalAlign.Bottom)\n    .backgroundColor($r('app.color.white'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\detail\\src\\main\\ets\\view\\CommentInputView.ets", "project_name": "codelabs-master", "id": "e142ea18e6dbfad56e77eb6554a27b2e66e4a9575afe36fd8a374f6ed869a2d5"}
{"text": "import router from '@ohos.router';\nimport deviceInfo from '@ohos.deviceInfo';\nimport { BreakpointConstants as Breakpoint, BreakpointType, CommonConstants as BaseCommon } from '@ohos/base';\n\n@Component\nexport struct DetailTitleView {\n  @StorageLink('currentBreakpoint') @Watch('checkFoldable') currentBreakpoint: string = Breakpoint.BREAKPOINT_LG;\n  @StorageLink('isFoldHorizontal') isFoldHorizontal: boolean = true;\n  @State foldable: boolean = this.currentBreakpoint === Breakpoint.BREAKPOINT_MD;\n  isShowedButton?: boolean = true;\n\n  checkFoldable() {\n    this.foldable = this.currentBreakpoint === Breakpoint.BREAKPOINT_MD;\n  }\n\n  build() {\n    Column() {\n      Blank()\n        .height(deviceInfo.deviceType !== BaseCommon.DEVICE_2IN1 ? $r(\"app.float.title_blank_height\") :\n          $r('app.float.blank_top_height'))\n        .width(BaseCommon.FULL_PERCENT)\n\n      Row() {\n        Stack() {\n          Row() {\n            Text($r('app.string.card_detail_title'))\n              .height(BaseCommon.FULL_PERCENT)\n              .fontSize($r('app.float.card_detail_fs'))\n              .fontWeight(BaseCommon.FONT_WEIGHT_500)\n          }\n          .width(BaseCommon.FULL_PERCENT)\n          .justifyContent(FlexAlign.Center)\n\n          Row() {\n            Image($r('app.media.ic_public_back'))\n              .margin({\n                left: new BreakpointType($r('app.float.window_padding_left_sm'), $r('app.float.window_padding_left_md'),\n                  $r('app.float.window_padding_left_lg')).getValue(this.currentBreakpoint)\n              })\n              .width($r('app.float.card_detail_back_width'))\n              .aspectRatio(1)\n              .onClick(() => {\n                router.back();\n              })\n\n            Image(this.isFoldHorizontal ? $r('app.media.ic_fold_horizontal') : $r('app.media.ic_fold_vertical'))\n              .margin({ right: $r(\"app.float.card_detail_fold_mr\") })\n              .width($r('app.float.card_detail_more_width'))\n              .aspectRatio(1)\n              .visibility(this.isShowedButton && this.foldable ? Visibility.Visible : Visibility.Hidden)\n              .onClick(() => {\n                this.isFoldHorizontal = !this.isFoldHorizontal;\n              })\n          }\n          .width(BaseCommon.FULL_PERCENT)\n          .height(BaseCommon.FULL_PERCENT)\n          .justifyContent(FlexAlign.SpaceBetween)\n        }\n        .height(BaseCommon.FULL_PERCENT)\n      }\n      .height($r('app.float.detail_title_height'))\n    }\n    .width(BaseCommon.FULL_PERCENT)\n    .backgroundColor($r('app.color.card_detail_title_bgc'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\detail\\src\\main\\ets\\view\\DetailTitleView.ets", "project_name": "codelabs-master", "id": "b19a913193852bec22985b77ad6c87d8cd8c96053327cf45699626b469a14729"}
{"text": "import { CardItemInterface, CARD_LIST } from '@ohos/base';\nimport { CardItem } from './CardViewModel';\n\nexport class CardArray {\n  cardArray: CardItem[] = [];\n\n  constructor() {\n    CARD_LIST.forEach((item: CardItemInterface, index: number) => {\n      this.cardArray.push(new CardItem(item, index));\n    });\n  }\n\n  getInstance() {\n    return this;\n  }\n}\n\nexport default new CardArray();", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\detail\\src\\main\\ets\\viewmodel\\CardArrayViewModel.ets", "project_name": "codelabs-master", "id": "f741e06d11389a5932f57337f0a5d7d8dc4f9ea5043eb4c1abddc80ac83731d3"}
{"text": "import { COMMENT_LIST, CommentItemInterface, CardItemInterface, CommentItem, PICTURE_ARRAY_LIST } from '@ohos/base';\n\nexport class CardItem implements CardItemInterface {\n  icon: ResourceStr;\n  name: ResourceStr;\n  authorType: ResourceStr;\n  content: ResourceStr;\n  pictureArray: Resource[] = [];\n  commentList: CommentItem[] = [];\n\n  constructor(card: CardItemInterface, index: number) {\n    this.icon = card.icon;\n    this.name = card.name;\n    this.authorType = card.authorType;\n    this.content = card.content;\n    this.pictureArray = PICTURE_ARRAY_LIST[index % PICTURE_ARRAY_LIST.length];\n\n    COMMENT_LIST.forEach((item: CommentItemInterface) => {\n      this.commentList.push(new CommentItem(item));\n    });\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\detail\\src\\main\\ets\\viewmodel\\CardViewModel.ets", "project_name": "codelabs-master", "id": "c133356eecc24c6597e83394d610f5a7e7ed9d87b1aa149df4eef6483bbd7973"}
{"text": "import router from '@ohos.router';\nimport deviceInfo from '@ohos.deviceInfo';\nimport { BreakpointConstants as Breakpoint, CommonConstants as BaseCommon } from '@ohos/base';\nimport { FoundView } from '../view/FoundView';\nimport { FollowView } from '../view/FollowView';\nimport { HotTitleView } from '../view/HotTitleView';\n\n@Entry\n@Component\nexport struct HotPointPage {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = Breakpoint.BREAKPOINT_SM;\n  @StorageLink('isFoundSelected') isFoundSelected: boolean = true;\n  @StorageLink('isShowHotTitle') isShowHotTitle: boolean = true;\n\n  jumpDetail() {\n    router.pushUrl({\n      url: BaseCommon.DETAIL_PAGE_PATH\n    });\n  }\n\n  build() {\n    Column() {\n      GridRow({\n        columns: {\n          sm: Breakpoint.GRID_ROW_COLUMNS[2],\n          md: Breakpoint.GRID_ROW_COLUMNS[0],\n          lg: Breakpoint.GRID_ROW_COLUMNS[0]\n        }\n      }) {\n        GridCol({\n          span: {\n            sm: Breakpoint.GRID_COLUMN_SPANS[5],\n            md: Breakpoint.GRID_COLUMN_SPANS[0],\n            lg: Breakpoint.GRID_COLUMN_SPANS[0]\n          }\n        }) {\n          Column() {\n            if (this.isShowHotTitle) {\n              HotTitleView()\n            }\n\n            if (this.isFoundSelected) {\n              FoundView()\n            }\n            else {\n              Column() {\n                FollowView()\n              }\n              .layoutWeight(1)\n            }\n          }\n        }\n        .layoutWeight(1)\n      }\n      .height(BaseCommon.FULL_PERCENT)\n      .width(BaseCommon.FULL_PERCENT)\n      .onBreakpointChange((breakPoints) => {\n        this.currentBreakpoint = breakPoints;\n      })\n    }\n    .padding({\n      top: deviceInfo.deviceType === BaseCommon.DEVICE_2IN1 ? $r('app.float.zero') : $r('app.float.device_padding_top')\n    })\n    .backgroundColor($r('app.color.white'))\n    .height(BaseCommon.FULL_PERCENT)\n    .justifyContent(FlexAlign.Start)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\hot\\src\\main\\ets\\pages\\HotPointPage.ets", "project_name": "codelabs-master", "id": "9f744a95e5ed5f5fff049c242a6faaeb3b2672ad4052ca1d9c709fe0696b9720"}
{"text": "import { BreakpointConstants as Breakpoint, CommonConstants as BaseCommon, BreakpointType } from '@ohos/base';\nimport { HotItemInterface, HOST_LIST_ARRAY } from '@ohos/base';\nimport { HotListItemView } from '@ohos/rank';\nimport { CommonConstants as Common } from '../constants/CommonConstants';\nimport { ToRankView } from './ToRankView';\n\nconst SWIPER_LIST: number[] = [0, 1, 2];\n\n@Component\nexport struct HotColumnView {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = Breakpoint.BREAKPOINT_SM;\n  @State tab_index: number = 0;\n\n  @Builder\n  HotListBuilder(index: number) {\n    List() {\n      ForEach(HOST_LIST_ARRAY[this.tab_index], (item: HotItemInterface) => {\n        if (item.index > index * Common.HOT_COLUMN_MAX_COUNT &&\n          item.index <= (index + 1) * Common.HOT_COLUMN_MAX_COUNT) {\n          ListItem() {\n            HotListItemView({\n              item: item,\n              showDetail: true,\n              indexWidth: item.index <= Common.HOT_COLUMN_MAX_COUNT ? $r('app.float.index_width_normal') :\n                $r('app.float.index_width_more'),\n              indexIconGap: $r('app.float.index_icon_gap')\n            })\n          }\n        }\n      }, (item: HotItemInterface) => JSON.stringify(item))\n    }\n  }\n\n  build() {\n    Column() {\n      Swiper() {\n        ForEach(SWIPER_LIST, (item: number) => {\n          this.HotListBuilder(item)\n        }, (item: number) => JSON.stringify(item))\n      }\n      .autoPlay(false)\n      .indicator(false)\n      .disableSwipe(true)\n      .displayCount(new BreakpointType(\n        Common.SWIPER_DISPLAY_COUNT_ONE,\n        Common.SWIPER_DISPLAY_COUNT_TWO,\n        Common.SWIPER_DISPLAY_COUNT_THREE\n      ).getValue(this.currentBreakpoint))\n      .itemSpace((new BreakpointType(Common.HOT_COLUMN_IS_SM, Common.HOT_COLUMN_IS_MD, Common.HOT_COLUMN_IS_LG))\n        .getValue(this.currentBreakpoint))\n\n      ToRankView()\n    }\n    .width(BaseCommon.FULL_PERCENT)\n    .alignItems(HorizontalAlign.Start)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\hot\\src\\main\\ets\\view\\HotColumnView.ets", "project_name": "codelabs-master", "id": "88e60ea7392fd1bbda34b29ebfa845912b505642dd9c260ca26c44da0eee2c4f"}
{"text": "import router from '@ohos.router';\nimport { CommonConstants as BaseCommon } from '@ohos/base';\nimport { CommonConstants as Common } from '../constants/CommonConstants'\n\n@Component\nexport struct ToRankView {\n  build() {\n    Row() {\n      Text($r('app.string.read_total_rank'))\n        .fontWeight(FontWeight.Normal)\n        .fontColor($r('app.color.read_total_rank_color'))\n        .fontSize($r('app.float.read_total_rank_fs'))\n\n      Image($r('app.media.ic_more'))\n        .width($r('app.float.arrow_right_width'))\n        .aspectRatio(1)\n        .margin({ left: $r('app.float.arrow_right_ml') })\n        .opacity(Common.ICON_MORE_OPACITY)\n    }\n    .justifyContent(FlexAlign.Start)\n    .alignItems(VerticalAlign.Center)\n    .margin({ top: $r('app.float.read_total_rank_mt') })\n    .onClick(() => {\n      router.pushUrl({\n        url: BaseCommon.HOT_RANK_PAGE_PATH\n      });\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\hot\\src\\main\\ets\\view\\ToRankView.ets", "project_name": "codelabs-master", "id": "e845aa6e06cb47d67956ba560e77e41029ac923014820bf54c55779afc363a64"}
{"text": "import deviceInfo from '@ohos.deviceInfo';\nimport { CommonConstants as BaseCommon, BreakpointConstants as Breakpoint } from '@ohos/base'\nimport { MircoBlogView, CommentListView, CommentBarView, CardArrayViewModel, CardArray } from '@ohos/detail';\n\n@Component\nexport struct DetailVertical {\n  @StorageLink('cardArrayViewModel') cardArrayViewModel: CardArray = CardArrayViewModel.getInstance();\n  @StorageProp('selectCardIndex') selectCardIndex: number = 0;\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = Breakpoint.BREAKPOINT_SM;\n\n  build() {\n    Column() {\n      Scroll() {\n        Column() {\n          MircoBlogView({\n            cardItem: this.cardArrayViewModel.cardArray[this.selectCardIndex],\n            index: this.selectCardIndex,\n            showPicture: false,\n            isDarkMode: true\n          })\n            .padding({\n              left: $r('app.float.picture_content_padding'),\n              right: $r('app.float.picture_content_padding')\n            })\n            .margin({\n              top: $r('app.float.detail_padding_top_md')\n            })\n\n          CommentListView({\n            focusHide: true,\n            commentPadding: $r('app.float.picture_content_padding'),\n            isDarkMode: true\n          })\n            .margin({\n              top: $r('app.float.picture_comment_list_mt')\n            })\n        }\n      }\n      .scrollBar(BarState.Off)\n      .layoutWeight(1)\n\n      CommentBarView({\n        isDarkMode: true\n      })\n    }\n    .height(BaseCommon.FULL_PERCENT)\n    .padding({\n      top: this.getPaddingTop()\n    })\n    .backgroundColor($r('app.color.picture_background_color'))\n  }\n\n  getPaddingTop(): Resource {\n    if (this.currentBreakpoint === Breakpoint.BREAKPOINT_LG && deviceInfo.deviceType !== BaseCommon.DEVICE_2IN1) {\n      return $r('app.float.detail_padding_top_md');\n    }\n    return $r('app.float.zero');\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\picture\\src\\main\\ets\\view\\DetailVerticalView.ets", "project_name": "codelabs-master", "id": "680f735d6941fc98363df7764682c828b09822b3e6339544f75eb4edea97c04f"}
{"text": "import { HOST_LIST_ARRAY, CommonConstants as BaseCommon, HotItemInterface } from '@ohos/base';\nimport { HotListItemView } from './HotListItemView';\n\n@Component\nexport struct HotListView {\n  index: number = 0;\n  groupTitle: ResourceStr = '';\n\n  @Builder\n  itemHeader() {\n    Row() {\n      Text(this.groupTitle)\n        .fontSize($r('app.float.group_item_title_font_size'))\n        .fontWeight(BaseCommon.FONT_WEIGHT_700)\n        .fontColor($r('app.color.group_item_title_font_color'))\n        .margin({ left: $r('app.float.group_item_title_ml') })\n    }\n    .height($r('app.float.group_item_title_height'))\n    .margin({ top: $r('app.float.group_item_title_mt') })\n    .justifyContent(FlexAlign.Start)\n  }\n\n  build() {\n    Row() {\n      List() {\n        ListItemGroup({ header: this.itemHeader() }) {\n          ForEach(HOST_LIST_ARRAY[this.index], (item: HotItemInterface) => {\n            ListItem() {\n              HotListItemView({\n                item: item,\n                indexWidth: $r('app.float.index_width_more')\n              })\n            }\n          }, (item: HotItemInterface) => JSON.stringify(item))\n        }\n      }\n      .scrollBar(BarState.Off)\n      .nestedScroll({\n        scrollForward: NestedScrollMode.PARENT_FIRST,\n        scrollBackward: NestedScrollMode.SELF_FIRST\n      })\n      .edgeEffect(EdgeEffect.None)\n      .padding({\n        left: $r('app.float.hot_list_pl')\n      })\n    }\n    .borderRadius($r('app.float.rank_list_rd'))\n    .backgroundColor($r('app.color.white'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\features\\rank\\src\\main\\ets\\view\\HotListView.ets", "project_name": "codelabs-master", "id": "638d1c4be1d1f1807ba24158909298628526bf87a3045ccae1dfeba38953a6f6"}
{"text": "export interface BarItemInterface {\n  \n  name: Resource;\n\n  \n  icon: Resource;\n\n  \n  iconSelected: Resource;\n}\n\nexport const TabBarsInfo: BarItemInterface[] = [\n  {\n    name: $r('app.string.main'),\n    icon: $r('app.media.ic_main_off'),\n    iconSelected: $r('app.media.ic_main_on')\n  },\n  {\n    name: $r('app.string.hot'),\n    icon: $r('app.media.ic_hot_point_off'),\n    iconSelected: $r('app.media.ic_hot_point_on')\n  },\n  {\n    name: $r('app.string.message'),\n    icon: $r('app.media.ic_message_off'),\n    iconSelected: $r('app.media.ic_message_on')\n  },\n  {\n    name: $r('app.string.mine'),\n    icon: $r('app.media.ic_mine_off'),\n    iconSelected: $r('app.media.ic_mine_on')\n  }\n]", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\products\\phone\\src\\main\\ets\\model\\TabBarModel.ets", "project_name": "codelabs-master", "id": "40ad077c8f563131cc963e8efe1c88cfe932d29abc652e9d13615ba811c33440"}
{"text": "import { BreakpointConstants as Breakpoint, CommonConstants as Common } from '@ohos/base';\nimport { TabContentView } from '../view/TabContentView';\n\n@Entry\n@Component\nstruct Index {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = Breakpoint.BREAKPOINT_LG;\n\n  onPageShow() {\n    AppStorage.setOrCreate('isDetailPage', false);\n  }\n\n  build() {\n    Column() {\n      TabContentView()\n    }\n    .width(Common.FULL_PERCENT)\n    .height(Common.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\products\\phone\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "ac6d87148ce645e3a544c6bb1533a706f8fe31c93e0f18377ecd3a813cb4b6b1"}
{"text": "import { BreakpointConstants as Breakpoint, CommonConstants as Common } from '@ohos/base';\nimport { HotPointPage } from '@ohos/hot';\nimport { BarItemInterface } from '../model/TabBarModel';\nimport { TabBarViewModel } from '../viewmodel/TabBarViewModel';\n\n@Component\nexport struct TabContentView {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = Breakpoint.BREAKPOINT_LG;\n  @State currentIndex: number = 1;\n  tabBarsInfo: TabBarViewModel = new TabBarViewModel();\n\n  @Builder\n  TabBarBuilder(item: BarItemInterface, index: number) {\n    Column() {\n      Image(index !== this.currentIndex ? item.icon : item.iconSelected)\n        .width($r('app.float.icon_tab_width'))\n        .aspectRatio(1)\n      Text(item.name)\n        .fontSize($r('app.float.tab_font_size'))\n        .fontWeight(Common.FONT_WEIGHT_500)\n        .fontColor(index === this.currentIndex ? $r('app.color.tab_select_color') : $r('app.color.tab_normal_color'))\n    }\n    .height(Common.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n  }\n\n  @Builder\n  DefaultTabBuilder(name: Resource) {\n    Column() {\n      Text(name)\n        .fontSize($r('app.float.default_tab_font_size'))\n        .fontWeight(Common.FONT_WEIGHT_700)\n    }\n    .justifyContent(FlexAlign.Center)\n    .width(Common.FULL_PERCENT)\n    .height(Common.FULL_PERCENT)\n    .backgroundColor(Color.White)\n  }\n\n  build() {\n    Column() {\n      Tabs({\n        barPosition: this.currentBreakpoint === Breakpoint.BREAKPOINT_LG ? BarPosition.Start : BarPosition.End,\n        index: this.currentIndex\n      }) {\n        TabContent() {\n          this.DefaultTabBuilder($r('app.string.main'))\n        }\n        .tabBar(this.TabBarBuilder(this.tabBarsInfo.getTabList()[0], 0))\n\n        TabContent() {\n          HotPointPage()\n        }\n        .tabBar(this.TabBarBuilder(this.tabBarsInfo.getTabList()[1], 1))\n\n        TabContent() {\n          this.DefaultTabBuilder($r('app.string.message'))\n        }\n        .tabBar(this.TabBarBuilder(this.tabBarsInfo.getTabList()[2], 2))\n\n        TabContent() {\n          this.DefaultTabBuilder($r('app.string.mine'))\n        }\n        .tabBar(this.TabBarBuilder(this.tabBarsInfo.getTabList()[3], 3))\n      }\n      .vertical(this.currentBreakpoint === Breakpoint.BREAKPOINT_LG)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n      })\n      .barHeight(this.currentBreakpoint === Breakpoint.BREAKPOINT_LG ? Common.HALF_PERCENT : $r('app.float.bar_height'))\n      .barWidth(this.currentBreakpoint === Breakpoint.BREAKPOINT_LG ?\n        $r('app.float.tab_bar_width') : Common.FULL_PERCENT)\n      .scrollable(false)\n    }\n    .backgroundColor($r('app.color.bar_background_color'))\n    .padding({ bottom: this.currentBreakpoint !== Breakpoint.BREAKPOINT_LG ?\n      $r('app.float.tab_content_pb') : $r('app.float.zero') })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\products\\phone\\src\\main\\ets\\view\\TabContentView.ets", "project_name": "codelabs-master", "id": "3f12af6a1de3212fc5ec0cb6cb2388020eb6070e1fa6a309f8f60a6802aa6f05"}
{"text": "import { BarItemInterface, TabBarsInfo } from '../model/TabBarModel';\n\nexport class TabBarViewModel {\n  private tabList: BarItemInterface[] = TabBarsInfo;\n\n  getTabList(): BarItemInterface[] {\n    return this.tabList;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiCommunityApplication\\products\\phone\\src\\main\\ets\\viewmodel\\TabBarViewModel.ets", "project_name": "codelabs-master", "id": "97316cfeba337b43772f3724cc455f168a8fa0ddb5c9615af1e8d027c05d711a"}
{"text": "import { StandardIcon } from '../views/image/StandardIcon';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column() {\n      StandardIcon({ icon: $r(\"app.media.app_icon\") })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\common\\base\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "fe9e197437031500c24354d49e030d793be39aa301b846613738f16f477f9cd8"}
{"text": "interface TabInfoModel {\n  index: number;\n  img: Resource;\n  selectImg?: Resource;\n  title: Resource;\n};\n\nexport { TabInfoModel };", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\common\\base\\src\\main\\ets\\viewmodel\\CommonViewModel.ets", "project_name": "codelabs-master", "id": "fdccac72b5deef0fec2f7a7e42e33b69e6be7587a55ff73d22e4f1ae88f6d4ac"}
{"text": "@Component\nexport struct StandardIcon {\n  @Prop icon: Resource;\n\n  build() {\n    Image(this.icon)\n      .width($r('app.float.icon_height_one'))\n      .height($r('app.float.icon_width_one'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\common\\base\\src\\main\\ets\\views\\image\\StandardIcon.ets", "project_name": "codelabs-master", "id": "4127b504477c05647b8b965473003814eb73716cef951097c5df62ceb1bfcd76"}
{"text": "import { BaseConstants } from '../../constants/BaseConstants';\n\n@Component\nexport struct IntroduceText {\n  @Prop data: string;\n  @Prop fontSize: Resource = $r('app.float.micro_font_size');\n  @Prop fontColor: Resource = $r('app.color.font_color_black_two');\n  @Prop fontWeight: number = BaseConstants.FONT_WEIGHT_FOUR;\n\n  build() {\n    Text(this.data)\n      .opacity(0.5)\n      .fontFamily(BaseConstants.FONT_FAMILY_NORMAL)\n      .fontSize(this.fontSize)\n      .fontColor(this.fontColor)\n      .textAlign(TextAlign.Start)\n      .lineHeight($r('app.float.text_line_height_five'))\n      .fontWeight(this.fontWeight)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\common\\base\\src\\main\\ets\\views\\text\\IntroduceText.ets", "project_name": "codelabs-master", "id": "798b888178cbaf5cba2a0195b97b01258bb93e6185e754d8ed02a6b5d06bd74b"}
{"text": "import { BaseConstants } from '../../constants/BaseConstants';\n\n@Component\nexport struct NormalText {\n  @Prop data: string;\n  @Prop fontSize: Resource = BaseConstants.FONT_SIZE_TWELVE;\n  @Prop fontColor: Resource = $r('app.color.font_color_black_two');\n  @Prop fontWeight: number = BaseConstants.FONT_WEIGHT_FOUR;\n  @Prop fontFamily: Resource = BaseConstants.FONT_FAMILY_NORMAL;\n\n  build() {\n    Text(this.data)\n      .fontFamily(this.fontFamily)\n      .fontSize(this.fontSize)\n      .fontColor(this.fontColor)\n      .textAlign(TextAlign.Start)\n      .lineHeight($r('app.float.text_line_height_five'))\n      .fontWeight(this.fontWeight)\n      .copyOption(CopyOptions.LocalDevice)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\common\\base\\src\\main\\ets\\views\\text\\NormalText.ets", "project_name": "codelabs-master", "id": "79dba1b2d480748753e205a2a1c89f1bdfd954784ae69104e997dfc29c1bbfe7"}
{"text": "import { Adaptive, BaseConstants, BreakpointConstants } from '@ohos/base';\nimport { ConversationDataInterface, ConversationListData } from '../viewmodel/ConversationViewModel';\nimport { ConversationItem } from '../views/Conversation/ConversationItem';\nimport { HomeTopSearch } from '../views/common/HomeTopSearch';\nimport { HomeConstants } from '../constants/HomeConstants';\n\n@Component\nexport struct ConversationList {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_SM;\n  @Link currentConversationUserName: string;\n  @Link currentContactUserName: string;\n  @State private currentIndex: number = 0\n  @Consume('pageInfo') pageInfo: NavPathStack;\n\n  build() {\n    Flex({ direction: FlexDirection.Column }) {\n      HomeTopSearch({ title: HomeConstants.CONVERSATION_TITLE })\n        .height(Adaptive.ContactItemHeight(this.currentBreakpoint))\n      List() {\n        ForEach(ConversationListData, (item: ConversationDataInterface, index: number) => {\n          ListItem() {\n            ConversationItem(item)\n              .onClick(() => {\n                if (this.pageInfo.size() > 1) {\n                  this.pageInfo.pop();\n                }\n                this.pageInfo.pushPath({ name: 'ConversationDetail' });\n                this.currentConversationUserName = item.name;\n                this.currentContactUserName = '';\n                this.currentIndex = index;\n              })\n              .backgroundColor(this.currentIndex === index ? $r('app.color.conversation_clicked_bg_color') : Color.White)\n          }\n          .height(Adaptive.ContactItemHeight(this.currentBreakpoint))\n\n        }, (item: ConversationDataInterface, index: number) => index + JSON.stringify(item))\n      }\n      .width(BaseConstants.FULL_WIDTH)\n      .height(BaseConstants.FULL_HEIGHT)\n    }\n    .height(BaseConstants.FULL_HEIGHT)\n    .width(BaseConstants.FULL_WIDTH)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\pages\\ConversationList.ets", "project_name": "codelabs-master", "id": "106fa7019e09730572bc51ebabbf0ac8353237f491d4678fd757fa5583127f3a"}
{"text": "import { TabInfoModel } from '@ohos/base';\n\nconst ButtonInfo: TabInfoModel[] = [\n  {\n    index: 0,\n    img: $r('app.media.icon_message'),\n    selectImg: $r('app.media.icon_message_selected'),\n    title: $r('app.string.Message')\n  },\n  {\n    index: 1,\n    img: $r('app.media.icon_contacts'),\n    selectImg: $r('app.media.icon_contacts_selected'),\n    title: $r('app.string.Contacts')\n  },\n  {\n    index: 2,\n    img: $r(\"app.media.icon_social_circle\"),\n    selectImg: $r(\"app.media.icon_social_circle_selected\"),\n    title: $r('app.string.SocialCircle')\n  },\n  {\n    index: 3,\n    img: $r('app.media.icon_me'),\n    selectImg: $r('app.media.icon_me'),\n    title: $r('app.string.Me')\n  }\n];\n\nexport { ButtonInfo };", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\viewmodel\\BottomTabViewModel.ets", "project_name": "codelabs-master", "id": "4f71e00232cc0cf0c017acc23925719c36cdd5e4805daafd80680818a25d83f4"}
{"text": "import { BaseConstants, BreakpointConstants } from '@ohos/base';\nimport { ButtonInfo } from '../viewmodel/BottomTabViewModel';\nimport { TabInfoModel } from '@ohos/base';\nimport { HomeConstants } from '../constants/HomeConstants';\n\n@Component\nexport struct HomeTab {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_SM;\n  @Link currentPageIndex: number;\n\n  build() {\n    Column() {\n      Tabs({\n        barPosition: this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? BarPosition.Start : BarPosition.End\n      }) {\n        TabContent()\n          .tabBar(this.BottomNavigation(ButtonInfo[HomeConstants.TAB_MESSAGE_INDEX]))\n        TabContent()\n          .tabBar(this.BottomNavigation(ButtonInfo[HomeConstants.TAB_CONTACTS_INDEX]))\n        TabContent()\n          .tabBar(this.BottomNavigation(ButtonInfo[HomeConstants.TAB_SOCIAL_CIRCLE_INDEX]))\n        TabContent()\n          .tabBar(this.BottomNavigation(ButtonInfo[HomeConstants.TAB_ME_INDEX]))\n      }\n      .vertical(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG)\n      .height(BaseConstants.FULL_HEIGHT)\n      .margin({\n        top: this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? '' : $r('app.float.home_tab_top_lg'),\n        bottom: this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? '' : $r('app.float.home_tab_bottom_lg')\n      })\n    }\n    .backgroundColor($r('app.color.background_color_grey_two'))\n  }\n\n  @Builder\n  BottomNavigation(button: TabInfoModel) {\n    Column() {\n      Image(this.currentPageIndex === button.index ? button.selectImg : button.img)\n        .objectFit(ImageFit.Contain)\n        .width(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? $r('app.float.main_image_size_lg') : $r('app.float.main_image_size'))\n        .height(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? $r('app.float.main_image_size_lg') : $r('app.float.main_image_size'))\n      Text(button.title)\n        .fontColor(this.currentPageIndex === button.index ? $r('app.color.focus_color') : Color.Black)\n        .opacity(this.currentPageIndex === button.index ? BaseConstants.FULL_OPACITY : BaseConstants.SIXTY_OPACITY)\n        .fontWeight(BaseConstants.FONT_WEIGHT_FIVE)\n        .textAlign(TextAlign.Center)\n        .fontSize($r('app.float.micro_font_size'))\n        .lineHeight($r('app.float.text_line_height_three'))\n        .fontFamily(BaseConstants.FONT_FAMILY_MEDIUM)\n        .margin({ top: $r('app.float.document_text_top') })\n    }\n    .width(BaseConstants.FULL_WIDTH)\n    .height(BaseConstants.FULL_HEIGHT)\n    .alignItems(HorizontalAlign.Center)\n    .justifyContent(FlexAlign.Center)\n    .onClick(() => {\n      this.currentPageIndex = button.index;\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\views\\HomeTab.ets", "project_name": "codelabs-master", "id": "32ae5159966e54410f1df701777a850a7ae9d0738deb58d596e7e37c13593d72"}
{"text": "import { BaseConstants, BreakpointConstants } from '@ohos/base';\n\n@Component\nexport struct ContactsItem {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_SM;\n  private name?: string;\n  private icon?: Resource;\n\n  build() {\n    Flex({ alignItems: ItemAlign.Center, justifyContent: FlexAlign.SpaceBetween }) {\n      Column() {\n        Image(this.icon)\n          .height($r('app.float.avatar_image_size'))\n          .width($r('app.float.avatar_image_size'))\n      }\n      .width($r('app.float.avatar_image_size'))\n      .margin({ left: $r('app.float.icon_margin_two'), right: $r('app.float.icon_margin_one') })\n\n      Column() {\n        Text(this.name)\n          .fontSize(BaseConstants.FONT_SIZE_SIXTEEN)\n          .fontWeight(BaseConstants.FONT_WEIGHT_FIVE)\n          .lineHeight($r('app.float.text_line_height_two'))\n          .fontFamily(BaseConstants.FONT_FAMILY_MEDIUM)\n      }\n      .flexShrink(BaseConstants.FLEX_SHRINK_ONE)\n      .margin({ left: $r('app.float.icon_margin_one') })\n\n      Blank()\n    }\n    .height(BaseConstants.FULL_HEIGHT)\n    .width(BaseConstants.FULL_WIDTH)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\views\\Contacts\\ContactsItem.ets", "project_name": "codelabs-master", "id": "4ee3198a2aa54def00ddbe65f16174b95bf7de8a6e547d7a8846513d67e367fd"}
{"text": "import { HomeConstants } from '../../constants/HomeConstants';\nimport { MessageBubble } from '../MessageBubble';\n\n@Component\nexport default struct ConversationDetailItem {\n  @Link currentFeatureIndex: number;\n  private isReceived: boolean = !HomeConstants.IS_RECEIVED;\n  private content: string = '';\n  private isAppletMsg?: boolean;\n  private isDocumentMsg?: boolean;\n\n  build() {\n    Flex({ justifyContent: FlexAlign.End, alignItems: ItemAlign.End }) {\n      MessageBubble({\n        currentFeatureIndex: $currentFeatureIndex,\n        isReceived: this.isReceived,\n        content: this.content,\n        isAppletMsg: this.isAppletMsg,\n        isDocumentMsg: this.isDocumentMsg\n      })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\views\\Conversation\\ConversationDetailItem.ets", "project_name": "codelabs-master", "id": "c65b046a68299ce13608b672c05a086198b748e8b36abe39d3c8903a4d4fd8a5"}
{"text": "import { BaseConstants } from '@ohos/base/src/main/ets/constants/BaseConstants';\n\n@Component\nexport default struct ConversationDetailNone {\n  build() {\n    NavDestination() {\n      Flex({ justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n        Image($r('app.media.ic_none_message'))\n          .width($r('app.float.conversation_none_icon_width'))\n          .height($r('app.float.conversation_none_icon_height'))\n      }\n      .backgroundColor($r('app.color.conversation_none_icon_bg_color'))\n      .height(BaseConstants.FULL_HEIGHT)\n    }\n    .hideTitleBar(true)\n\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\views\\Conversation\\ConversationDetailNone.ets", "project_name": "codelabs-master", "id": "2626ca2de5ec85e03b55a3b154628b41da280479148de309c39bd9a22a5ef1a0"}
{"text": "import { BaseConstants, BreakpointConstants, StandardIcon } from '@ohos/base';\nimport { HomeConstants } from '../../constants/HomeConstants';\n\n@Component\nexport struct ConversationDetailTopSearch {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_SM;\n  @Link currentConversationUserName: string;\n  @Consume('pageInfo') pageInfo: NavPathStack;\n\n  build() {\n    Flex({ alignItems: ItemAlign.Center, justifyContent: FlexAlign.SpaceBetween }) {\n      StandardIcon({ icon: $r('app.media.ic_public_back') })\n        .onClick(() => {\n          if (this.currentBreakpoint === BreakpointConstants.BREAKPOINT_SM) {\n            this.pageInfo.clear();\n          } else if (this.pageInfo.size() === 1) {\n            this.pageInfo.clear();\n            this.pageInfo.pushPath({ name: 'ConversationDetailNone' });\n          } else {\n            this.pageInfo.pop();\n          }\n        })\n      Text(HomeConstants.CONVERSATION_DETAIL_TOP_TITLE)\n        .fontWeight(BaseConstants.FONT_WEIGHT_FIVE)\n        .fontSize(BaseConstants.FONT_SIZE_EIGHTEEN)\n        .fontFamily(BaseConstants.FONT_FAMILY_MEDIUM)\n        .fontColor($r('app.color.conversation_default_text_color'))\n      StandardIcon({ icon: $r('app.media.ic_public_more') })\n    }\n    .width(BaseConstants.FULL_WIDTH)\n    .height(BaseConstants.FULL_HEIGHT)\n    .padding({ left: $r('app.float.icon_margin_two'), right: $r('app.float.icon_margin_two') })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\home\\src\\main\\ets\\views\\Conversation\\ConversationDetailTopSearch.ets", "project_name": "codelabs-master", "id": "d4b6112846ecaca612cd33a4237881dc9122907fd252ab18cfe15f5dc1c26331"}
{"text": "interface SocialCircleItemInterface {\n  icon: Resource;\n  name: string;\n  msg: string;\n  pictureList: PictureInterface[];\n};\n\n\nclass PictureArrayInterface {\n  pictures: PictureInterface[] = [];\n\n  constructor(pictureSource: Resource[]) {\n    pictureSource.forEach(item => {\n      this.pictures.push(new PictureInterface(item));\n    })\n  }\n}\n\n\nclass PictureInterface {\n  src: Resource;\n\n  constructor(src: Resource) {\n    this.src = src;\n  }\n}\n\nexport { SocialCircleItemInterface, PictureArrayInterface, PictureInterface };", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\features\\socialCircle\\src\\main\\ets\\viewmodel\\CommonViewModel.ets", "project_name": "codelabs-master", "id": "8d690e86c8759820f32a7eafc459b673d00861794fdbf1bb52aef06c8027e538"}
{"text": "import { Home } from '@ohos/home';\nimport { BaseConstants, BreakpointConstants } from '@ohos/base';\n\n@Entry\n@Component\nstruct Index {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_SM;\n\n  build() {\n    GridRow({\n      columns: {\n        sm: BreakpointConstants.GRID_ROW_COLUMNS[2],\n        md: BreakpointConstants.GRID_ROW_COLUMNS[0],\n        lg: BreakpointConstants.GRID_ROW_COLUMNS[0]\n      }\n    }) {\n      GridCol({ span: {\n        sm: BreakpointConstants.GRID_COLUMN_SPANS[5],\n        md: BreakpointConstants.GRID_COLUMN_SPANS[0],\n        lg: BreakpointConstants.GRID_COLUMN_SPANS[0]\n      } }) {\n        Column() {\n          Home()\n        }\n        .width(BaseConstants.FULL_HEIGHT)\n        .height(BaseConstants.FULL_HEIGHT)\n      }\n      .height(BaseConstants.FULL_PERCENT)\n      .width(BaseConstants.FULL_PERCENT)\n    }\n    .onBreakpointChange((breakPoints) => {\n      this.currentBreakpoint = breakPoints;\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiDeviceCommunication\\products\\phone\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "7ba96bd182d393032c10fbdc308b9ae95e57216d4d066f37bc5d10ef115a2638"}
{"text": "export { CommonConstants } from \"./src/main/ets/constants/CommonConstants\"\nexport { RouterConstants } from \"./src/main/ets/constants/RouterConstants\"\nexport { BreakpointUtil } from \"./src/main/ets/utils/BreakpointUtil\"\nexport { BusinessInfo } from \"./src/main/ets/viewmodel/BusinessInfo\"\nexport { FundDetail } from \"./src/main/ets/viewmodel/FundDetail\"\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\commons\\basic\\Index.ets", "project_name": "codelabs-master", "id": "194c77855ac28f128cfd07c1e92973a9030f8dd2c4b5d8834217e077f02cb324"}
{"text": "export class RouterConstants {\n  \n  static readonly FUNDING_DETAIL_URL: string = '@bundle:com.huawei.multifinancialmanagement/fund/ets/pages/FundingDetail';\n\n  \n  static readonly FUNDING_URL: string = '@bundle:com.huawei.multifinancialmanagement/fund/ets/pages/Funding';\n\n  \n  static readonly TRENDS_PAGE_URL: string = '@bundle:com.huawei.multifinancialmanagement/fund/ets/pages/TrendsPage';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\commons\\basic\\src\\main\\ets\\constants\\RouterConstants.ets", "project_name": "codelabs-master", "id": "7f88b424cf6d79e4f0d35fece0f766d2e4f2237efaee99a303a6f2e67b32f0b9"}
{"text": "declare interface BreakPointOption<T> {\n  sm?: T,\n  md?: T,\n  lg?: T,\n  xl?: T,\n  xxl?: T\n}\n\nexport class BreakpointUtil<T> {\n  options: BreakPointOption<T>;\n\n  constructor(option: BreakPointOption<T>) {\n    this.options = option;\n  }\n\n  getValue(currentPoint: string): T {\n    return this.options[currentPoint] as T;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\commons\\basic\\src\\main\\ets\\utils\\BreakpointUtil.ets", "project_name": "codelabs-master", "id": "9d73ceb6c39a53073c257ae23ecaeae6e8852668131f0e5c1d86a5f604944728"}
{"text": "export class BusinessInfo {\n  icon: Resource;\n  text: ResourceStr;\n\n  constructor(icon: Resource, text: ResourceStr) {\n    this.icon = icon;\n    this.text = text;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\commons\\basic\\src\\main\\ets\\viewmodel\\BusinessInfo.ets", "project_name": "codelabs-master", "id": "6e365c28162636cc77d75cd97b480b7fa56af0743906a0fc91af109982d5f67d"}
{"text": "export class FundDetail {\n  name: ResourceStr;\n  amplitude: ResourceStr;\n\n  constructor(name: ResourceStr, amplitude: ResourceStr) {\n    this.name = name;\n    this.amplitude = amplitude;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\commons\\basic\\src\\main\\ets\\viewmodel\\FundDetail.ets", "project_name": "codelabs-master", "id": "c3a1b8188d57fcf6e9d421931a0f72fa11503d8d8361c6661dd8e83cb6a51e64"}
{"text": "import HashMap from '@ohos.util.HashMap';\nimport { AxisBase, IAxisValueFormatter } from '@ohos/mpchart';\n\nexport class ChartAxisFormatter implements IAxisValueFormatter {\n  xAxis: HashMap<number, string> = new HashMap();\n\n  constructor(xAxis: HashMap<number, string>) {\n    this.xAxis = xAxis;\n  }\n\n  public getFormattedValue(value: number, axis: AxisBase): string {\n    return this.xAxis.get(value);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\features\\fund\\src\\main\\ets\\viewmodel\\ChartAxisFormatter.ets", "project_name": "codelabs-master", "id": "c4e9d00cd0f4198751c453fafde38200f4d7be90394227e10c4ea4b6f93ab37d"}
{"text": "export { ComparisonComponent } from \"./src/main/ets/view/ComparisonComponent\"\nexport { ComparisonDetailComponent } from \"./src/main/ets/view/ComparisonDetailComponent\"\nexport { ComparisonInfo } from \"./src/main/ets/viewmodel/ComparisonInfo\"", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\features\\fundComparison\\Index.ets", "project_name": "codelabs-master", "id": "ab205e635372dfaceec1325d804d425e71cd7997f45a60d03bc16554ed3dd94f"}
{"text": "export class ComparisonInfo {\n  name: ResourceStr;\n  code: ResourceStr;\n  type: ResourceStr;\n  establishedTime: ResourceStr;\n  scale: number;\n  risksLevel: ResourceStr;\n  rating: number;\n  dividends: number;\n  dividendsCount: number;\n  fundManager: ResourceStr;\n\n  constructor(name: ResourceStr, code: ResourceStr, type: ResourceStr, establishedTime: ResourceStr, scale: number,\n    risksLevel: ResourceStr, rating: number, dividends: number, dividendsCount: number, fundManager: ResourceStr) {\n    this.name = name;\n    this.code = code;\n    this.type = type;\n    this.establishedTime = establishedTime;\n    this.scale = scale;\n    this.risksLevel = risksLevel;\n    this.rating = rating;\n    this.dividends = dividends;\n    this.dividendsCount = dividendsCount;\n    this.fundManager = fundManager;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\features\\fundComparison\\src\\main\\ets\\viewmodel\\ComparisonInfo.ets", "project_name": "codelabs-master", "id": "0fe72f50a8594d37b9440ddb6ebdb56746bb780aae1704232b705c0ee3729c45"}
{"text": "import { BreakpointUtil, CommonConstants } from '@ohos/basic';\n\n@CustomDialog\nexport struct AdvertisementDialog {\n  @StorageProp('breakPoint') currentPoint: string = CommonConstants.BREAK_POINT_SM;\n  controller: CustomDialogController = new CustomDialogController({\n    builder: AdvertisementDialog()\n  });\n\n  build() {\n    Column() {\n      Row() {\n        Image($r('app.media.ic_public_close'))\n          .width($r('app.float.common_image_width'))\n          .height($r('app.float.common_image_height'))\n          .fillColor(Color.White)\n      }\n      .justifyContent(FlexAlign.End)\n      .width(CommonConstants.FULL_WIDTH_PERCENT)\n      .alignItems(VerticalAlign.Center)\n      .height($r('app.float.common_height'))\n      .onClick(() => {\n        this.controller.close();\n      })\n\n      Image($r('app.media.ic_dialog_phone'))\n        .width(new BreakpointUtil({\n          sm: $r('app.float.dialog_width_sm'),\n          md: $r('app.float.dialog_width_md'),\n          lg: $r('app.float.dialog_width_lg')\n        }).getValue(this.currentPoint))\n        .height(new BreakpointUtil({\n          sm: $r('app.float.dialog_height_sm'),\n          md: $r('app.float.dialog_height_md'),\n          lg: $r('app.float.dialog_height_md')\n        }).getValue(this.currentPoint))\n        .borderRadius($r('app.float.dialog_border_radius'))\n        .onClick(() => {\n          this.controller.close();\n        })\n    }\n    .width(new BreakpointUtil({\n      sm: $r('app.float.dialog_width_sm'),\n      md: $r('app.float.dialog_width_md'),\n      lg: $r('app.float.dialog_width_lg')\n    }).getValue(this.currentPoint))\n    .height(new BreakpointUtil({\n      sm: $r('app.float.dialog_all_height_sm'),\n      md: $r('app.float.dialog_all_height_md'),\n      lg: $r('app.float.dialog_all_height_lg')\n    }).getValue(this.currentPoint))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiFinancialManagement\\features\\home\\src\\main\\ets\\view\\AdvertisementDialog.ets", "project_name": "codelabs-master", "id": "cefb4f1912f95a0bd7e6da865d3c8655b71f5cabce1ca5fcbc494046afffa98a"}
{"text": "import Context from '@ohos.app.ability.common';\nimport Logger from './Logger';\nimport CommonConstants from '../constants/CommonConstants';\nimport HobbyBean from '../../viewmodel/HobbyBean';\n\n\nexport class CommonUtils {\n  \n  alertDialog(context: Context.UIAbilityContext) {\n    AlertDialog.show({\n      message: $r('app.string.alert_dialog_message'),\n      alignment: DialogAlignment.Bottom,\n      offset: {\n        dx: 0,\n        dy: CommonConstants.DY_OFFSET\n      },\n      primaryButton: {\n        value: $r('app.string.cancel_button'),\n        action: () => {\n          Logger.info(CommonConstants.TAG_COMMON_UTILS, 'Callback cancel button is clicked');\n        }\n      },\n      secondaryButton: {\n        value: $r('app.string.definite_button'),\n        action: () => {\n          \n          context.terminateSelf();\n          Logger.info(CommonConstants.TAG_COMMON_UTILS, 'Callback definite button is clicked');\n        }\n      }\n    });\n  }\n\n\n  \n  datePickerDialog(dateCallback: Function) {\n    DatePickerDialog.show({\n      start: new Date(CommonConstants.START_TIME),\n      end: new Date(),\n      selected: new Date(CommonConstants.SELECT_TIME),\n      lunar: false,\n      onAccept: (value: DatePickerResult) => {\n        let year: number = Number(value.year);\n        let month: number = Number(value.month) + CommonConstants.PLUS_ONE;\n        let day: number = Number(value.day);\n        let birthdate: string = this.getBirthDateValue(year, month, day);\n        dateCallback(birthdate);\n      }\n    });\n  }\n\n  \n  textPickerDialog(sexArray: Resource, sexCallback: Function) {\n    if (this.isEmpty(sexArray)) {\n      Logger.error(CommonConstants.TAG_COMMON_UTILS, 'sex is null');\n      return;\n    }\n    TextPickerDialog.show({\n      range: sexArray,\n      canLoop:false,\n      selected: 0,\n      onAccept: (result: TextPickerResult) => {\n        sexCallback(result.value);\n      },\n      onCancel: () => {\n        Logger.info(CommonConstants.TAG_COMMON_UTILS, 'TextPickerDialog onCancel');\n      }\n    });\n  }\n\n  \n  getBirthDateValue(year: number, month: number, day: number): string {\n    let birthdate: string = `${year}${CommonConstants.DATE_YEAR}${month}` +\n      `${CommonConstants.DATE_MONTH}${day}${CommonConstants.DATE_DAY}`;\n    return birthdate;\n  }\n\n  \n  isEmpty(obj: object | string): boolean {\n    return obj === undefined || obj === null || obj === '';\n  }\n\n  \n  isEmptyArr(array: Array<HobbyBean>): boolean {\n    return this.isEmpty(array) || array.length === 0;\n  }\n}\n\nexport default new CommonUtils();", "path": "codelabs-master\\HarmonyOS_NEXT\\MultipleDialog\\entry\\src\\main\\ets\\common\\utils\\CommonUtils.ets", "project_name": "codelabs-master", "id": "df90bfa9d82307253e71d4eb0674e3910d1ea991aade8c4b3b1b4fc15c555f0e"}
{"text": "import UIAbility from '@ohos.app.ability.UIAbility';\nimport Window from '@ohos.window';\nimport Logger from '../common/utils/Logger';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n\nexport default class EntryAbility extends UIAbility {\n  onWindowStageCreate(windowStage: Window.WindowStage) {\n    \n    windowStage.loadContent('pages/HomePage', (err, data) => {\n      if (err.code) {\n        Logger.error(CommonConstants.TAG_ABILITY, 'Failed to load the content. Cause:' + JSON.stringify(err));\n        return;\n      }\n      Logger.info(CommonConstants.TAG_ABILITY, 'Succeeded to load the content. Data: ' + JSON.stringify(data));\n    });\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultipleDialog\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "ee3ff894f7b5fdb56b90a49df439936c9fcef115dd6e193800b3f6fc25f3437c"}
{"text": "import Logger from '../common/utils/Logger';\nimport HobbyBean from '../viewmodel/HobbyBean';\nimport CommonUtils from '../common/utils/CommonUtils';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n@CustomDialog\nexport default struct CustomDialogWidget {\n  @State hobbyBeans: HobbyBean[] = [];\n  @Link hobbies: string;\n  private controller?: CustomDialogController;\n\n  aboutToAppear() {\n    let context: Context = getContext(this);\n    if (CommonUtils.isEmpty(context) || CommonUtils.isEmpty(context.resourceManager)) {\n      Logger.error(CommonConstants.TAG_CUSTOM, 'context or resourceManager is null');\n      return;\n    }\n    let manager = context.resourceManager;\n    manager.getStringArrayValue($r('app.strarray.hobbies_data').id, (error, hobbyArray) => {\n      if (!CommonUtils.isEmpty(error)) {\n        Logger.error(CommonConstants.TAG_CUSTOM, 'error = ' + JSON.stringify(error));\n      } else {\n        hobbyArray.forEach((hobbyItem: string) => {\n          let hobbyBean = new HobbyBean();\n          hobbyBean.label = hobbyItem;\n          hobbyBean.isChecked = false;\n          this.hobbyBeans.push(hobbyBean);\n        });\n      }\n    });\n  }\n\n  \n  setHobbiesValue(hobbyBeans: HobbyBean[]) {\n    if (CommonUtils.isEmptyArr(hobbyBeans)) {\n      Logger.error(CommonConstants.TAG_HOME, 'hobbyBeans length is 0');\n      return;\n    }\n    let hobbiesText: string = '';\n    hobbiesText = hobbyBeans.filter((isCheckItem: HobbyBean) => isCheckItem?.isChecked)\n      .map<string>((checkedItem: HobbyBean) => {\n        return checkedItem.label!;\n      })\n      .join(CommonConstants.COMMA);\n    if (hobbiesText.length > 0) {\n      this.hobbies = hobbiesText;\n    }\n  }\n\n  build() {\n    Column() {\n      Text($r('app.string.text_title_hobbies'))\n        .fontColor($r('app.color.custom_color'))\n        .fontSize($r('app.float.title_hobbies_size'))\n        .lineHeight($r('app.float.title_line_height'))\n        .fontWeight(CommonConstants.BIGGER)\n        .alignSelf(ItemAlign.Start)\n        .margin({ left: $r('app.float.title_left_distance') })\n      List() {\n        ForEach(this.hobbyBeans, (itemHobby: HobbyBean) => {\n          ListItem() {\n            Row() {\n              Text(itemHobby.label)\n                .fontSize($r('app.float.label_size'))\n                .fontColor($r('app.color.custom_color'))\n                .layoutWeight(CommonConstants.WEIGHT_ONE)\n                .textAlign(TextAlign.Start)\n                .fontWeight(CommonConstants.BIGGER)\n                .margin({ left: $r('app.float.label_left_distance') })\n              Toggle({ type: ToggleType.Checkbox, isOn: false })\n                .onChange((isCheck) => {\n                  itemHobby.isChecked = isCheck;\n                })\n                .width($r('app.float.toggle_size'))\n                .height($r('app.float.toggle_size'))\n                .margin({ right: $r('app.float.toggle_right_distance') })\n            }\n            .height($r('app.float.options_height'))\n            .margin({\n              top: $r('app.float.options_top_distance'),\n              bottom: $r('app.float.options_bottom_distance')\n            })\n          }\n        }, (itemHobby: HobbyBean) => JSON.stringify(itemHobby.label))\n      }\n      .margin({\n        top: $r('app.float.list_top_distance'),\n        bottom: $r('app.float.list_bottom_distance')\n      })\n      .divider({\n        strokeWidth: $r('app.float.divider_height'),\n        color: $r('app.color.divider_color')\n      })\n      .listDirection(Axis.Vertical)\n      .edgeEffect(EdgeEffect.None)\n      .width(CommonConstants.FULL_WIDTH)\n      .height($r('app.float.options_list_height'))\n\n      Row() {\n        Button($r('app.string.cancel_button'))\n          .dialogButtonStyle()\n          .onClick(() => {\n            this.controller?.close();\n          })\n        Blank()\n          .backgroundColor($r('app.color.custom_blank_color'))\n          .width($r('app.float.blank_width'))\n          .opacity($r('app.float.blank_opacity'))\n          .height($r('app.float.blank_height'))\n        Button($r('app.string.definite_button'))\n          .dialogButtonStyle()\n          .onClick(() => {\n            this.setHobbiesValue(this.hobbyBeans);\n            this.controller?.close();\n          })\n      }\n    }\n    .width(CommonConstants.COMMON_DIALOG_WIDTH)\n    .padding({\n      top: $r('app.float.dialog_top_distance'),\n      bottom: $r('app.float.dialog_bottom_distance')\n    })\n    .borderRadius($r('app.float.dialog_radius'))\n    .backgroundColor(Color.White)\n  }\n}\n\n@Extend(Button) function dialogButtonStyle() {\n  .fontSize($r('app.float.button_text_size'))\n  .fontColor($r('app.color.custom_button_color'))\n  .layoutWeight(CommonConstants.WEIGHT_ONE)\n  .backgroundColor(Color.White)\n  .width(CommonConstants.FULL_WIDTH)\n  .height($r('app.float.button_height'))\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultipleDialog\\entry\\src\\main\\ets\\view\\CustomDialogWidget.ets", "project_name": "codelabs-master", "id": "946db8aa56e894fd2ec10722053d4719e9a74cf0f9942a1722dc5821e6873f86"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\n\n@Component\nexport default struct TextCommonWidget {\n  @Link content: string;\n  private textImage?: Resource;\n  private title?: Resource;\n  onItemClick = () => {};\n\n  build() {\n    Row() {\n      Image(this.textImage !== undefined ? this.textImage : '')\n        .width($r('app.float.text_image_size'))\n        .height($r('app.float.text_image_size'))\n        .margin({ left: $r('app.float.image_left_distance') })\n      Text(this.title)\n        .fontSize($r('app.float.text_size'))\n        .margin({ left: $r('app.float.image_left_distance') })\n        .height(CommonConstants.FULL_HEIGHT)\n      Text(this.content)\n        .fontSize($r('app.float.text_size'))\n        .textAlign(TextAlign.End)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .maxLines(CommonConstants.ONE_LINES)\n        .margin({\n          left: $r('app.float.content_left_distance'),\n          right: $r('app.float.content_right_distance')\n        })\n        .layoutWeight(CommonConstants.WEIGHT_ONE)\n        .width(CommonConstants.FULL_WIDTH)\n      Image($r('app.media.ic_arrow'))\n        .width($r('app.float.arrow_image_width'))\n        .height($r('app.float.arrow_image_height'))\n        .margin({ right: $r('app.float.arrow_right_distance') })\n    }\n    .margin({ top: $r('app.float.row_top_distance') })\n    .borderRadius($r('app.float.row_radius'))\n    .backgroundColor(Color.White)\n    .width(CommonConstants.COMMON_DIALOG_WIDTH)\n    .height($r('app.float.row_height'))\n    .onClick(this.onItemClick)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultipleDialog\\entry\\src\\main\\ets\\view\\TextCommonWidget.ets", "project_name": "codelabs-master", "id": "ef222b71b6c0008bb94864d4059942e1beccd449e77331481bf30304126789e5"}
{"text": "export default class HobbyBean {\n  \n  label?: string;\n\n  \n  isChecked?: boolean;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultipleDialog\\entry\\src\\main\\ets\\viewmodel\\HobbyBean.ets", "project_name": "codelabs-master", "id": "e3ef0bcf7047584c4b67818b253ca965cdf96abd8031eb0e6ce2b1602ac9edfd"}
{"text": "@Component\nexport struct CounterProduct {\n  @State @Watch('onChange') quantityCount: number = 1;\n  @State disabled: boolean = true;\n  private count: number = 1;\n  private counterMin: number = 1;\n  private onNumberChange: (n: number) => void = () => {};\n\n  aboutToAppear() {\n    this.quantityCount = this.count;\n    if (this.quantityCount === this.counterMin) {\n      this.disabled = true;\n    }\n  }\n\n  onChange() {\n    this.disabled = (this.quantityCount === this.counterMin);\n  }\n\n  build() {\n    Row() {\n      Image(this.disabled ? $r('app.media.ic_decrease_disable') : $r('app.media.ic_decrease'))\n        .width($r('app.float.vp_twenty_four'))\n        .height($r('app.float.vp_twenty_four'))\n        .onClick(() => {\n          if (this.disabled) {\n            return;\n          }\n          this.quantityCount = Math.max(this.quantityCount - 1, this.counterMin);\n          this.onNumberChange(this.quantityCount);\n        })\n      Text(`${this.quantityCount}`)\n        .fontSize($r('app.float.smaller_font_size'))\n        .fontColor(Color.Black)\n        .textAlign(TextAlign.Center)\n        .width($r('app.float.count_text_width'))\n        .height($r('app.float.vp_twenty_four'))\n      Image($r('app.media.ic_increase'))\n        .width($r('app.float.vp_twenty_four'))\n        .height($r('app.float.vp_twenty_four'))\n        .onClick(() => {\n          this.quantityCount = Math.min(this.quantityCount + 1, Number.MAX_VALUE);\n          this.onNumberChange(this.quantityCount);\n        })\n    }\n    .width($r('app.float.count_width'))\n    .height($r('app.float.vp_twenty_four'))\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\common\\src\\main\\ets\\components\\CounterProduct.ets", "project_name": "codelabs-master", "id": "b53eddb7aa7f05cb40649d51cd27a7765c7d280d56f893aeb36e42cbbb31f8a2"}
{"text": "import { StyleConstants } from '../constants/StyleConstants';\n\n@Component\nexport struct EmptyComponent {\n  private outerHeight?: number | string = StyleConstants.FULL_HEIGHT;\n\n  build() {\n    Flex({\n      justifyContent: FlexAlign.Center,\n      alignItems: ItemAlign.Center,\n      direction: FlexDirection.Column\n    }) {\n      Image($r('app.media.ic_empty'))\n        .width($r('app.float.empty_image_size'))\n        .height($r('app.float.empty_image_size'))\n      Text($r('app.string.empty_text'))\n        .fontSize($r('app.float.micro_font_size'))\n        .margin({ top: $r('app.float.vp_ten') })\n    }\n    .width(StyleConstants.FULL_WIDTH)\n    .height(this.outerHeight !== undefined ? this.outerHeight : StyleConstants.FULL_HEIGHT)\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\common\\src\\main\\ets\\components\\EmptyComponent.ets", "project_name": "codelabs-master", "id": "c05dd2db0e99a23301a81f0fb844e1dc0b5c0004b634f22667dc5a2efc866c3f"}
{"text": "import hilog from '@ohos.hilog';\n\n\n\n\nlet domain: number = 0xFF00;\nlet prefix: string = 'MultiShopping';\nlet format: string = `%{public}s, %{public}s`;\n\nexport class Logger {\n  static debug(...args: string[]) {\n    hilog.debug(domain, prefix, format, args);\n  }\n\n  static info(...args: string[]) {\n    hilog.info(domain, prefix, format, args);\n  }\n\n  static warn(...args: string[]) {\n    hilog.warn(domain, prefix, format, args);\n  }\n\n  static error(...args: string[]) {\n    hilog.error(domain, prefix, format, args);\n  }\n\n  static fatal(...args: string[]) {\n    hilog.fatal(domain, prefix, format, args);\n  }\n\n  static isLoggable(level: LogLevel) {\n    hilog.isLoggable(domain, prefix, level);\n  }\n}\n\n\nenum LogLevel {\n  DEBUG = 3,\n  INFO = 4,\n  WARN = 5,\n  ERROR = 6,\n  FATAL = 7\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\common\\src\\main\\ets\\utils\\Logger.ets", "project_name": "codelabs-master", "id": "438552a75facd759c3374af5c656feb08a38cac9c754cd526eea73963ae841d2"}
{"text": "import { Logger } from './Logger';\nimport { StyleConstants } from '../constants/StyleConstants';\nimport { Opt } from '../viewmodel/CommodityModel';\n\n\nexport function formatDate(timestamp: number, format = 'yyyy-mm-dd') {\n  let res = \"\";\n  try {\n    const date = new Date(timestamp);\n    const opt: Opt = {\n      yy: date.getFullYear().toString(),\n      mm: (date.getMonth() + 1).toString(),\n      dd: date.getDate().toString(),\n      HH: date.getHours().toString(),\n      MM: date.getMinutes().toString(),\n      SS: date.getSeconds().toString(),\n    };\n\n    const regKeys: string[] = ['y+', 'm+', 'd+', 'H+', 'M+', 'S+'];\n    for (let i = 0; i < regKeys.length; i++) {\n      const regKey = regKeys[i];\n      const reg = new RegExp(regKey);\n      let ret = reg.exec(format);\n      if (ret) {\n        switch (regKey) {\n          case 'y+':\n            format = format.replace(reg, ret.length === 1 ? opt.yy : opt.yy.padStart(ret.length, \"0\"));\n          case 'm+':\n            format = format.replace(reg, ret.length === 1 ? opt.mm : opt.mm.padStart(ret.length, \"0\"));\n          case 'd+':\n            format = format.replace(reg, ret.length === 1 ? opt.dd : opt.dd.padStart(ret.length, \"0\"));\n          case 'H+':\n            format = format.replace(reg, ret.length === 1 ? opt.HH : opt.HH.padStart(ret.length, \"0\"));\n          case 'M+':\n            format = format.replace(reg, ret.length === 1 ? opt.MM : opt.MM.padStart(ret.length, \"0\"));\n          case 'S+':\n            format = format.replace(reg, ret.length === 1 ? opt.SS : opt.SS.padStart(ret.length, \"0\"));\n        }\n      }\n    }\n    res = format;\n  } catch (error) {\n    Logger.error(\"ERROR formatDate\" + error);\n  }\n  return res;\n}\n\n\nexport function getID() {\n  const date = Date.now()\n  const arr = `${date}`.split('')\n  arr.sort(() => (Math.random() - StyleConstants.HALF_ONE) > 0 ? 1 : StyleConstants.MINUS_ONE)\n\n  return arr.join('')\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\common\\src\\main\\ets\\utils\\Utils.ets", "project_name": "codelabs-master", "id": "19a9446defdebbc8e928d02c336b94f006205521958b98a40d6840e6bbdc0cdf"}
{"text": "@Observed\nexport class Product {\n  id: string = '';\n  name: string = '';\n  img: string[] = [];\n  commodityId: string = '';\n  description: string = '';\n  price: number = 0;\n  count: number = 0;\n  selected: boolean = false;\n  specifications: ProductSpecification[] = [];\n  update_time?: string = '';\n  create_time?: string = '';\n  uid?: string = '';\n}\n\nexport class ProductSpecification {\n  name: string = '';\n  value: string = '';\n}\n\nexport class ShopProps {\n  id: string = '';\n  commodityId: string = '';\n  count: number = 0;\n  specifications: ProductSpecification[] = [];\n}\n\nexport class UpdateShopProps {\n  id: string = '';\n  count?: number = 0;\n  selected?: boolean = false;\n  specifications?: ProductSpecification[] = [];\n}\n\nexport class SelectProducts {\n  selected: boolean = false;\n  key: string = '';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\common\\src\\main\\ets\\viewmodel\\ProductModel.ets", "project_name": "codelabs-master", "id": "240d7c7f835b9e44250a3d9265feafbcf8d5e983d24ab409faed2a62d36c39d3"}
{"text": "import { ButtonType } from '../viewmodel/TypeModel';\nimport { StyleConstants } from '@ohos/common';\n\n@Component\nexport struct CapsuleGroupButton {\n  private configs: ButtonType[] = [];\n\n  @Styles flex(){\n    .flexBasis(StyleConstants.FLEX_BASIC)\n    .flexGrow(StyleConstants.FLEX_GROW)\n    .flexShrink(StyleConstants.FLEX_SHRINK)\n  }\n\n  build() {\n    Flex() {\n      ForEach(this.configs, (config: ButtonType, index?: number) => {\n        Flex({ justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n          Text(config.text)\n            .fontColor(Color.White)\n            .fontSize($r('app.float.middle_font_size'))\n            .height($r('app.float.capsule_height'))\n            .textAlign(TextAlign.Center)\n        }\n        .border({\n          radius: {\n            topLeft: !!index ? 0 : $r('app.float.vp_twenty'),\n            bottomLeft: !!index ? 0 : $r('app.float.vp_twenty'),\n            topRight: !!index ? $r('app.float.vp_twenty') : 0,\n            bottomRight: !!index ? $r('app.float.vp_twenty') : 0\n          }\n        })\n        .onClick((event?: ClickEvent) => config.onClick(event))\n      }, (config: ButtonType) => JSON.stringify(config))\n    }\n    .backgroundImage($r('app.media.btn_background'), ImageRepeat.NoRepeat)\n    .backgroundImageSize({ width: StyleConstants.HUNDRED_FIFTEEN_WIDTH, height: StyleConstants.FULL_HEIGHT })\n    .backgroundImagePosition(Alignment.Center)\n    .borderRadius($r('app.float.vp_twenty'))\n    .width(StyleConstants.FULL_WIDTH)\n    .height($r('app.float.capsule_height'))\n    .flex()\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\features\\commoditydetail\\src\\main\\ets\\components\\CapsuleGroupButton.ets", "project_name": "codelabs-master", "id": "952dc46bf867e8f93a185bef65a117111ac233ce276271855ffe7281df71c36c"}
{"text": "export { ConfirmOrder } from './src/main/ets/components/ConfirmOrder';\nexport { PayOrder } from './src/main/ets/components/PayOrder';\nexport { OrderDetailList } from './src/main/ets/components/OrderDetailList';\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\features\\orderdetail\\index.ets", "project_name": "codelabs-master", "id": "d1d3f7787722a2426b810aa0e28627f7e88fddb3933e853434f724871f300cdc"}
{"text": "import { Order, StyleConstants } from '@ohos/common';\n\n@Component\nexport struct CommodityOrderItem {\n  private orderData?: Order;\n  private onCommodityClick: () => void = () => {};\n\n  @Styles flexStyles(){\n    .flexShrink(StyleConstants.FLEX_SHRINK)\n    .flexGrow(StyleConstants.FLEX_GROW)\n    .flexBasis(StyleConstants.FLEX_BASIC)\n  }\n\n  build() {\n    if (this.orderData) {\n      Flex() {\n        Image($rawfile(this.orderData.image))\n          .height(StyleConstants.FULL_HEIGHT)\n          .aspectRatio(1)\n        Flex({ direction: FlexDirection.Column }) {\n          Flex({\n            justifyContent: FlexAlign.SpaceBetween,\n            alignItems: ItemAlign.Center\n          }) {\n            Flex() {\n              Text($r('app.string.commodity_piece_description', this.orderData.title, this.orderData.description))\n                .width(StyleConstants.FULL_WIDTH)\n                .fontColor(Color.Black)\n                .maxLines(StyleConstants.TWO_TEXT_LINE)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n                .fontSize($r('app.float.smaller_font_size'))\n                .lineHeight($r('app.float.vp_twenty'))\n                .margin({ bottom: $r('app.float.vp_four') })\n            }\n            .flexStyles()\n\n            Flex({\n              justifyContent: FlexAlign.Center,\n              direction: FlexDirection.Column,\n              alignItems: ItemAlign.End\n            }) {\n              Text($r('app.string.commodity_piece', this.orderData.price))\n                .fontSize($r('app.float.small_font_size'))\n            }\n            .padding({ left: $r('app.float.vp_eight') })\n          }\n          .flexStyles()\n\n          Flex({ justifyContent: FlexAlign.SpaceBetween }) {\n            Flex({ direction: FlexDirection.Column }) {\n              Text(this.orderData.specifications.length === 2 ?\n                this.orderData.specifications[0].value + '，' + this.orderData.specifications[1].value:\n                  this.orderData.specifications.length === 3 ?\n                  this.orderData.specifications[0].value + '，' + this.orderData.specifications[1].value + '，' + this.orderData.specifications[2].value :\n                    this.orderData.specifications.length === 4 ?\n                    this.orderData.specifications[0].value + '，' + this.orderData.specifications[1].value + '，' + this.orderData.specifications[2].value + '，' + this.orderData.specifications[3].value : ''\n              )\n                .fontSize($r('app.float.smaller_font_size'))\n                .fontColor($r(\"app.color.sixty_alpha_black\"))\n            }\n            .width(StyleConstants.SEVENTY_HEIGHT)\n\n            Flex({\n              direction: FlexDirection.Column,\n              alignItems: ItemAlign.End\n            }) {\n              Text(`x${this.orderData.count}`)\n                .fontSize($r('app.float.small_font_size'))\n                .fontColor($r(\"app.color.sixty_alpha_black\"))\n            }\n            .padding({ left: $r('app.float.vp_eight') })\n          }\n          .width(StyleConstants.FULL_WIDTH)\n          .flexStyles()\n        }\n        .margin({ left: $r('app.float.vp_eight') })\n        .flexStyles()\n      }\n      .height($r('app.float.order_height'))\n      .margin({ bottom: $r('app.float.vp_eight') })\n      .onClick(() => this.onCommodityClick())\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\features\\orderdetail\\src\\main\\ets\\components\\CommodityOrderItem.ets", "project_name": "codelabs-master", "id": "66a8c753e7fbb63d742f9ce86d7a62075014aa71385a3b1e11f89d59f83aea15"}
{"text": "import router from '@ohos.router';\nimport { HeaderBar } from './HeaderBar';\nimport { OrderListContent } from './OrderListContent';\nimport { OrderDetailConstants } from '../constants/OrderDetailConstants'\nimport { EmptyComponent, OrderOperationStatus, StyleConstants, BreakpointConstants } from '@ohos/common';\n\n@Component\nexport struct OrderDetailList {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'sm';\n  @Consume currentTabIndex: number;\n\n  @Builder OrderTabs() {\n    Column() {\n      Tabs({\n        barPosition: BarPosition.Start,\n        index: this.currentTabIndex\n      }) {\n        TabContent() {\n          OrderListContent({\n            status: OrderOperationStatus.ALLStatus,\n          })\n        }\n        .tabBar(this.tabBar($r('app.string.all_orders'), OrderDetailConstants.ALL_INDEX))\n\n        TabContent() {\n          OrderListContent({\n            status: OrderOperationStatus.UN_PAY,\n          })\n        }\n        .tabBar(this.tabBar($r('app.string.pending_payment'), OrderDetailConstants.PENDING_PAYMENT_INDEX))\n\n        TabContent() {\n          Column() {\n            EmptyComponent()\n          }\n          .width(StyleConstants.FULL_WIDTH)\n          .height(StyleConstants.FULL_HEIGHT)\n        }\n        .tabBar(this.tabBar($r('app.string.waiting_shipment'), OrderDetailConstants.WAITING_SHIPMENT_INDEX))\n\n        TabContent() {\n          OrderListContent({\n            status: OrderOperationStatus.DELIVERED,\n          })\n        }\n        .tabBar(this.tabBar($r('app.string.to_be_received'), OrderDetailConstants.WAITING_RECEIVED_INDEX))\n\n        TabContent() {\n          OrderListContent({\n            status: OrderOperationStatus.RECEIPT,\n          })\n        }\n        .tabBar(this.tabBar($r('app.string.to_be_evaluated'), OrderDetailConstants.WAITING_EVALUATE_INDEX))\n      }\n      .barHeight($r('app.float.order_tab_bar_height'))\n      .barWidth(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ?\n        StyleConstants.SIXTY_WIDTH : StyleConstants.FULL_WIDTH)\n      .barMode(BarMode.Fixed)\n      .margin({\n        top: $r('app.float.vp_eight'), bottom: $r('app.float.vp_eight')\n      })\n      .onChange((index: number) => {\n        this.currentTabIndex = index;\n      })\n    }\n    .height(StyleConstants.FULL_HEIGHT)\n    .width(StyleConstants.FULL_WIDTH)\n  }\n\n  @Builder tabBar(text: string | Resource, index: number) {\n    Flex({ justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n      Text(text)\n        .fontSize($r('app.float.middle_font_size'))\n        .textAlign(TextAlign.Center)\n        .fontColor(this.currentTabIndex === index ? $r('app.color.focus_color') : $r(\"app.color.sixty_alpha_black\"))\n        .fontWeight(this.currentTabIndex === index ? StyleConstants.FONT_WEIGHT_FIVE : StyleConstants.FONT_WEIGHT_FOUR)\n        .border({\n          color: $r('app.color.focus_color'),\n          width: { bottom: this.currentTabIndex === index ? $r('app.float.vp_two') : $r('app.float.border_width') }\n        })\n        .height($r('app.float.order_tab_height'))\n    }\n    .width(StyleConstants.FULL_WIDTH)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column }) {\n      HeaderBar({ title: $r('app.string.my_order'), onBack: () => {\n        router.back();\n      } })\n      this.OrderTabs()\n    }\n    .backgroundColor($r('app.color.page_background'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\features\\orderdetail\\src\\main\\ets\\components\\OrderDetailList.ets", "project_name": "codelabs-master", "id": "37c8a9064c187ce6240056381f4e2ddb7bd1e5f50f5356f05c0e68352d8c766f"}
{"text": "import { OrderType } from '@ohos/common';\nimport { IconButtonModel } from '../viewmodel/IconButtonModel';\nimport { PersonalConstants } from '../constants/PersonalConstants';\n\n@Component\nexport struct IconButton {\n  @ObjectLink props: IconButtonModel;\n  click?: (key: OrderType) => void = () => {};\n\n  build() {\n    Column() {\n      if (this.props.count) {\n        Badge({\n          value: `${this.props.count}`,\n          style: { color: Color.White, badgeSize: PersonalConstants.BADGE_SIZE, badgeColor: Color.Red }\n        }) {\n          Image(this.props.icon)\n            .width($r('app.float.icon_size'))\n            .height($r('app.float.icon_size'))\n        }\n        .width($r('app.float.icon_size'))\n        .height($r('app.float.icon_size'))\n      } else {\n        Image(this.props.icon)\n          .width($r('app.float.icon_size'))\n          .height($r('app.float.icon_size'))\n      }\n      Text(this.props.text)\n        .fontSize($r('app.float.vp_twelve'))\n        .fontColor(Color.Black)\n        .margin({ top: $r('app.float.vp_twelve') })\n    }\n    .height($r('app.float.vp_fifty_six'))\n    .onClick(() => {\n      if (this.click !== undefined && this.props.key !== undefined) {\n        this.click(this.props.key);\n      }\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\features\\personal\\src\\main\\ets\\components\\IconButton.ets", "project_name": "codelabs-master", "id": "63dac94002e38cf4fe1c00d4e0644f0e317abd2df8c20b21849cf852249d31f9"}
{"text": "import { OrderType } from '@ohos/common';\n\n@Observed\nexport class IconButtonModel {\n  icon: Resource;\n  text: Resource;\n  key?: OrderType;\n  count?: number;\n\n  constructor(icon: Resource, text: Resource, key?: OrderType, count?: number) {\n    this.icon = icon;\n    this.text = text;\n    this.key = key;\n    this.count = count;\n  }\n}\n\nexport class OrderCount {\n  payment: number = 0;\n  ship: number = 0;\n  receipt: number = 0;\n  evaluation: number = 0;\n  sale: number = 0;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\features\\personal\\src\\main\\ets\\viewmodel\\IconButtonModel.ets", "project_name": "codelabs-master", "id": "27a4c9c006ab53d5b27a23f22efda0d2cb738e809bc9bdf6809bc4530e9d8069"}
{"text": "import router from '@ohos.router';\nimport { LocalDataManager, Commodity } from '@ohos/common';\nimport { CommodityDetail } from '@ohos/commoditydetail';\n\n@Entry\n@Component\nstruct CommodityDetailPage {\n  @State commodityId: string = '';\n  @State info?: Commodity = undefined;\n  private localDataManager: LocalDataManager = LocalDataManager.instance();\n\n  aboutToAppear() {\n    let params = router.getParams() as Record<string, Object>;\n    this.commodityId = params.id as string;\n    this.info = this.localDataManager.queryCommodityListById(this.commodityId);\n  }\n\n  build() {\n    Row() {\n      CommodityDetail({\n        commodityId: this.commodityId\n      })\n    }\n    .backgroundColor($r('app.color.page_background'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\product\\phone\\src\\main\\ets\\pages\\CommodityDetailPage.ets", "project_name": "codelabs-master", "id": "150675f2a1b27c4948f1197a63e00d25efe2af0b9369179aa0e940f4580ef093"}
{"text": "import router from '@ohos.router';\nimport { ConfirmOrder } from '@ohos/orderdetail';\nimport { Order, Logger } from '@ohos/common';\nimport { PageConstants } from '../constants/PageConstants';\n\n@Entry\n@Component\nstruct ConfirmPageOrder {\n  @Provide('amount') amount: number = 0;\n  @Provide('orderList') orderList: Order[] = [];\n\n  onPageShow() {\n    let params = router.getParams() as Record<string, Order[]>;\n    const orderList = params.orderList\n    for (let index = 0; index < orderList.length; index++) {\n      let orderData: Order = {\n        orderId: orderList[index].orderId,\n        commodityId: orderList[index].commodityId,\n        price: orderList[index].price,\n        count: orderList[index].count,\n        specifications: orderList[index].specifications,\n        image: orderList[index].image,\n        description: orderList[index].description,\n        title: orderList[index].title\n      };\n      this.orderList.push(orderData);\n    }\n    Logger.info('onPageShow orderList length: ' + this.orderList.length);\n    this.amount = this.orderList.reduce((s: number, item: Order) => s + item.price * item.count, 0);\n  }\n\n  build() {\n    Column() {\n      ConfirmOrder()\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\product\\phone\\src\\main\\ets\\pages\\ConfirmOrderPage.ets", "project_name": "codelabs-master", "id": "9e0d39003bb4e4144c44f9e9fe6f868133e91d8b800e97c88ab99cbed91026cb"}
{"text": "import router from '@ohos.router';\nimport { OrderDetailList } from '@ohos/orderdetail';\nimport { LocalDataManager, Order, Commodity } from '@ohos/common';\n\n@Entry\n@Component\nstruct OrderDetailListPage {\n  @Provide orderList: Order[] = [];\n  @Provide commodityList: Commodity[] = [];\n  @Provide currentTabIndex: number = 0;\n  private localDataManager: LocalDataManager = LocalDataManager.instance();\n\n  aboutToAppear() {\n    let params = router.getParams() as Record<string, Object>;\n    this.currentTabIndex = params.tabIndex as number || 0;\n  }\n\n  onPageShow() {\n    this.orderList = this.localDataManager.queryOrderList();\n    this.commodityList = this.localDataManager.queryCommodityList();\n  }\n\n  build() {\n    Column() {\n      OrderDetailList()\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\product\\phone\\src\\main\\ets\\pages\\OrderDetailListPage.ets", "project_name": "codelabs-master", "id": "2eeaabf1bc9e9b245a95ad7fb025bc80bbda1f23d72e9820bdb922b8138c0ba0"}
{"text": "import router from '@ohos.router';\nimport { PayOrder } from '@ohos/orderdetail';\nimport { LocalDataManager, Order } from '@ohos/common';\n\n@Entry\n@Component\nstruct PayOrderPage {\n  @Provide('orderList') data: Order[] = [];\n  @State totalPrice: number = 0;\n  private localDataManager: LocalDataManager = LocalDataManager.instance();\n\n  aboutToAppear() {\n    let params = router.getParams() as Record<string, Object>;\n    let order: Order = params.order as Order;\n    let orderIds: string[] = params.orderIds as string[];\n    if (order) {\n      this.data = [order];\n    }\n    if (orderIds) {\n      const orders = this.localDataManager.queryOrderList();\n      this.data = orders.filter(order => orderIds.includes(order.orderId));\n    }\n    this.totalPrice = this.data.reduce((sum, i) => {\n      return sum + i.price * i.count;\n    }, 0)\n  }\n\n  build() {\n    Column() {\n      PayOrder({\n        totalPrice: $totalPrice\n      })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\product\\phone\\src\\main\\ets\\pages\\PayOrderPage.ets", "project_name": "codelabs-master", "id": "2e0fc04c6633e362f9c5891a4c227314e34f79d7b04941370042a725da87e3df"}
{"text": "import router from '@ohos.router';\nimport { StyleConstants, Logger, BreakpointSystem, BreakPointType } from '@ohos/common';\nimport { PageConstants } from '../constants/PageConstants';\n\n@Entry\n@Component\nstruct SplashPage {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'sm';\n  private breakpointSystem = new BreakpointSystem();\n  private timeOutId: number = 0;\n\n  build() {\n    Flex({direction: FlexDirection.Column, alignItems: ItemAlign.Center}){\n      Column() {\n        Image($r('app.media.ic_eshop'))\n          .width(new BreakPointType({\n            sm: $r('app.float.splash_image_size'),\n            md: $r('app.float.splash_image_size'),\n            lg: $r('app.float.splash_image_size_lg')\n          }).getValue(this.currentBreakpoint))\n          .aspectRatio(PageConstants.IMAGE_ASPECT_RATIO)\n          .objectFit(ImageFit.Contain)\n      }\n      .justifyContent(FlexAlign.Center)\n      .alignItems(HorizontalAlign.Center)\n      .flexGrow(StyleConstants.FLEX_GROW)\n\n      Image($r('app.media.ic_title'))\n        .width($r('app.float.text_image_width'))\n        .height($r('app.float.text_image_height'))\n        .objectFit(ImageFit.Contain)\n      Text($r('app.string.splash_desc'))\n        .fontColor($r('app.color.forty_alpha_black'))\n        .fontSize($r('app.float.bigger_font_size'))\n        .letterSpacing(PageConstants.LETTER_SPACE)\n        .margin({ top: $r('app.float.vp_twelve'), bottom: $r('app.float.splash_text_margin_bottom') })\n    }\n    .height(StyleConstants.FULL_HEIGHT)\n    .width(StyleConstants.FULL_WIDTH)\n    .backgroundColor($r('app.color.page_background'))\n  }\n\n  aboutToAppear() {\n    this.breakpointSystem.register();\n    this.timeOutId = setTimeout(() => {\n      router.replaceUrl({ url: PageConstants.MAIN_PAGE_URL })\n        .catch((err: Error) => {\n          Logger.error(JSON.stringify(err));\n        })\n    }, PageConstants.DELAY_TIME);\n  }\n\n  aboutToDisappear() {\n    this.breakpointSystem.unregister();\n    clearTimeout(this.timeOutId);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiShopping\\product\\phone\\src\\main\\ets\\pages\\SplashPage.ets", "project_name": "codelabs-master", "id": "bfb910981e59eac9a376475ef124b187c78e8bf3a60363e8adc2cc6cd5c8caf9"}
{"text": "import display from '@ohos.display';\nimport { CommonConstants } from '../constants/CommonConstants';\n\nexport class DeviceScreen {\n  \n  public static getDeviceHeight(): number {\n    let displayObject = display.getDefaultDisplaySync();\n    let screenPixelHeight = displayObject.height;\n    let screenDensityDPI = displayObject.densityDPI;\n    return screenPixelHeight * (CommonConstants.SCREEN_DPI_CONSTANT / screenDensityDPI);\n  }\n\n  \n  public static getDeviceWidth(): number {\n    let displayObject = display.getDefaultDisplaySync();\n    let screenPixelWidth = displayObject.width;\n    let screenDensityDPI = displayObject.densityDPI;\n    return screenPixelWidth * (CommonConstants.SCREEN_DPI_CONSTANT / screenDensityDPI);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiVideoApplication\\commons\\base\\src\\main\\ets\\utils\\DeviceScreen.ets", "project_name": "codelabs-master", "id": "74be32807337be497f0690d3142b363849c6980c609c710d06b196820c6c234c"}
{"text": "import { BreakpointConstants, CommonConstants } from '@ohos/commons';\nimport { Home } from '../view/Home';\n\n@Entry\n@Component\nstruct Index {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('videoGridColumn') videoGridColumn: string = CommonConstants.VIDEO_GRID_COLUMNS[0];\n\n  build() {\n    GridRow({\n      columns: {\n        sm: BreakpointConstants.GRID_ROW_COLUMNS[2],\n        md: BreakpointConstants.GRID_ROW_COLUMNS[0],\n        lg: BreakpointConstants.GRID_ROW_COLUMNS[0]\n      }\n    }) {\n      GridCol({ span: {\n        sm: BreakpointConstants.GRID_COLUMN_SPANS[5],\n        md: BreakpointConstants.GRID_COLUMN_SPANS[0],\n        lg: BreakpointConstants.GRID_COLUMN_SPANS[0]\n      } }) {\n        Home()\n      }\n      .height(CommonConstants.FULL_PERCENT)\n      .width(CommonConstants.FULL_PERCENT)\n    }\n    .onBreakpointChange((breakPoints) => {\n      this.currentBreakpoint = breakPoints;\n\n      switch (breakPoints) {\n        case BreakpointConstants.BREAKPOINT_SM:\n          this.videoGridColumn = CommonConstants.VIDEO_GRID_COLUMNS[0];\n          break;\n        case BreakpointConstants.BREAKPOINT_MD:\n          this.videoGridColumn = CommonConstants.VIDEO_GRID_COLUMNS[1];\n          break;\n        case BreakpointConstants.BREAKPOINT_LG:\n          this.videoGridColumn = CommonConstants.VIDEO_GRID_COLUMNS[2];\n          break;\n        default:\n          break;\n      }\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiVideoApplication\\features\\home\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "2cabc672486d47f20bf8452ab95de400079e2ee447b493cd885975d6c1233790"}
{"text": "import { BreakpointConstants, CommonConstants } from '@ohos/commons';\nimport { BreakpointType } from '@ohos/commons';\nimport { HomeConstants } from '../constants/HomeConstants';\nimport { IconViewModel, VideoIcon } from '../viewmodel/IconViewModel';\nimport { getTabIndex } from './CommonView';\n\n@Component\nexport struct IconView {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('windowWidth') windowWidth: number = 0;\n  @Prop currentTopIndex: number = 0;\n  private iconList: VideoIcon[] = new IconViewModel().getIconList();\n\n  @Styles focusedStyles(): void {\n    .border({\n      width: $r('app.float.focus_radius_width'),\n      color: $r('app.color.focus_radius_color'),\n      radius: $r('app.float.icon_focus_radius')\n    })\n  }\n\n  @Styles normalStyles(): void {\n    .border({\n      width: 0,\n      radius: $r('app.float.icon_focus_radius')\n    })\n  }\n\n  build() {\n    \n    Column() {\n      Swiper() {\n        ForEach(this.iconList, (item: VideoIcon, index: number) => {\n          Column() {\n            Image(item.getImage())\n              .width($r('app.float.icon_img_size'))\n              .height($r('app.float.icon_img_size'))\n              .margin({ bottom: $r('app.float.icon_img_bottom_margin') })\n              .focusable(true)\n              .groupDefaultFocus(index === 0 ? true : false)\n              .stateStyles({\n                normal: this.normalStyles,\n                focused: this.focusedStyles\n              })\n\n            Text(item.getName())\n              .fontSize($r('app.float.icon_list_font_size'))\n              .fontWeight(FontWeight.Normal)\n              .lineHeight($r('app.float.icon_list_font_height'))\n              .fontColor(this.currentTopIndex === 2 ? Color.White : Color.Black)\n          }\n          .alignItems(HorizontalAlign.Center)\n          .height($r('app.float.icon_list_height'))\n        }, (item: VideoIcon) => JSON.stringify(item))\n      }\n      .tabIndex(getTabIndex(HomeConstants.DIRECTION_LIST[3]))\n      \n      .displayCount(new BreakpointType(CommonConstants.FOUR, HomeConstants.SIX, HomeConstants.EIGHT)\n        .getValue(this.currentBreakpoint))\n      .nextMargin(this.getNextMargin(this.windowWidth, this.currentBreakpoint))\n      .indicator(false)\n      .width(CommonConstants.FULL_PERCENT)\n      .loop(false)\n      .effectMode(EdgeEffect.None)\n      .displayMode(SwiperDisplayMode.AUTO_LINEAR)\n    }\n    .padding({\n      left: this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? $r('app.float.icon_list_column_padding_lg') :\n        $r('app.float.icon_list_column_padding')\n    })\n    .margin({ top: this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ?\n      $r('app.float.icon_list_column_margin_lg') : $r('app.float.icon_list_column_margin') })\n    .visibility(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG && this.currentTopIndex === 2 ?\n      Visibility.None : Visibility.Visible)\n  }\n\n  getNextMargin(windowWidth: number, currentBreakpoint: string): string {\n    \n    let result: number = px2vp(windowWidth) - new BreakpointType(HomeConstants.VIDEO_GRID_MARGIN[0],\n      HomeConstants.VIDEO_GRID_MARGIN[1], HomeConstants.VIDEO_GRID_MARGIN[2]).getValue(this.currentBreakpoint) /\n      HomeConstants.TWO;\n    if (currentBreakpoint === BreakpointConstants.BREAKPOINT_SM) {\n      result = result / HomeConstants.DISPLAYED_ICON_NUMBER[0];\n    } else if (currentBreakpoint === BreakpointConstants.BREAKPOINT_MD) {\n      result = result / HomeConstants.DISPLAYED_ICON_NUMBER[1];\n    } else {\n      result = (result - HomeConstants.LG_SIDEBAR_WIDTH) / HomeConstants.DISPLAYED_ICON_NUMBER[2];\n    }\n    return result + HomeConstants.HEIGHT_UNIT;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiVideoApplication\\features\\home\\src\\main\\ets\\view\\IconView.ets", "project_name": "codelabs-master", "id": "1072b2302ef6d22bf079c718d01e1948d11d456e10b58797c94bf38151cbedab"}
{"text": "import { BreakpointConstants, CommonConstants } from '@ohos/commons';\nimport { BreakpointType } from '@ohos/commons';\nimport { HomeConstants } from '../constants/HomeConstants';\nimport { VideoImage, VideoImgViewModel } from '../viewmodel/VideoImgViewModel';\nimport { getTabIndex,SubtitleComponent,VideoContent,VideoImgComponent, VideoImgPlay, VideoImgRating, VideoTitle } from\n  './CommonView';\n\n@Component\nexport struct NewVideoRelease {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('windowWidth') windowWidth: number = 0;\n  @Prop currentTopIndex: number = 0;\n  private newVideoImgList: VideoImage[] = new VideoImgViewModel().getNewVideoImgList();\n\n  build() {\n    Column() {\n      SubtitleComponent({ currentTopIndex: this.currentTopIndex, title:HomeConstants.HOME_SUB_TITLES[0] })\n\n      \n      Grid() {\n        ForEach(this.newVideoImgList, (item: VideoImage) => {\n          GridItem() {\n            Column() {\n              Stack({ alignContent: Alignment.Bottom }) {\n                VideoImgComponent({ imgSrc:item.getImgSrc() })\n                VideoImgPlay()\n                VideoImgRating({ rating: item.getRating() })\n              }\n              .height(new BreakpointType($r('app.float.new_video_height_sm'), $r('app.float.new_video_height_md'),\n                $r('app.float.new_video_height_lg')).getValue(this.currentBreakpoint))\n              .width(CommonConstants.FULL_PERCENT)\n              .aspectRatio(HomeConstants.NEW_VIDEO_ASPECT_RATIO)\n\n              VideoTitle({ currentTopIndex: this.currentTopIndex, title: item.getTitle() })\n              VideoContent({ currentTopIndex: this.currentTopIndex, content: item.getContent() })\n            }\n            .alignItems(HorizontalAlign.Start)\n          }\n        }, (item: VideoImage, index: number) => index + JSON.stringify(item))\n      }\n      .tabIndex(getTabIndex(HomeConstants.DIRECTION_LIST[5]))\n      .columnsTemplate(new BreakpointType(CommonConstants.VIDEO_GRID_COLUMNS[1], CommonConstants.VIDEO_GRID_COLUMNS[3],\n        CommonConstants.VIDEO_GRID_COLUMNS[4]).getValue(this.currentBreakpoint))\n      .rowsTemplate(HomeConstants.NEW_VIDEO_ROWS_TEMPLATE)\n      .width(CommonConstants.FULL_PERCENT)\n      .columnsGap($r('app.float.new_video_columns_gap'))\n      .height(this.getNewVideoHeight(this.currentBreakpoint, this.windowWidth))\n    }\n    .padding({ left: this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG && this.currentTopIndex === 2 ?\n      $r('app.float.side_bar_width') : 0 })\n  }\n\n  getNewVideoHeight(currentBreakpoint: string, windowWidth: number): string {\n    let result: number = px2vp(windowWidth) - new BreakpointType(HomeConstants.VIDEO_GRID_MARGIN[0],\n      HomeConstants.VIDEO_GRID_MARGIN[1], HomeConstants.VIDEO_GRID_MARGIN[2]).getValue(this.currentBreakpoint);\n    if (currentBreakpoint === BreakpointConstants.BREAKPOINT_LG) {\n      result = result - HomeConstants.LG_SIDEBAR_WIDTH;\n      result = (result - HomeConstants.VIDEO_GRID_ITEM_SPACE * HomeConstants.SIX) / HomeConstants.SEVEN;\n    } else if (currentBreakpoint === BreakpointConstants.BREAKPOINT_MD) {\n      result = (result - HomeConstants.VIDEO_GRID_ITEM_SPACE * CommonConstants.FOUR) / HomeConstants.FIVE;\n    } else {\n      result = (result - HomeConstants.VIDEO_GRID_ITEM_SPACE * HomeConstants.TWO) / CommonConstants.THREE;\n    }\n    return (result / HomeConstants.NEW_VIDEO_ASPECT_RATIO + HomeConstants.NEW_VIDEO_DESCRIPTION_HEIGHT +\n      HomeConstants.HEIGHT_UNIT);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiVideoApplication\\features\\home\\src\\main\\ets\\view\\NewVideoRelease.ets", "project_name": "codelabs-master", "id": "ed1b201c66fc86fa429ff7899afd4841a8fc48ac8b6f18875c3b77c6646e0292"}
{"text": "import { DetailConstants } from '../constants/DetailConstants';\n\nexport class CurrentOffsetUtil {\n  static scrollToTop(offset: string): boolean {\n    if (offset === DetailConstants.SCROLL_TO_TOP) {\n      return true;\n    }\n    return false;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MultiVideoApplication\\features\\videoDetail\\src\\main\\ets\\utils\\CurrentOffsetUtil.ets", "project_name": "codelabs-master", "id": "858e19affc766b883c44dd7faf2efaf0cb855fce9f93a800b760b2f9a96c914a"}
{"text": "export interface BottomTabsItem {\n  icon: Resource;\n  iconSelected: Resource;\n  text: Resource;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\common\\src\\main\\ets\\viewmodel\\BottomTabsItem.ets", "project_name": "codelabs-master", "id": "4ca081313532b1609d55347eeda2ce63d96553bdc32e11e7372a12fa837aaa0d"}
{"text": "export interface DriveTabsItem {\n  img: Resource;\n  title: Resource;\n  intro: Resource;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\common\\src\\main\\ets\\viewmodel\\DriveTabsItem.ets", "project_name": "codelabs-master", "id": "8c6bf67929d843bc8181ba459eca1a078a0526d70c5431b107f6f115d2fc57d3"}
{"text": "export interface MineTabsItem {\n  icon: Resource;\n  title: Resource;\n  more: Resource;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\common\\src\\main\\ets\\viewmodel\\MineTabsItem.ets", "project_name": "codelabs-master", "id": "e0d88804d2707ba58c97813c91ede7120137e2fd905b1f3ef35d95f5658ee428"}
{"text": "import { BottomTabsItem, CommonConstants as Const } from '@ohos/common';\nimport { BottomTabsList } from '../viewmodel/BottomTabsModel';\n\nfunction getTabImgSrc(item: BottomTabsItem, index: number) {\n  let imgSrc = item.icon;\n  if (BottomTabsList.indexOf(item) === index) {\n    imgSrc = item.iconSelected;\n  }\n  return imgSrc;\n}\n\nfunction getTabTextColor(item: BottomTabsItem, index: number) {\n  let color = $r('app.color.bottom_tabs_font_color');\n  if (BottomTabsList.indexOf(item) === index) {\n    color = $r('app.color.bottom_tabs_font_color_selected');\n  }\n  return color;\n}\n\n@Component\nexport struct BottomTabs {\n  @Link bottomTabIndex: number;\n\n  build() {\n    Flex({ direction: FlexDirection.Row, justifyContent: FlexAlign.SpaceEvenly, alignItems: ItemAlign.Center }) {\n      ForEach(BottomTabsList, (item: BottomTabsItem) => {\n        Column() {\n          Image(getTabImgSrc(item, this.bottomTabIndex))\n            .width(Const.BOTTOM_IMAGE_SIZE)\n            .height(Const.BOTTOM_IMAGE_SIZE)\n            .objectFit(ImageFit.Contain)\n            .margin({ bottom: $r('app.float.bottom_margin') })\n\n          Text(item.text)\n            .fontSize($r('app.float.bottom_font_size'))\n            .opacity(Const.OPACITY)\n            .fontColor(getTabTextColor(item, this.bottomTabIndex))\n        }\n        .width(Const.BOTTOM_TAB_WIDTH)\n        .onClick(() => {\n          this.bottomTabIndex = BottomTabsList.indexOf(item);\n        })\n      }, (item: BottomTabsItem) => JSON.stringify(item))\n    }\n    .width(Const.FULL_SIZE)\n    .height(Const.BOTTOM_TAB_HEIGHT)\n    .backgroundColor($r('app.color.bottom_tabs_background_color'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\product\\default\\src\\main\\ets\\view\\BottomTabsComponent.ets", "project_name": "codelabs-master", "id": "00cdfb9d265f9ff194b8cd1e98f0fe5303875abc177526c8b9aa0c6e0d34f508"}
{"text": "import { DriveTabsItem, CommonConstants as Const } from '@ohos/common';\nimport { DriveList } from '../viewmodel/DriveTabsModel';\n\n@Component\nexport struct DriveTabs {\n  private scroller: Scroller = new Scroller();\n\n  build() {\n    Scroll(this.scroller) {\n      GridRow({\n        columns: { xs: Const.GRID_4, sm: Const.GRID_4, md: Const.GRID_8, lg: Const.GRID_12 },\n        gutter: { x : $r('app.float.gutter_drive') },\n        breakpoints: { value: [Const.BREAKPOINTS_SM, Const.BREAKPOINTS_MD, Const.BREAKPOINTS_LG] }\n      }) {\n        GridCol({ span: { xs: Const.GRID_4, sm: Const.GRID_4, md: Const.GRID_8, lg: Const.GRID_12 } }) {\n          Row() {\n            Text($r('app.string.title_drive'))\n              .fontSize($r('app.float.title_font_size'))\n              .fontWeight(Const.FONT_WEIGHT)\n              .width(Const.FULL_SIZE)\n              .margin({\n                top: $r('app.float.drive_title_margin'),\n                bottom: $r('app.float.drive_title_margin'),\n                left: $r('app.float.drive_title_margin')\n              })\n          }\n        }\n        .height($r('app.float.title_height'))\n        \n        ForEach(DriveList, (item: DriveTabsItem) => {\n          GridCol({ span: { xs: Const.NUM_2, sm: Const.NUM_2, md: Const.NUM_2, lg: Const.NUM_2 } }) {\n            Column() {\n              Image(item.img)\n                .aspectRatio(1)\n                .margin({ bottom: $r('app.float.drive_image_margin') })\n\n              Text(item.title)\n                .fontSize($r('app.float.drive_text_font_size1'))\n                .fontWeight(Const.FONT_WEIGHT)\n                .width(Const.FULL_SIZE)\n                .height($r('app.float.drive_text_height1'))\n\n              Text(item.intro)\n                .fontSize($r('app.float.drive_text_font_size2'))\n                .opacity(Const.OPACITY)\n                .width(Const.FULL_SIZE)\n                .height($r('app.float.drive_text_height2'))\n                .margin({ bottom: $r('app.float.drive_text_margin') })\n            }\n          }\n        }, (item: DriveTabsItem) => JSON.stringify(item))\n      }\n    }\n    .width(Const.FULL_SIZE)\n    .height(Const.FULL_SIZE)\n    .align(Alignment.TopStart)\n    .scrollBar(BarState.Off)\n  }\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\product\\default\\src\\main\\ets\\view\\DriveTabsComponent.ets", "project_name": "codelabs-master", "id": "8d2a145042e9457c0c54af0853fdc23dc8ce67fe5395be7b3e30cfba1023cba9"}
{"text": "import { HomeTabsItem, CommonConstants as Const } from '@ohos/common';\nimport { RecentlyPlayList } from '../viewmodel/HomeTabsModel';\n\n@Component\nexport struct RecentlyPlayed {\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.title_home_recently'))\n          .fontSize($r('app.float.home_text_size1'))\n          .fontWeight(Const.FONT_WEIGHT)\n        Blank()\n        Text($r('app.string.title_home_more'))\n          .fontSize($r('app.float.home_text_size2'))\n          .opacity(Const.OPACITY)\n        Image($r('app.media.ic_more'))\n          .width($r('app.float.home_image_size'))\n      }\n      .width(Const.FULL_SIZE)\n      .height($r('app.float.home_row_width1'))\n      .padding({\n        top: $r('app.float.home_margin3'),\n        left: $r('app.float.home_margin2'),\n        right: $r('app.float.home_margin2')\n      })\n\n      Row() {\n        List({ space: Const.ITEM_SPACE }) {\n          ForEach(RecentlyPlayList, (item: HomeTabsItem) => {\n            ListItem() {\n              Column() {\n                Image(item.img)\n                  .height($r('app.float.home_image_height'))\n                  .margin({ bottom: $r('app.float.home_margin1') })\n                Text(item.title)\n                  .width($r('app.float.home_text_width'))\n                  .height($r('app.float.home_text_height1'))\n                  .fontSize($r('app.float.home_text_size2'))\n                  .fontWeight(Const.FONT_WEIGHT)\n                Text(item.intro)\n                  .width($r('app.float.home_text_width'))\n                  .height($r('app.float.home_text_height2'))\n                  .fontSize($r('app.float.home_text_size3'))\n                  .opacity(Const.OPACITY)\n              }\n            }\n          }, (item: HomeTabsItem) => JSON.stringify(item))\n        }\n        .width(Const.FULL_SIZE)\n        .height($r('app.float.home_row_height1'))\n        .listDirection(Axis.Horizontal)\n      }\n      .width(Const.FULL_SIZE)\n      .height($r('app.float.home_row_height1'))\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\product\\default\\src\\main\\ets\\view\\RecentlyPlayedComponent.ets", "project_name": "codelabs-master", "id": "9696701772f749b82a2d4c76f9056b9c54b9492d0056fd825eaf1ee3eabfaaa3"}
{"text": "import { HomeTabsItem, CommonConstants as Const } from '@ohos/common';\nimport { RecommendList } from '../viewmodel/HomeTabsModel';\n\n@Component\nexport struct Recommended {\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.title_home_recommend'))\n          .fontSize($r('app.float.home_text_size1'))\n          .fontWeight(Const.FONT_WEIGHT)\n        Blank()\n        Text($r('app.string.title_home_more'))\n          .fontSize($r('app.float.home_text_size2'))\n          .opacity(Const.OPACITY)\n        Image($r('app.media.ic_more'))\n          .width($r('app.float.home_image_size'))\n      }\n      .width(Const.FULL_SIZE)\n      .height($r('app.float.home_row_width1'))\n      .padding({\n        top: $r('app.float.home_margin3'),\n        left: $r('app.float.home_margin2'),\n        right: $r('app.float.home_margin2')\n      })\n\n      Row() {\n        List({ space: Const.ITEM_SPACE }) {\n          ForEach(RecommendList, (item: HomeTabsItem) => {\n            ListItem() {\n              Column() {\n                Image(item.img)\n                  .height($r('app.float.home_image_height2'))\n                  .margin({ bottom: $r('app.float.home_margin1') })\n              }\n            }\n          }, (item: HomeTabsItem) => JSON.stringify(item))\n        }\n        .width(Const.FULL_SIZE)\n        .height($r('app.float.home_list_height2'))\n        .listDirection(Axis.Horizontal)\n      }\n      .width(Const.FULL_SIZE)\n    }\n    .height($r('app.float.home_column_height'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\product\\default\\src\\main\\ets\\view\\RecommendedComponent.ets", "project_name": "codelabs-master", "id": "0af8f2ebbf61ce8aa1424ae139b70d993c3347362f6093b055ce00f4358cff96"}
{"text": "import { BottomTabsItem } from '@ohos/common';\n\nexport const BottomTabsList: Array<BottomTabsItem> = [\n  {\n    icon: $r('app.media.ic_home'),\n    iconSelected: $r('app.media.ic_home_selected'),\n    text: $r('app.string.bottom_text_home')\n  },\n  {\n    icon: $r('app.media.ic_find'),\n    iconSelected: $r('app.media.ic_find_selected'),\n    text: $r('app.string.bottom_text_find')\n  },\n  {\n    icon: $r('app.media.ic_drive'),\n    iconSelected: $r('app.media.ic_drive_selected'),\n    text: $r('app.string.bottom_text_drive')\n  },\n  {\n    icon: $r('app.media.ic_mine'),\n    iconSelected: $r('app.media.ic_mine_selected'),\n    text: $r('app.string.bottom_text_mine')\n  }\n]", "path": "codelabs-master\\HarmonyOS_NEXT\\Multi_device_V2\\product\\default\\src\\main\\ets\\viewmodel\\BottomTabsModel.ets", "project_name": "codelabs-master", "id": "7518c6f8d73929c8e45b764dc9ffeba0513f98d658d1e8741b217ee684d670fa"}
{"text": "export { BreakpointConstants } from '../constantsCommon/src/main/ets/constants/BreakpointConstants';\nexport { StyleConstants } from '../constantsCommon/src/main/ets/constants/StyleConstants';\nexport { GridConstants } from '../constantsCommon/src/main/ets/constants/GridConstants';\nexport { RouterUrlConstants } from '../constantsCommon/src/main/ets/constants/RouterUrlConstants';\nexport { SongConstants } from './src/main/ets/constants/SongConstants';", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\constantsCommon\\index.ets", "project_name": "codelabs-master", "id": "7967b2e561ce25987466fbe16f1e0464601ce27a0bcb11ff07fffcca40c2ec95"}
{"text": "export class RouterUrlConstants {\n  \n  static readonly MUSIC_PLAY: string = '@bundle:com.huawei.music.musichome/musicPlay/ets/pages/PlayPage';\n\n  \n  static readonly MUSIC_LIST: string = '@bundle:com.huawei.music.musichome/musicList/ets/pages/Index';\n\n  \n  static readonly MUSIC_COMMENT: string = '@bundle:com.huawei.music.musichome/musicComment/ets/pages/Index';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\constantsCommon\\src\\main\\ets\\constants\\RouterUrlConstants.ets", "project_name": "codelabs-master", "id": "2ad3d0e853d8f616c0bb2426261541cb37b80b651a65d9f9d0bd7a41c6a7c033"}
{"text": "import hilog from '@ohos.hilog';\n\nexport class Logger {\n  private static domain: number = 0xFF00;\n  private static prefix: string = 'MusicPlay';\n  private static format: string = '%{public}s, %{public}s';\n\n  static debug(...args: string[]): void {\n    hilog.debug(Logger.domain, Logger.prefix, Logger.format, args);\n  }\n\n  static info(...args: string[]): void {\n    hilog.info(Logger.domain, Logger.prefix, Logger.format, args);\n  }\n\n  static warn(...args: string[]): void {\n    hilog.warn(Logger.domain, Logger.prefix, Logger.format, args);\n  }\n\n  static error(...args: string[]): void {\n    hilog.error(Logger.domain, Logger.prefix, Logger.format, args);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\mediaCommon\\src\\main\\ets\\utils\\Logger.ets", "project_name": "codelabs-master", "id": "0428ea6a8b3ead186113f2e8af3f11fd2c6f348af62f71ba4dc01e82d0782c67"}
{"text": "import image from '@ohos.multimedia.image';\nimport common from '@ohos.app.ability.common';\nimport resourceManager from '@ohos.resourceManager';\nimport { Logger } from './Logger';\n\nconst TAG = 'MediaTools';\n\nexport class MediaTools {\n\n  static async getPixelMapFromResource(context: common.UIAbilityContext,\n      name: resourceManager.Resource): Promise<PixelMap> {\n    let resourceMgr = context.resourceManager;\n    let fileData = await resourceMgr.getMediaContent(name);\n    return await image.createImageSource(fileData.buffer).createPixelMap();\n  }\n\n  static async getPixelMapFromFile(id: string, path: string): Promise<image.PixelMap> {\n    Logger.info(TAG, 'getPixelMapFromFile id:' + id + ', path:' + path);\n    return await image.createImageSource(path).createPixelMap();\n  }\n\n  \n  private static fill(value: number): string {\n    return (value < 10 ? `0${value}` : `${value}`);\n  }\n\n  static msToCountdownTime(ms: number): string {\n    if (!ms) {\n      return '00:00';\n    }\n    const days = Math.floor(ms / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((ms % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((ms % (1000 * 60)) / 1000);\n    return `${(days ? MediaTools.fill(days) + ':' : '')}${(hours ? MediaTools.fill(hours) + ':' : '')}\n      ${MediaTools.fill(minutes)}:${MediaTools.fill(seconds)} `.trim();\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\mediaCommon\\src\\main\\ets\\utils\\MediaTools.ets", "project_name": "codelabs-master", "id": "c749a8f3fb055a74e99eb4b04ddc14f5c0c8ddf4062bc811e55eb9ce72ecda4e"}
{"text": "import common from '@ohos.app.ability.common';\nimport resourceManager from '@ohos.resourceManager';\nimport { SongItem } from '../viewmodel/SongData';\nimport { Logger } from './Logger';\nimport { BusinessError } from '@ohos.base';\n\nexport default class SongItemBuilder {\n  private context: common.UIAbilityContext | undefined = AppStorage.Get('context');\n  private realUrl?: resourceManager.RawFileDescriptor;\n  private songItem: SongItem | null = null;\n\n  public async build(songItem: SongItem): Promise<SongItem> {\n    this.songItem = songItem;\n    if (!this.context) {\n      return this.songItem;\n    }\n    let rawfileFd = await this.context.createModuleContext('musicList').resourceManager.getRawFd(songItem.src)\n      .catch((error: BusinessError) => {\n        Logger.error(`resourceManager error code ${error.code} message ${error.message}`);\n      })\n    if (rawfileFd) {\n      this.realUrl = rawfileFd;\n    } else {\n      Logger.error('get rawfileFd failed')\n    }\n    Logger.info('MediaAssetBuilder build realUrl:' + this.realUrl);\n    return this.songItem;\n  }\n\n  public getRealUrl(): resourceManager.RawFileDescriptor | undefined {\n    Logger.info(`url ${this.realUrl}`)\n    return this.realUrl;\n  }\n\n  public async release(): Promise<void> {\n    if (this.context && this.context !== null && this.songItem !== null) {\n      this.context.resourceManager.closeRawFd(this.songItem.src);\n    }\n    this.songItem = null;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\mediaCommon\\src\\main\\ets\\utils\\SongItemBuilder.ets", "project_name": "codelabs-master", "id": "91f8ca27b2abe45af9a92542a0b54a7d5a119348afdae8123fca09007c80c5d2"}
{"text": "export class MenuData {\n  \n  value: string = '';\n\n  \n  action: () => void = () => {};\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\mediaCommon\\src\\main\\ets\\viewmodel\\MenuData.ets", "project_name": "codelabs-master", "id": "0c3b1fc83da1638846be6c4a166a2459ef42560e230b1f0ad5206be638774768"}
{"text": "enum MusicPlayMode {\n  SINGLE_CYCLE = 0,\n  ORDER = 1,\n  RANDOM = 2\n}\n\nenum AudioPlayerState {\n  IDLE,\n  INITIALIZED,\n  LOAD,\n  PREPARED,\n  PLAY,\n  PAUSE,\n  STOP,\n  ERROR,\n  COMPLETED,\n  RELEASED,\n  PROGRESS_SPEED,\n  TIME_UPDATE,\n  VOLUME_CHANGE,\n  UNKNOWN\n}\n\nexport { MusicPlayMode, AudioPlayerState }", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\common\\mediaCommon\\src\\main\\ets\\viewmodel\\MusicData.ets", "project_name": "codelabs-master", "id": "18ac956de405921608dedb2305257b281b4953a61b7b73f5c9cd0e90f7339ee1"}
{"text": "import { Header } from '../view/Header';\nimport { LiveList } from '../view/LiveList';\nimport { LiveConstants} from '../constants/LiveConstants';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column() {\n      Header()\n      LiveList()\n    }\n    .width(LiveConstants.FULL_WIDTH_PERCENT)\n    .height(LiveConstants.FULL_HEIGHT_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\live\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "d51b45b08702e32fab10d11cc30dca3e7b55c2dbefe100948a22a1ae67aef23c"}
{"text": "import router from '@ohos.router';\nimport { LiveConstants } from '../constants/LiveConstants';\n\n@Component\nexport struct Header {\n  build() {\n    Row() {\n      Image($r('app.media.ic_back'))\n        .width($r('app.float.back_width'))\n        .height($r('app.float.back_height'))\n        .margin({ left: $r('app.float.back_left_margin') })\n        .onClick(() => {\n          router.back();\n        })\n      Text($r('app.string.live_title'))\n        .fontSize($r('app.float.title_font_size'))\n        .fontFamily(LiveConstants.LIVE_TITLE_FONT_FAMILY)\n        .fontWeight(LiveConstants.TITLE_FONT_WEIGHT)\n        .fontColor($r('app.color.live_title_color'))\n        .margin({ left: $r('app.float.title_left_margin') })\n        .height($r('app.float.title_height'))\n    }\n    .height($r('app.float.title_row_height'))\n    .width(LiveConstants.FULL_WIDTH_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\live\\src\\main\\ets\\view\\Header.ets", "project_name": "codelabs-master", "id": "de7f72d792bb96b766135d01ac1f5a1a5bef4049fd42e3cab9e7bb64d0df2460"}
{"text": "import { LiveStream } from '../viewmodel/LiveStream';\nimport { LiveConstants } from '../constants/LiveConstants';\nimport { LiveStreamViewModel } from '../viewmodel/LiveStreamViewModel';\n\n@Component\nexport struct LiveList {\n  private scroller: Scroller = new Scroller();\n  @State liveStreams: LiveStream[] = new LiveStreamViewModel().getLiveStreamList();\n  @State currentBreakpoint: string = LiveConstants.CURRENT_BREAKPOINT;\n\n  build() {\n    GridRow({\n      columns: { sm: LiveConstants.FOUR_COLUMN, md: LiveConstants.EIGHT_COLUMN, lg: LiveConstants.TWELVE_COLUMN },\n      breakpoints: { value: [LiveConstants.SMALL_DEVICE_TYPE, LiveConstants.MIDDLE_DEVICE_TYPE,\n        LiveConstants.LARGE_DEVICE_TYPE] },\n      gutter: { x: $r('app.float.grid_row_gutter') }\n    }) {\n      GridCol({\n        span: { sm: LiveConstants.FOUR_COLUMN, md:LiveConstants.SIX_COLUMN, lg: LiveConstants.EIGHT_COLUMN },\n        offset: { sm: LiveConstants.ZERO_COLUMN, md: LiveConstants.ONE_COLUMN, lg: LiveConstants.TWO_COLUMN }\n      }) {\n        Scroll(this.scroller) {\n          Column() {\n            ForEach(this.liveStreams, (item: LiveStream, index: number) => {\n              this.LiveItem(item, index)\n            }, (item: LiveStream, index: number) => index + JSON.stringify(item))\n          }\n          .width(LiveConstants.FULL_WIDTH_PERCENT)\n        }\n        .align(Alignment.Top)\n        .scrollBar(BarState.Off)\n        .margin({\n          bottom: $r('app.float.scroll_margin_bottom')\n        })\n      }\n      .margin({ left: $r('app.float.grid_col_left_margin'), right: $r('app.float.grid_col_right_margin') })\n    }\n    .onBreakpointChange((breakPoints) => {\n      this.currentBreakpoint = breakPoints;\n    })\n  }\n\n  @Builder\n  LiveItem(item: LiveStream, index: number) {\n    Stack({ alignContent: Alignment.Center }) {\n      Image(item.liveBackground)\n        .size({ width: LiveConstants.FULL_WIDTH_PERCENT, height: $r('app.float.live_image_height') })\n        .borderRadius($r('app.float.live_image_border_radius'))\n\n      Column() {\n        Row() {\n          Image($r('app.media.ic_video'))\n            .width($r('app.float.video_width'))\n            .height($r('app.float.video_height'))\n            .margin({ top: this.currentBreakpoint === LiveConstants.CURRENT_BREAKPOINT ?\n              $r('app.float.video_top_margin_small') : $r('app.float.video_top_margin_middle_large') })\n        }\n        .height($r('app.float.video_row_height'))\n        .width(LiveConstants.FULL_WIDTH_PERCENT)\n        .alignItems(VerticalAlign.Top)\n        .justifyContent(FlexAlign.End)\n\n        Column() {\n          Row() {\n            Text(item.title)\n              .fontColor($r('app.color.white'))\n              .fontWeight(LiveConstants.LIVE_TITLE_FONT_WEIGHT)\n              .fontFamily(LiveConstants.LIVE_ITEM_TITLE_FONT_FAMILY)\n              .fontSize($r('app.float.live_item_title_font_size'))\n          }\n          .height($r('app.float.live_item_title_height'))\n          .margin({ top: this.currentBreakpoint === LiveConstants.CURRENT_BREAKPOINT ?\n            $r('app.float.live_item_top_margin_phone') : $r('app.float.live_item_top_margin_tablet')})\n          .width(LiveConstants.FULL_WIDTH_PERCENT)\n\n          Row() {\n            Text(item.liveIntroduction)\n              .fontFamily(LiveConstants.LIVE_ITEM_INTRODUCTION_FONT_FAMILY)\n              .fontSize($r('app.float.live_introduction_font_size'))\n              .fontColor($r('app.color.live_introduction'))\n              .fontWeight(LiveConstants.LIVE_INTRODUCTION_FONT_WEIGHT)\n          }\n          .width(LiveConstants.FULL_WIDTH_PERCENT)\n          .height($r('app.float.live_introduction_height'))\n          .margin({ top: $r('app.float.live_introduction_top_margin') })\n        }\n        .height($r('app.float.live_item_row_height'))\n        .alignItems(HorizontalAlign.Start)\n        .justifyContent(FlexAlign.Start)\n      }\n      .height($r('app.float.live_image_height'))\n      .padding({\n        left: this.currentBreakpoint === LiveConstants.CURRENT_BREAKPOINT ?\n          $r('app.float.small_left_right_padding') : $r('app.float.middle_large_left_right_padding'),\n        right: this.currentBreakpoint === LiveConstants.CURRENT_BREAKPOINT ?\n          $r('app.float.small_left_right_padding') : $r('app.float.middle_large_left_right_padding')\n      })\n    }\n    .width(LiveConstants.FULL_WIDTH_PERCENT)\n    .margin({\n      top: index === 0 ? $r('app.float.stack_top_margin_small') : 0,\n      bottom: $r('app.float.stack_top_margin_middle')\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\live\\src\\main\\ets\\view\\LiveList.ets", "project_name": "codelabs-master", "id": "11a57554ea4faf3e46a74a0070fe977106f8d56183c3703dc56287c9fec00d01"}
{"text": "export class LiveStream {\n  \n  title: Resource;\n\n  \n  liveIntroduction: Resource;\n\n  \n  liveBackground: Resource;\n\n  constructor(title: Resource, liveIntroduction: Resource, liveBackground: Resource) {\n    this.title = title;\n    this.liveIntroduction = liveIntroduction;\n    this.liveBackground = liveBackground;\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\live\\src\\main\\ets\\viewmodel\\LiveStream.ets", "project_name": "codelabs-master", "id": "cdf4aff5a91f82e356eba39f37fc244fb522f7cb3903516c903653a45ad832ce"}
{"text": "import router from '@ohos.router';\nimport { Logger, SongItem } from '@ohos/mediaCommon';\nimport { RouterUrlConstants, StyleConstants } from '@ohos/constantsCommon';\nimport { BusinessError } from '@ohos.base';\n\n@Component\nexport struct MusicInfoComponent {\n  @StorageProp('selectIndex') selectIndex: number = 0;\n  @StorageLink('songList') songList: SongItem[] = [];\n\n  build() {\n    Row() {\n      Image(this.songList[this.selectIndex].label)\n        .width($r('app.float.info_image_width'))\n        .height($r('app.float.info_image_height'))\n        .margin({\n          right: $r('app.float.info_image_margin_right')\n        })\n        .borderRadius($r('app.float.info_image_border'))\n      Column() {\n        Text(this.songList[this.selectIndex].title)\n          .fontSize($r('app.float.info_title_size'))\n          .fontWeight(FontWeight.Regular)\n          .fontColor($r('app.color.info_title_color'))\n        Text(this.songList[this.selectIndex].singer)\n          .fontSize($r('app.float.info_singer_size'))\n          .fontWeight(FontWeight.Regular)\n          .fontColor($r('app.color.info_singer_color'))\n          .lineHeight($r('app.float.info_singer_line_height'))\n      }\n      .alignItems(HorizontalAlign.Start)\n\n      Blank()\n      Image($r('app.media.ic_arrow_right'))\n        .width($r('app.float.arrow_right_width'))\n        .height($r('app.float.arrow_right_height'))\n        .onClick(() => {\n          router.pushUrl({\n            url: RouterUrlConstants.MUSIC_PLAY\n          }, router.RouterMode.Single).catch((error: BusinessError) => {\n            Logger.error('pushUrl failed :' + JSON.stringify(error))\n          });\n        })\n    }\n    .height($r('app.float.info_height'))\n    .width(StyleConstants.FULL_WIDTH)\n    .padding({\n      top: $r('app.float.info_padding_top'),\n      bottom: $r('app.float.info_padding_bottom')\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicComment\\src\\main\\ets\\view\\MusicInfoComponent.ets", "project_name": "codelabs-master", "id": "4288617ddef719e9d0a4ef158829e23398053d0e0a47eabfdacdcdb30ff53e05"}
{"text": "export class Comment {\n  \n  nickname: string;\n\n  \n  content: string;\n\n  \n  time: string;\n\n  \n  icon: ResourceStr;\n\n  \n  commentList?: Comment[];\n\n  constructor(nickname: string, content: string, time: string, icon: ResourceStr, commentList?: Comment[]) {\n    this.nickname = nickname;\n    this.content = content;\n    this.time = time;\n    this.icon = icon;\n    this.commentList = commentList;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicComment\\src\\main\\ets\\viewmodel\\Comment.ets", "project_name": "codelabs-master", "id": "5c50b25877eb8c0c2e58190de8c2036e0a12e93b9d504e9a1e0a3c650e31fabc"}
{"text": "export { Content } from './components/Content';\nexport { Header } from './components/Header';\nexport { Player } from './components/Player';\n", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicList\\src\\main\\ets\\Index.ets", "project_name": "codelabs-master", "id": "50ce4d1bdda69bfe3c8a629650ff762918d9aa21b71a2dccf3618c67e33650af"}
{"text": "import { StyleConstants } from '@ohos/constantsCommon';\nimport { BreakpointConstants } from '@ohos/constantsCommon';\nimport { AlbumComponent } from './AlbumComponent';\n\n@Component\nexport struct AlbumCover {\n  @Link currentBreakpoint: string;\n\n  build() {\n    if (this.currentBreakpoint === BreakpointConstants.BREAKPOINT_SM) {\n      AlbumComponent({ currentBreakpoint: this.currentBreakpoint })\n    } else {\n      AlbumComponent({ currentBreakpoint: this.currentBreakpoint })\n        .height(StyleConstants.FULL_HEIGHT)\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicList\\src\\main\\ets\\components\\AlbumCover.ets", "project_name": "codelabs-master", "id": "02cd56f07f3a1aa95d399794d66003a18752d29ee39617f72a78c72a296f53b1"}
{"text": "import { GridConstants } from '@ohos/constantsCommon';\nimport { StyleConstants } from '@ohos/constantsCommon';\nimport { AlbumCover } from './AlbumCover';\nimport { PlayList } from './PlayList';\n\n@Component\nexport struct Content {\n  @Link currentBreakpoint: string;\n\n  build() {\n    GridRow() {\n      GridCol({ span: { sm: GridConstants.SPAN_TWELVE, md: GridConstants.SPAN_SIX, lg: GridConstants.SPAN_FOUR } }) {\n        AlbumCover({ currentBreakpoint: this.currentBreakpoint })\n      }\n      .backgroundColor($r('app.color.album_background'))\n\n      GridCol({ span: { sm: GridConstants.SPAN_TWELVE, md: GridConstants.SPAN_SIX, lg: GridConstants.SPAN_EIGHT } }) {\n        PlayList({ currentBreakpoint: this.currentBreakpoint })\n      }\n      .borderRadius($r('app.float.playlist_border_radius'))\n    }\n    .height(StyleConstants.FULL_HEIGHT)\n    .onBreakpointChange((breakpoints: string) => {\n      this.currentBreakpoint = breakpoints;\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicList\\src\\main\\ets\\components\\Content.ets", "project_name": "codelabs-master", "id": "307f4626272604a50780bc7dcd66cda3d5491a22522723dbd682c9efe34ec42c"}
{"text": "import router from '@ohos.router';\nimport promptAction from '@ohos.promptAction';\nimport { BreakpointType, MenuData } from '@ohos/mediaCommon';\nimport { StyleConstants } from '@ohos/constantsCommon';\nimport { HeaderConstants } from '../constants/HeaderConstants';\n\n@Component\nexport struct Header {\n  @Link currentBreakpoint: string;\n\n  build() {\n    Row() {\n      Image($r('app.media.ic_back'))\n        .width($r('app.float.icon_width'))\n        .height($r('app.float.icon_height'))\n        .margin({ left: $r('app.float.icon_margin') })\n        .onClick(() => {\n          router.back()\n        })\n      Text($r('app.string.play_list'))\n        .fontSize(new BreakpointType({\n          sm: $r('app.float.header_font_sm'),\n          md: $r('app.float.header_font_md'),\n          lg: $r('app.float.header_font_lg')\n        }).getValue(this.currentBreakpoint))\n        .fontWeight(HeaderConstants.TITLE_FONT_WEIGHT)\n        .fontColor($r('app.color.title_color'))\n        .opacity($r('app.float.title_opacity'))\n        .letterSpacing(HeaderConstants.LETTER_SPACING)\n        .padding({ left: $r('app.float.title_padding_left') })\n\n      Blank()\n\n      Image($r('app.media.ic_more'))\n        .width($r('app.float.icon_width'))\n        .height($r('app.float.icon_height'))\n        .margin({ right: $r('app.float.icon_margin') })\n        .bindMenu(this.getMenu())\n    }\n    .width(StyleConstants.FULL_WIDTH)\n    .height($r('app.float.title_bar_height'))\n    .zIndex(HeaderConstants.Z_INDEX)\n  }\n\n  getMenu(): MenuData[] {\n    let menuItem: MenuData = new MenuData();\n    let menuDatas: MenuData[] = [];\n    if (canIUse(HeaderConstants.SYSCAP_ETHERNET)) {\n      menuItem.value = HeaderConstants.AUDIO_DEVICE_SERVICE;\n      menuItem.action = (): void => {\n        promptAction.showToast({\n          message: HeaderConstants.AUDIO_DEVICE_SERVICE,\n          duration: HeaderConstants.TOAST_DURATION\n        });\n      };\n      menuDatas.push(menuItem);\n    }\n    return menuDatas;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicList\\src\\main\\ets\\components\\Header.ets", "project_name": "codelabs-master", "id": "6f3d1942db1f8471e6df2279aad9680959a808413c1531603ee5640d719beac7"}
{"text": "import { BreakpointSystem, MediaService } from '@ohos/mediaCommon';\nimport { StyleConstants, BreakpointConstants, SongConstants } from '@ohos/constantsCommon';\nimport { Header } from '../components/Header';\nimport { Player } from '../components/Player';\nimport { Content } from '../components/Content';\nimport { songList } from '../viewmodel/SongListData'\n\n@Entry\n@Component\nstruct Index {\n  private breakpointSystem: BreakpointSystem = new BreakpointSystem();\n  @State currentBreakpoint: string = BreakpointConstants.BREAKPOINT_SM;\n\n  aboutToAppear() {\n    AppStorage.setOrCreate('songList', songList);\n    MediaService.getInstance();\n    this.breakpointSystem.register();\n  }\n\n  aboutToDisappear() {\n    this.breakpointSystem.unregister();\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Top }) {\n      Header({ currentBreakpoint: this.currentBreakpoint })\n      Content({ currentBreakpoint: this.currentBreakpoint })\n      Player({ currentBreakpoint: this.currentBreakpoint })\n    }\n    .width(StyleConstants.FULL_WIDTH)\n    .backgroundColor(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_SM ?\n      $r('app.color.page_background_sm') : $r('app.color.page_background_other'))\n  }\n\n  pageTransition() {\n    PageTransitionEnter({ duration: SongConstants.TRANSITION_DURATION, curve: Curve.Smooth, type: RouteType.Pop })\n    PageTransitionExit({ duration: SongConstants.TRANSITION_DURATION, curve: Curve.Smooth, type: RouteType.Push })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicList\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "06091013f83b0bdbc35bd6f0ef12ebeb135caca5d3670105e5e38fd28c71de7e"}
{"text": "import { MediaService, BreakpointType, MusicPlayMode, Logger } from '@ohos/mediaCommon';\nimport { PlayControlModel } from '../viewmodel/PlayControlModel';\nimport { ControlConstants } from '../constants/ControlConstants';\nimport { PlayConstants } from '../constants/PlayConstants';\n\n@Component\nexport struct PlayControlComponent {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'sm';\n  @ObjectLink playControl: PlayControlModel;\n  @State index: number = 0;\n\n  build() {\n    Image(this.playControl.icon)\n      .width(this.index === PlayConstants.PLAY_INDEX ? new BreakpointType({\n        sm: $r('app.float.play_image_size'),\n        md: $r('app.float.play_image_size'),\n        lg: $r('app.float.play_image_size_lg')\n      }).getValue(this.currentBreakpoint) : new BreakpointType({\n        sm: $r('app.float.twenty_four'),\n        md: $r('app.float.twenty_four'),\n        lg: $r('app.float.play_control_image_size')\n      }).getValue(this.currentBreakpoint))\n      .aspectRatio(1)\n      .objectFit(ImageFit.Contain)\n      .onClick(() => this.playControlClick(this.playControl.key))\n  }\n\n  playControlClick(key?: string) {\n    switch (key) {\n      case ControlConstants.PLAY_MODE:\n        this.changePlayMode();\n        break;\n      case ControlConstants.PREVIOUS:\n        MediaService.getInstance().playPrevious();\n        break;\n      case ControlConstants.PLAY:\n        if (MediaService.getInstance().getFirst()) {\n          MediaService.getInstance().loadAssent(0);\n        } else {\n          MediaService.getInstance().play();\n        }\n        this.playControl.icon = $r('app.media.ic_play_big');\n        this.playControl.key = ControlConstants.PAUSE;\n        break;\n      case ControlConstants.PAUSE:\n        MediaService.getInstance().pause();\n        this.playControl.icon = $r('app.media.ic_pause_big');\n        this.playControl.key = ControlConstants.PLAY;\n        break;\n      case ControlConstants.NEXT:\n        MediaService.getInstance().playNextAuto(true);\n        break;\n      case ControlConstants.PLAY_LIST:\n        break;\n      default:\n        break;\n    }\n  }\n\n  private changePlayMode(): void {\n    const mode = [MusicPlayMode.SINGLE_CYCLE, MusicPlayMode.ORDER, MusicPlayMode.RANDOM];\n    const resource = [$r('app.media.ic_single_cycle'), $r('app.media.ic_list_cycle'), $r('app.media.ic_list_random')];\n    let index = MediaService.getInstance().getPlayMode() + 1;\n    if (index > mode.length - 1) {\n      index = 0;\n    }\n    Logger.info('change play mode setPlayModel index:' + index);\n    this.playControl.icon = resource[index];\n    MediaService.getInstance().setPlayModel(mode[index]);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicPlay\\src\\main\\ets\\component\\PlayControlComponent.ets", "project_name": "codelabs-master", "id": "8a75132a8d370902ecd2760374ff6d6586bd624524550070cb776e377dbd05f7"}
{"text": "@Observed\nexport class PlayControlModel {\n  icon: Resource;\n  key?: string;\n\n  constructor(icon: Resource, key?: string) {\n    this.icon = icon;\n    this.key = key;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\features\\musicPlay\\src\\main\\ets\\viewmodel\\PlayControlModel.ets", "project_name": "codelabs-master", "id": "968ea3b65f6012fc63023acbd76a16a3ea6ee71c9b9f454d3e928b17278ee4e8"}
{"text": "export default class IndexItem {\n  \n  title: ResourceStr;\n\n  \n  description: ResourceStr;\n\n  \n  button: ResourceStr;\n\n  \n  icon: Resource;\n\n  \n  url: string;\n\n  constructor(title: ResourceStr, description: ResourceStr, button: ResourceStr, icon: Resource, url: string) {\n    this.title = title;\n    this.description = description;\n    this.button = button;\n    this.icon = icon;\n    this.url = url;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\products\\phone\\src\\main\\ets\\common\\bean\\IndexItem.ets", "project_name": "codelabs-master", "id": "98d7d4478fa2f6f40bebb6c592c31fb7f7b9a533f5601153eaf6d966a10bc6cf"}
{"text": "export class HomeConstants {\n  \n  static readonly COLUMN_SPACE: string = '12vp';\n\n  \n  static readonly TEXT_OPACITY: number = 0.6;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\products\\phone\\src\\main\\ets\\common\\constants\\HomeConstants.ets", "project_name": "codelabs-master", "id": "f30ca766644858101ce52e5ef525acd87cd03a7d5248296de71a9b54c60c216d"}
{"text": "import router from '@ohos.router';\nimport IndexItem from '../common/bean/IndexItem';\nimport IndexViewModel from '../viewmodel/IndexViewModel';\nimport { BreakpointConstants, StyleConstants } from '@ohos/constantsCommon'\nimport { HomeConstants } from '../common/constants/HomeConstants';\n\n@Entry\n@Component\nstruct Index {\n  @State indexItemList: IndexItem[] = IndexViewModel.getIndexItemList();\n\n  build() {\n    GridRow({\n      breakpoints: {\n        value: BreakpointConstants.BREAKPOINT_VALUE,\n        reference: BreakpointsReference.WindowSize\n      },\n      columns: {\n        sm: BreakpointConstants.COLUMN_SM,\n        md: BreakpointConstants.COLUMN_MD,\n        lg: BreakpointConstants.COLUMN_LG\n      },\n      gutter: { x: BreakpointConstants.GUTTER_X },\n      direction: GridRowDirection.Row\n    }) {\n      GridCol({\n        span: {\n          sm: BreakpointConstants.SPAN_SM,\n          md: BreakpointConstants.SPAN_MD,\n          lg: BreakpointConstants.SPAN_LG\n        },\n        offset: {\n          md: BreakpointConstants.OFFSET_MD,\n          lg: BreakpointConstants.OFFSET_LG\n        }\n      }) {\n        Column({ space: HomeConstants.COLUMN_SPACE }) {\n          ForEach(this.indexItemList, (item: IndexItem) => {\n            Column() {\n              Text(item.title)\n                .fontSize($r('app.float.title_font_size'))\n                .fontColor(Color.White)\n              Text(item.description)\n                .fontSize($r('app.float.description_font_size'))\n                .opacity(HomeConstants.TEXT_OPACITY)\n                .fontColor(Color.White)\n                .margin({\n                  top: $r('app.float.description_margin_top')\n                })\n              Blank()\n              Column() {\n                Button() {\n                  Text(item.button)\n                    .fontSize($r('app.float.button_font_size'))\n                    .fontColor(Color.White)\n                }\n                .backgroundColor($r('app.color.button_background_color'))\n                .borderRadius($r('app.float.button_border_radius'))\n                .width($r('app.float.button_width'))\n                .height($r('app.float.button_height'))\n                .onClick(() => {\n                  router.pushUrl({\n                    url: item.url\n                  }, router.RouterMode.Single);\n                })\n              }\n              .alignItems(HorizontalAlign.End)\n              .width(StyleConstants.FULL_WIDTH)\n            }\n            .width(StyleConstants.FULL_WIDTH)\n            .height($r('app.float.item_height'))\n            .backgroundImage(item.icon)\n            .backgroundImageSize({\n              width: StyleConstants.FULL_WIDTH,\n              height: $r('app.float.item_height')\n            })\n            .borderRadius($r('app.float.item_border_radius'))\n            .padding($r('app.float.item_padding'))\n            .alignItems(HorizontalAlign.Start)\n            .justifyContent(FlexAlign.SpaceBetween)\n          }, (item: IndexItem, index?: number) => index + JSON.stringify(item))\n        }\n      }\n    }\n    .padding({\n      top: $r('app.float.column_padding_top'),\n      left: $r('app.float.column_padding_left'),\n      right: $r('app.float.column_padding_right')\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\products\\phone\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "f0ce3a30186f4e005700f36a8c7e26e2e3af98216ec6017416c2977ce36c053e"}
{"text": "import IndexItem from '../common/bean/IndexItem';\n\n\nclass IndexViewModel {\n  \n  getIndexItemList(): IndexItem[] {\n    let IndexItemList: IndexItem[] = [];\n    IndexItemList.push(new IndexItem($r('app.string.music_title'), $r('app.string.music_description'),\n      $r('app.string.button_music'), $r('app.media.ic_music'),\n      '@bundle:com.huawei.music.musichome/musicList/ets/pages/Index'));\n    IndexItemList.push(new IndexItem($r('app.string.live_title'), $r('app.string.live_description'),\n      $r('app.string.button_live'), $r('app.media.ic_live'),\n      '@bundle:com.huawei.music.musichome/live/ets/pages/Index'));\n    return IndexItemList;\n  }\n}\n\nexport default new IndexViewModel();", "path": "codelabs-master\\HarmonyOS_NEXT\\MusicHome\\products\\phone\\src\\main\\ets\\viewmodel\\IndexViewModel.ets", "project_name": "codelabs-master", "id": "c8a08589f5f7d069dd2b066296f67f79269c0b50f0cc97683e2d971197b3feba"}
{"text": "import http from '@ohos.net.http';\nimport ResponseResult from '../../viewmodel/ResponseResult';\nimport { CommonConstant as Const, ContentType } from '../constant/CommonConstant';\n\n\n\nexport function httpRequestGet(url: string): Promise<ResponseResult> {\n  let httpRequest = http.createHttp();\n  let responseResult = httpRequest.request(url, {\n    method: http.RequestMethod.GET,\n    readTimeout: Const.HTTP_READ_TIMEOUT,\n    header: {\n      'Content-Type': ContentType.JSON\n    },\n    connectTimeout: Const.HTTP_READ_TIMEOUT,\n    extraData: {}\n  });\n  let serverData: ResponseResult = new ResponseResult();\n  \n  return responseResult.then((value: http.HttpResponse) => {\n    if (value.responseCode === Const.HTTP_CODE_200) {\n      \n      let result = `${value.result}`;\n      let resultJson: ResponseResult = JSON.parse(result);\n      if (resultJson.code === Const.SERVER_CODE_SUCCESS) {\n        serverData.data = resultJson.data;\n      }\n      serverData.code = resultJson.code;\n      serverData.msg = resultJson.msg;\n    } else {\n      serverData.msg = `${$r('app.string.http_error_message')}&${value.responseCode}`;\n    }\n    return serverData;\n  }).catch(() => {\n    serverData.msg = $r('app.string.http_error_message');\n    return serverData;\n  })\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\common\\utils\\HttpUtil.ets", "project_name": "codelabs-master", "id": "53080ac7992be9cc93db4d90492f87923c07cd3970a059a0bd6c0c03e4f708c9"}
{"text": "import promptAction from '@ohos.promptAction';\nimport { CommonConstant as Const } from '../constant/CommonConstant';\nimport NewsViewModel from '../../viewmodel/NewsViewModel';\nimport { NewsData } from '../../viewmodel/NewsData';\nimport NewsModel from '../../viewmodel/NewsModel';\n\nexport function touchMoveLoadMore(that: NewsModel, event: TouchEvent) {\n  if (that.endIndex === that.newsData.length - 1 || that.endIndex === that.newsData.length) {\n    that.offsetY = event.touches[0].y - that.downY;\n    if (Math.abs(that.offsetY) > vp2px(that.pullUpLoadHeight) / 2) {\n      that.isCanLoadMore = true;\n      that.isVisiblePullUpLoad = true;\n      that.offsetY = -vp2px(that.pullUpLoadHeight) + that.offsetY * Const.Y_OFF_SET_COEFFICIENT;\n    }\n  }\n}\n\nexport function touchUpLoadMore(that: NewsModel) {\n  let self = that;\n  animateTo({\n    duration: Const.ANIMATION_DURATION,\n  }, () => {\n    self.offsetY = 0;\n  })\n  if ((self.isCanLoadMore === true) && (self.hasMore === true)) {\n    self.isLoading = true;\n    setTimeout(() => {\n      closeLoadMore(that);\n      NewsViewModel.getNewsList(self.currentPage, self.pageSize, Const.GET_NEWS_LIST).then((data: NewsData[]) => {\n        if (data.length === self.pageSize) {\n          self.currentPage++;\n          self.hasMore = true;\n        } else {\n          self.hasMore = false;\n        }\n        self.newsData = self.newsData.concat(data);\n      }).catch((err: string | Resource) => {\n        promptAction.showToast({ message: err });\n      })\n    }, Const.DELAY_TIME);\n  } else {\n    closeLoadMore(self);\n  }\n}\n\nexport function closeLoadMore(that: NewsModel) {\n  that.isCanLoadMore = false;\n  that.isLoading = false;\n  that.isVisiblePullUpLoad = false;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\common\\utils\\PullUpLoadMore.ets", "project_name": "codelabs-master", "id": "8a86752a849f54e2a7d73ca0324ce0f389eef4b1ff8ababe14a11e84c56246db"}
{"text": "import TabBar from '../view/TabBar';\nimport { CommonConstant as Const } from '../common/constant/CommonConstant';\n\n\n@Entry\n@Component\nstruct Index {\n\n  build() {\n    Column() {\n      TabBar()\n    }\n    .width(Const.FULL_WIDTH)\n    .backgroundColor($r('app.color.listColor'))\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "3646bf1df4c080ab6f2d041e790a88c976b6d5cfbbe2efc2811b4fe17c2fcbc0"}
{"text": "import { CustomRefreshLoadLayoutClass } from '../viewmodel/NewsData';\nimport { CommonConstant as Const } from '../common/constant/CommonConstant';\n\n\n@Component\nexport default struct CustomLayout {\n  @ObjectLink customRefreshLoadClass: CustomRefreshLoadLayoutClass;\n\n  build() {\n    Row() {\n      Image(this.customRefreshLoadClass.imageSrc)\n        .width(Const.RefreshLayout_IMAGE_WIDTH)\n        .height(Const.RefreshLayout_IMAGE_HEIGHT)\n\n      Text(this.customRefreshLoadClass.textValue)\n        .margin({\n          left: Const.RefreshLayout_TEXT_MARGIN_LEFT,\n          bottom: Const.RefreshLayout_TEXT_MARGIN_BOTTOM\n        })\n        .fontSize(Const.RefreshLayout_TEXT_FONT_SIZE)\n        .textAlign(TextAlign.Center)\n    }\n    .clip(true)\n    .width(Const.FULL_WIDTH)\n    .justifyContent(FlexAlign.Center)\n    .height(this.customRefreshLoadClass.heightValue)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\CustomRefreshLoadLayout.ets", "project_name": "codelabs-master", "id": "8b5c42b6f52ec086b4d2e669a3280875c08c28853c4d2eaab150019d47e9b91c"}
{"text": "import CustomRefreshLoadLayout from './CustomRefreshLoadLayout';\nimport { CustomRefreshLoadLayoutClass } from '../viewmodel/NewsData';\n\n\n@Component\nexport default struct LoadMoreLayout {\n  @ObjectLink loadMoreLayoutClass: CustomRefreshLoadLayoutClass;\n\n  build() {\n    Column() {\n      if (this.loadMoreLayoutClass.isVisible) {\n        CustomRefreshLoadLayout({\n          customRefreshLoadClass: new CustomRefreshLoadLayoutClass(this.loadMoreLayoutClass.isVisible,\n            this.loadMoreLayoutClass.imageSrc, this.loadMoreLayoutClass.textValue, this.loadMoreLayoutClass.heightValue)\n        })\n      } else {\n        CustomRefreshLoadLayout({\n          customRefreshLoadClass: new CustomRefreshLoadLayoutClass(this.loadMoreLayoutClass.isVisible,\n            this.loadMoreLayoutClass.imageSrc, this.loadMoreLayoutClass.textValue, 0)\n        })\n      }\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\LoadMoreLayout.ets", "project_name": "codelabs-master", "id": "24628dc3055f147891d390978e74226504324efcd7274f7438143e01b6f31cbc"}
{"text": "import { NewsData, NewsFile } from '../viewmodel/NewsData';\nimport { CommonConstant as Const } from '../common/constant/CommonConstant';\n\n\n@Component\nexport default struct NewsItem {\n  private newsData: NewsData = new NewsData();\n\n  build() {\n    Column() {\n      Row() {\n        Image($r('app.media.news'))\n          .width(Const.NewsTitle_IMAGE_WIDTH)\n          .height(Const.NewsTitle_IMAGE_HEIGHT)\n          .margin({\n            top: Const.NewsTitle_IMAGE_MARGIN_TOP,\n            left: Const.NewsTitle_IMAGE_MARGIN_LEFT\n          })\n          .objectFit(ImageFit.Fill)\n        Text(this.newsData.title)\n          .fontSize(Const.NewsTitle_TEXT_FONT_SIZE)\n          .fontColor($r('app.color.fontColor_text'))\n          .height(Const.NewsTitle_TEXT_HEIGHT)\n          .width(Const.NewsTitle_TEXT_WIDTH)\n          .maxLines(Const.NewsTitle_TEXT_MAX_LINES)\n          .margin({ left: Const.NewsTitle_TEXT_MARGIN_LEFT, top: Const.NewsTitle_TEXT_MARGIN_TOP })\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .fontWeight(Const.NewsTitle_TEXT_FONT_WEIGHT)\n      }\n\n      Text(this.newsData.content)\n        .fontSize(Const.NewsContent_FONT_SIZE)\n        .fontColor($r('app.color.fontColor_text'))\n        .height(Const.NewsContent_HEIGHT)\n        .width(Const.NewsContent_WIDTH)\n        .maxLines(Const.NewsContent_MAX_LINES)\n        .margin({ left: Const.NewsContent_MARGIN_LEFT, top: Const.NewsContent_MARGIN_TOP })\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n      Grid() {\n        ForEach(this.newsData.imagesUrl, (itemImg: NewsFile) => {\n          GridItem() {\n            Image(Const.SERVER + itemImg.url)\n              .objectFit(ImageFit.Cover)\n              .borderRadius(Const.NewsGrid_IMAGE_BORDER_RADIUS)\n          }\n        }, (itemImg: NewsFile, index?: number) => JSON.stringify(itemImg) + index)\n      }\n      .columnsTemplate('1fr '.repeat(this.newsData.imagesUrl.length))\n      .columnsGap(Const.NewsGrid_COLUMNS_GAP)\n      .rowsTemplate(Const.NewsGrid_ROWS_TEMPLATE)\n      .width(Const.NewsGrid_WIDTH)\n      .height(Const.NewsGrid_HEIGHT)\n      .margin({ left: Const.NewsGrid_MARGIN_LEFT, top: Const.NewsGrid_MARGIN_TOP,\n        right: Const.NewsGrid_MARGIN_RIGHT })\n\n      Text(this.newsData.source)\n        .fontSize(Const.NewsSource_FONT_SIZE)\n        .fontColor($r('app.color.fontColor_text2'))\n        .height(Const.NewsSource_HEIGHT)\n        .width(Const.NewsSource_WIDTH)\n        .maxLines(Const.NewsSource_MAX_LINES)\n        .margin({ left: Const.NewsSource_MARGIN_LEFT, top: Const.NewsSource_MARGIN_TOP })\n        .textOverflow({ overflow: TextOverflow.None })\n    }\n    .alignItems(HorizontalAlign.Start)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\NewsItem.ets", "project_name": "codelabs-master", "id": "09db638b61775d1bf8f6f98da364222c7bf51e69edfa90b3ee6ab23b2d305ced"}
{"text": "import { CommonConstant as Const } from '../common/constant/CommonConstant'\n\n\n@Component\nexport default struct NoMoreLayout {\n  build() {\n    Row() {\n      Text($r('app.string.prompt_message'))\n        .margin({ left: Const.NoMoreLayoutConstant_NORMAL_PADDING })\n        .fontSize(Const.NoMoreLayoutConstant_TITLE_FONT)\n        .textAlign(TextAlign.Center)\n    }\n    .width(Const.FULL_WIDTH)\n    .justifyContent(FlexAlign.Center)\n    .height(Const.CUSTOM_LAYOUT_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\NoMoreLayout.ets", "project_name": "codelabs-master", "id": "68b126d77a8fe3a69b06dc1045c5975b86d9ba93038cf621a21ae81fb5ebf50f"}
{"text": "import CustomRefreshLoadLayout from './CustomRefreshLoadLayout';\nimport { CustomRefreshLoadLayoutClass } from '../viewmodel/NewsData';\n\n\n@Component\nexport default struct RefreshLayout {\n  @ObjectLink refreshLayoutClass: CustomRefreshLoadLayoutClass;\n\n  build() {\n    Column() {\n      if (this.refreshLayoutClass.isVisible) {\n        CustomRefreshLoadLayout({ customRefreshLoadClass: new CustomRefreshLoadLayoutClass\n        (this.refreshLayoutClass.isVisible, this.refreshLayoutClass.imageSrc, this.refreshLayoutClass.textValue,\n          this.refreshLayoutClass.heightValue) })\n      }\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\RefreshLayout.ets", "project_name": "codelabs-master", "id": "8196180263b59a2d29e867a43e8fe9a0747eed8c83f9ebdbebb59dfdd369843a"}
{"text": "import NewsList from '../view/newslist';\nimport { CommonConstant as Const } from '../common/constant/CommonConstant';\nimport NewsTypeModel from '../viewmodel/NewsTypeModel';\nimport NewsViewModel from '../viewmodel/NewsViewModel';\n\n\n@Component\nexport default struct TabBar {\n  @State tabBarArray: NewsTypeModel[] = NewsViewModel.getDefaultTypeList();\n  @State currentIndex: number = 0;\n  @State currentPage: number = 1;\n\n  @Builder TabBuilder(index: number) {\n    Column() {\n      Text(this.tabBarArray[index].name)\n        .height(Const.FULL_HEIGHT)\n        .padding({ left: Const.TabBars_HORIZONTAL_PADDING, right: Const.TabBars_HORIZONTAL_PADDING })\n        .fontSize(this.currentIndex === index ? Const.TabBars_SELECT_TEXT_FONT_SIZE : Const.TabBars_UN_SELECT_TEXT_FONT_SIZE)\n        .fontWeight(this.currentIndex === index ? Const.TabBars_SELECT_TEXT_FONT_WEIGHT : Const.TabBars_UN_SELECT_TEXT_FONT_WEIGHT)\n        .fontColor($r('app.color.fontColor_text3'))\n    }\n  }\n\n  aboutToAppear() {\n    \n    NewsViewModel.getNewsTypeList().then((typeList: NewsTypeModel[]) => {\n      this.tabBarArray = typeList;\n    }).catch((typeList: NewsTypeModel[]) => {\n      this.tabBarArray = typeList;\n    });\n  }\n\n  build() {\n    Tabs() {\n      ForEach(this.tabBarArray, (tabsItem: NewsTypeModel) => {\n        TabContent() {\n          Column() {\n            NewsList({ currentIndex: $currentIndex })\n          }\n        }\n        .tabBar(this.TabBuilder(tabsItem.id))\n      }, (item: NewsTypeModel) => JSON.stringify(item));\n    }\n    .barHeight(Const.TabBars_BAR_HEIGHT)\n    .barMode(BarMode.Scrollable)\n    .barWidth(Const.TabBars_BAR_WIDTH)\n    .onChange((index: number) => {\n      this.currentIndex = index;\n      this.currentPage = 1;\n    })\n    .vertical(false)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\TabBar.ets", "project_name": "codelabs-master", "id": "e89f8abe96e0f39170293b23bf00f245ece4494ce6c87ba71877f55b1eb50233"}
{"text": "import { CommonConstant as Const, PageState } from '../common/constant/CommonConstant';\nimport { NewsData } from './NewsData';\n\nexport default class NewsModel {\n  newsData: Array<NewsData> = [];\n  currentPage: number = 1;\n  pageSize: number = Const.PAGE_SIZE;\n  pullDownRefreshText: Resource = $r('app.string.pull_down_refresh_text');\n  pullDownRefreshImage: Resource = $r('app.media.ic_pull_down_refresh');\n  pullDownRefreshHeight: number = Const.CUSTOM_LAYOUT_HEIGHT;\n  isVisiblePullDown: boolean = false;\n  pullUpLoadText: Resource = $r('app.string.pull_up_load_text');\n  pullUpLoadImage: Resource = $r('app.media.ic_pull_up_load');\n  pullUpLoadHeight: number = Const.CUSTOM_LAYOUT_HEIGHT;\n  isVisiblePullUpLoad: boolean = false;\n  offsetY: number = 0;\n  pageState: number = PageState.Loading;\n  hasMore: boolean = true;\n  startIndex = 0;\n  endIndex = 0;\n  downY = 0;\n  lastMoveY = 0;\n  isRefreshing: boolean = false;\n  isCanRefresh = false;\n  isPullRefreshOperation = false;\n  isLoading: boolean = false;\n  isCanLoadMore: boolean = false;\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\viewmodel\\NewsModel.ets", "project_name": "codelabs-master", "id": "68074c133bd6a7a6447091ff780ed2c08ceb2f5822e27ae195973aeb8c03328c"}
{"text": "export default class NewsTypeBean {\n  id: number = 0;\n  name: ResourceStr = '';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\viewmodel\\NewsTypeBean.ets", "project_name": "codelabs-master", "id": "42d83dfeac6a6801fbbc363e407e15e57b3d4554ebc16e3bccc5979c897be8bf"}
{"text": "export default class NewsTypeModel {\n  id: number = 0;\n  name: ResourceStr = '';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\viewmodel\\NewsTypeModel.ets", "project_name": "codelabs-master", "id": "a2152ecc1ae125351ab28d0e685f7b1e47c12dfc1426eedbad4b564f8ddcbaa3"}
{"text": "import { CommonConstant as Const } from '../common/constant/CommonConstant';\nimport { NewsData } from './NewsData';\nimport NewsTypeModel from './NewsTypeModel';\nimport { httpRequestGet } from '../common/utils/HttpUtil';\nimport Logger from '../common/utils/Logger';\nimport ResponseResult from './ResponseResult';\n\nclass NewsViewModel {\n  \n  getNewsTypeList(): Promise<NewsTypeModel[]> {\n    return new Promise((resolve: Function) => {\n      let url = `${Const.SERVER}/${Const.GET_NEWS_TYPE}`;\n      httpRequestGet(url).then((data: ResponseResult) => {\n        if (data.code === Const.SERVER_CODE_SUCCESS) {\n          resolve(data.data);\n        } else {\n          resolve(Const.TabBars_DEFAULT_NEWS_TYPES);\n        }\n      }).catch(() => {\n        resolve(Const.TabBars_DEFAULT_NEWS_TYPES);\n      });\n    });\n  }\n\n  \n  getDefaultTypeList(): NewsTypeModel[] {\n    return Const.TabBars_DEFAULT_NEWS_TYPES;\n  }\n\n  \n  getNewsList(currentPage: number, pageSize: number, path: string): Promise<NewsData[]> {\n    return new Promise(async (resolve: Function, reject: Function) => {\n      let url = `${Const.SERVER}/${path}`;\n      url += '?currentPage=' + currentPage + '&pageSize=' + pageSize;\n      httpRequestGet(url).then((data: ResponseResult) => {\n        if (data.code === Const.SERVER_CODE_SUCCESS) {\n          resolve(data.data);\n        } else {\n          Logger.error('getNewsList failed', JSON.stringify(data));\n          reject($r('app.string.page_none_msg'));\n        }\n      }).catch((err: Error) => {\n        Logger.error('getNewsList failed', JSON.stringify(err));\n        reject($r('app.string.http_error_message'));\n      });\n    });\n  }\n}\n\nlet newsViewModel = new NewsViewModel();\n\nexport default newsViewModel as NewsViewModel;", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\viewmodel\\NewsViewModel.ets", "project_name": "codelabs-master", "id": "6c77d5cbd5f5af0a8f298a6e9ef2f807f37db3fcea62de05a2c3126e2997a0bf"}
{"text": "export default class ResponseResult {\n  \n  code: string;\n\n  \n  msg: string | Resource;\n\n  \n  data: string | Object | ArrayBuffer;\n\n  constructor() {\n    this.code = '';\n    this.msg = '';\n    this.data = '';\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsDataArkTS\\entry\\src\\main\\ets\\viewmodel\\ResponseResult.ets", "project_name": "codelabs-master", "id": "4c5c73ea4fca2c85f6d30ad36b35f3ddabaa0207bd67aa3bfa896c80f22b29b4"}
{"text": "import http from '@ohos.net.http';\nimport { NewsData } from '../../viewmodel/NewsData';\nimport ResponseResult from '../../viewmodel/ResponseResult';\nimport Constants, { ContentType } from '../constants/Constants';\n\n\nexport function httpRequestGet(url: string) {\n  return httpRequest(url, http.RequestMethod.GET);\n}\n\n\nexport function httpRequestPost(url: string, newsData: NewsData) {\n  return httpRequest(url, http.RequestMethod.POST, newsData);\n}\n\n\nfunction httpRequest(url: string, method: http.RequestMethod, params?: NewsData): Promise<ResponseResult> {\n  let httpRequest = http.createHttp();\n  let responseResult = httpRequest.request(url, {\n    method: method,\n    readTimeout: Constants.HTTP_READ_TIMEOUT,\n    header: {\n      'Content-Type': ContentType.JSON\n    },\n    connectTimeout: Constants.HTTP_READ_TIMEOUT,\n    extraData: params\n  });\n  let serverData = new ResponseResult();\n  \n  return responseResult.then((value: http.HttpResponse) => {\n    if (value.responseCode === Constants.HTTP_CODE_200) {\n      \n      let result = `${value.result}`;\n      let resultJson: ResponseResult = JSON.parse(result);\n      if (resultJson.code === Constants.SERVER_CODE_SUCCESS) {\n        serverData.data = resultJson.data;\n      }\n      serverData.code = resultJson.code;\n      serverData.msg = resultJson.msg;\n    } else {\n      serverData.msg = `${$r('app.string.http_error_message')}&${value.responseCode}`;\n    }\n    return serverData;\n  }).catch(() => {\n    serverData.msg = $r('app.string.http_error_message');\n    return serverData;\n  });\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\common\\utils\\HttpUtil.ets", "project_name": "codelabs-master", "id": "e4913436c21ef4939ec54340c69b9caff0d30fcd91714aeba15dff227028980d"}
{"text": "import promptAction from '@ohos.promptAction';\nimport Constants from '../constants/Constants';\n\nexport function showToast(msg: string | Resource) {\n  promptAction.showToast({\n    message: msg,\n    duration: Constants.ANIMATION_DURATION\n  });\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\common\\utils\\ToastUtil.ets", "project_name": "codelabs-master", "id": "bc9b40064b504947f8670554bdb41fa7be956c0c5bf6731428583965eb9a0238"}
{"text": "import Constants from '../common/constants/Constants';\nimport NewsList from '../view/newslist';\nimport router from '@ohos.router';\nimport NewsTypeViewModel from '../viewmodel/NewsTypeViewModel';\nimport NewsTypeBean from '../viewmodel/NewsTypeModel';\nimport { GlobalContext } from '../viewmodel/GlobalContext';\n\n\n@Entry\n@Component\nstruct MainPage {\n  @State tabBarArray: NewsTypeBean[] = NewsTypeViewModel.getDefaultTypeList();\n  @State currentIndex: number = 0;\n\n  @Builder TabBuilder(index: number) {\n    Column() {\n      Text(this.tabBarArray[index].name)\n        .height(Constants.FULL_PERCENT)\n        .fontSize(this.currentIndex === index ? $r('app.float.bar_selected_font') : $r('app.float.bar_normal_font'))\n        .fontWeight(this.currentIndex === index ? Constants.TYPE_FONT_WEIGHT : Constants.DESC_FONT_WEIGHT)\n        .fontColor($r('app.color.title_color'))\n    }\n    .padding({ left: $r('app.float.normal_padding'), right: $r('app.float.normal_padding') })\n    .margin({\n      left: index === 0 ? $r('app.float.common_padding') : 0,\n      right: index === this.tabBarArray.length - 1 ? $r('app.float.common_padding') : 0\n    })\n  }\n\n  aboutToAppear() {\n    \n    NewsTypeViewModel.getNewsTypeList().then((typeList: NewsTypeBean[]) => {\n      this.tabBarArray = typeList;\n    });\n  }\n\n  onPageShow() {\n    if (GlobalContext.getContext().getObject('isBackRouter') === true) {\n      GlobalContext.getContext().setObject('isBackRouter', false);\n      let tempIndex = this.currentIndex;\n      this.currentIndex = -1;\n      this.currentIndex = tempIndex;\n    }\n  }\n\n  build() {\n    Stack() {\n      Tabs() {\n        ForEach(this.tabBarArray, (tabsItem: NewsTypeBean, index?: number) => {\n          TabContent() {\n            NewsList({ index, currentIndex: $currentIndex })\n          }\n          .tabBar(this.TabBuilder(tabsItem.id))\n        }, (tabsItem: NewsTypeBean) => JSON.stringify(tabsItem));\n      }\n      .barHeight($r('app.float.nav_height'))\n      .height(Constants.FULL_PERCENT)\n      .barMode(BarMode.Scrollable)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n      })\n      .vertical(false)\n\n      Image($r('app.media.ic_add'))\n        .width($r('app.float.btn_size'))\n        .height($r('app.float.btn_size'))\n        .margin({ bottom: $r('app.float.btn_margin'), right: $r('app.float.btn_margin') })\n        .onClick(() => {\n          router.pushUrl({ url: Constants.NEWS_EDIT_PAGE });\n        })\n    }\n    .width(Constants.FULL_PERCENT)\n    .height(Constants.FULL_PERCENT)\n    .alignContent(Alignment.BottomEnd)\n    .backgroundColor($r('app.color.listColor'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "ad08969db0fd2a56f74f3796df96a22ad410c4b1553a91c2d76791215f9683e0"}
{"text": "import Constants from '../common/constants/Constants';\n\n@Component\nexport default struct LoadingLayout {\n  build() {\n    Row() {\n      Image($r('app.media.ic_pull_up_load'))\n        .width($r('app.float.refresh_img_size'))\n        .height($r('app.float.refresh_img_size'))\n      Text($r('app.string.pull_up_load_text'))\n        .margin({ left: $r('app.float.normal_padding') })\n        .fontSize($r('app.float.title_font'))\n        .textAlign(TextAlign.Center)\n    }\n    .width(Constants.FULL_PERCENT)\n    .height(Constants.CUSTOM_LAYOUT_HEIGHT)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\view\\LoadingLayout.ets", "project_name": "codelabs-master", "id": "2e2922777af8dddda6cce3bb71793e12ba3c33362e751431877888b7ebb7323e"}
{"text": "import RefreshLoadingClass from '../viewmodel/RefreshLoadingClass';\nimport Constants from '../common/constants/Constants';\n\n\n@Component\nexport default struct LoadMoreLayout {\n  @ObjectLink loadMoreLayoutClass: RefreshLoadingClass;\n\n  build() {\n    Row() {\n      Image(this.loadMoreLayoutClass.imageSrc)\n        .width($r('app.float.refresh_img_size'))\n        .height($r('app.float.refresh_img_size'))\n\n      Text(this.loadMoreLayoutClass.textValue)\n        .margin({ left: $r('app.float.normal_padding') })\n        .fontSize($r('app.float.title_font'))\n        .textAlign(TextAlign.Center)\n    }\n    .clip(true)\n    .width(Constants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n    .height(this.loadMoreLayoutClass.heightValue)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\view\\LoadMoreLayout.ets", "project_name": "codelabs-master", "id": "8ecb8f6734f20e28d11c4423b261d889cfb2d47b6895bb80ee0c508dfe4478d0"}
{"text": "import { NewsData, NewsFile } from '../viewmodel/NewsData';\nimport Constants from '../common/constants/Constants';\n\n\n@Component\nexport default struct NewsItem {\n  newsData: NewsData = new NewsData();\n\n  build() {\n    Column() {\n      Row() {\n        Image($r('app.media.ic_news'))\n          .height($r('app.float.title_font'))\n          .aspectRatio(Constants.TYPE_ASPECT_RATIO)\n        Text(this.newsData?.title)\n          .fontSize($r('app.float.title_font'))\n          .fontColor($r('app.color.title_color'))\n          .layoutWeight(1)\n          .maxLines(1)\n          .lineHeight($r('app.float.title_line_height'))\n          .fontFamily($r('app.string.harmony_hei_ti_medium'))\n          .margin({ left: $r('app.float.normal_padding') })\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .fontWeight(Constants.TITLE_FONT_WEIGHT)\n      }\n      .alignItems(VerticalAlign.Center)\n      .width(Constants.FULL_PERCENT)\n\n      Text(this.newsData?.content)\n        .fontSize($r('app.float.desc_font'))\n        .fontFamily($r('app.string.harmony_hei_ti'))\n        .opacity(Constants.DESC_OPACITY)\n        .fontColor($r('app.color.title_color'))\n        .lineHeight($r('app.float.desc_line_height'))\n        .width(Constants.FULL_PERCENT)\n        .maxLines(Constants.CONTENT_MAX_LINE)\n        .fontWeight(Constants.DESC_FONT_WEIGHT)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n      Row({ space: Constants.ITEM_IMG_SPACE }) {\n        ForEach((this.newsData.imagesUrl), (itemImg: NewsFile) => {\n          Image(Constants.SERVER + itemImg?.url)\n            .height(Constants.FULL_PERCENT)\n            .aspectRatio(1)\n            .objectFit(ImageFit.Cover)\n            .borderRadius($r('app.float.item_img_border_radius'))\n        }, (itemImg: NewsFile) => JSON.stringify(itemImg))\n      }\n      .clip(true)\n      .width(Constants.FULL_PERCENT)\n      .height($r('app.float.item_img_size'))\n      .margin({ top: $r('app.float.common_padding') })\n\n      Text(this.newsData?.source)\n        .fontSize($r('app.float.source_font'))\n        .fontColor($r('app.color.fontColor_text2'))\n        .width(Constants.FULL_PERCENT)\n        .margin({ top: $r('app.float.normal_padding') })\n    }\n    .padding($r('app.float.common_padding'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\view\\NewsItem.ets", "project_name": "codelabs-master", "id": "b81c1970a156d6d07b337878de1d50320a593e0af2b7121ad176cbe3c91673b7"}
{"text": "import Constants from '../common/constants/Constants';\n\n@Component\nexport default struct NoMoreLayout {\n  build() {\n    Row() {\n      Text($r('app.string.prompt_message'))\n        .margin({ left: $r('app.float.normal_padding') })\n        .fontSize($r('app.float.title_font'))\n        .textAlign(TextAlign.Center)\n    }\n    .width(Constants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n    .height(Constants.CUSTOM_LAYOUT_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\view\\NoMoreLayout.ets", "project_name": "codelabs-master", "id": "089ff8ed1eb13963403b58edb9134ff1830c59fe2bef2f336b270c896d9f34cf"}
{"text": "import RefreshLoadingClass from '../viewmodel/RefreshLoadingClass';\nimport Constants from '../common/constants/Constants';\n\n\n@Component\nexport default struct RefreshLayout {\n  @ObjectLink refreshLoadingClass: RefreshLoadingClass;\n\n  build() {\n    Row() {\n      Image(this.refreshLoadingClass.imageSrc)\n        .width($r('app.float.refresh_img_size'))\n        .height($r('app.float.refresh_img_size'))\n\n      Text(this.refreshLoadingClass.textValue)\n        .margin({ left: $r('app.float.normal_padding') })\n        .fontSize($r('app.float.title_font'))\n        .textAlign(TextAlign.Center)\n    }\n    .clip(true)\n    .width(Constants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n    .height(this.refreshLoadingClass.heightValue)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\view\\RefreshLayout.ets", "project_name": "codelabs-master", "id": "9adf7324ee9c8106ab7f94c28bf0ba2c39047e1e408d513e4380adaa39951989"}
{"text": "export default  class NewsTypeBean {\n  id: number;\n  name: ResourceStr;\n\n  constructor(id: number, name: ResourceStr) {\n    this.id = id;\n    this.name = name;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\viewmodel\\NewsTypeModel.ets", "project_name": "codelabs-master", "id": "7cfb15fbf367e17ebde96406bd6f4b4001288568da653b5b55e74106ed842d87"}
{"text": "import { NewsData } from './NewsData';\nimport ResponseResult from './ResponseResult';\nimport Constants from '../common/constants/Constants';\nimport { httpRequestGet, httpRequestPost } from '../common/utils/HttpUtil';\nimport Logger from '../common/utils/Logger';\n\nclass NewsViewModel {\n  \n  getNewsList(currentPage: number, pageSize: number): Promise<NewsData[]> {\n    return new Promise(async (resolve: Function, reject: Function) => {\n      let url = `${Constants.SERVER}/${Constants.GET_NEWS_LIST}`;\n      url += '?currentPage=' + currentPage + '&pageSize=' + pageSize;\n      httpRequestGet(url).then((data: ResponseResult) => {\n        if (data.code === Constants.SERVER_CODE_SUCCESS) {\n          resolve(data.data);\n        } else {\n          Logger.error('getNewsList failed', JSON.stringify(data));\n          reject($r('app.string.page_none_msg'));\n        }\n      }).catch((err: Error) => {\n        Logger.error('getNewsList failed', JSON.stringify(err));\n        reject($r('app.string.http_error_message'));\n      });\n    });\n  }\n\n  \n  uploadNews(newsData: NewsData): Promise<NewsData[]> {\n    return new Promise((resolve: Function, reject: Function) => {\n      let url = `${Constants.SERVER}/${Constants.UPLOAD_NEWS}`;\n      httpRequestPost(url, newsData).then((result: ResponseResult) => {\n        if (result && result.code === Constants.SERVER_CODE_SUCCESS) {\n          resolve(result.data);\n        } else {\n          reject($r('app.string.upload_error_message'));\n        }\n      }).catch((err: Error) => {\n        Logger.error('uploadNews failed', JSON.stringify(err));\n        reject($r('app.string.upload_error_message'));\n      });\n    });\n  }\n}\n\nlet newsViewModel = new NewsViewModel();\n\nexport default newsViewModel as NewsViewModel;", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\viewmodel\\NewsViewModel.ets", "project_name": "codelabs-master", "id": "7568051121994d41a73c5f8af1c52046f424a4b69af00d8d41cf6812cd89a04d"}
{"text": "@Observed\nexport default class RefreshLoadingClass {\n\n  \n  imageSrc: Resource;\n\n  \n  textValue: Resource;\n\n  \n  heightValue: number;\n\n  constructor(imageSrc: Resource, textValue: Resource, heightValue: number) {\n    this.imageSrc = imageSrc;\n    this.textValue = textValue;\n    this.heightValue = heightValue;\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\NewsRelease\\entry\\src\\main\\ets\\viewmodel\\RefreshLoadingClass.ets", "project_name": "codelabs-master", "id": "884335726959838727d01fd828d709e1bb96b8f5ab9c5bd0bf1cf2986d84648f"}
{"text": "import display from '@ohos.display';\nimport window from '@ohos.window';\nimport common from '@ohos.app.ability.common';\nimport { CommonConstants as Const } from '../constants/CommonConstants';\n\nexport class DeviceScreen {\n  \n  public static getDeviceSize(context: common.UIAbilityContext): Promise<window.Window> {\n    return window.getLastWindow(context);\n  }\n\n  \n  public static getDeviceHeight() {\n    let displayObject = display.getDefaultDisplaySync();\n    let screenPixelHeight = displayObject.height;\n    let screenDensityDPI = displayObject.densityDPI;\n    return screenPixelHeight * (Const.DEVICE_DPI / screenDensityDPI);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\common\\utils\\DeviceScreen.ets", "project_name": "codelabs-master", "id": "d3681dc8f2e577374a7ae34ff417de42d0176b3eeaaa591ebb382f4f7e95bf75"}
{"text": "import { PixelCoordinates } from '../../viewmodel/PositionItem';\nimport { CommonConstants as Const } from '../constants/CommonConstants';\n\n\nexport class Geography {\n\n  \n  public static toPixelCoordinates(latitude: number, longitude: number): PixelCoordinates {\n    \n    const yMin = Geography.MercatorY(Const.SOUTH_LATITUDE);\n    const yMax = Geography.MercatorY(Const.NORTH_LATITUDE);\n    \n    const xFactor = Const.MAP_WIDTH / (Const.EAST_LONGITUDE - Const.WEST_LONGITUDE);\n\n    \n    const yFactor = Const.MAP_HEIGHT / (yMax - yMin);\n\n    let x = (longitude - Const.WEST_LONGITUDE) * xFactor + Const.X_ADJ;\n    let y = (yMax - Geography.MercatorY(latitude)) * yFactor + Const.Y_ADJ;\n    return { coordinateX: x, coordinateY: y }\n  }\n\n  \n  public static MercatorY(latitude: number): number {\n    return Math.log(Math.tan((latitude * Const.RADIAN_CONSTANT / Const.DOUBLE_OR_HALF) +\n      (Const.QUARTER_CIRCLE)));\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\common\\utils\\Geography.ets", "project_name": "codelabs-master", "id": "374163b3951f4fcddf946b1bfebb33d0ce8e1834f150d6cff36024b57cc06b95"}
{"text": "import ZonesItem from '../../viewmodel/ZonesItem';\n\n\nexport class SwiperDataSource implements IDataSource {\n  private list: ZonesItem[] = [];\n  private listeners: DataChangeListener[] = [];\n  constructor(list: ZonesItem[]) {\n    this.list = list;\n  }\n  totalCount(): number {\n    return this.list.length;\n  }\n  getData(index: number): ZonesItem {\n    return this.list[index];\n  }\n  registerDataChangeListener(listener: DataChangeListener): void {\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n    }\n  }\n  unregisterDataChangeListener() {}\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\common\\utils\\SwiperDataSource.ets", "project_name": "codelabs-master", "id": "06cee84486c1d7ef2e38063c5a329df01a53069b416a9632a06bcb3eb3a51c83"}
{"text": "import { BusinessError } from '@ohos.base';\nimport { AddressItem, Location } from '../viewmodel/AddressItem';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport Logger from '../common/utils/Logger';\n\nconst TAG = 'MapController';\n\n\nexport class MapController {\n  private leftTop: Array<number> = [];\n  private previousScale: number = 0;\n  private pinchCount: number = 0;\n  private panX: number = 0;\n  private panY: number = 0;\n\n  \n  initLeftTop(screenMapWidth: number, mapWidth: number): void {\n    this.leftTop = [(screenMapWidth - mapWidth), 0];\n  }\n\n  \n  pinchUpdate(event: GestureEvent, callBack: Function): void {\n    let scale = Number.parseFloat(event.scale.toFixed(Const.MAP_SCALE_ACCURACY));\n    let ratio = 1;\n    if (this.previousScale !== scale) {\n      if (event.scale < 1) {\n        ratio = 1 / Const.MAP_ZOOM_RATIO;\n        this.pinchCount--;\n      } else {\n        ratio = Const.MAP_ZOOM_RATIO;\n        this.pinchCount++;\n      }\n      if (this.pinchCount > Const.ZOOM_MAX_TIMES) {\n        this.pinchCount = Const.ZOOM_MAX_TIMES;\n        return;\n      }\n      if (this.pinchCount < 0) {\n        this.pinchCount = 0;\n        return;\n      }\n      callBack(ratio);\n    }\n    this.previousScale = scale;\n  }\n\n  \n  pinchEnd(screenMapWidth: number, mapWidth: number, mapHeight: number): void {\n    let minX = screenMapWidth - mapWidth;\n    let minY = (1 / this.mapMultiples() - 1) * mapHeight;\n    this.leftTop = [minX, minY];\n  }\n\n  \n  tapAction(callBack: Function): void {\n    let isMaxTime: boolean = false;\n    if (++this.pinchCount > Const.ZOOM_MAX_TIMES) {\n      this.pinchCount = Const.ZOOM_MAX_TIMES;\n      isMaxTime = true;\n    }\n    this.leftTop = callBack(isMaxTime);\n  }\n\n  \n  panUpdate(event: GestureEvent, callBack: Function): void {\n    let panX = Number.parseInt(event.offsetX.toFixed(0));\n    let panY = Number.parseInt(event.offsetY.toFixed(0));\n    if ((this.panX !== panX) || (this.panY !== panY)) {\n      let mapPanX = panX - this.panX;\n      let mapPanY = panY - this.panY;\n      callBack(mapPanX, mapPanY, this.leftTop);\n    }\n    this.panX = panX;\n    this.panY = panY;\n  }\n\n  \n  panEnd(): void {\n    this.panX = 0;\n    this.panY = 0;\n  }\n\n  \n  calLandmarksPosition(data: AddressItem): void {\n    data.locations = data.locations.map((item: Location) => {\n      item.positionX = item.oriPositionX * this.mapMultiples() -\n        Const.MAP_LANDMARKS_SIZE * Const.MAP_ZOOM_RATIO / Const.DOUBLE_OR_HALF;\n      item.positionY = item.oriPositionY * this.mapMultiples() -\n        Const.MAP_LANDMARKS_SIZE * Const.MAP_ZOOM_RATIO;\n      return item;\n    })\n  }\n\n  \n  mapMultiples(): number {\n    return Math.pow(Const.MAP_ZOOM_RATIO, this.pinchCount);\n  }\n\n  \n  getResourceString(resource: Resource): string {\n    let resourceString: string = '';\n    try {\n      resourceString = getContext(this).resourceManager.getStringSync(resource.id);\n    } catch (error) {\n      Logger.error(TAG, `getResourceString failed, error code: ${(error as BusinessError).code},\n       message: ${(error as BusinessError).message}.`);\n    }\n    return resourceString;\n  }\n}\n\nlet mapController = new MapController();\n\nexport default mapController as MapController;", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\controller\\MapController.ets", "project_name": "codelabs-master", "id": "705dca4280c168561e6ee430b71e6e852044827113388c3074b36815ca78358e"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { Map } from '../view/MapComponent';\nimport { Zones } from '../view/ZonesComponent';\nimport { Trains } from '../view/TrainsComponent';\nimport { BottomTabsList } from '../viewmodel/BottomTabsModel';\n\n@Entry\n@Component\nstruct Index {\n  @StorageLink('bottomTabIndex') bottomTabIndex: number = 1;\n  @State message: string = 'Hello World'\n  private controller: TabsController = new TabsController();\n\n  @Builder TabBuilder(index: number, name: string) {\n    Column() {\n      Image(this.bottomTabIndex === index ? BottomTabsList[index].iconSelected : BottomTabsList[index].icon)\n        .width('40%')\n        .height('40%')\n        .objectFit(ImageFit.Contain)\n\n      Text(BottomTabsList[index].text)\n        .fontSize($r('app.float.bottom_font_size'))\n        .opacity(0.6)\n        .fontColor(this.bottomTabIndex === index ?\n        $r('app.color.bottom_tabs_font_color_selected') : $r('app.color.bottom_tabs_font_color'))\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n    .border({ width: { top: 0.5 }, color: \"#FF182431\" })\n    .backgroundColor($r('app.color.bottom_tabs_background_color'))\n  }\n\n  pageTransition() {\n    PageTransitionEnter({ duration: Const.SHARED_DURATION })\n      .slide(SlideEffect.Top)\n    PageTransitionExit({ delay: Const.EXIT_DELAY })\n      .opacity(0)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.End, justifyContent: FlexAlign.End }) {\n      Tabs({ barPosition: BarPosition.End, index: this.bottomTabIndex, controller: this.controller }) {\n        TabContent() {\n          Map()\n        }.tabBar(this.TabBuilder(0, 'Map'))\n\n        TabContent() {\n          Zones()\n        }.tabBar(this.TabBuilder(1, 'Zone'))\n\n        TabContent() {\n          Trains()\n        }.tabBar(this.TabBuilder(2, 'Train'))\n      }\n      .width('100%')\n      .vertical(false)\n      .barHeight('10%')\n      .scrollable(false)\n      .onChange((index: number) => {\n        this.bottomTabIndex = index;\n      })\n      .height('100%')\n    }\n    .width('100%')\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "4f371da1788e7156bc04f9f71a00d42752c42019bd47c02d07961b1948f7f28b"}
{"text": "import router from '@ohos.router';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { splashImages } from '../viewmodel/SplashModel';\n\n@Entry\n@Component\nstruct Splash {\n  private swiperController: SwiperController = new SwiperController();\n  private data: Resource[] = [];\n  @State countdown: number = Const.COUNTDOWN;\n  @State showSwiper: boolean = false;\n  private timer: number = 0;\n\n  aboutToAppear(): void {\n    let data: Resource[] = []\n    let hours = new Date().getHours();\n    if (hours >= Const.MORNING_TIME && hours < Const.EVENING_TIME) {\n      data = splashImages.day;\n    } else if (hours >= Const.EVENING_TIME && hours <= Const.NIGHT_TIME) {\n      data = splashImages.dusk;\n    } else {\n      data = splashImages.night;\n    }\n    this.data = data;\n    setTimeout(() => {\n      this.showSwiper = true;\n      this.startTiming();\n    }, Const.SPLASH_DURATION);\n\n  }\n\n  startTiming() {\n    this.timer = setInterval(() => {\n      this.countdown--;\n      if (this.countdown === 0) {\n        this.clearTiming();\n        this.jumpToMainPage();\n      }\n    }, Const.DURATION);\n  }\n\n  clearTiming() {\n    if (this.timer !== null) {\n      clearInterval(this.timer);\n      this.timer = 0;\n    }\n  }\n\n  jumpToMainPage() {\n    this.clearTiming();\n    router.replaceUrl({\n      url: 'pages/MainPage'\n    });\n  }\n\n  aboutToDisappear() {\n    this.clearTiming();\n  }\n\n  build() {\n    Column() {\n      Stack() {\n        if (this.showSwiper) {\n          Swiper(this.swiperController) {\n            ForEach(this.data, (item: Resource) => {\n              Image(item)\n                .width(Const.FULL_SIZE)\n                .height(Const.FULL_SIZE)\n                .objectFit(ImageFit.Cover)\n            })\n          }\n          .loop(true)\n          .interval(2 * Const.DURATION)\n          .duration(Const.DURATION)\n          .autoPlay(true)\n          .indicator(Indicator.dot()\n            .bottom($r('app.float.100'))\n            .color($r('app.color.swiper_dot_color'))\n          )\n          .curve(Curve.Linear)\n          .onChange((index: number) => {\n            console.info(index.toString())\n          })\n\n          Text() {\n            Span($r('app.string.skip'))\n            Span(`${this.countdown}`)\n          }\n          .onClick(() => this.jumpToMainPage())\n          .fontColor(Color.White)\n          .fontSize($r('app.float.12fp'))\n          .backgroundColor($r('app.color.swiper_jump_bg_color'))\n          .width($r('app.float.63'))\n          .height($r('app.float.24'))\n          .borderRadius($r('app.float.10'))\n          .textAlign(TextAlign.Center)\n          .position({\n            x: Const.PERCENTAGE_78,\n            y: $r('app.float.35')\n          })\n        } else {\n          Image($r('app.media.splash_bg'))\n            .width('100%')\n            .height('100%')\n          Image($r('app.media.ic_splash'))\n            .width($r('app.float.192'))\n            .height($r('app.float.192'))\n            .offset({\n              y: `-${Const.PERCENTAGE_15}`\n            })\n            .objectFit(ImageFit.Contain)\n\n          Column() {\n            Text(Const.SPLASH_DES)\n              .fontColor(Color.White)\n              .fontSize($r('app.float.font_size_24fp'))\n              .fontWeight(FontWeight.Medium)\n\n            Text(Const.SPLASH_WELCOME)\n              .fontSize($r('app.float.font_size_16fp'))\n              .fontColor(Color.White)\n              .margin({\n                top: $r('app.float.5')\n              })\n          }\n          .offset({\n            y: Const.PERCENTAGE_25\n          })\n        }\n      }\n    }\n    .height(Const.FULL_SIZE)\n    .width(Const.FULL_SIZE)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\pages\\Splash.ets", "project_name": "codelabs-master", "id": "d7f55a79618121c00a05e89dd2927479695436ac95ebc33d96025cb27b1d1560"}
{"text": "import ZonesItem from '../viewmodel/ZonesItem';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Component\nexport default struct BuildListItem {\n  @Prop type: string;\n  @Consume('introductionData') introductionData: ZonesItem;\n\n  build() {\n    Column() {\n      Image(this.introductionData.starLinePic[1])\n        .height($r('app.float.star_line_image_height'))\n        .width(Const.CONTENT_WIDTH_PERCENT)\n        .margin({ bottom: $r('app.float.introduction_star_line_margin') })\n      if (this.type === Const.BUILDING_TEXT) {\n        Text(this.introductionData.buildingInformation)\n          .width(Const.CONTENT_WIDTH_PERCENT)\n          .fontSize($r('app.float.font_size_normal'))\n          .letterSpacing(0)\n      }\n      Column() {\n        if (this.type === Const.BUILDING_TEXT) {\n          Image(this.introductionData.buildingPic)\n            .height($r('app.float.introduction_image_height'))\n            .width(Const.FULL_SIZE)\n            .borderRadius($r('app.float.introduction_image_border_radius'))\n            .margin({ top: $r('app.float.introduction_image_margin') })\n        } else {\n          Image(this.type === Const.GEOGRAPHY_LIGHT ?\n          this.introductionData.geographyPicLight : this.introductionData.geographyPic)\n            .height($r('app.float.introduction_image_height'))\n            .width(Const.FULL_SIZE)\n            .borderRadius($r('app.float.introduction_image_border_radius'))\n            .margin({ top: $r('app.float.introduction_image_margin') })\n        }\n      }\n      .width(Const.CONTENT_WIDTH_PERCENT)\n      .height($r('app.float.introduction_image_height'))\n      .margin({ bottom: $r('app.float.introduction_container_margin') })\n      .justifyContent(FlexAlign.Center)\n    }\n    .width(Const.FULL_SIZE)\n    .alignItems(HorizontalAlign.Center)\n    .height($r('app.float.fixed_item_height'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\view\\BuildListItem.ets", "project_name": "codelabs-master", "id": "baf4a722e2acf3dcf1d8cdedb1a139261a02de6488bdfaff5447a2c4e761f80e"}
{"text": "import ZonesItem from '../viewmodel/ZonesItem';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { ImageView } from '../view/ImageViewComponent';\n\n@Component\nexport default struct ImageAnimation {\n  @StorageLink('imageId') imageId: number = Const.HALF_COUNT;\n  @Consume('introductionData') introductionData: ZonesItem;\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: ImageView({ currentImageId: this.imageId }),\n    customStyle: true,\n    alignment: DialogAlignment.Bottom,\n  });\n\n  aboutToAppear() {\n    if (AppStorage.Get<string>('isContinuation') === 'true' && AppStorage.Get<boolean>('imageModalOpen')) {\n      this.dialogController.open();\n    }\n  }\n\n  \n  getImgCoefficients(index: number) {\n    let coefficient = this.imageId - index;\n    let tempCoefficient = Math.abs(coefficient);\n    if (tempCoefficient <= Const.HALF_COUNT) {\n      return coefficient;\n    }\n    let dataLength = this.introductionData.imageList.length;\n    let tempOffset = dataLength - tempCoefficient;\n    if (tempOffset <= Const.HALF_COUNT) {\n      if (coefficient > 0) {\n        return -tempOffset;\n      }\n      return tempOffset;\n    }\n    return 0;\n  }\n\n  \n  getOffSetX(index: number) {\n    let offsetIndex = this.getImgCoefficients(index);\n    let tempOffset = Math.abs(offsetIndex);\n    let offsetX = 0;\n    if (tempOffset === 1) {\n      offsetX = -Const.IMAGE_X_OFFSET_MAX * offsetIndex;\n    } else if (tempOffset === Const.HALF_COUNT) {\n      offsetX = -Const.IMAGE_x_OFFSET_MIN * offsetIndex;\n    }\n    return offsetX;\n  }\n\n  startAnimation(isLeft: boolean) {\n    animateTo({\n      duration: Const.IMAGE_ANIMATION_DURATION,\n    }, () => {\n      let dataLength = this.introductionData.imageList.length\n      let tempIndex = isLeft ? this.imageId + 1 : this.imageId - 1 + dataLength;\n      this.imageId = tempIndex % dataLength;\n    })\n  }\n\n  build() {\n    Stack() {\n      ForEach(this.introductionData.imageList, (item: ResourceStr, index: number) => {\n        Row() {\n          Image(item)\n            .objectFit(ImageFit.ScaleDown)\n            .borderRadius($r('app.float.small_image_border_radius'))\n            .opacity(Const.OPACITY_MAX - Const.IMAGE_OPACITY_REDUCE\n              * Math.min(Const.HALF_COUNT, Math.abs(this.getImgCoefficients(index))))\n        }\n        .aspectRatio(Const.IMAGE_ASPECT_RATIO)\n        .borderRadius($r('app.float.small_image_border_radius'))\n        .offset({ x: this.getOffSetX(index), y: 0 })\n        .blur(Const.IMAGE_BLUR_REDUCE * Math.abs(this.getImgCoefficients(index)))\n        .zIndex(index != this.imageId && this.getImgCoefficients(index) == 0 ?\n          0 : Const.HALF_COUNT - Math.abs(this.getImgCoefficients(index)))\n        .height(index != this.imageId && this.getImgCoefficients(index) === 0 ?\n        Const.IMAGE_HEIGHT_MIN : `${Const.FULL_PERCENT_NUMBER -\n            Const.IMAGE_WIDTH_OFFSET * Math.abs(this.getImgCoefficients(index))}%`)\n        .onClick(() => {\n          this.dialogController.open();\n        })\n      }, (item: ResourceStr) => JSON.stringify(item))\n    }\n    .width(Const.FULL_SIZE)\n    .height(Const.FULL_SIZE)\n    .alignContent(Alignment.Center)\n    .gesture(\n      PanGesture({ direction: PanDirection.Horizontal })\n        .onActionStart((event: GestureEvent) => {\n          this.startAnimation(event.offsetX < 0);\n        })\n    )\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\view\\ImageAnimate.ets", "project_name": "codelabs-master", "id": "aa9048ce50bef7d5d9ce046d3cc3b508d7907575a9e2ded3d799bc04292816c7"}
{"text": "import ZonesItem from '../viewmodel/ZonesItem';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport ImageAnimation from '../view/ImageAnimate';\n\n@Component\nexport default struct StyleListItem {\n  @Consume('introductionData') introductionData: ZonesItem;\n\n  build() {\n    Column() {\n      ForEach(this.introductionData.content, (item: ResourceStr) => {\n        Text(item)\n          .width(Const.CONTENT_WIDTH_PERCENT)\n          .fontSize($r('app.float.font_size_normal'))\n          .margin({ bottom: $r('app.float.content_margin_bottom') })\n      }, (item: ResourceStr) => JSON.stringify(item))\n      Column() {\n        ImageAnimation()\n      }\n      .width(Const.CONTENT_WIDTH_PERCENT)\n      .height(Const.IMAGE_CONTAINER_HEIGHT)\n      .margin({\n        top: $r('app.float.content_container_margin_top'),\n        bottom: $r('app.float.content_container_margin_bottom') })\n      .justifyContent(FlexAlign.Center)\n    }\n    .width(Const.FULL_SIZE)\n    .alignItems(HorizontalAlign.Center)\n    .height($r('app.float.fixed_item_height'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\view\\StyleListItem.ets", "project_name": "codelabs-master", "id": "fd4816ec3ef757de200f6a13cceff003d891ba3f4d9cc7a728e80658821eaffd"}
{"text": "import ZonesItem from '../viewmodel/ZonesItem';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { SwiperDataSource } from '../common/utils/SwiperDataSource';\nimport zonesViewModel from '../viewmodel/ZonesViewModel';\n\n@Component\nexport default struct SwiperListItem {\n  private swiperController: SwiperController = new SwiperController();\n  @Prop imageHeight: number;\n  @Prop arrowIconOpacity: number;\n  @Consume('introductionData') introductionData: ZonesItem;\n  @StorageLink(\"currentZoneId\") currentZoneId: number = 0;\n  zoneListSwiper: SwiperDataSource = new SwiperDataSource([])\n\n  build() {\n    Stack({ alignContent: Alignment.Bottom }) {\n      Swiper(this.swiperController) {\n        LazyForEach(this.zoneListSwiper, (item:ZonesItem) => {\n          Image(item.swiperPic)\n            .width(Const.FULL_SIZE)\n            .height(this.imageHeight + '%')\n            .objectFit(ImageFit.Cover)\n        }, (item:ZonesItem) => JSON.stringify(item))\n      }\n      .index(this.currentZoneId)\n      .indicator(this.imageHeight < Const.FULL_PERCENT_NUMBER ?\n        false : new DotIndicator().bottom($r('app.float.swiper_indicator_margin_bottom')))\n      .loop(true)\n      .cachedCount(Const.IMAGE_SWIPER_CACHE_COUNT)\n      .curve(Curve.EaseOut)\n      .disableSwipe(this.imageHeight < Const.FULL_PERCENT_NUMBER ? true : false)\n      .onChange((index) => {\n        this.currentZoneId = index;\n        this.getIntroductionData();\n      })\n\n      Text(this.introductionData.title)\n        .fontSize($r('app.float.font_size_largest'))\n        .fontWeight(FontWeight.Bold)\n        .fontColor($r('app.color.font_color_white'))\n        .opacity(this.arrowIconOpacity)\n        .width(Const.FULL_SIZE)\n        .textAlign(TextAlign.Center)\n        .height($r('app.float.zone_name_container_height'))\n        .margin({ bottom: $r('app.float.zone_name_margin_bottom') })\n        .animation({\n          duration: Const.ANIMATION_DURATION_NORMAL,\n          curve: Curve.EaseOut,\n        })\n      Image($r('app.media.ic_arrow_down'))\n        .height($r('app.float.arrow_down_height'))\n        .width($r('app.float.arrow_down_width'))\n        .margin({ bottom: $r('app.float.arrow_down_margin_bottom') })\n        .opacity(this.arrowIconOpacity)\n        .animation({\n          duration: Const.ANIMATION_DURATION_NORMAL,\n          curve: Curve.EaseOut,\n        })\n    }\n  }\n\n  \n  getIntroductionData() {\n    let zoneList = zonesViewModel.getZonesList();\n    this.introductionData = zoneList.filter((item) => item.id === this.currentZoneId)[0];\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\view\\SwiperListItem.ets", "project_name": "codelabs-master", "id": "296da2b7e3aa644b1a9e185ac93973b2da809d860c128c10cb30ba786ab5ceaa"}
{"text": "import router from '@ohos.router';\nimport ZonesItem from '../viewmodel/ZonesItem';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { ZonesConstants as ZoneConst } from '../common/constants/ZonesConstants';\nimport ZonesViewModel from '../viewmodel/ZonesViewModel';\n\n@Entry\n@Component\nexport struct Zones {\n  changedIndex: boolean = true;\n  zonesList: ZonesItem[] = ZonesViewModel.getZonesList();\n  @StorageLink(\"aheadIndex\") aheadIndex: number = ZoneConst.HALF_COUNT;\n  @State marginBottom: number = 0;\n\n  getImgCoefficients(index: number): number {\n    let coefficient = this.aheadIndex - index;\n    let tempCoefficient = Math.abs(coefficient);\n    if (tempCoefficient <= ZoneConst.HALF_COUNT) {\n      return coefficient;\n    }\n    let dataLength = this.zonesList.length;\n    let tempOffset = dataLength - tempCoefficient;\n    if (tempOffset <= ZoneConst.HALF_COUNT) {\n      if (coefficient > 0) {\n        return -tempOffset;\n      }\n      return tempOffset;\n    }\n    return 0;\n  }\n\n  getOffSetY(index: number): number {\n    let offsetIndex = this.getImgCoefficients(index);\n    let tempOffset = Math.abs(offsetIndex);\n    let offsetY = this.marginBottom / (tempOffset + 1);\n    if (tempOffset === 1) {\n      offsetY += -offsetIndex * ZoneConst.MAX_OFFSET_Y;\n    } else if (tempOffset == ZoneConst.HALF_COUNT) {\n      offsetY += -offsetIndex * (ZoneConst.MAX_OFFSET_Y - ZoneConst.OFFSET_COEFFICIENTS);\n    }\n    return offsetY;\n  }\n\n  startAnimation(isUp: boolean): void {\n    animateTo({\n      duration: Const.SWIPER_DURATION,\n    }, () => {\n      let dataLength = this.zonesList.length\n      let tempIndex = isUp ? this.aheadIndex + 1 : dataLength + this.aheadIndex - 1;\n      this.aheadIndex = tempIndex % dataLength;\n      this.marginBottom = 0;\n    });\n  }\n\n  handlePanGesture(offsetY: number): void {\n    if (Math.abs(offsetY) < ZoneConst.MAX_MOVE_OFFSET) {\n      this.marginBottom = offsetY;\n    } else {\n      if (this.changedIndex) {\n        return;\n      }\n      this.changedIndex = true;\n      this.startAnimation(offsetY < 0);\n    }\n  }\n\n  build() {\n    Navigation() {\n      Stack() {\n        ForEach(this.zonesList, (item: ZonesItem, index: number) => {\n          Row() {\n            Image(item.thumbnail)\n              .objectFit(ImageFit.Cover)\n              .borderRadius($r('app.float.common_border_radius'))\n              .margin({ bottom: Const.SHADOW_RADIUS })\n              .shadow({\n                radius: Const.SHADOW_RADIUS,\n                color: `rgba(0,0,0,0.3)`,\n                offsetY: Const.SHADOW_RADIUS / Const.DOUBLE_NUM\n              })\n              .opacity(1 - Math.min(ZoneConst.HALF_COUNT,\n                Math.abs(this.getImgCoefficients(index))) * ZoneConst.OPACITY_COEFFICIENTS)\n          }\n          .width(index != this.aheadIndex && this.getImgCoefficients(index) === 0\n            ? Const.SWIPER_DEFAULT_WIDTH\n            : `${ZoneConst.ITEM_WIDTH - ZoneConst.OFFSET_COEFFICIENTS * Math.abs(this.getImgCoefficients(index))}%`)\n          .aspectRatio(Const.SWIPER_ASPECT_RATIO)\n          .borderRadius($r('app.float.common_border_radius'))\n          .offset({ x: 0, y: this.getOffSetY(index) })\n          .zIndex(index != this.aheadIndex && this.getImgCoefficients(index) === 0\n            ? 0 : ZoneConst.HALF_COUNT - Math.abs(this.getImgCoefficients(index)))\n          .blur(ZoneConst.OFFSET_COEFFICIENTS * Math.abs(this.getImgCoefficients(index)))\n        }, (item: ZonesItem) => JSON.stringify(item))\n      }\n      .width(Const.FULL_PERCENT)\n      .height(Const.FULL_PERCENT)\n      .margin({ top: Const.SHADOW_RADIUS / Const.DOUBLE_NUM })\n      .alignContent(Alignment.Center)\n      .onClick(() => {\n        router.pushUrl({ url: Const.INTRODUCTION_URL, params: { id: this.zonesList[this.aheadIndex].id } });\n        AppStorage.Set<number>('imageHeight', Const.FULL_PERCENT_NUMBER);\n        AppStorage.Set<number>('arrowIconOpacity', Const.OPACITY_MAX);\n      })\n      .gesture(\n        PanGesture({ direction: PanDirection.Vertical })\n          .onActionStart((event: GestureEvent) => {\n            this.changedIndex = false;\n            this.handlePanGesture(event.offsetY);\n          })\n          .onActionUpdate((event: GestureEvent) => {\n            this.handlePanGesture(event.offsetY);\n          })\n          .onActionEnd(() => {\n            animateTo({\n              duration: Const.SWIPER_DURATION,\n            }, () => {\n              this.marginBottom = 0;\n            });\n          })\n      )\n    }\n    .backgroundColor($r('app.color.common_background_color'))\n    .title(Const.INTRODUCTION_TITLE)\n    .titleMode(NavigationTitleMode.Full)\n    .hideBackButton(true)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\view\\ZonesComponent.ets", "project_name": "codelabs-master", "id": "a2b008925c6641da7d9f6a4142356d3956ce21f63118b6ec3328c0d6effb26e7"}
{"text": "@Observed\nexport class AddressItem {\n  name?: Resource;\n  icon?: Resource;\n  locations: Array<Location> = [];\n  textColor?: Resource;\n}\n\n\nexport class Location {\n  positionX: number;\n  positionY: number;\n  oriPositionX: number;\n  oriPositionY: number;\n\n  constructor(positionX: number, positionY: number) {\n    this.positionX = positionX;\n    this.positionY = positionY;\n    this.oriPositionX = positionX;\n    this.oriPositionY = positionY;\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\AddressItem.ets", "project_name": "codelabs-master", "id": "86007ba6e4b920c79deee7ae1e65e9e11cc1d91ec94dded5a398a3c5d71cb1fd"}
{"text": "import { PositionType } from '../common/constants/CommonConstants';\n\n\nexport class PositionItem {\n  icon: Resource = $r('app.media.ic_train_station');\n  text: Resource = $r('app.string.train_station');\n  \n  type: PositionType = PositionType.TRAIN_STATION;\n  \n  lngLat: Array<GeoCoordinates> = [];\n}\n\n\nexport class GeoCoordinates {\n  longitude: number = 0;\n  latitude: number = 0;\n}\n\n\nexport class PixelCoordinates {\n  coordinateX: number = 0;\n  coordinateY: number = 0;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\PositionItem.ets", "project_name": "codelabs-master", "id": "5fe6e87827125ac4a12e94358f358ec4266ad7c15b81beb1079881d6ddecb2d6"}
{"text": "@Observed\nexport class TrainsMap {\n  imgBg: ImageBitmap | null = null;\n  interval: number = 0;\n  \n  lineData: Array<Position> = [];\n}\n\nexport class Position {\n  x: number = 0;\n  y: number = 0;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\TrainsMap.ets", "project_name": "codelabs-master", "id": "8bdd03167356e069bdb6533dcf901f482f789cb558e79f1ac118b4df4e492d68"}
{"text": "export default class ZonesItem {\n  id: number = 0;\n  title: ResourceStr = '';\n  subTitle: ResourceStr = '';\n  createTime: ResourceStr = '';\n  content: ResourceStr[] = [];\n  thumbnail: ResourceStr = '';\n  swiperPic: ResourceStr = '';\n  subPicTop: ResourceStr = '';\n  subPicBottom: ResourceStr = '';\n  titleIcon: ResourceStr = '';\n  imageList: ResourceStr[] = [];\n  buildingInformation: ResourceStr = '';\n  buildingPic: ResourceStr = '';\n  geographyPic: ResourceStr = '';\n  geographyPicLight: ResourceStr = '';\n  backgroundColor: ResourceStr = '';\n  starLinePic: ResourceStr[] = [];\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\ZonesItem.ets", "project_name": "codelabs-master", "id": "40b9a1814bd81afb306e98c8655f93ef3b9efbf9de9512c77bedc81b771ddf5f"}
{"text": "let storage = new LocalStorage();\n@Entry(storage)\n@Component\nstruct ZonesCard {\n  @LocalStorageProp('imageResource') imageResource: Resource = $r('app.media.app_icon');\n  @LocalStorageProp('zoneID') zoneID: number = 0;\n  \n  readonly TITLE: string = 'Hello World';\n  \n  readonly ACTION_TYPE: string = 'router';\n  \n  readonly ABILITY_NAME: string = 'EntryAbility';\n  \n  readonly MESSAGE: string = 'add detail';\n  \n  readonly FULL_WIDTH_PERCENT: string = '100%';\n  \n  readonly FULL_HEIGHT_PERCENT: string = '100%';\n\n  build() {\n    Row() {\n      Column() {\n        Image(this.imageResource)\n      }\n      .width(this.FULL_WIDTH_PERCENT)\n    }\n    .height(this.FULL_HEIGHT_PERCENT)\n    .onClick(() => {\n      postCardAction(this, {\n        \"action\": this.ACTION_TYPE,\n        \"abilityName\": this.ABILITY_NAME,\n        \"params\": {\n          url: \"introduction\",\n          id: this.zoneID\n        }\n      });\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\OxHornCampus\\entry\\src\\main\\ets\\zonescard\\pages\\ZonesCard.ets", "project_name": "codelabs-master", "id": "bee715982af9bd5afcf55559e931b6d9b8a446f9299f485a334ff82a54ebcc7a"}
{"text": "import hilog from '@ohos.hilog';\n\n\nexport class Logger {\n  private domain: number;\n  private prefix: string;\n  private format: string = `%{public}s, %{public}s`;\n\n  constructor(prefix: string) {\n    this.prefix = prefix;\n    this.domain = 0xFF00;\n  }\n\n  debug(...args: string[]) {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }\n\n  info(...args: string[]) {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }\n\n  warn(...args: string[]) {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }\n\n  error(...args: string[]) {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }\n\n  fatal(...args: string[]) {\n    hilog.fatal(this.domain, this.prefix, this.format, args);\n  }\n\n  isLoggable(level: number) {\n    hilog.isLoggable(this.domain, this.prefix, level);\n  }\n}\n\nexport default new Logger('[PageRouter]');", "path": "codelabs-master\\HarmonyOS_NEXT\\PagesRouter\\entry\\src\\main\\ets\\common\\utils\\Logger.ets", "project_name": "codelabs-master", "id": "4f3978c83b2a4e22822529c26aa14d637c0b7a3f1942a2c3672ab33b43298afc"}
{"text": "import UIAbility from '@ohos.app.ability.UIAbility'\nimport Want from '@ohos.app.ability.Want';\nimport AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport window from '@ohos.window';\nimport Logger from '../common/utils/Logger';\n\nconst TAG = '[EntryAbility]';\n\nexport default class EntryAbility extends UIAbility {\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam) {\n    Logger.info(TAG, 'onCreate');\n    AppStorage.setOrCreate('abilityWant', want);\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    \n    Logger.info(TAG, 'onWindowStageCreate');\n    windowStage.loadContent('pages/IndexPage', (err, data) => {\n      if (err.code) {\n        Logger.info(TAG, 'Failed to load the content. Cause:' + JSON.stringify(err));\n        return;\n      }\n      Logger.info(TAG, 'Succeeded in loading the content. Data: ' + JSON.stringify(data));\n    });\n  }\n};\n", "path": "codelabs-master\\HarmonyOS_NEXT\\PagesRouter\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "97a79ab2b4323925c5515194d98c43a5c98ffdd50d966a12d6a86c56b4eef7ad"}
{"text": "import router from '@ohos.router';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport Logger from '../common/utils/Logger';\n\nconst TAG = '[IndexPage]';\nclass routerParams {\n  src:string\n  constructor(str:string) {\n    this.src = str\n  }\n}\n\n\n@Entry\n@Component\nstruct IndexPage {\n  @State message: string = CommonConstants.INDEX_MESSAGE;\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(CommonConstants.FONT_SIZE)\n          .fontWeight(FontWeight.Bold)\n        Blank()\n        Button($r('app.string.next'))\n          .fontSize(CommonConstants.BUTTON_FONT_SIZE)\n          .width(CommonConstants.BUTTON_WIDTH)\n          .height(CommonConstants.BUTTON_HEIGHT)\n          .backgroundColor($r('app.color.button_bg'))\n          .onClick(() => {\n            router.pushUrl({\n              url: CommonConstants.SECOND_URL,\n              params: new routerParams(CommonConstants.SECOND_SRC_MSG)\n            }).catch((error:Error) => {\n              Logger.info(TAG, 'IndexPage push error' + JSON.stringify(error));\n            });\n          })\n      }\n      .width(CommonConstants.FULL_WIDTH)\n      .height(CommonConstants.LAYOUT_HEIGHT)\n    }\n    .height(CommonConstants.FULL_HEIGHT)\n    .backgroundColor($r('app.color.page_bg'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PagesRouter\\entry\\src\\main\\ets\\pages\\IndexPage.ets", "project_name": "codelabs-master", "id": "4f1894d3b296db3bf8f60441718872d5e57b99d998a9ca18608ee6bd25ef805d"}
{"text": "import router from '@ohos.router';\nimport CommonConstants from '../common/constants/CommonConstants';\n\nclass routerParams {\n  src:string = ''\n}\n\n@Entry\n@Component\nstruct SecondPage {\n  @State message: string = CommonConstants.SECOND_MESSAGE;\n  @State params: routerParams = router.getParams() as routerParams\n  @State src: string = this.params.src;\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(CommonConstants.FONT_SIZE)\n          .fontWeight(FontWeight.Bold)\n        Text(this.src)\n          .fontSize(CommonConstants.PARAMS_FONT_SIZE)\n          .opacity(CommonConstants.PARAMS_OPACITY)\n        Blank()\n        Button($r('app.string.back'))\n          .fontSize(CommonConstants.BUTTON_FONT_SIZE)\n          .width(CommonConstants.BUTTON_WIDTH)\n          .height(CommonConstants.BUTTON_HEIGHT)\n          .backgroundColor($r('app.color.button_bg'))\n          .onClick(() => {\n            router.back();\n          })\n      }\n      .width(CommonConstants.FULL_WIDTH)\n      .height(CommonConstants.LAYOUT_HEIGHT)\n    }\n    .height(CommonConstants.FULL_HEIGHT)\n    .backgroundColor($r('app.color.page_bg'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PagesRouter\\entry\\src\\main\\ets\\pages\\SecondPage.ets", "project_name": "codelabs-master", "id": "16caed557be8974dacb6998ca472f8b8aa7e3dcfde4e373654b1cae791394e9b"}
{"text": "import common from '@ohos.app.ability.common';\nimport wantAgent from '@ohos.app.ability.wantAgent';\nimport backgroundTaskManager from '@ohos.resourceschedule.backgroundTaskManager';\nimport Logger from './Logger';\n\nconst TAG = 'Steps Utils';\n\nexport class BackgroundUtil {\n  \n  public static startContinuousTask(context: common.UIAbilityContext): void {\n    let wantAgentInfo: wantAgent.WantAgentInfo = {\n      wants: [\n        {\n          bundleName: context.abilityInfo.bundleName,\n          abilityName: context.abilityInfo.name\n        }\n      ],\n      operationType: wantAgent.OperationType.START_ABILITY,\n      requestCode: 0,\n      wantAgentFlags: [wantAgent.WantAgentFlags.UPDATE_PRESENT_FLAG]\n    };\n\n    wantAgent.getWantAgent(wantAgentInfo).then((wantAgentObj) => {\n      try {\n        backgroundTaskManager.startBackgroundRunning(context,\n          backgroundTaskManager.BackgroundMode.LOCATION, wantAgentObj).then(() => {\n          Logger.info(TAG, 'startBackgroundRunning succeeded');\n        }).catch((err: Error) => {\n          Logger.error(TAG, `startBackgroundRunning failed Cause:  ${JSON.stringify(err)}`);\n        });\n      } catch (error) {\n        Logger.error(TAG, `stopBackgroundRunning failed. error: ${JSON.stringify(error)} `);\n      }\n    });\n  }\n\n  \n  public static stopContinuousTask(context: common.UIAbilityContext): void {\n    try {\n      backgroundTaskManager.stopBackgroundRunning(context).then(() => {\n        Logger.info(TAG, 'stopBackgroundRunning succeeded');\n      }).catch((err: Error) => {\n        Logger.error(TAG, `stopBackgroundRunning failed Cause:  ${JSON.stringify(err)}`);\n      });\n    } catch (error) {\n      Logger.error(TAG, `stopBackgroundRunning failed. error: ${JSON.stringify(error)} `);\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PedometerApp\\entry\\src\\main\\ets\\common\\utils\\BackgroundUtil.ets", "project_name": "codelabs-master", "id": "1776f9b0ba48ae3f711eeec6e5d8511ab522a51fafd3ae6696b07e37ae3cbfc9"}
{"text": "import data_preferences from '@ohos.data.preferences';\n\nexport class GlobalContext {\n  private constructor() {}\n  private static instance: GlobalContext;\n  private _objects = new Map<string, Promise<data_preferences.Preferences>>();\n\n  public static getContext(): GlobalContext {\n    if (!GlobalContext.instance) {\n      GlobalContext.instance = new GlobalContext();\n    }\n    return GlobalContext.instance;\n  }\n\n  getObject(value: string): Promise<data_preferences.Preferences> | undefined {\n    return this._objects.get(value);\n  }\n\n  setObject(key: string, objectClass: Promise<data_preferences.Preferences>): void {\n    this._objects.set(key, objectClass);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PedometerApp\\entry\\src\\main\\ets\\common\\utils\\GlobalContext.ets", "project_name": "codelabs-master", "id": "db7cfeca9071fd63b0ca7b3f4c3aa2f59dbf85f7172fbcae434d3dc11d32fe79"}
{"text": "import geoLocationManager from '@ohos.geoLocationManager';\n\nclass LocationUtil {\n  geolocationOn(locationChange: (location: geoLocationManager.Location) => void): void {\n    let requestInfo: geoLocationManager.LocationRequest = {\n      'priority': 0x203,\n      'scenario': 0x300,\n      'timeInterval': 0,\n      'distanceInterval': 0,\n      'maxAccuracy': 0\n    }\n    try {\n      geoLocationManager.on('locationChange', requestInfo, locationChange);\n    } catch (err) {\n      console.error(\"locationChange error:\" + JSON.stringify(err));\n    }\n  }\n\n  geolocationOff(): void {\n    geoLocationManager.off('locationChange');\n  }\n}\n\nlet locationUtil = new LocationUtil();\n\nexport default locationUtil as LocationUtil;", "path": "codelabs-master\\HarmonyOS_NEXT\\PedometerApp\\entry\\src\\main\\ets\\common\\utils\\LocationUtil.ets", "project_name": "codelabs-master", "id": "577a5e1b274eeae088416c154c76946314c9c0ca98c3d3288a83ee0cf69a54a6"}
{"text": "class NumberUtil {\n  _parseInt(str: string, radix: number): number {\n    let res = 0;\n\n    str = String(str).trim().split('.')[0]\n    let length = str.length;\n\n    for (let i = 0; i < length; i++) {\n      let arr = str.split('').reverse().join('');\n      res += Math.floor(Number(arr[i])) * Math.pow(radix, i)\n    }\n\n    return res;\n  }\n}\n\nlet numberUtil = new NumberUtil();\n\nexport default numberUtil as NumberUtil;", "path": "codelabs-master\\HarmonyOS_NEXT\\PedometerApp\\entry\\src\\main\\ets\\common\\utils\\NumberUtil.ets", "project_name": "codelabs-master", "id": "af21d57352a7db9623338a493f8f4ac5da92d71cec1d7796c9637dd470c1794c"}
{"text": "import common from '@ohos.app.ability.common';\nimport data_preferences from '@ohos.data.preferences';\nimport { CommonConstants } from '../constants/CommonConstants';\nimport { GlobalContext } from './GlobalContext';\nimport Logger from './Logger';\n\nconst TAG: string = 'StepsUtil';\nconst PREFERENCES_NAME = 'myPreferences';\n\n\nexport class StepsUtil {\n  createStepsPreferences(context: common.UIAbilityContext) {\n    let preferences: Promise<data_preferences.Preferences> = data_preferences.getPreferences(context, PREFERENCES_NAME);\n    GlobalContext.getContext().setObject('getStepsPreferences', preferences)\n  }\n\n  \n  getProgressValue(setSteps: number, currentSteps: number): number {\n    let progressValue: number = 0;\n    if (setSteps > 0 && currentSteps > 0) {\n      progressValue = Math.round((currentSteps / setSteps) * CommonConstants.ONE_HUNDRED);\n    }\n    return progressValue;\n  }\n\n  \n  putStorageValue(key: string, value: string) {\n    GlobalContext.getContext().getObject('getStepsPreferences')?.then((preferences: data_preferences.Preferences) => {\n      preferences.put(key, value).then(() => {\n        Logger.info(TAG, 'Storage put succeeded, key:' + key);\n      }).catch((err: Error) => {\n        Logger.error(TAG, 'Failed to put the value of startup with err: ' + JSON.stringify(err));\n      })\n    }).catch((err: Error) => {\n      Logger.error(TAG, 'Failed to get the storage with err:' + JSON.stringify(err));\n    })\n  }\n\n  \n  async getStorageValue(key: string): Promise<string> {\n    let ret: data_preferences.ValueType = '';\n    const preferences: data_preferences.Preferences | undefined = await GlobalContext.getContext().getObject('getStepsPreferences');\n    if(preferences) {\n      ret = await preferences?.get(key, ret);\n    }\n    return String(ret);\n  }\n\n  \n  CleanStepsData(): void {\n    this.putStorageValue(CommonConstants.OLD_STEPS, '');\n    this.putStorageValue(CommonConstants.IS_START, CommonConstants.FALSE);\n    this.putStorageValue(CommonConstants.START_POSITION, '');\n    this.putStorageValue(CommonConstants.PROGRESS_VALUE_TAG, CommonConstants.INITIALIZATION_VALUE);\n  }\n\n  \n  checkStrIsEmpty(str: string): boolean {\n    return str?.trim().length === 0;\n  }\n}\n\nlet stepsUtil = new StepsUtil();\n\nexport default stepsUtil as StepsUtil;", "path": "codelabs-master\\HarmonyOS_NEXT\\PedometerApp\\entry\\src\\main\\ets\\common\\utils\\StepsUtil.ets", "project_name": "codelabs-master", "id": "aa2ae8f28bfbe9f0272bd4bea830b5486295ec96085e5919258ac4e0ab2b7b9c"}
{"text": "import Constants from '../common/constants/Constants';\nimport ConversionItemComponent from '../view/ConversionItemComponent';\nimport ConversionItem from '../viewmodel/ConversionItem';\nimport ConversionViewModel from '../viewmodel/ConversionViewModel';\n\n@Entry\n@Component\nstruct ConversionPage {\n  build() {\n    Column() {\n      Navigation() {\n        List({ space: Constants.ITEM_PADDING }) {\n          ForEach(ConversionViewModel.getConversionList(), (item: ConversionItem) => {\n            ListItem() {\n              ConversionItemComponent({ model: item })\n            }\n            .padding({\n              left: $r('app.float.item_padding'),\n              right: $r('app.float.item_padding')\n            })\n          })\n        }\n        .width(Constants.FULL_PERCENT)\n        .height(Constants.FULL_PERCENT)\n      }\n      .titleMode(NavigationTitleMode.Mini)\n      .title(Constants.PIXEL_CONVERSION)\n    }\n    .backgroundColor($r('app.color.page_background'))\n    .width(Constants.FULL_PERCENT)\n    .height(Constants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PixelConversion\\entry\\src\\main\\ets\\pages\\ConversionPage.ets", "project_name": "codelabs-master", "id": "1e37adc7f0ccd2bf5e51f62dd1e016aa2275537f58546a66d502b0036b3774a4"}
{"text": "import Constants from '../common/constants/Constants';\nimport IntroductionItem from '../viewmodel/IntroductionItem';\nimport IntroduceItemComponent from '../view/IntroduceItemComponent';\nimport IntroductionViewModel from '../viewmodel/IntroductionViewModel';\n\n@Entry\n@Component\nstruct IntroductionPage {\n  build() {\n    Column() {\n      Navigation() {\n        List({ space: Constants.ITEM_PADDING }) {\n          ForEach(IntroductionViewModel.getIntroductionList(), (item: IntroductionItem) => {\n            ListItem() {\n              IntroduceItemComponent({ model: item })\n            }\n            .padding({\n              left: $r('app.float.item_padding'),\n              right: $r('app.float.item_padding')\n            })\n          })\n        }\n        .width(Constants.FULL_PERCENT)\n        .height(Constants.FULL_PERCENT)\n      }\n      .titleMode(NavigationTitleMode.Mini)\n      .title(Constants.PIXEL_INTRODUCTION)\n    }\n    .backgroundColor($r('app.color.page_background'))\n    .width(Constants.FULL_PERCENT)\n    .height(Constants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PixelConversion\\entry\\src\\main\\ets\\pages\\IntroductionPage.ets", "project_name": "codelabs-master", "id": "99f590cc324cbe7ced55d2f14adbca12b06a17527c244dd223dff4c976231ac3"}
{"text": "export default class ConversionItem {\n  title: string;\n  subTitle: string;\n  value: number = 0;\n  conversionTitle: string;\n  conversionSubTitle: string;\n  conversionValue: number;\n  notice?: Resource | string;\n\n  constructor(title?: string, subTitle?: string, value?: number, conversionTitle?: string, conversionSubTitle?: string,\n              conversionValue?: number, notice?: Resource | string) {\n    this.title = title ? title : '';\n    this.subTitle = subTitle ? subTitle : '';\n    this.value = value ? value : 0;\n    this.conversionTitle = conversionTitle ? conversionTitle : '';\n    this.conversionSubTitle = conversionSubTitle ? conversionSubTitle : '';\n    this.conversionValue = conversionValue ? conversionValue : 0;\n    this.notice = notice ? notice : '';\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PixelConversion\\entry\\src\\main\\ets\\viewmodel\\ConversionItem.ets", "project_name": "codelabs-master", "id": "72d1999a40d99bf8895903351dbd0f09bc158b8eb1e3479badf5e43a8b675d71"}
{"text": "import Constants from '../common/constants/Constants';\nimport ConversionItem from './ConversionItem';\n\nclass ConversionViewModel {\n  \n  getConversionList() {\n    let conversionItems = CONVERSION_LIST;\n    return conversionItems;\n  }\n}\n\nexport const CONVERSION_LIST: ConversionItem[] = [\n  new ConversionItem('vp > px', `vp2px(${Constants.VP_SIZE})`, vp2px(Constants.VP_SIZE), 'px > vp',`px2vp(${Constants.VP_SIZE})`, px2vp(Constants.VP_SIZE)),\n  new ConversionItem('fp > px',`fp2px(${Constants.VP_SIZE})`,fp2px(Constants.VP_SIZE),'px > fp',`px2fp(${Constants.VP_SIZE})`,px2fp(Constants.VP_SIZE)),\n  new ConversionItem('lpx > px',`lpx2px(${Constants.VP_SIZE})`,lpx2px(Constants.VP_SIZE),'px > lpx',`px2lpx(${Constants.VP_SIZE})`,px2lpx(Constants.VP_SIZE),$r('app.string.notice'))\n]\n\nlet conversionViewModel = new ConversionViewModel();\n\nexport default conversionViewModel as ConversionViewModel;", "path": "codelabs-master\\HarmonyOS_NEXT\\PixelConversion\\entry\\src\\main\\ets\\viewmodel\\ConversionViewModel.ets", "project_name": "codelabs-master", "id": "0d16e6014a63837c9e400b1f7b57f91ec9a8cb5450e69a3b90914fa0ed963423"}
{"text": "export default class IntroductionItem {\n  name: string;\n  title: Resource | string;\n  subTitle: Resource | string;\n  value: string;\n  smallFontSize: number;\n  largeFontSize: number;\n\n  constructor(name?: string, title?: Resource | string, subTitle?: Resource | string, value?: string,\n              smallFontSize?: number, largeFontSize?: number) {\n\n    this.name = name ? name : '';\n    this.title = title ? title : '';\n    this.subTitle = subTitle ? subTitle : '';\n    this.value = value ? value : '';\n    this.smallFontSize = smallFontSize ? smallFontSize : 0;\n    this.largeFontSize = largeFontSize ? largeFontSize : 0;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\PixelConversion\\entry\\src\\main\\ets\\viewmodel\\IntroductionItem.ets", "project_name": "codelabs-master", "id": "07eabc605b2ce92e571ab1814fcf03afbab083c8a5fc8b92f157c9d95fa5355b"}
{"text": "import Constants from '../common/constants/Constants';\nimport IntroductionItem from './IntroductionItem';\n\nclass IntroductionViewModel {\n  \n  getIntroductionList() {\n    let introductionItems = INTRODUCE_LIST;\n    return introductionItems;\n  }\n}\n\nconst INTRODUCE_LIST: IntroductionItem[] = [\n  new IntroductionItem('px', $r('app.string.px_unit'), '', Constants.PIXEL_WIDTH + 'px', 0, 0),\n  new IntroductionItem('vp', $r('app.string.vp_unit'), $r('app.string.vp_desc'), Constants.PIXEL_WIDTH + 'vp', 0, 0),\n  new IntroductionItem('lpx', $r('app.string.lpx_unit'), '', Constants.PIXEL_WIDTH + 'lpx', 0, 0),\n  new IntroductionItem('fp', $r('app.string.fp_unit'), $r('app.string.fp_desc'), '', Constants.SMALL_FONT_SIZE,\n    Constants.LARGE_FONT_SIZE)\n];\n\nlet introductionViewModel = new IntroductionViewModel();\n\nexport default introductionViewModel as IntroductionViewModel;", "path": "codelabs-master\\HarmonyOS_NEXT\\PixelConversion\\entry\\src\\main\\ets\\viewmodel\\IntroductionViewModel.ets", "project_name": "codelabs-master", "id": "85ff36bf45be365cbeed4997e69b4c5bd7503c8fc61250dda67c656eac36b6e3"}
{"text": "import dataPreferences from '@ohos.data.preferences';\nimport promptAction from '@ohos.promptAction';\nimport Logger from '../common/utils/Logger';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport Fruit from '../viewmodel/Fruit';\n\nlet context = getContext(this);\nlet preference: dataPreferences.Preferences;\nlet preferenceTemp: dataPreferences.Preferences;\n\n\nclass PreferenceModel {\n  private fruitData: Fruit = new Fruit();\n\n  \n  async getPreferencesFromStorage() {\n    try {\n      preference = await dataPreferences.getPreferences(context, CommonConstants.PREFERENCES_NAME);\n    } catch (err) {\n      Logger.error(CommonConstants.TAG, `Failed to get preferences, Cause: ${err}`);\n    }\n  }\n\n  \n  async deletePreferences() {\n    try {\n      await dataPreferences.deletePreferences(context, CommonConstants.PREFERENCES_NAME);\n    } catch(err) {\n      Logger.error(CommonConstants.TAG, `Failed to delete preferences, Cause: ${err}`);\n    };\n    preference = preferenceTemp;\n    this.showToastMessage($r('app.string.delete_success_msg'));\n  }\n\n  \n  async putPreference(fruit: Fruit) {\n    if (!preference) {\n      await this.getPreferencesFromStorage();\n    }\n    \n    try {\n      await preference.put(CommonConstants.KEY_NAME, JSON.stringify(fruit));\n    } catch (err) {\n      Logger.error(CommonConstants.TAG, `Failed to put value, Cause: ${err}`);\n    }\n    \n    await preference.flush();\n  }\n\n  \n  async getPreference() {\n    let fruit = '';\n    if (!preference) {\n      await this.getPreferencesFromStorage();\n    }\n    try {\n      \n      fruit = (await preference.get(CommonConstants.KEY_NAME, '')).toString();\n    } catch (err) {\n      Logger.error(CommonConstants.TAG, `Failed to get value, Cause: ${err}`);\n    }\n    \n    if (fruit === '') {\n      this.showToastMessage($r('app.string.data_is_null_msg'));\n      return;\n    }\n    this.showToastMessage($r('app.string.read_success_msg'));\n    return JSON.parse(fruit);\n  }\n\n  \n  async getFruitData() {\n    this.fruitData = await this.getPreference();\n    return this.fruitData;\n  }\n\n  \n  checkFruitData(fruit: Fruit) {\n    if (fruit.fruitName === '' || fruit.fruitNum === '') {\n      this.showToastMessage($r('app.string.fruit_input_null_msg'));\n      return true;\n    }\n    return false;\n  }\n\n  \n  writeData(fruit: Fruit) {\n    \n    let isDataNull = this.checkFruitData(fruit);\n    if (isDataNull) {\n      return;\n    }\n    \n    this.putPreference(fruit);\n    this.showToastMessage($r('app.string.write_success_msg'));\n  }\n\n  \n  showToastMessage(message: Resource) {\n    promptAction.showToast({\n      message: message,\n      duration: CommonConstants.DURATION\n    });\n  };\n}\n\nexport default new PreferenceModel();", "path": "codelabs-master\\HarmonyOS_NEXT\\Preferences\\entry\\src\\main\\ets\\model\\PreferenceModel.ets", "project_name": "codelabs-master", "id": "7d0cde0e91e64888467ebfe44cf0f97ac36f377a4d11186001fe43f0530ba9dc"}
{"text": "import PreferenceModel from '../model/PreferenceModel';\nimport ButtonComponent from '../view/ButtonComponent';\nimport TextItemComponent from '../view/TextItemComponent';\nimport Fruit from '../viewmodel/Fruit';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport StyleConstants from '../common/constants/StyleConstants';\n\n\n@Entry\n@Component\nstruct Index {\n  @State fruit: Fruit = new Fruit();\n\n  build() {\n    Column() {\n      \n      TextItemComponent({\n        textResource: $r('app.string.fruit_text'),\n        placeholderResource: $r('app.string.fruit_placeholder'),\n        textFlag: CommonConstants.FRUIT_FLAG,\n        fruit: $fruit,\n        textInputCallBack: (value: string) => {\n          this.fruit.fruitName = value;\n        }\n      })\n\n      \n      TextItemComponent({\n        textResource: $r('app.string.number_text'),\n        placeholderResource: $r('app.string.number_placeholder'),\n        textFlag: CommonConstants.NUMBER_FLAG,\n        fruit: $fruit,\n        textInputCallBack: (value: string) => {\n          this.fruit.fruitNum = value;\n        }\n      })\n\n      \n      ButtonComponent({ fruit: $fruit })\n    }\n    .width(StyleConstants.FULL_PERCENT)\n    .height(StyleConstants.FULL_PERCENT)\n    .backgroundColor($r('app.color.main_background_color'))\n  }\n\n  async aboutToAppear() {\n    \n    await PreferenceModel.getPreferencesFromStorage();\n    \n    PreferenceModel.getFruitData().then((resultData: Fruit) => {\n      if (resultData) {\n        this.fruit = resultData;\n      }\n    });\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Preferences\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "037d1e3779de513dd77e16388e96a0f38b27ea21d956864961175320b38e6fed"}
{"text": "import PreferenceModel from '../model/PreferenceModel';\nimport ButtonItemData from '../viewmodel/ButtonItemData';\nimport Fruit from '../viewmodel/Fruit';\nimport StyleConstants from '../common/constants/StyleConstants';\n\n\n@Component\nexport default struct ButtonComponent {\n  private buttonItemValues: Array<ButtonItemData> = this.getButtonItemValues();\n  @Link fruit: Fruit;\n\n  build() {\n    Column() {\n      ForEach(this.buttonItemValues, (item: ButtonItemData) => {\n        Button(item.resource, { type: ButtonType.Capsule, stateEffect: true })\n          .backgroundColor($r('app.color.button_background_color'))\n          .width(StyleConstants.BUTTON_WIDTH)\n          .height(StyleConstants.BUTTON_HEIGHT)\n          .fontWeight(StyleConstants.FONT_WEIGHT)\n          .fontSize(StyleConstants.FONT_SIZE)\n          .margin({ bottom: StyleConstants.BUTTON_MARGIN_BOTTOM })\n          .onClick(() => {\n            item.clickMethod();\n          })\n      }, (item: ButtonItemData) => JSON.stringify(item))\n    }\n  }\n\n  \n  getButtonItemValues() {\n    let values: Array<ButtonItemData> = [\n      new ButtonItemData(\n        $r('app.string.write_data_btn_text'),\n        () => {\n          \n          PreferenceModel.writeData(this.fruit);\n        }\n      ),\n      new ButtonItemData(\n        $r('app.string.read_data_btn_text'),\n        () => {\n          \n          PreferenceModel.getFruitData().then((resultData: Fruit) => {\n            if (resultData) {\n              this.fruit = resultData;\n            }\n          });\n        }\n      ),\n      new ButtonItemData(\n        $r('app.string.delete_data_file_btn_text'),\n        () => {\n          \n          PreferenceModel.deletePreferences();\n          \n          this.fruit.fruitName = '';\n          this.fruit.fruitNum = ''\n        }\n      )\n    ];\n    return values;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Preferences\\entry\\src\\main\\ets\\view\\ButtonComponent.ets", "project_name": "codelabs-master", "id": "1e851576c7a93e06fa8e74820b803a823a8f6ec9898eacc5d66cda4073985bd7"}
{"text": "export default class ButtonItemData {\n\n  \n  resource: Resource;\n\n  \n  clickMethod: () => void;\n\n  \n  constructor(resource: Resource, clickMethod: () => void) {\n    this.resource = resource;\n    this.clickMethod = clickMethod;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Preferences\\entry\\src\\main\\ets\\viewmodel\\ButtonItemData.ets", "project_name": "codelabs-master", "id": "430273b1ee7bcd2a8067b05c6a95165e1ef47e76bca8d347be35fa1b524148a0"}
{"text": "export default class Fruit {\n    \n    fruitName: string = '';\n\n    \n    fruitNum: string = '';\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\Preferences\\entry\\src\\main\\ets\\viewmodel\\Fruit.ets", "project_name": "codelabs-master", "id": "4f9e0fc4b43d078344a4456fcb3934fce40d0505f7a521ab5dcf843095ffe7cd"}
{"text": "import { FontSize, ListHeaderStyle } from '../common/constants/Constants';\n\n@Component\nexport struct ListHeaderComponent {\n  paddingValue: Padding | Length = 0;\n  widthValue: Length = 0;\n\n  build() {\n    Row() {\n      Text($r('app.string.page_number'))\n        .fontSize(FontSize.SMALL)\n        .width(ListHeaderStyle.LAYOUT_WEIGHT_LEFT)\n        .fontWeight(ListHeaderStyle.FONT_WEIGHT)\n        .fontColor($r('app.color.font_description'))\n      Text($r('app.string.page_type'))\n        .fontSize(FontSize.SMALL)\n        .width(ListHeaderStyle.LAYOUT_WEIGHT_CENTER)\n        .fontWeight(ListHeaderStyle.FONT_WEIGHT)\n        .fontColor($r('app.color.font_description'))\n      Text($r('app.string.page_vote'))\n        .fontSize(FontSize.SMALL)\n        .width(ListHeaderStyle.LAYOUT_WEIGHT_RIGHT)\n        .fontWeight(ListHeaderStyle.FONT_WEIGHT)\n        .fontColor($r('app.color.font_description'))\n    }\n    .width(this.widthValue)\n    .padding(this.paddingValue)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\RankingDemo\\entry\\src\\main\\ets\\view\\ListHeaderComponent.ets", "project_name": "codelabs-master", "id": "782cb941b05516008d09d25dc65cf73cdf18c2a57d448d1b6f29834dcedc01ae"}
{"text": "import { FontSize, FontWeight, ItemStyle, WEIGHT } from '../common/constants/Constants';\n\n@Component\nexport struct ListItemComponent {\n  index?: number;\n  private name?: Resource;\n  @Prop vote: string = '';\n  @Prop isSwitchDataSource: boolean = false;\n  \n  @State isChange: boolean = false;\n\n  build() {\n    Row() {\n      Column() {\n        if (this.isRenderCircleText()) {\n          if (this.index !== undefined) {\n            this.CircleText(this.index);\n          }\n        } else {\n          Text(this.index?.toString())\n            .lineHeight(ItemStyle.TEXT_LAYOUT_SIZE)\n            .textAlign(TextAlign.Center)\n            .width(ItemStyle.TEXT_LAYOUT_SIZE)\n            .fontWeight(FontWeight.BOLD)\n            .fontSize(FontSize.SMALL)\n        }\n      }\n      .width(ItemStyle.LAYOUT_WEIGHT_LEFT)\n      .alignItems(HorizontalAlign.Start)\n\n      Text(this.name)\n        .width(ItemStyle.LAYOUT_WEIGHT_CENTER)\n        .fontWeight(FontWeight.BOLDER)\n        .fontSize(FontSize.MIDDLE)\n        .fontColor(this.isChange ? ItemStyle.COLOR_BLUE : ItemStyle.COLOR_BLACK)\n      Text(this.vote)\n        .width(ItemStyle.LAYOUT_WEIGHT_RIGHT)\n        .fontWeight(FontWeight.BOLD)\n        .fontSize(FontSize.SMALL)\n        .fontColor(this.isChange ? ItemStyle.COLOR_BLUE : ItemStyle.COLOR_BLACK)\n    }\n    .height(ItemStyle.BAR_HEIGHT)\n    .width(WEIGHT)\n    .onClick(() => {\n      this.isSwitchDataSource = !this.isSwitchDataSource;\n      this.isChange = !this.isChange;\n    })\n  }\n\n  @Builder CircleText(index: number) {\n    Row() {\n      Text(this.index?.toString())\n        .fontWeight(FontWeight.BOLD)\n        .fontSize(FontSize.SMALL)\n        .fontColor(Color.White);\n    }\n    .justifyContent(FlexAlign.Center)\n    .borderRadius(ItemStyle.CIRCLE_TEXT_BORDER_RADIUS)\n    .size({ width: ItemStyle.CIRCLE_TEXT_SIZE,\n      height: ItemStyle.CIRCLE_TEXT_SIZE })\n    .backgroundColor($r('app.color.circle_text_background'))\n  }\n\n  isRenderCircleText(): boolean {\n    \n    return this.index === 1 || this.index === 2 || this.index === 3;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\RankingDemo\\entry\\src\\main\\ets\\view\\ListItemComponent.ets", "project_name": "codelabs-master", "id": "f1514d45a8750b2f1426d2df6ee958d254b39db896f96204f80cc4a8be61b8ba"}
{"text": "import AppContext from '@ohos.app.ability.common';\nimport { FontSize, TitleBarStyle, WEIGHT } from '../common/constants/Constants';\n\n@Component\nexport struct TitleComponent {\n  @Link isRefreshData: boolean; \n  @State title: Resource = $r('app.string.title_default');\n\n  build() {\n    Row() {\n      Row() {\n        Image($r('app.media.ic_public_back'))\n          .height(TitleBarStyle.IMAGE_BACK_SIZE)\n          .width(TitleBarStyle.IMAGE_BACK_SIZE)\n          .margin({ right: TitleBarStyle.IMAGE_BACK_MARGIN_RIGHT })\n          .onClick(() => {\n            let handler = getContext(this) as AppContext.UIAbilityContext;\n            handler.terminateSelf();\n          })\n        Text(this.title)\n          .fontSize(FontSize.LARGE)\n      }\n      .width(TitleBarStyle.WEIGHT)\n      .height(WEIGHT)\n      .justifyContent(FlexAlign.Start)\n\n      Row() {\n        Image($r('app.media.loading'))\n          .height(TitleBarStyle.IMAGE_LOADING_SIZE)\n          .width(TitleBarStyle.IMAGE_LOADING_SIZE)\n          .onClick(() => {\n            this.isRefreshData = !this.isRefreshData;\n          })\n      }\n      .width(TitleBarStyle.WEIGHT)\n      .height(WEIGHT)\n      .justifyContent(FlexAlign.End)\n    }\n    .width(WEIGHT)\n    .padding({ left: TitleBarStyle.BAR_MARGIN_HORIZONTAL,\n      right: TitleBarStyle.BAR_MARGIN_HORIZONTAL })\n    .margin({ top: TitleBarStyle.BAR_MARGIN_TOP })\n    .height(TitleBarStyle.BAR_HEIGHT)\n    .justifyContent(FlexAlign.SpaceAround)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\RankingDemo\\entry\\src\\main\\ets\\view\\TitleComponent.ets", "project_name": "codelabs-master", "id": "a0ba54684298c1fa9d613fc95bb53b156853feaac585b4ce583ff9a062bf14f8"}
{"text": "export class RankData {\n  name: Resource;\n  vote: string; \n  id: string;\n\n  constructor(id: string, name: Resource, vote: string) {\n    this.id = id;\n    this.name = name;\n    this.vote = vote;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\RankingDemo\\entry\\src\\main\\ets\\viewmodel\\RankData.ets", "project_name": "codelabs-master", "id": "d531f71ed12fb1c1ac6a98deaf8d785f0998c754ede939fb4611e91a3a7be5e8"}
{"text": "import { RankData } from './RankData';\nimport { rankData1, rankData2 } from '../model/DataModel';\n\nexport class RankViewModel {\n  \n  loadRankDataSource1(): RankData[] {\n    return rankData1;\n  }\n\n  \n  loadRankDataSource2(): RankData[] {\n    return rankData2;\n  }\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\RankingDemo\\entry\\src\\main\\ets\\viewmodel\\RankViewModel.ets", "project_name": "codelabs-master", "id": "58d1c3bab127c6fac3495b298c531e5366829f7f0fea9b754336fa31b2263dc3"}
{"text": "import relationalStore from '@ohos.data.relationalStore';\nimport AccountData from '../../../viewmodel/AccountData';\nimport CommonConstants from '../../constants/CommonConstants';\nimport Rdb from '../rdb';\n\nexport default class AccountTable {\n  private accountTable = new Rdb(CommonConstants.ACCOUNT_TABLE.tableName, CommonConstants.ACCOUNT_TABLE.sqlCreate,\n    CommonConstants.ACCOUNT_TABLE.columns);\n\n  constructor(callback: Function = () => {\n  }) {\n    this.accountTable.getRdbStore(callback);\n  }\n\n  getRdbStore(callback: Function = () => {\n  }) {\n    this.accountTable.getRdbStore(callback);\n  }\n\n  insertData(account: AccountData, callback: Function) {\n    const valueBucket: relationalStore.ValuesBucket = generateBucket(account);\n    this.accountTable.insertData(valueBucket, callback);\n  }\n\n  deleteData(account: AccountData, callback: Function) {\n    let predicates = new relationalStore.RdbPredicates(CommonConstants.ACCOUNT_TABLE.tableName);\n    predicates.equalTo('id', account.id);\n    this.accountTable.deleteData(predicates, callback);\n  }\n\n  updateData(account: AccountData, callback: Function) {\n    const valueBucket: relationalStore.ValuesBucket = generateBucket(account);\n    let predicates = new relationalStore.RdbPredicates(CommonConstants.ACCOUNT_TABLE.tableName);\n    predicates.equalTo('id', account.id);\n    this.accountTable.updateData(predicates, valueBucket, callback);\n  }\n\n  query(amount: number, callback: Function, isAll: boolean = true) {\n    let predicates = new relationalStore.RdbPredicates(CommonConstants.ACCOUNT_TABLE.tableName);\n    if (!isAll) {\n      predicates.equalTo('amount', amount);\n    }\n    this.accountTable.query(predicates, (resultSet: relationalStore.ResultSet) => {\n      let count: number = resultSet.rowCount;\n      if (count === 0 || typeof count === 'string') {\n        console.log(`${CommonConstants.TABLE_TAG}` + 'Query no results!');\n        callback([]);\n      } else {\n        resultSet.goToFirstRow();\n        const result: AccountData[] = [];\n        for (let i = 0; i < count; i++) {\n          let tmp: AccountData = {\n            id: 0, accountType: 0, typeText: '', amount: 0\n          };\n          tmp.id = resultSet.getDouble(resultSet.getColumnIndex('id'));\n          tmp.accountType = resultSet.getDouble(resultSet.getColumnIndex('accountType'));\n          tmp.typeText = resultSet.getString(resultSet.getColumnIndex('typeText'));\n          tmp.amount = resultSet.getDouble(resultSet.getColumnIndex('amount'));\n          result[i] = tmp;\n          resultSet.goToNextRow();\n        }\n        callback(result);\n      }\n    });\n  }\n}\n\nfunction generateBucket(account: AccountData): relationalStore.ValuesBucket {\n  let obj: relationalStore.ValuesBucket = {};\n  obj.accountType = account.accountType;\n  obj.typeText = account.typeText;\n  obj.amount = account.amount;\n  return obj;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Rdb\\entry\\src\\main\\ets\\common\\database\\tables\\AccountTable.ets", "project_name": "codelabs-master", "id": "ec4e78d9f0647ccdcc5e56a5b4b078b53d5f2f4a806f6676024125d584d40c82"}
{"text": "export default class AccountData {\n  id: number = -1;\n  accountType: number = 0;\n  typeText: string = '';\n  amount: number = 0;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Rdb\\entry\\src\\main\\ets\\viewmodel\\AccountData.ets", "project_name": "codelabs-master", "id": "a6455346f9d54e1213f3d4a31dbdaaf01ddabfe7d710e919ad237ea66282178a"}
{"text": "export default interface AccountItem {\n  icon: Resource;\n  iconSelected: Resource;\n  accountType: number;\n  typeText: string;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Rdb\\entry\\src\\main\\ets\\viewmodel\\AccountItem.ets", "project_name": "codelabs-master", "id": "d0f074ea5c7b15f648eb42f39b4ac8546431800840ac20fed0c398db0bb4fae3"}
{"text": "export interface AccountTable {\n  tableName: string;\n  sqlCreate: string;\n  columns: string[];\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Rdb\\entry\\src\\main\\ets\\viewmodel\\ConstantsInterface.ets", "project_name": "codelabs-master", "id": "54469566e2983ee627d2b1e1832ace771774fdf28aefa5f64e6bce14e04d54e1"}
{"text": "export default interface AudioData {\n  name: string;\n  uri: string;\n  size: number;\n  time: number;\n  duration: number;\n  height: string\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Recorder\\entry\\src\\main\\ets\\viewmodel\\AudioData.ets", "project_name": "codelabs-master", "id": "de33218cf7a50e55cb8100a357af7ce07b1348958e99a3a878c8847eded2b48e"}
{"text": "export default interface Progress {\n  loader: number,\n  total: number,\n  isCompleted: boolean\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\Recorder\\entry\\src\\main\\ets\\viewmodel\\Progress.ets", "project_name": "codelabs-master", "id": "b8107f606a56971f5274e895a05b6ab9481a67871e8a67efb2c463954de1ab11"}
{"text": "import Constants from '../common/constants/Constants';\nimport ClassifyModel from '../viewmodel/ClassifyModel';\nimport CourseModel from '../viewmodel/CourseModel';\nimport CourseItem from '../view/CourseItem';\nimport ClassifyItem from '../view/ClassityItem';\nimport ClassifyViewModel from '../viewmodel/ClassifyViewModel';\n\n@Entry\n@Component\nstruct IndexPage {\n  @State currentClassify: number = 0; \n  @State requestSuccess: boolean = false; \n  private classifyList: Array<ClassifyModel> = [];\n  private classifyScroller: Scroller = new Scroller();\n  private scroller: Scroller = new Scroller();\n\n  aboutToAppear() {\n    \n    setTimeout(() => {\n      this.classifyList = ClassifyViewModel.getLinkData();\n      this.requestSuccess = true;\n    }, Constants.LOADING_DURATION);\n  }\n\n  @Builder ClassifyHeader(classifyName: string) {\n    Row() {\n      Text(classifyName)\n        .fontSize($r('app.float.header_font_size'))\n        .fontColor($r('app.color.base_font_color'))\n        .fontFamily($r('app.string.hei_ti_medium'))\n        .fontWeight(Constants.TITLE_FONT_WEIGHT)\n    }\n    .padding({ left: $r('app.float.item_padding_left') })\n    .height($r('app.float.classify_item_height'))\n    .width(Constants.FULL_PERCENT)\n    .backgroundColor($r('app.color.base_background'))\n  }\n\n  classifyChangeAction(index: number, isClassify: boolean): void {\n    if (this.currentClassify !== index) {\n      \n      this.currentClassify = index;\n      if (isClassify) {\n        \n        this.scroller.scrollToIndex(index);\n      } else {\n        \n        this.classifyScroller.scrollToIndex(index);\n      }\n    }\n  }\n\n  build() {\n    Row() {\n      if (this.requestSuccess) {\n        List({ scroller: this.classifyScroller }) {\n          ForEach(this.classifyList, (item: ClassifyModel, index?: number) => {\n            ListItem() {\n              ClassifyItem({\n                classifyName: item.classifyName,\n                isSelected: this.currentClassify === index,\n                onClickAction: () => {\n                  if (index !== undefined) {\n                    this.classifyChangeAction(index, true);\n                  }\n                }\n              })\n            }\n          }, (item: ClassifyModel) => item.classifyName + this.currentClassify)\n        }\n        .height(Constants.FULL_PERCENT)\n        .width($r('app.float.classify_item_width'))\n        .backgroundColor($r('app.color.classify_background'))\n        .scrollBar(BarState.Off)\n\n        List({ scroller: this.scroller }) {\n          ForEach(this.classifyList, (classifyItem: ClassifyModel) => {\n            ListItemGroup({\n              header: this.ClassifyHeader(classifyItem.classifyName),\n              space: Constants.COURSE_ITEM_PADDING\n            }) {\n              ForEach(classifyItem.courseList, (courseItem: CourseModel) => {\n                ListItem() {\n                  CourseItem({ itemStr: JSON.stringify(courseItem) })\n                }\n              }, (courseItem: CourseModel) => `${courseItem.courseId}`)\n            }\n          }, (item: ClassifyModel) => `${item.classifyId}`)\n        }\n        .height(Constants.FULL_PERCENT)\n        .width(Constants.FULL_PERCENT)\n        .padding({ left: $r('app.float.item_padding_left'), right: $r('app.float.course_item_padding') })\n        .sticky(StickyStyle.Header)\n        .layoutWeight(1)\n        .edgeEffect(EdgeEffect.None)\n        .onScrollIndex((start: number) => this.classifyChangeAction(start, false))\n      } else {\n        Text($r('app.string.loading'))\n          .fontFamily($r('app.string.hei_ti_medium'))\n          .textAlign(TextAlign.Center)\n          .height(Constants.FULL_PERCENT)\n          .width(Constants.FULL_PERCENT)\n      }\n    }\n    .backgroundColor($r('app.color.base_background'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SecondLevelLinkage\\entry\\src\\main\\ets\\pages\\IndexPage.ets", "project_name": "codelabs-master", "id": "19e1a92de4e87650b1b61db8e4b3160566f3402c6ab985415bca412ab947da63"}
{"text": "import Constants from '../common/constants/Constants';\n\n@Component\nexport default struct ClassifyItem {\n  classifyName?: string;\n  @Prop isSelected: boolean = false;\n  onClickAction = (): void => {}\n\n  build() {\n    Text(this.classifyName)\n      .fontSize($r('app.float.normal_font_size'))\n      .fontColor(this.isSelected ? $r('app.color.base_font_color') : $r('app.color.normal_font_color'))\n      .fontFamily(this.isSelected ? $r('app.string.hei_ti_medium') : $r('app.string.hei_ti'))\n      .fontWeight(this.isSelected ? Constants.TITLE_FONT_WEIGHT : Constants.LABEL_FONT_WEIGHT)\n      .textAlign(TextAlign.Center)\n      .backgroundColor(this.isSelected ? $r('app.color.base_background') : '')\n      .width(Constants.FULL_PERCENT)\n      .height($r('app.float.classify_item_height'))\n      .onClick(this.onClickAction)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SecondLevelLinkage\\entry\\src\\main\\ets\\view\\ClassityItem.ets", "project_name": "codelabs-master", "id": "c1e7c3946e2666564b723a5ea3a8f7b87448bb6a6d364dd688c4d56281d3ca91"}
{"text": "import Constants from '../common/constants/Constants';\nimport CourseModel from '../viewmodel/CourseModel';\n\n@Component\nexport default struct CourseItem {\n  @Prop itemStr: string = '';\n  item?: CourseModel;\n\n  aboutToAppear() {\n    this.item = JSON.parse(this.itemStr) as CourseModel;\n  }\n\n  build() {\n    Row() {\n      Image(this.item !== undefined ? this.item?.imageUrl : '')\n        .height(Constants.FULL_PERCENT)\n        .aspectRatio(1)\n      Column() {\n        Text(this.item?.courseName)\n          .fontSize($r('app.float.normal_font_size'))\n          .fontColor($r('app.color.base_font_color'))\n          .fontFamily($r('app.string.hei_ti_medium'))\n          .maxLines(Constants.TITLE_LINE_NUMBER)\n          .textOverflow({ overflow: TextOverflow.Clip })\n          .lineHeight($r('app.float.title_line_height'))\n          .width(Constants.FULL_PERCENT)\n        Text(this.item?.price === 0 ? $r('app.string.free_price') : $r('app.string.price_str', this.item?.price))\n          .fontSize($r('app.float.header_font_size'))\n          .fontColor($r('app.color.price_color'))\n          .fontFamily($r('app.string.hei_ti_medium'))\n      }\n      .padding($r('app.float.course_item_padding'))\n      .layoutWeight(1)\n      .alignItems(HorizontalAlign.Start)\n      .justifyContent(FlexAlign.SpaceBetween)\n      .height(Constants.FULL_PERCENT)\n    }\n    .clip(true)\n    .borderRadius($r('app.float.normal_border_radius'))\n    .backgroundColor($r('app.color.start_window_background'))\n    .width('100%')\n    .height($r('app.float.course_item_height'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SecondLevelLinkage\\entry\\src\\main\\ets\\view\\CourseItem.ets", "project_name": "codelabs-master", "id": "f59b7ece1b7ef89b6632565028a26b16ad162ed4ec0504a0282df05ed6dec79b"}
{"text": "import CourseModel from './CourseModel';\n\n\nexport default class ClassifyModel {\n  \n  classifyId: number;\n  \n  classifyName: string;\n  \n  courseList: Array<CourseModel>;\n\n  constructor(classifyId: number, classifyName: string, courseList: Array<CourseModel>) {\n    this.classifyId = classifyId;\n    this.classifyName = classifyName;\n    this.courseList = courseList;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SecondLevelLinkage\\entry\\src\\main\\ets\\viewmodel\\ClassifyModel.ets", "project_name": "codelabs-master", "id": "806a9dc9d0b69ed2c82018af6e856efa66f8273e5b40de481a99f08ce88e28ba"}
{"text": "export default class CourseModel {\n  classifyId: number;\n  courseId: number;\n  courseName: string;\n  imageUrl: Resource;\n  price: number;\n\n  constructor(classifyId: number, courseId: number, courseName: string, imageUrl: Resource, price: number) {\n    this.classifyId = classifyId;\n    this.courseId = courseId;\n    this.courseName = courseName;\n    this.imageUrl = imageUrl;\n    this.price = price;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SecondLevelLinkage\\entry\\src\\main\\ets\\viewmodel\\CourseModel.ets", "project_name": "codelabs-master", "id": "905be8ce4c765f8f24cf36f6c50ff810928227c4af2945c8745725f5eb04e78e"}
{"text": "export default class LinkDataModel {\n  \n  superId: number;\n  \n  superName: string;\n  id: number;\n  courseName: string;\n  imageUrl: Resource;\n  price: number;\n\n  constructor(superId: number, superName: string, id: number, courseName: string, imageUrl: Resource, price: number) {\n    this.superId = superId;\n    this.superName = superName;\n    this.id = id;\n    this.courseName = courseName;\n    this.imageUrl = imageUrl;\n    this.price = price;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SecondLevelLinkage\\entry\\src\\main\\ets\\viewmodel\\LinkDataModel.ets", "project_name": "codelabs-master", "id": "0603b529ad941b0816e0eef804c8d8332fbb00d8b6d1012b32662f033a9b609f"}
{"text": "import ChatData from '../viewmodel/ChatData';\nimport { ItemDirection } from '../viewmodel/ItemDirection';\nimport StyleConstants from '../common/constants/StyleConstants';\n\n\n@Component\nexport default struct ChatItemComponent {\n  item: ChatData = new ChatData();\n  @Prop changeFontSize: number = 0;\n\n  build() {\n    Row() {\n      Image(this.item.itemDirection === ItemDirection.RIGHT ? $r('app.media.right_head') : $r('app.media.left_head'))\n        .width(StyleConstants.SET_CHAT_HEAD_SIZE_PERCENT)\n        .aspectRatio(StyleConstants.HEAD_ASPECT_RATIO)\n        .margin({\n          left: this.item.itemDirection === ItemDirection.RIGHT\n            ? StyleConstants.HEAD_LEFT_PERCENT : StyleConstants.HEAD_RIGHT_PERCENT,\n          right: this.item.itemDirection === ItemDirection.RIGHT\n            ? StyleConstants.HEAD_RIGHT_PERCENT : StyleConstants.HEAD_LEFT_PERCENT\n        })\n\n      ChatContent({ item: this.item, changeFontSize: this.changeFontSize })\n    }\n    .alignItems(VerticalAlign.Top)\n    .width(StyleConstants.FULL_WIDTH)\n    .direction(this.item.itemDirection === ItemDirection.RIGHT ? Direction.Rtl : Direction.Ltr)\n    .margin({ top: StyleConstants.CHAT_TOP_MARGIN_PERCENT })\n  }\n}\n\n\n@Component\nstruct ChatContent {\n  item: ChatData = new ChatData();\n  @Prop changeFontSize: number = 0;\n  @State isLineFeed: boolean = false;\n\n  build() {\n    Row() {\n      Text(this.item.content)\n        .fontColor($r('app.color.text'))\n        .fontSize(this.changeFontSize + StyleConstants.UNIT_FP)\n        .fontWeight(FontWeight.Medium)\n        .onAreaChange((oldValue: Area, newValue: Area) => {\n          this.isLineFeed = newValue.height > StyleConstants.DOUBLE_ROW_MIN;\n        })\n      if (this.isLineFeed) {\n        Blank().layoutWeight(StyleConstants.WEIGHT_FULL)\n      }\n    }\n    .constraintSize({ maxWidth: StyleConstants.MAX_CHAT_WIDTH_PERCENT })\n    .direction(Direction.Ltr)\n    .padding({\n      left: $r('app.float.set_chat_content_vertical_padding'),\n      right: $r('app.float.set_chat_content_vertical_padding'),\n      top: $r('app.float.set_chat_content_horizontal_padding'),\n      bottom: $r('app.float.set_chat_content_horizontal_padding')\n    })\n    .backgroundColor(this.item.itemDirection === ItemDirection.RIGHT\n      ? $r('app.color.set_chat_right_bg') : $r('app.color.set_chat_left_bg'))\n    .borderRadius($r('app.float.set_chat_content_bg_radius'))\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SetAppFontSize\\entry\\src\\main\\ets\\view\\ChatItemComponent.ets", "project_name": "codelabs-master", "id": "39b1296ba5713308e99593e0be9052f8af417cbb0c97a858bed6b023eca86778"}
{"text": "import SettingData from '../viewmodel/SettingData';\nimport StyleConstants from '../common/constants/StyleConstants';\n\n\n@Component\nexport default struct SettingItemComponent {\n  setting: SettingData = new SettingData();\n  @Prop changeFontSize: number = 0;\n  itemClick: Function = () => {\n  };\n\n  build() {\n    Row() {\n      Image(this.setting.settingImage)\n        .height($r('app.float.setting_item_ic_size'))\n        .width($r('app.float.setting_item_ic_size'))\n        .margin({ left: $r('app.float.setting_ic_margin_left'), right: $r('app.float.setting_ic_margin_right') })\n\n      Text(this.setting.settingName)\n        .fontSize(this.changeFontSize + StyleConstants.UNIT_FP)\n        .fontColor($r('app.color.text'))\n        .fontWeight(FontWeight.Medium)\n    }\n    .width(StyleConstants.FULL_WIDTH)\n    .height($r('app.float.setting_item_height'))\n    .onClick(() => {\n      this.itemClick();\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SetAppFontSize\\entry\\src\\main\\ets\\view\\SettingItemComponent.ets", "project_name": "codelabs-master", "id": "f1682af2e29f7952564b85ac9c6e9c1357ecffa1bead48366b8452637cf48309"}
{"text": "import router from '@ohos.router';\nimport StyleConstants from '../common/constants/StyleConstants';\n\n\n@Component\nexport default struct TitleBarComponent {\n  isBack: boolean = true;\n  title: Resource = $r('app.string.empty');\n\n  build() {\n    Row() {\n      if (this.isBack) {\n        Image($r('app.media.ic_public_back'))\n          .height($r('app.float.title_ic_size'))\n          .width($r('app.float.title_ic_size'))\n          .margin({ right: $r('app.float.title_ic_margin') })\n          .onClick(() => {\n            router.back();\n          })\n      }\n\n      Text(this.title)\n        .fontColor(Color.Black)\n        .fontSize($r('sys.float.ohos_id_text_size_headline8'))\n        .fontWeight(FontWeight.Medium)\n        .margin({ left: $r('app.float.title_text_margin_left') })\n    }\n    .width(StyleConstants.FULL_WIDTH)\n    .height(StyleConstants.TITLE_BAR_HEIGHT_PERCENT)\n    .padding({ left: $r('app.float.title_padding_left') })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SetAppFontSize\\entry\\src\\main\\ets\\view\\TitleBarComponent.ets", "project_name": "codelabs-master", "id": "809ee44e3aa2c002faa334d075ba0daca0ab994e4e07cef2b263635e63693796"}
{"text": "import { ItemDirection } from './ItemDirection';\n\n\nexport default class ChatData {\n  \n  itemDirection: ItemDirection = ItemDirection.LEFT;\n\n  \n  content: Resource = $r('app.string.empty');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SetAppFontSize\\entry\\src\\main\\ets\\viewmodel\\ChatData.ets", "project_name": "codelabs-master", "id": "d2c664953aca046d4811bbc6f7d0fd6351800e4a16b1ad7a387f294866326d5d"}
{"text": "export enum ItemDirection {\n  \n  LEFT,\n\n  \n  RIGHT\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SetAppFontSize\\entry\\src\\main\\ets\\viewmodel\\ItemDirection.ets", "project_name": "codelabs-master", "id": "a09a3a52aedd0567c3b506c7bb80dd58e2f9507c02889d663d435b0b7e4c43eb"}
{"text": "export default class SettingData {\n  \n  settingName: Resource = $r('app.string.empty');\n\n  \n  settingImage: Resource = $r('app.string.empty');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SetAppFontSize\\entry\\src\\main\\ets\\viewmodel\\SettingData.ets", "project_name": "codelabs-master", "id": "a1c6ef13dd42ef324b7d43c003392c449edb7fc4460e8e470aa9802124045f7a"}
{"text": "class CheckEmptyUtil {\n\n  \n  isEmpty(obj: object | string): boolean {\n    return (typeof obj === 'undefined' || obj === null || obj === '');\n  }\n\n  \n  checkStrIsEmpty(str: string): boolean {\n    return str.trim().length === 0;\n  }\n\n  \n  isEmptyArr(arr: Array<string>) {\n    return arr.length === 0;\n  }\n}\n\nexport default new CheckEmptyUtil();\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleCalculator\\entry\\src\\main\\ets\\common\\util\\CheckEmptyUtil.ets", "project_name": "codelabs-master", "id": "21d410d6821aa55063a9029c65636e055e95d8d25a4c096165e1cb52ecea7813"}
{"text": "export class PressKeysBean {\n  flag: number;\n  width: string;\n  height: string;\n  value: string;\n  source?: Resource;\n\n  constructor(flag: number, width: string, height: string, value: string, source?: Resource) {\n    this.flag = flag;\n    this.width = width;\n    this.height = height;\n    this.value = value;\n    this.source = source;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleCalculator\\entry\\src\\main\\ets\\viewmodel\\PressKeysBean.ets", "project_name": "codelabs-master", "id": "55251f5efbac1f9d25a7a988abe1418f4b5532f9a6846b4b8c34767b788f0f2f"}
{"text": "import { VideoModule } from '../view/IndexModule';\nimport { SwiperVideo } from '../view/IndexSwiper';\nimport { LIST, MARGIN_FONT_SIZE, ALL_PERCENT } from '../common/constants/CommonConstants';\n\n\n@Entry\n@Component\nstruct SimpleVideoIndex {\n  build() {\n    Column({ space: MARGIN_FONT_SIZE.FOURTH_MARGIN }) {\n      SwiperVideo()\n      List() {\n        ForEach(LIST, (item: string) => {\n          ListItem() {\n            VideoModule({ moduleName: item })\n              .margin({ top: MARGIN_FONT_SIZE.FIRST_MARGIN })\n          }\n        }, (item: string) => JSON.stringify(item))\n      }\n      .listDirection(Axis.Vertical)\n      .margin({ top: MARGIN_FONT_SIZE.THIRD_MARGIN })\n    }\n    .width(ALL_PERCENT)\n    .height(ALL_PERCENT)\n    .backgroundColor($r(\"app.color.index_backgroundColor\"))\n  }\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\pages\\SimpleVideoIndex.ets", "project_name": "codelabs-master", "id": "25e572c6b82d8c64cd88bb1ed6083b289c348dd3c91be39a0a0ab25c233eccaa"}
{"text": "import router from '@ohos.router';\nimport { VideoPlayer } from '../view/VideoPlayer';\nimport {\n  MARGIN_FONT_SIZE,\n  COMMON_NUM_FONT_WEIGHT,\n  ALL_PERCENT,\n  STACK_STYLE\n} from '../common/constants/CommonConstants';\nimport { ViewPlayerController } from '../controller/ViewPlayerController';\n\n\n@Entry\n@Component\nstruct Play {\n  private source: string = (router.getParams() as Record<string, Object>).source as string;\n  private startIconResource: Resource = $r('app.media.ic_public_play');\n  private backIconResource: Resource = $r('app.media.ic_back');\n  @Provide vpcontroller : ViewPlayerController = new ViewPlayerController();\n  aboutToAppear() {\n    this.source;\n  }\n  onPageHide() {\n    this.vpcontroller.controller.pause();\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Image(this.backIconResource)\n          .width(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .height(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .margin({ left: MARGIN_FONT_SIZE.FOURTH_MARGIN })\n          .onClick(() => {\n            router.back();\n          })\n        Text($r('app.string.back'))\n          .fontColor(Color.White)\n          .fontSize(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .fontWeight(COMMON_NUM_FONT_WEIGHT)\n          .margin({ left: MARGIN_FONT_SIZE.FIRST_MARGIN })\n      }\n      .width(ALL_PERCENT)\n      .margin({\n        left: MARGIN_FONT_SIZE.FIRST_MARGIN,\n        top: MARGIN_FONT_SIZE.FIRST_MARGIN\n      })\n      .justifyContent(FlexAlign.Start)\n\n      Stack() {\n        if (!this.vpcontroller.isPlay && !this.vpcontroller.isLoading) {\n          Image(this.startIconResource)\n            .width(MARGIN_FONT_SIZE.FIFTH_MARGIN)\n            .height(MARGIN_FONT_SIZE.FIFTH_MARGIN)\n            .zIndex(STACK_STYLE.IMAGE_Z_INDEX)\n        }\n        if (this.vpcontroller.isLoading) {\n          Progress({\n            value: STACK_STYLE.PROGRESS_VALUE,\n            total: STACK_STYLE.PROGRESS_TOTAL,\n            type: ProgressType.ScaleRing\n          })\n            .color(Color.Grey)\n            .value(this.vpcontroller.progressVal)\n            .width(STACK_STYLE.PROGRESS_WIDTH)\n            .style({\n              strokeWidth: STACK_STYLE.PROGRESS_STROKE_WIDTH,\n              scaleCount: STACK_STYLE.PROGRESS_SCALE_COUNT,\n              scaleWidth: STACK_STYLE.PROGRESS_SCALE_WIDTH\n            })\n            .zIndex(STACK_STYLE.PROGRESS_Z_INDEX)\n        }\n        VideoPlayer({\n          source: this.source\n        })\n          .zIndex(0)\n\n      }\n    }\n    .height(ALL_PERCENT)\n    .backgroundColor(Color.Black)\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\pages\\SimpleVideoPlay.ets", "project_name": "codelabs-master", "id": "f7f00987a307bff7b63f8588ad631ae9a7c4128b12d724b767de09d83a98b107"}
{"text": "import router from '@ohos.router';\nimport { VideoPlayer } from '../view/VideoPlayer';\nimport {\n  MARGIN_FONT_SIZE,\n  COMMON_NUM_FONT_WEIGHT,\n  ALL_PERCENT,\n  STACK_STYLE\n} from '../common/constants/CommonConstants';\nimport { VideoPlayerModel } from '../model/VideoPlayerModel';\n\n\n@Entry\n@Component\nstruct VideoPlayerPage {\n  private source: string = (router.getParams() as Record<string, Object>).source as string;\n  private startIconResource: Resource = $r('app.media.ic_public_play');\n  private backIconResource: Resource = $r('app.media.ic_back');\n  @Provide videoPlayerModel: VideoPlayerModel = new VideoPlayerModel();\n\n  aboutToAppear() {\n    this.source;\n  }\n\n  onPageHide() {\n    this.videoPlayerModel.controller.pause();\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Image(this.backIconResource)\n          .width(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .height(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .margin({ left: MARGIN_FONT_SIZE.FOURTH_MARGIN })\n          .onClick(() => {\n            router.back();\n          })\n        Text($r('app.string.back'))\n          .fontColor(Color.White)\n          .fontSize(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .fontWeight(COMMON_NUM_FONT_WEIGHT)\n          .margin({ left: MARGIN_FONT_SIZE.FIRST_MARGIN })\n      }\n      .width(ALL_PERCENT)\n      .margin({\n        left: MARGIN_FONT_SIZE.FIRST_MARGIN,\n        top: MARGIN_FONT_SIZE.FIRST_MARGIN\n      })\n      .justifyContent(FlexAlign.Start)\n\n      Stack() {\n        if (!this.videoPlayerModel.isPlay && !this.videoPlayerModel.isLoading) {\n          Image(this.startIconResource)\n            .width(MARGIN_FONT_SIZE.FIFTH_MARGIN)\n            .height(MARGIN_FONT_SIZE.FIFTH_MARGIN)\n            .zIndex(STACK_STYLE.IMAGE_Z_INDEX)\n        }\n        if (this.videoPlayerModel.isLoading) {\n          Progress({\n            value: STACK_STYLE.PROGRESS_VALUE,\n            total: STACK_STYLE.PROGRESS_TOTAL,\n            type: ProgressType.ScaleRing\n          })\n            .color(Color.Grey)\n            .value(this.videoPlayerModel.progressVal)\n            .width(STACK_STYLE.PROGRESS_WIDTH)\n            .style({\n              strokeWidth: STACK_STYLE.PROGRESS_STROKE_WIDTH,\n              scaleCount: STACK_STYLE.PROGRESS_SCALE_COUNT,\n              scaleWidth: STACK_STYLE.PROGRESS_SCALE_WIDTH\n            })\n            .zIndex(STACK_STYLE.PROGRESS_Z_INDEX)\n        }\n        VideoPlayer({\n          source: this.source\n        })\n          .zIndex(0)\n\n      }\n    }\n    .height(ALL_PERCENT)\n    .backgroundColor(Color.Black)\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\pages\\VideoPlayerPage.ets", "project_name": "codelabs-master", "id": "4b8ed0bd99ac19304a74f2d4f2b8c43c167fe554f7ff7775f6d505d2f70262e8"}
{"text": "import router from '@ohos.router';\nimport { HORIZONTAL_VIDEOS } from '../viewmodel/VideoData';\nimport { MARGIN_FONT_SIZE, STRING_PERCENT, SECOND_PAGE, NET } from '../common/constants/CommonConstants';\nimport { HorizontalVideoItem } from '../viewmodel/HorizontalVideoItem';\n\n\n@Component\nexport struct VideoModule {\n  private moduleName: string = '';\n\n  build() {\n    Column() {\n      Flex({ direction: FlexDirection.Row }) {\n        Text(this.moduleName)\n          .fontSize(MARGIN_FONT_SIZE.THIRD_MARGIN)\n          .fontWeight(FontWeight.Bolder)\n      }\n      .margin({\n        left: STRING_PERCENT.INDEX_SWIPER_LEFT_RIGHT_MARGIN,\n        bottom: MARGIN_FONT_SIZE.FIRST_MARGIN,\n        top: MARGIN_FONT_SIZE.FIRST_MARGIN\n      })\n\n      List({ space: MARGIN_FONT_SIZE.FIRST_MARGIN }) {\n        ForEach(HORIZONTAL_VIDEOS, (item: HorizontalVideoItem) => {\n          ListItem() {\n            HorizontalItem({\n              imageSrc: item.image,\n              source: NET,\n              videoName: item.name\n            })\n          }\n        }, (item: HorizontalVideoItem) => JSON.stringify(item))\n      }\n      .listDirection(Axis.Horizontal)\n    }\n    .margin({\n      left: STRING_PERCENT.INDEX_SWIPER_LEFT_RIGHT_MARGIN,\n      right: STRING_PERCENT.INDEX_SWIPER_LEFT_RIGHT_MARGIN\n    })\n    .width(STRING_PERCENT.INDEX_COMPONENT_WITH_PERCENT)\n    .justifyContent(FlexAlign.Center)\n    .borderRadius(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n    .borderStyle(BorderStyle.Solid)\n    .borderColor(Color.White)\n    .backgroundColor($r('app.color.white'))\n  }\n}\n\n@Component\nstruct HorizontalItem {\n  private imageSrc: Resource = $r('app.string.empty');\n  private source: string = '';\n  private videoName: string = '';\n\n  build() {\n    Column() {\n      Image(this.imageSrc)\n        .width(MARGIN_FONT_SIZE.SEVENTH_MARGIN)\n        .height(MARGIN_FONT_SIZE.SIXTH_MARGIN)\n        .onClick(() => {\n          router.pushUrl({\n            url: SECOND_PAGE,\n            params: { source: this.source }\n          });\n        })\n      Text(this.videoName)\n        .margin({\n          top: MARGIN_FONT_SIZE.FIRST_MARGIN,\n          bottom: MARGIN_FONT_SIZE.FIRST_MARGIN\n        })\n        .textAlign(TextAlign.Center)\n        .fontSize(MARGIN_FONT_SIZE.SECOND_MARGIN)\n    }\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\view\\IndexModule.ets", "project_name": "codelabs-master", "id": "c77f8f8d3c348604dea930b3015b9ba69177718040a69a522391ea2697739e5b"}
{"text": "import { SWIPER_VIDEOS } from '../viewmodel/VideoData';\nimport { STRING_PERCENT, MARGIN_FONT_SIZE, SECOND_PAGE } from '../common/constants/CommonConstants';\nimport { SwiperVideoItem } from '../viewmodel/SwiperVideoItem';\nimport { ParamItem } from '../viewmodel/ParamItem';\n\n\n@Component\nexport struct SwiperVideo {\n  build() {\n    Column() {\n      Swiper() {\n        ForEach(SWIPER_VIDEOS, (item: SwiperVideoItem) => {\n          SwiperItem({ imageSrc: item.image, source: $rawfile('videoTest.mp4') })\n        }, (item: SwiperVideoItem) => JSON.stringify(item))\n      }\n      .autoPlay(true)\n    }\n    .height(STRING_PERCENT.INDEX_SWIPER_HEIGHT_PERCENT)\n    .width(STRING_PERCENT.INDEX_COMPONENT_WITH_PERCENT)\n    .backgroundColor($r('app.color.white'))\n    .margin({\n      left: STRING_PERCENT.INDEX_SWIPER_LEFT_RIGHT_MARGIN,\n      right: STRING_PERCENT.INDEX_SWIPER_LEFT_RIGHT_MARGIN,\n      top: MARGIN_FONT_SIZE.FOURTH_MARGIN\n    })\n  }\n}\n\n@Component\nstruct SwiperItem {\n  private imageSrc: Resource = $r('app.string.empty');\n  private source: Resource = $r('app.string.empty');\n  private paramItem: ParamItem = new ParamItem();\n\n  aboutToAppear() {\n    this.paramItem.source = this.source;\n  }\n\n  build() {\n    Navigator({ target: SECOND_PAGE, type: NavigationType.Push }) {\n      Image(this.imageSrc)\n        .borderRadius(MARGIN_FONT_SIZE.FIRST_MARGIN)\n    }\n    .params(this.paramItem)\n  }\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\view\\IndexSwiper.ets", "project_name": "codelabs-master", "id": "65583a6c2badcd096322563ec19e1c6ceee6ec375294319d0448c4534a613378"}
{"text": "import prompt from '@ohos.promptAction';\nimport { VideoSlider } from '../view/VideoPlaySlider';\nimport { prepared, finish, changeSliderTime } from '../model/VideoControll';\nimport {\n  START_TIME,\n  STRING_PERCENT,\n  COMMON_NUM_DURATION,\n  MESSAGE,\n  ALL_PERCENT\n} from '../common/constants/CommonConstants';\nimport { VideoPlayerModel } from '../model/VideoPlayerModel';\n\n\n@Component\nexport struct VideoPlayer {\n  source: string | Resource = '';\n  @Consume private videoPlayerModel: VideoPlayerModel;\n  private previewUris: Resource = $r('app.media.preview');\n\n  build() {\n    Column() {\n      Video({\n        src: this.source,\n        previewUri: this.previewUris,\n        controller: this.videoPlayerModel.controller\n      })\n        .width(ALL_PERCENT)\n        .height(STRING_PERCENT.NINETY_PERCENT)\n        .controls(false)\n        .autoPlay(false)\n        .objectFit(ImageFit.Contain)\n        .loop(false)\n        .onUpdate((event) => {\n          this.videoPlayerModel.currentTime = event.time;\n          this.videoPlayerModel.currentStringTime = changeSliderTime(this.videoPlayerModel.currentTime);\n        })\n        .onPrepared((event ?: DurationObject) => {\n          prepared(this.videoPlayerModel, event);\n        })\n        .onFinish(() => {\n          finish(this.videoPlayerModel);\n        })\n        .onError(() => {\n          prompt.showToast({\n            duration: COMMON_NUM_DURATION,\n            message: MESSAGE\n          });\n        })\n      VideoSlider()\n    }\n  }\n}\n\nexport interface DurationObject {\n  duration: number;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\view\\VideoPlayer.ets", "project_name": "codelabs-master", "id": "93fe72c0e1bbfbda780b6c01da5b81fee919305c36ded649111a30e9783f13f7"}
{"text": "import { iconOnclick, sliderOnchange } from '../model/VideoControll';\nimport {\n  ALL_PERCENT,\n  MARGIN_FONT_SIZE,\n  SMALL_TRACK_THICK_NESS,\n  DEFAULT_OPACITY,\n  STRING_PERCENT,\n  BIG_TRACK_THICK_NESS,\n  IMAGE_SIZE\n} from '../common/constants/CommonConstants';\nimport { VideoPlayerModel } from '../model/VideoPlayerModel';\n\n\n@Component\nexport struct VideoSlider {\n  @Consume videoPlayerModel: VideoPlayerModel;\n\n  build() {\n    Row({ space: MARGIN_FONT_SIZE.FIRST_MARGIN }) {\n      Image(this.videoPlayerModel.isPlay ? $r('app.media.ic_pause') : $r('app.media.ic_play'))\n        .width(IMAGE_SIZE)\n        .height(IMAGE_SIZE)\n        .margin({ left: MARGIN_FONT_SIZE.FIRST_MARGIN })\n        .onClick(() => {\n          iconOnclick(this.videoPlayerModel);\n        })\n      Text(this.videoPlayerModel.currentStringTime)\n        .fontSize(MARGIN_FONT_SIZE.SECOND_MARGIN)\n        .fontColor(Color.White)\n        .margin({ left: MARGIN_FONT_SIZE.FIRST_MARGIN })\n      Slider({\n        value: this.videoPlayerModel.currentTime,\n        min: 0,\n        max: this.videoPlayerModel.durationTime,\n        step: 1,\n        style: SliderStyle.OutSet\n      })\n        .blockColor($r('app.color.white'))\n        .width(STRING_PERCENT.SLIDER_WITH)\n        .trackColor(Color.Gray)\n        .selectedColor($r(\"app.color.white\"))\n        .showSteps(true)\n        .showTips(true)\n        .trackThickness(this.videoPlayerModel.isOpacity ? SMALL_TRACK_THICK_NESS : BIG_TRACK_THICK_NESS)\n        .onChange((value: number, mode: SliderChangeMode) => {\n\n          sliderOnchange(this.videoPlayerModel, value, mode);\n        })\n      Text(this.videoPlayerModel.durationStringTime)\n        .fontSize(MARGIN_FONT_SIZE.SECOND_MARGIN)\n        .margin({ right: MARGIN_FONT_SIZE.FIRST_MARGIN })\n        .fontColor(Color.White)\n    }\n    .opacity(this.videoPlayerModel.isOpacity ? DEFAULT_OPACITY : 1)\n    .width(ALL_PERCENT)\n    .alignItems(VerticalAlign.Center)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\view\\VideoPlaySlider.ets", "project_name": "codelabs-master", "id": "e676ac08f31f522b26142bf89aecd1ca951416aea5eea0cf263071eabb3a0ec5"}
{"text": "@Observed\nexport class HorizontalVideoItem {\n  id: number;\n  image: Resource;\n  name: string;\n\n  constructor(id: number, image: Resource, name: string) {\n    this.id = id;\n    this.image = image;\n    this.name = name;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\viewmodel\\HorizontalVideoItem.ets", "project_name": "codelabs-master", "id": "df104ee62cf663e36331814358ebfa088067a98ad1d1dfa35fb7f38ab5ceaff4"}
{"text": "@Observed\nexport class ParamItem {\n  source: Resource = $r(\"app.string.empty\");\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\viewmodel\\ParamItem.ets", "project_name": "codelabs-master", "id": "71a33d17e331a49559c76b3d6ce2d44acab9dcdff8884ce0839908c09f045c25"}
{"text": "@Observed\nexport class SwiperVideoItem {\n  image: Resource;\n\n  constructor(image: Resource) {\n    this.image = image;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SimpleVideo\\entry\\src\\main\\ets\\viewmodel\\SwiperVideoItem.ets", "project_name": "codelabs-master", "id": "f34f9a40e2aeec53fc22f01818710980d96ee3313804da4e54dd504fc6ea9fff"}
{"text": "import { Constants, RotatePosition, SliderMode, SliderSpeed } from '../common/Constants';\nimport { PanelComponent } from '../view/PanelComponent';\n\n@Entry\n@Component\nstruct SliderPage {\n  @State private speed: number = Constants.SPEED;\n  @State private imageSize: number = Constants.IMAGE_SIZE_INITIAL;\n  @State private angle: number = Constants.ANGLE;\n  private interval: number = Constants.INTERVAL;\n\n  build() {\n    Column() {\n      Image($rawfile('windmill.png'))\n        .objectFit(ImageFit.Contain)\n        .height(Constants.IMAGE_SIZE)\n        .width(Constants.IMAGE_SIZE)\n        .rotate({\n          x: RotatePosition.X,\n          y: RotatePosition.Y,\n          z: RotatePosition.Z,\n          angle: this.angle\n        })\n        .scale({ x: this.imageSize, y: this.imageSize })\n      Row().height(Constants.WEIGHT_BLANK_IMAGE)\n      PanelComponent({\n        mode: SliderMode.SPEED,\n        title: $r('app.string.speed_text'),\n        text: this.speed.toFixed(Constants.FRACTION_DIGITS),\n        callback: ((value: number, mode: SliderChangeMode) => {\n          this.speed = value;\n          clearInterval(this.interval);\n          this.speedChange();\n        }),\n        options: {\n          value: this.speed,\n          min: SliderSpeed.MIN,\n          max: SliderSpeed.MAX,\n          step: SliderSpeed.STEP,\n          style: SliderStyle.InSet\n        }\n      })\n      PanelComponent({\n        mode: SliderMode.SCALE,\n        title: $r('app.string.scale_text'),\n        text: this.imageSize.toFixed(Constants.FRACTION_DIGITS),\n        callback: ((value: number, mode: SliderChangeMode) => {\n          this.imageSize = value;\n        }),\n        options: {\n          value: this.imageSize,\n          min: Constants.MIN,\n          max: Constants.MAX,\n          step: Constants.STEP,\n          style: SliderStyle.InSet\n        }\n      })\n        .margin({\n          bottom: Constants.PANEL_MARGIN_BOTTOM,\n          top: Constants.PANEL_MARGIN_TOP\n        });\n    }\n    .justifyContent(FlexAlign.End)\n    .height(Constants.PERCENTAGE_100)\n    .backgroundColor($r('app.color.background_color'))\n  }\n\n  speedChange(): void {\n    let that = this;\n    this.angle = Constants.ANGLE;\n    this.interval = setInterval(() => {\n      that.angle += that.speed;\n    }, Constants.DELAY_TIME)\n  }\n\n  onPageShow() {\n    clearInterval(this.interval);\n    this.speedChange();\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SliderExample\\entry\\src\\main\\ets\\pages\\SliderPage.ets", "project_name": "codelabs-master", "id": "e0b3ac88d1d4ade809e76565d53889cdb0ea3f693c4a526ba07ee608f74d3846"}
{"text": "import { Constants, SliderMode } from '../common/Constants';\n\n@Component\nexport struct PanelComponent {\n  @Prop text: string = '';\n  private title?: Resource;\n  private mode?: SliderMode;\n  private options?: SliderOptions;\n  private callback: (value: number, mode: SliderChangeMode) => void = () => {};\n\n  build() {\n    Column() {\n      Text(this.title)\n        .width(Constants.PANEL_WIDTH)\n        .padding({ left: Constants.TITLE_PADDING })\n        .fontSize(Constants.FONT_SIZE)\n        .fontWeight(FontWeight.Medium)\n        .fontColor($r('app.color.font_color'))\n        .margin({ left: Constants.TITLE_MARGIN_HORIZONTAL,\n          right: Constants.TITLE_MARGIN_HORIZONTAL })\n      Column() {\n        Text(this.text)\n          .fontSize(Constants.FONT_SIZE)\n          .fontWeight(FontWeight.Medium)\n          .fontColor($r('app.color.font_color'))\n          .margin({ bottom: Constants.SPEED_MARGIN_BOTTOM })\n        Row() {\n          if (this.mode === SliderMode.SPEED) {\n            Image($rawfile('speedLow.png'))\n              .objectFit(ImageFit.Contain)\n              .height(Constants.PANEL_IMAGE_HEIGHT)\n              .width(Constants.PANEL_IMAGE_WIDTH)\n          } else {\n            Text(Constants.PANEL_HOLDER)\n              .fontSize(Constants.PANEL_FONT_SIZE)\n              .fontWeight(FontWeight.Medium)\n              .fontColor($r('app.color.font_color'))\n              .margin({ bottom: Constants.SPEED_MARGIN_BOTTOM })\n          }\n\n          Slider(this.options)\n            .layoutWeight(Constants.LAYOUT_WEIGHT)\n            .selectedColor(Constants.SLIDER_SKIN)\n            .onChange((value: number, mode: SliderChangeMode) => {\n              this.callback(value, mode);\n            })\n            .margin({ left: Constants.SLIDER_MARGIN_HORIZONTAL,\n              right: Constants.SLIDER_MARGIN_HORIZONTAL })\n\n          if (this.mode === SliderMode.SPEED) {\n            Image($rawfile('speed.png'))\n              .objectFit(ImageFit.Contain)\n              .height(Constants.PANEL_IMAGE_BIG_HEIGHT)\n              .width(Constants.PANEL_IMAGE_BIG_WIDTH)\n              .height(Constants.PANEL_IMAGE_BIG_HEIGHT)\n              .width(Constants.PANEL_IMAGE_BIG_WIDTH)\n          } else {\n            Text(Constants.PANEL_HOLDER)\n              .fontSize(Constants.PANEL_END_FONT_SIZE)\n              .fontWeight(FontWeight.Medium)\n              .fontColor($r('app.color.font_color'))\n              .margin({ bottom: Constants.SPEED_MARGIN_BOTTOM })\n          }\n\n        }\n      }\n      .justifyContent(FlexAlign.Center)\n      .backgroundColor(Color.White)\n      .borderRadius(Constants.PANEL_RADIUS)\n      .height(Constants.PANEL_HEIGHT)\n      .width(Constants.PANEL_WIDTH)\n      .padding({ left: Constants.PANEL_PADDING,\n        right: Constants.PANEL_PADDING })\n      .margin({ top: Constants.PANEL_MARGIN,\n        bottom: Constants.PANEL_MARGIN })\n    }\n    .padding({ left: Constants.PANEL_PADDING,\n      right: Constants.PANEL_PADDING })\n    .width(Constants.PERCENTAGE_100)\n    .alignItems(HorizontalAlign.Center)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SliderExample\\entry\\src\\main\\ets\\view\\PanelComponent.ets", "project_name": "codelabs-master", "id": "6050fbb8c2f989600c7fd7edaa3f841da6669816d63c07184b23d906d85ae50b"}
{"text": "import HomePage from '../view/home/HomePage';\nimport NavViewModel from '../viewmodel/NavViewModel';\nimport ToolBarData from '../viewmodel/ToolBarData';\nimport ToolBarComponent from '../view/ToolBarComponent';\nimport { AppFontSize, NavPageStyle, PERCENTAGE_100 } from '../common/constants/Constants';\n\nconst HOME: number = 0;\nlet viewModel: NavViewModel = new NavViewModel();\n\n@Extend(Navigation) function setNavStyle() {\n  .hideTitleBar(true)\n  .width(PERCENTAGE_100)\n  .height(PERCENTAGE_100)\n}\n\n@Extend(Tabs) function setTabStyle() {\n  .barHeight(NavPageStyle.BAR_HEIGHT)\n  .scrollable(false)\n}\n\n@Entry\n@Component\nstruct NavPage {\n  @State toolBarConfigs: ToolBarData[] = []; \n  navCurrentPosition: number = NavPageStyle.POSITION_INITIAL;\n  private controller: TabsController = new TabsController();\n\n  aboutToAppear() {\n    this.toolBarConfigs = viewModel.loadNavigationTab();\n  }\n\n  build() {\n    Navigation() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        ForEach(this.toolBarConfigs, (item: ToolBarData, index?: number) => {\n          TabContent() {\n            if (index === HOME) {\n              HomePage()\n            } else {\n              this.HolderPage(item?.text)\n            }\n          }\n        }, (item: ToolBarData) => JSON.stringify(item))\n      }.setTabStyle()\n    }\n    .toolBar(this.ToolBarBuilder())\n    .setNavStyle()\n  }\n\n  @Builder ToolBarBuilder() {\n    ToolBarComponent({\n      controller: this.controller,\n      toolBarConfigs: this.toolBarConfigs,\n      navCurrentPosition: this.navCurrentPosition\n    })\n      .backgroundColor(Color.White)\n      .height(PERCENTAGE_100)\n  }\n\n  @Builder HolderPage(text: Resource) {\n    Column() {\n      Text(text)\n        .fontSize(AppFontSize.LARGER)\n        .backgroundColor(Color.White)\n        .height(PERCENTAGE_100)\n        .width(PERCENTAGE_100)\n        .textAlign(TextAlign.Center)\n    }.justifyContent(FlexAlign.Center)\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\pages\\NavPage.ets", "project_name": "codelabs-master", "id": "004d70a5a301cee71e5b86d7e3683c41ddb4607f316058f159bdb32cddac8584"}
{"text": "import { BalanceStyle } from '../common/constants/Constants';\n\n\n@Component\nexport default struct BalanceComponent {\n  @Builder _init() {};\n  @BuilderParam right: () => void = this._init;\n  @BuilderParam left: () => void = this._init;\n\n  build() {\n    Row() {\n      Row() {\n        this.left()\n      }\n      .layoutWeight(BalanceStyle.LAYOUT_WEIGHT)\n      .align(Alignment.Start)\n\n      Row() {\n        this.right()\n      }\n      .layoutWeight(BalanceStyle.LAYOUT_WEIGHT)\n      .justifyContent(FlexAlign.End)\n\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\BalanceComponent.ets", "project_name": "codelabs-master", "id": "8ea972e7d26a18f8484ba837f0cd6e2474d8184757b3a921b17ef0d98113b2a5"}
{"text": "import { CardStyle } from '../common/constants/Constants';\n\n\n@Component\nexport default struct CardComponent {\n  @Builder _init() {};\n  @BuilderParam children: () => void = this._init;\n  paddingValue: Padding | Length = {\n    top: CardStyle.CARD_PADDING_VERTICAL,\n    bottom: CardStyle.CARD_PADDING_VERTICAL,\n    left: CardStyle.CARD_PADDING_HORIZONTAL,\n    right: CardStyle.CARD_PADDING_HORIZONTAL\n  };\n  marginValue: Margin | Length = {\n    top: CardStyle.CARD_MARGIN_TOP,\n    left: CardStyle.CARD_MARGIN_HORIZONTAL,\n    right: CardStyle.CARD_MARGIN_HORIZONTAL\n  };\n  colorValue: ResourceColor = $r('app.color.background1');\n  radiusValue: Length = CardStyle.CARD_RADIUS;\n\n  build() {\n    Column() {\n      this.children()\n    }\n    .padding(this.paddingValue)\n    .margin(this.marginValue)\n    .backgroundColor(this.colorValue)\n    .borderRadius(this.radiusValue)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\CardComponent.ets", "project_name": "codelabs-master", "id": "bfb0ec54c7931d0796d9f4333981ebf1ab43479deb58ce5d819ca4d6fd53005c"}
{"text": "import ToolBarData from '../viewmodel/ToolBarData';\nimport { AppFontSize, AppFontWeight, PERCENTAGE_100, ToolBarStyle } from '../common/constants/Constants';\nimport { NavPageStyle } from '../common/constants/Constants';\n\n@Component\nexport default struct ToolBarComponent {\n  @State navCurrentPosition: number = NavPageStyle.POSITION_INITIAL;\n  toolBarConfigs: ToolBarData[] = [];\n  controller: TabsController = new TabsController();\n\n  build() {\n    Column() {\n      Divider()\n        .backgroundColor(Color.Black)\n        .height(ToolBarStyle.DIVIDER_HEIGHT)\n        .opacity(ToolBarStyle.DIVIDER_OPACITY)\n      Row() {\n        ForEach(this.toolBarConfigs, (item: ToolBarData, index?: number) => {\n          Column() {\n            Image(this.navCurrentPosition === index ? item?.icon_after : item?.icon)\n              .height(ToolBarStyle.IMAGE_SIZE)\n              .margin({ bottom: ToolBarStyle.MARGIN_BOTTOM })\n              .objectFit(ImageFit.Contain)\n            Text(item?.text)\n              .fontColor(this.navCurrentPosition === index ? $r('app.color.index_navigation_selected_text') : $r('app.color.text'))\n              .fontWeight(AppFontWeight.BOLDER)\n              .fontSize(AppFontSize.SMALLER)\n              .textAlign(TextAlign.Center)\n          }\n          .width(ToolBarStyle.LAYOUT_WEIGHT)\n          .onClick(() => {\n            this.navCurrentPosition = item.num\n            this.controller.changeIndex(this.navCurrentPosition)\n          })\n        }, (item: ToolBarData) => JSON.stringify(item))\n      }\n    }\n  }\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\ToolBarComponent.ets", "project_name": "codelabs-master", "id": "f281d3303de63244d9ba60c0963cd89c1ff312c14382cc04df6efb6e155f78a8"}
{"text": "import { AppFontSize, AppFontWeight, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { AddressPicker } from '../../common/constants/DetailsConstants';\n\n@Component\nexport default struct AddressComponent {\n  build() {\n    Row() {\n      Column() {\n        Text($r('app.string.detail_address_text'))\n          .maxLines(AddressPicker.MAX_LINES)\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .textCase(TextCase.UpperCase)\n          .fontSize(AppFontSize.SMALL)\n          .fontColor($r('app.color.text'))\n          .fontWeight(AppFontWeight.BOLDER)\n      }\n      .width(AddressPicker.LAYOUT_WEIGHT_LEFT)\n      .alignItems(HorizontalAlign.Start)\n\n      Row() {\n        Image($rawfile('detail/detail_location.png'))\n          .objectFit(ImageFit.Contain)\n          .height(AddressPicker.IMAGE_SIZE_LOCATION)\n          .width(AddressPicker.IMAGE_SIZE_LOCATION)\n          .margin({ right: AddressPicker.MARGIN_RIGHT_IMAGE })\n        Text($r('app.string.detail_address_holder_text'))\n          .maxLines(AddressPicker.MAX_LINES)\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .textCase(TextCase.UpperCase)\n          .fontSize(AppFontSize.SMALL)\n          .fontColor(Color.Black)\n          .fontWeight(AppFontWeight.BOLD)\n      }\n      .justifyContent(FlexAlign.Start)\n      .width(AddressPicker.LAYOUT_WEIGHT_CENTER)\n\n      Row() {\n        Image($rawfile('detail/detail_pick_up_more.png'))\n          .objectFit(ImageFit.Contain)\n          .height(AddressPicker.IMAGE_SIZE_MORE)\n          .width(AddressPicker.IMAGE_SIZE_MORE)\n      }\n      .width(AddressPicker.LAYOUT_WEIGHT_RIGHT)\n      .justifyContent(FlexAlign.End)\n    }\n    .width(PERCENTAGE_100)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\AddressComponent.ets", "project_name": "codelabs-master", "id": "4610e8a3d983237d5a0a0b252d831d9ccb7005750b6398957a34b9a1fdc1280a"}
{"text": "import { AppFontSize, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { BottomBar } from '../../common/constants/DetailsConstants';\n\n@Extend(Text)\nfunction setTextStyle() {\n  .width(BottomBar.TEXT_WIDTH)\n  .lineHeight(BottomBar.TEXT_LINE_HEIGHT)\n  .textAlign(TextAlign.Center)\n  .fontColor($r('app.color.background'))\n  .fontSize(AppFontSize.MIDDLE)\n}\n\n@Component\nexport default struct BottomBarComponent {\n  private barHeight: Length = 0;\n\n  build() {\n    Flex({ justifyContent: FlexAlign.SpaceBetween, direction: FlexDirection.Column }) {\n      Divider()\n        .height(BottomBar.DIVIDER_HEIGHT)\n        .backgroundColor($r('app.color.navigation_line'))\n      Blank()\n      Row() {\n        Row() {\n          Text($r('app.string.put_in_shopping_cart'))\n            .setTextStyle()\n          Text($r('app.string.buy_now'))\n            .setTextStyle()\n        }\n        .width(BottomBar.CONTAINER_SIZE_WIDTH)\n        .height(BottomBar.CONTAINER_SIZE_HEIGHT)\n        .backgroundImage($rawfile('detail/detail_bottom_panel_background.png'), ImageRepeat.NoRepeat)\n        .backgroundImageSize(ImageSize.Cover)\n      }\n      .padding({\n        right: BottomBar.BAR_PADDING_RIGHT\n      })\n      .width(PERCENTAGE_100)\n      \n      .justifyContent(FlexAlign.End)\n    }.height(PERCENTAGE_100).padding({ bottom: BottomBar.BAR_PADDING_BOTTOM })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\BottomBarComponent.ets", "project_name": "codelabs-master", "id": "59434b1388d86dd0962fe0eae29b1391a864b66bfbef34a76974e4126ad6bfc4"}
{"text": "import { AppFontSize, AppFontWeight, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { CommentList } from '../../common/constants/DetailsConstants';\n\n@Extend(Image) function setImageStyle() {\n  .objectFit(ImageFit.Contain)\n  .size({ width: CommentList.IMAGE_MARK_WIDTH })\n}\n\n@Component\nexport default struct CommentsComponent {\n  build() {\n    List({ space: CommentList.SPACE }) {\n      ListItem() {\n        this.CommentItem()\n      }\n\n      ListItem() {\n        this.CommentItem()\n      }\n\n      ListItem() {\n        this.CommentItem()\n      }\n    }\n    .height(CommentList.HEIGHT)\n    .width(PERCENTAGE_100)\n    .backgroundColor(Color.White)\n    .edgeEffect(EdgeEffect.None)\n  }\n\n  @Builder CommentItem() {\n    Column() {\n      Row() {\n        Image($rawfile('detail/head_portrait.png'))\n          .objectFit(ImageFit.Contain)\n          .size({ width: CommentList.IMAGE_SIZE_HEAD_PORTRAIT })\n          .margin({ right: CommentList.MARGIN_HEAD_PORTRAIT })\n        Column() {\n          Text($r('app.string.detail_comment_phone'))\n            .lineHeight(CommentList.LINE_HEIGHT_PHONE)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .textCase(TextCase.UpperCase)\n            .fontSize(AppFontSize.SMALL)\n            .fontWeight(AppFontWeight.BOLDER)\n          Blank()\n            .height(CommentList.BLANK_HEIGHT_PHONE)\n          Row() {\n            Image($rawfile('detail/detail_comment_mark.png'))\n              .setImageStyle()\n            Blank().width(CommentList.MARK_BLANK_WIDTH)\n            Image($rawfile('detail/detail_comment_mark.png'))\n              .setImageStyle()\n            Blank().width(CommentList.MARK_BLANK_WIDTH)\n            Image($rawfile('detail/detail_comment_mark.png'))\n              .setImageStyle()\n            Blank().width(CommentList.MARK_BLANK_WIDTH)\n            Image($rawfile('detail/detail_comment_mark.png'))\n              .setImageStyle()\n          }\n        }\n        .width(PERCENTAGE_100)\n        .alignItems(HorizontalAlign.Start)\n      }\n\n      Text($r('app.string.detail_comment'))\n        .maxLines(CommentList.COMMENT_MAX_LINES)\n        .lineHeight(CommentList.COMMENT_LINE_HEIGHT)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textCase(TextCase.UpperCase)\n        .fontSize(AppFontSize.SMALL)\n        .fontWeight(AppFontWeight.BOLD)\n        .margin({ top: CommentList.MARGIN_TEXT })\n    }\n    .alignItems(HorizontalAlign.Start)\n    .width(PERCENTAGE_100)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\CommentsComponent.ets", "project_name": "codelabs-master", "id": "542e7924b427e51d8e5ea684bc15ca1d11a56757eb0b8c0cdc7934fadf1155e3"}
{"text": "import { AppFontSize, AppFontWeight } from '../../common/constants/Constants';\nimport { CommentHeader } from '../../common/constants/DetailsConstants';\n\n@Component\nexport default struct CommentsHeaderComponent {\n  build() {\n    Row() {\n      Text($r('app.string.detail_comment_header_left'))\n        .lineHeight(CommentHeader.LINE_HEIGHT)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textCase(TextCase.UpperCase)\n        .fontSize(AppFontSize.MIDDLE)\n        .fontColor($r('app.color.text'))\n        .fontWeight(AppFontWeight.BOLDER)\n        .width(CommentHeader.LAYOUT_WEIGHT)\n        .textAlign(TextAlign.Start)\n      Row() {\n        Text() {\n          Span($r('app.string.commentRatio'))\n            .textCase(TextCase.UpperCase)\n            .fontSize(AppFontSize.SMALL)\n            .fontColor(Color.Red)\n            .fontWeight(AppFontWeight.BOLD)\n          Span($r('app.string.detail_comment_header_right'))\n            .textCase(TextCase.UpperCase)\n            .fontSize(AppFontSize.SMALL)\n            .fontColor($r('app.color.commentRate'))\n            .fontWeight(AppFontWeight.BOLD)\n          Span(CommentHeader.ARROW)\n            .textCase(TextCase.UpperCase)\n            .fontSize(AppFontSize.MIDDLE)\n            .decoration({ type: TextDecorationType.None, color: Color.Red })\n            .fontColor($r('app.color.commentRate'))\n            .fontWeight(AppFontWeight.BOLD)\n        }\n        .width(CommentHeader.LAYOUT_WEIGHT)\n        .textAlign(TextAlign.End)\n\n      }\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\CommentsHeaderComponent.ets", "project_name": "codelabs-master", "id": "86b5822d7d3326da791f592507e0c0173794d1971fe9766d8b708be06843eed8"}
{"text": "import { AppFontSize, AppFontWeight, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { GoodsTitle } from '../../common/constants/DetailsConstants';\n\n@Component\nexport default struct GoodsTitleComponent {\n  private title: Resource = $r('app.string.goods_list_item_1');\n\n  build() {\n    Column() {\n      Text(this.title)\n        .maxLines(GoodsTitle.MAX_LINE)\n        .lineHeight(GoodsTitle.LINE_HEIGHT)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textCase(TextCase.UpperCase)\n        .fontSize(AppFontSize.MIDDLE)\n        .textAlign(TextAlign.Start)\n        .fontColor($r('app.color.text'))\n        .fontWeight(AppFontWeight.BOLD)\n    }\n    .width(PERCENTAGE_100)\n    .alignItems(HorizontalAlign.Start)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\GoodsTitleComponent.ets", "project_name": "codelabs-master", "id": "d7e10c6386b8f9d176619289794a4225ec9bf752e5c6e29dfd883afdc308c757"}
{"text": "import { AppFontSize, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { ActionPanel } from '../../common/constants/DetailsConstants';\n\n@Component\nexport default struct PanelComponent {\n  @Styles globalSize() {\n    .size({ width: ActionPanel.IMAGE_HEIGHT })\n  }\n\n  build() {\n    Row() {\n      Row() {\n        Image($rawfile('detail/detail_action_share_to.png'))\n          .globalSize()\n        Blank()\n          .width(ActionPanel.BLANK_WIDTH)\n        Text($r('app.string.detail_enjoy'))\n          .fontSize(AppFontSize.SMALLER)\n          .fontColor($r('app.color.text'))\n      }\n\n      Row() {\n        Image($rawfile('detail/detail_action_add_to_favorites.png'))\n          .globalSize()\n        Blank()\n          .width(ActionPanel.BLANK_WIDTH)\n        Text($r('app.string.detail_collection'))\n          .fontSize(AppFontSize.SMALLER)\n          .fontColor($r('app.color.text'))\n      }\n\n      Row() {\n        Image($rawfile('detail/detail_action_price_notify.png'))\n          .globalSize()\n        Blank()\n          .width(ActionPanel.BLANK_WIDTH)\n        Text($r('app.string.detail_price_notify'))\n          .fontSize(AppFontSize.SMALLER)\n          .fontColor($r('app.color.text'))\n      }\n    }\n    .width(PERCENTAGE_100)\n    .justifyContent(FlexAlign.SpaceAround)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\PanelComponent.ets", "project_name": "codelabs-master", "id": "226798cf5ec0818fc734bd0148522ca376dc056d3da9ec90d91255afd8352fac"}
{"text": "import { AppFontSize, AppFontWeight, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { GoodsPicker } from '../../common/constants/DetailsConstants';\n\n@Component\nexport default struct PickerComponent {\n  @Builder _init() {};\n  private goodsDescription: string | Resource = ''\n  @BuilderParam actionMoreBuilder: () => void = this._init;\n\n  build() {\n    Row() {\n      Text($r('app.string.detail_goods_picker_left_text'))\n        .maxLines(GoodsPicker.MAX_LINES)\n        .lineHeight(GoodsPicker.LINE_HEIGHT_TEXT_SELECTED)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textCase(TextCase.UpperCase)\n        .fontSize(AppFontSize.SMALL)\n        .fontColor(Color.Black)\n        .fontWeight(AppFontWeight.BOLDER)\n        .width(GoodsPicker.LAYOUT_WEIGHT_LEFT)\n\n      Row() {\n        Text(this.goodsDescription)\n          .maxLines(GoodsPicker.MAX_LINES)\n          .lineHeight(GoodsPicker.LINE_HEIGHT_DESCRIPTION)\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .textCase(TextCase.UpperCase)\n          .fontSize(AppFontSize.SMALL)\n          .fontColor($r('app.color.text'))\n          .fontWeight(AppFontWeight.BOLD)\n          .padding({ left: GoodsPicker.MARGIN_LEFT_DESCRIPTION })\n      }\n      .width(GoodsPicker.LAYOUT_WEIGHT_CENTER)\n      .justifyContent(FlexAlign.Start)\n\n      Row() {\n        this.actionMoreBuilder()\n      }\n      .width(GoodsPicker.LAYOUT_WEIGHT_RIGHT)\n      .justifyContent(FlexAlign.End)\n\n    }\n    .width(PERCENTAGE_100)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\PickerComponent.ets", "project_name": "codelabs-master", "id": "b393dccf5cc35149ea125ef61531d9163ed1519c71e4fb8b853f3b3c783cbf5a"}
{"text": "import { AppFontSize, PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { GoodsPreviewer } from '../../common/constants/DetailsConstants';\n\n@Component\nexport default struct PreviewerComponent {\n  goodsImg: string | Resource = '';\n\n  build() {\n    Column() {\n      Row() {\n        Image(this.goodsImg)\n          .height(PERCENTAGE_100)\n          .width(PERCENTAGE_100)\n          .objectFit(ImageFit.Contain)\n          .padding({ top: GoodsPreviewer.PADDING_IMAGE_TOP,\n            bottom: GoodsPreviewer.PADDING_IMAGE_BOTTOM })\n      }\n      .width(PERCENTAGE_100)\n      .height(PERCENTAGE_100)\n\n      Row() {\n        Text(GoodsPreviewer.INDICATOR_TEXT)\n          .fontColor(Color.White)\n          .fontSize(AppFontSize.SMALLER)\n      }\n      .zIndex(GoodsPreviewer.INDEX)\n      .alignSelf(ItemAlign.End)\n      .position({ x: GoodsPreviewer.LOCATION,\n        y: GoodsPreviewer.LOCATION })\n      .backgroundColor($r('app.color.detail_goods_previewer_indicator'))\n      .borderRadius(GoodsPreviewer.BORDER_RADIUS)\n      .padding({\n        top: GoodsPreviewer.INDICATOR_PADDING_TOP,\n        bottom: GoodsPreviewer.INDICATOR_PADDING_BOTTOM,\n        right: GoodsPreviewer.INDICATOR_PADDING_HORIZONTAL,\n        left: GoodsPreviewer.INDICATOR_PADDING_HORIZONTAL\n      })\n      .margin({ bottom: GoodsPreviewer.INDICATOR_MARGIN_BOTTOM,\n        right: GoodsPreviewer.INDICATOR_MARGIN_RIGHT })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\PreviewerComponent.ets", "project_name": "codelabs-master", "id": "e3c66849bbb0c13ab851eeaf1eea0f71b80d5d4748b2d69fc906ff01c9fe75c3"}
{"text": "import { AppFontSize, AppFontWeight, PERCENTAGE_100 } from '../../common/constants/Constants';\n\n@Component\nexport default struct PriceComponent {\n  private price: string = ''\n\n  build() {\n    Column() {\n      Text() {\n        Span($r('app.string.detail_price_symbol'))\n          .textCase(TextCase.UpperCase)\n          .fontSize(AppFontSize.SMALL)\n          .decoration({ type: TextDecorationType.None })\n          .fontColor(Color.Red)\n          .fontWeight(AppFontWeight.BOLD)\n        Span(this.price)\n          .textCase(TextCase.UpperCase)\n          .fontSize(AppFontSize.LARGE)\n          .decoration({ type: TextDecorationType.None, color: Color.Red })\n          .fontColor(Color.Red)\n          .fontWeight(AppFontWeight.BOLDER)\n      }\n    }\n    .alignItems(HorizontalAlign.Start)\n    .width(PERCENTAGE_100)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\PriceComponent.ets", "project_name": "codelabs-master", "id": "d9863bd22a043fea1997ffaa619b05a8cbf472efe677b19b3e6a44a20ee79b13"}
{"text": "import ServiceItemComponent from './ServiceItemComponent';\nimport ServicesViewModel from '../../viewmodel/ServicesViewModel';\nimport GoodsServiceData from '../../viewmodel/GoodsServiceData';\nimport { PERCENTAGE_100 } from '../../common/constants/Constants';\nimport { GoodsService } from '../../common/constants/DetailsConstants';\n\nlet viewModel: ServicesViewModel = new ServicesViewModel();\nlet goodsServiceList: GoodsServiceData[];\n\n@Component\nexport default struct ServicesComponent {\n  aboutToAppear() {\n    goodsServiceList = viewModel.loadGoodsService();\n  }\n\n  build() {\n    List({ space: GoodsService.SPACE }) {\n      ForEach(goodsServiceList, (item: GoodsServiceData) => {\n        ListItem() {\n          ServiceItemComponent({\n            serviceName: item?.name,\n            description: item?.description,\n            isShowActionMore: item?.name != null\n          })\n        }\n      }, (item: GoodsServiceData) => JSON.stringify(item))\n\n    }\n    .width(PERCENTAGE_100)\n    .height(GoodsService.LIST_HEIGHT)\n    .backgroundColor(Color.White)\n    .edgeEffect(EdgeEffect.None)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\details\\ServicesComponent.ets", "project_name": "codelabs-master", "id": "b98f41da2278f81aa5cb1e748d5aa0f311d78249fce8d288791205974f95e87f"}
{"text": "import BannerData from '../../viewmodel/BannerData';\nimport { Banner } from '../../common/constants/HomeConstants';\nimport { PERCENTAGE_100, PERCENTAGE_20 } from '../../common/constants/Constants';\n\n@Component\nexport default struct BannerComponent {\n  bannerList: BannerData[] = [];\n\n  build() {\n    Column({ space: Banner.SPACE }) {\n      Swiper() {\n        ForEach(this.bannerList, (item: BannerData) => {\n          Image(item.imgSrc)\n            .width(PERCENTAGE_100)\n            .objectFit(ImageFit.Contain)\n        }, (item: BannerData) => JSON.stringify(item))\n      }\n      .cachedCount(Banner.CACHE_COUNT)\n      .index(Banner.POSITION)\n      .autoPlay(true)\n      .interval(Banner.TIME)\n      .indicator(true)\n      .loop(true)\n      .duration(Banner.DURATION)\n      .vertical(false)\n      .itemSpace(Banner.ITEM_SPACE)\n      .indicator(new DotIndicator()\n        .color($r('app.color.background'))\n        .selectedColor($r('app.color.homepage_indicator_selected'))\n        .itemWidth(Banner.INDICATOR_SIZE)\n        .itemHeight(Banner.INDICATOR_SIZE)\n        .selectedItemWidth(Banner.INDICATOR_SIZE)\n        .selectedItemHeight(Banner.INDICATOR_SIZE))\n      .curve(Curve.Linear)\n    }\n    .width(Banner.WIDTH)\n    .height(PERCENTAGE_20)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\home\\BannerComponent.ets", "project_name": "codelabs-master", "id": "3077026de1f1016ca9250d71b0ab1fa9c4365eabb87616b3c4f8f27b1cabf17d"}
{"text": "import GoodsItemComponent from './GoodsItemComponent';\nimport { GoodsList } from '../../common/constants/HomeConstants';\nimport GoodsData from '../../viewmodel/GoodsData';\nimport { PERCENTAGE_100, PERCENTAGE_50 } from '../../common/constants/Constants';\n\n@Component\nexport default struct GoodsComponent {\n  private goodsList: GoodsData[] = [];\n  private startPage: (index: number) => void = (index: number) => {};\n\n  build() {\n    Grid() {\n      ForEach(this.goodsList, (item: GoodsData, index?: number) => {\n        GridItem() {\n          GoodsItemComponent({ config: item })\n        }.onClick(() => {\n          if (!index) {\n            index = 0;\n          }\n          this.startPage(index);\n        })\n      }, (item: GoodsData) => JSON.stringify(item))\n    }\n    .columnsTemplate(GoodsList.GRID_STYLE)\n    .columnsGap(GoodsList.SPACE)\n    .rowsGap(GoodsList.SPACE)\n    .layoutDirection(GoodsList.HORIZONTAL)\n    .padding({ left: GoodsList.GRID_PADDING,\n      right: GoodsList.GRID_PADDING })\n    .width(PERCENTAGE_100)\n    .height(PERCENTAGE_50)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\home\\GoodsComponent.ets", "project_name": "codelabs-master", "id": "45b772cb8d232757b4f5176ba014f08c45842b3b28448bc909d2e827c563f392"}
{"text": "import { AppFontSize } from '../../common/constants/Constants';\nimport MenuData from '../../viewmodel/MenuData';\nimport { Menus } from '../../common/constants/HomeConstants';\n\n@Component\nexport default struct MenusComponent {\n  menus: MenuData[] = [];\n\n  build() {\n    Row() {\n      ForEach(this.menus, (item: MenuData) => {\n        Column() {\n          Text(item?.menuName)\n            .fontColor(item?.fontColor)\n            .fontSize(AppFontSize.MIDDLE)\n            .fontWeight(item?.fontWeight)\n          Text(item?.menuContent)\n            .fontColor(item?.fontColor)\n            .fontSize(AppFontSize.SMALL)\n            .fontWeight(item?.fontWeight)\n        }\n        .width(Menus.LAYOUT_WEIGHT)\n        .padding({ top: Menus.ITEM_PADDING_VERTICAL,\n          bottom: Menus.ITEM_PADDING_VERTICAL })\n      }, (item: MenuData) => JSON.stringify(item))\n    }\n    .justifyContent(FlexAlign.Center)\n    .padding({ top: Menus.CONTAINER_PADDING_VERTICAL,\n      bottom: Menus.CONTAINER_PADDING_VERTICAL })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\home\\MenusComponent.ets", "project_name": "codelabs-master", "id": "57d3569c751d5c617aec46b26661cf882790d42f19396ac8907e49fdc2726beb"}
{"text": "import { AppFontSize, AppFontWeight } from '../../common/constants/Constants';\nimport { SearchBar } from '../../common/constants/HomeConstants';\n\n@Component\nexport default struct SearchComponent {\n  build() {\n    Row() {\n      Row() {\n        Image($rawfile('index/search.png'))\n          .width(SearchBar.IMAGE_SIZE)\n          .height(SearchBar.IMAGE_SIZE)\n      }\n\n      TextInput({ placeholder: $r('app.string.homepage_search_hot_word') })\n        .placeholderColor($r('app.color.index_search_hot_word'))\n        .placeholderFont({ size: AppFontSize.SMALL, weight: AppFontWeight.BOLD, })\n        .width(SearchBar.WEIGHT)\n        .margin({ right: SearchBar.TEXT_INPUT_MARGIN_RIGHT })\n        .backgroundColor($r('app.color.background'))\n        .fontSize(AppFontSize.SMALL)\n        .fontWeight(FontWeight.Bold)\n        .fontStyle(FontStyle.Normal)\n    }\n    .padding({ left: SearchBar.CONTAINER_PADDING_LEFT })\n    .borderRadius(SearchBar.BORDER_RADIUS)\n    .backgroundColor($r('app.color.background'))\n    .width(SearchBar.WEIGHT)\n    .height(SearchBar.BAR_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\home\\SearchComponent.ets", "project_name": "codelabs-master", "id": "4752308d841cdc3ad413a8f5c6591324e1ee12e21f03f7ba6128fbcb1f7d511c"}
{"text": "import { AppFontSize, AppFontWeight, PERCENTAGE_100, Text_Margin } from '../../common/constants/Constants';\nimport { GoodsTabs } from '../../common/constants/HomeConstants';\n\n@Component\nexport default struct TabsComponent {\n  private tabMenus: Resource[] = [];\n\n  build() {\n    Row() {\n      Tabs({ barPosition: BarPosition.Start, }) {\n        ForEach(this.tabMenus, (item: Resource, index?: number) => {\n          TabContent() {\n          }\n          .tabBar(this.TabBuilder(index ? index : 0))\n        }, (item: Resource) => JSON.stringify(item))\n      }\n      .vertical(false)\n      .scrollable(true)\n      .barMode(BarMode.Scrollable)\n      .barHeight(PERCENTAGE_100)\n      .animationDuration(GoodsTabs.TIME)\n      .width(GoodsTabs.TAB_WIDTH)\n\n      Row() {\n        Image($rawfile('index/tab_menu_setting.png'))\n          .width(GoodsTabs.IMAGE_SIZE_WIDTH)\n          .height(GoodsTabs.IMAGE_SIZE_HEIGHT)\n        Blank()\n          .width(GoodsTabs.SETTING_BLANK_WIDTH)\n        Text($r('app.string.homepage_tab_more'))\n          .fontSize(AppFontSize.MIDDLE)\n          .fontColor(Color.White)\n          .fontWeight(AppFontWeight.BOLD)\n      }\n      .width(GoodsTabs.SETTING_LAYOUT)\n      .height(PERCENTAGE_100)\n    }\n    .width(PERCENTAGE_100)\n    .padding({ right: GoodsTabs.PADDING_RIGHT })\n    .height(GoodsTabs.BAR_HEIGHT)\n  }\n\n  @Builder TabBuilder(position: number) {\n    Column() {\n      Text(this.tabMenus[position])\n        .fontColor(this.isIndexPageWithinTabs(position) ? Color.White : Color.White)\n        .fontWeight(this.isIndexPageWithinTabs(position) ? FontWeight.Bold : FontWeight.Normal)\n        .fontSize(AppFontSize.MIDDLE)\n    }\n    .height(PERCENTAGE_100)\n    .margin({left:Text_Margin})\n    .justifyContent(FlexAlign.Center)\n    .align(Alignment.Start)\n  }\n\n  isIndexPageWithinTabs(position: number): boolean {\n    return GoodsTabs.TABVIEW_POSITION_INDEX_PAGE === position;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\home\\TabsComponent.ets", "project_name": "codelabs-master", "id": "4a1c855186082e5234fb4c96e9d23f4c6bdd530d8e8e78672641ed7e2a5f1dfe"}
{"text": "import BalanceComponent from '../BalanceComponent';\nimport { TopBar } from '../../common/constants/HomeConstants';\nimport { PERCENTAGE_100 } from '../../common/constants/Constants';\n\n@Component\nexport default struct TopBarComponent {\n  build() {\n    BalanceComponent({ left: this.LogoLayout, right: this.QRCodeLayout })\n      .width(PERCENTAGE_100)\n      .height(TopBar.HEIGHT)\n  }\n\n  @Builder LogoLayout() {\n    Image($rawfile('index/icon.png'))\n      .size({ width: TopBar.IMAGE_SIZE })\n      .objectFit(ImageFit.Contain)\n  }\n\n  @Builder QRCodeLayout() {\n    Image($rawfile('index/qrcode.png'))\n      .size({ width: TopBar.IMAGE_SIZE })\n      .objectFit(ImageFit.Contain)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\home\\TopBarComponent.ets", "project_name": "codelabs-master", "id": "a28b004b7301665a68496b3420f6fe0112b29a29a04d3ecb9a77a7aa433dd1f9"}
{"text": "export default class BannerData {\n  imgSrc: Resource = $rawfile('index/banner1.png');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\BannerData.ets", "project_name": "codelabs-master", "id": "d6b6a6705c3f8f32c02429d83a104b20bb9af1fa9cd3fff8897f21007345b9f9"}
{"text": "import DataModel from '../model/DataModel';\nimport GoodsData from './GoodsData';\n\nexport default class DetailsViewModel {\n  public loadDetails(position: number): GoodsData {\n    return DataModel.GOOD_LIST[position];\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\DetailsViewModel.ets", "project_name": "codelabs-master", "id": "b000cf29f79863dd44b014b04d93593b80973ea6f19b97610a558e284d472d63"}
{"text": "export default class GoodsData {\n  goodsName: Resource = $r('app.string.goods_list_item_1');\n  price: string = '1999';\n  originalPrice: string = '2999';\n  discounts: Resource = $r('app.string.goods_list_item_1_save');\n  label: Resource = $r('app.string.goods_list_activity_new');\n  goodsImg: Resource =  $rawfile('index/good1.png');\n  goodsDescription: Resource = $r('app.string.goods_list_item_1_desc');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\GoodsData.ets", "project_name": "codelabs-master", "id": "2fa319b2c9f6dcb4b7ea79b82e12ec03748e5df823c14489597793c084df5f57"}
{"text": "export default class GoodsServiceData {\n  id: number = 0;\n  name: Resource | null = null;\n  description: Resource = $r('app.string.goods_service_1_desc');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\GoodsServiceData.ets", "project_name": "codelabs-master", "id": "93c70e36c2a173ca7d1afdfa684930ba5509572ea93af5e8dc5a68877e893324"}
{"text": "export default class MenuData {\n  menuName: Resource = $r('app.string.home_menu_all');\n  menuContent: Resource = $r('app.string.home_menu_all_content');\n  fontWeight: string = '';\n  fontColor: string = '';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\MenuData.ets", "project_name": "codelabs-master", "id": "a6e8f9e00733c3848c52fb1c75aa67f6452e136f387bf39df9e3f10f6a616fad"}
{"text": "import DataModel from '../model/DataModel';\nimport ToolBarConfig from './ToolBarData';\n\nexport default class NavViewModel {\n  public loadNavigationTab(): ToolBarConfig[] {\n    return DataModel.TOOL_BAR;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\NavViewModel.ets", "project_name": "codelabs-master", "id": "c979dd5d131a121834490ee23293c9c39fd26a0507a55a8dd27802a611288470"}
{"text": "import DataModel from '../model/DataModel';\nimport Service from './GoodsServiceData';\n\nexport default class ServicesViewModel {\n  \n  public loadGoodsService(): Service[] {\n    return DataModel.GOOD_SERVICE;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\ServicesViewModel.ets", "project_name": "codelabs-master", "id": "9727610858fa1cbdad6e5d652e65815c2ca2110ba38771d9af9210cda5fd37d7"}
{"text": "export default class ToolBarData {\n  num: number = 0;\n  text: Resource = $r('app.string.nav_index');\n  icon_after: Resource = $rawfile('index/home.png');\n  icon: Resource = $rawfile('index/home_selected.png');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\StageAbilityDemo\\entry\\src\\main\\ets\\viewmodel\\ToolBarData.ets", "project_name": "codelabs-master", "id": "729b41ce159e52336977fd90c3fa1a6b82faf5131521f7f24a1f1f372a0e9f3e"}
{"text": "import { VideoItem } from '../../viewmodel/VideoItem';\n\n\nexport const VIDEO_DATA: VideoItem[] = [\n  {\n    id: '1',\n    src: $rawfile('video1.mp4'),\n    likesCount: 0,\n    isLikes: false,\n    commentCount: 102,\n    shareTimes: 666\n  },\n  {\n    id: '2',\n    src: $rawfile('video2.mp4'),\n    likesCount: 8654,\n    isLikes: true,\n    commentCount: 0,\n    shareTimes: 0\n  }\n];\n\n\nexport enum PlayState {\n  STOP = 0,\n  START = 1,\n  PAUSE = 2\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\common\\constants\\VideoConstants.ets", "project_name": "codelabs-master", "id": "fa3e5ed20cffb6bbcfc91958ba7cffacf43095c305dc717758eabbc0f0ed0709"}
{"text": "import { VideoItem } from '../viewmodel/VideoItem';\nimport { initializeOnStartup } from '../viewmodel/VideoViewModel';\nimport { PlayView } from '../view/play/PlayView';\nimport { CommonConstants } from '../common/constants/CommonConstant';\n\n\n@Entry\n@Component\nstruct PageVideo {\n  @State videoArray: Array<VideoItem> = initializeOnStartup();\n  @State index: number = 0; \n  @State pageShow: boolean = false;\n\n  build() {\n    Column() {\n      Swiper() {\n        ForEach(this.videoArray, (item: VideoItem, index: number | undefined) => {\n          PlayView({\n            index: $index,\n            pageShow: $pageShow,\n            item: item,\n            barPosition: index\n          });\n        }, (item: VideoItem) => JSON.stringify(item))\n      }\n      .width(CommonConstants.FULL_WIDTH)\n      .height(CommonConstants.FULL_HEIGHT)\n      .indicator(false)\n      .loop(false)\n      .vertical(true)\n      .onChange((index: number) => {\n        this.index = index;\n      })\n    }\n  }\n\n  onPageShow(): void {\n    this.pageShow = true;\n  }\n\n  onPageHide(): void {\n    this.pageShow = false;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\pages\\PageVideo.ets", "project_name": "codelabs-master", "id": "43d6af0c873f2ea92f8228672dab404751e9b9ba21a8e119d7b6723431367fb4"}
{"text": "import { PictureItem } from '../../viewmodel/PictureItem';\nimport { initializePictures } from '../../viewmodel/PictureViewModel';\nimport { PictureView } from '../common/PictureView';\nimport { PictureType } from '../../common/constants/PictureConstants';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Extend(Text)\nfunction textStyle(fontSize: number, fontWeight: number) {\n  .fontSize(fontSize)\n  .fontWeight(fontWeight)\n  .fontColor($r('app.color.font_black'))\n}\n\n\n@Component\nexport struct PictureSort {\n  @State photos: Array<PictureItem> = [];\n  @State private sortName: Resource = $r('app.string.recently');\n  private initType: string = '';\n\n  aboutToAppear() {\n    if (PictureType.RECENTLY === this.initType) {\n      this.sortName = $r('app.string.recently');\n      this.photos = initializePictures(PictureType.RECENTLY);\n    } else {\n      this.sortName = $r('app.string.photo');\n      this.photos = initializePictures(PictureType.PHOTO);\n    }\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.sortName)\n          .width(CommonConstants.WIDTH_SORT_NAME)\n          .textStyle(CommonConstants.FONT_SIZE_SORT_TITLE, CommonConstants.FONT_WEIGHT_NORMAL)\n        Text($r('app.string.more'))\n          .layoutWeight(CommonConstants.LAYOUT_WEIGHT)\n          .textAlign(TextAlign.End)\n          .textStyle(CommonConstants.FONT_SIZE_PHOTO_NAME, CommonConstants.FONT_WEIGHT_LIGHT)\n          .lineHeight(CommonConstants.LINE_HEIGHT_MORE)\n          .opacity($r('app.float.opacity_light'))\n      }\n      .width(CommonConstants.WIDTH_SORT)\n      .margin({ top: CommonConstants.MARGIN_TOP_SORT, bottom: CommonConstants.MARGIN_BOTTOM_SORT })\n\n      Grid() {\n        ForEach(this.photos, (item: PictureItem) => {\n          GridItem() {\n            PictureView({ photos: item })\n          }\n        }, (item: PictureItem) => JSON.stringify(item))\n      }\n      .columnsTemplate(CommonConstants.TWO_COLUMNS)\n      .rowsTemplate(CommonConstants.TWO_ROWS)\n      .columnsGap(CommonConstants.GAP_COLUMNS)\n      .rowsGap(CommonConstants.GAP_COLUMNS)\n      .width(CommonConstants.PAGE_WIDTH)\n      .height(CommonConstants.HEIGHT_GRID)\n      .margin({ bottom: CommonConstants.MARGIN_BOTTOM_GRID })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\all\\PictureSort.ets", "project_name": "codelabs-master", "id": "a76063fe510d0e6ad03232a2e48d8ad37b5eb817f1dc2fbad642437155ef7a0f"}
{"text": "import router from '@ohos.router';\nimport { PictureItem } from '../../viewmodel/PictureItem';\nimport { PictureType } from '../../common/constants/PictureConstants';\nimport { initializePictures, startPlay, stopPlay } from '../../viewmodel/PictureViewModel';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Extend(Text)\nfunction textStyle(fontSize: number, fontWeight: number) {\n  .fontSize(fontSize)\n  .fontColor($r('app.color.start_window_background'))\n  .fontWeight(fontWeight)\n}\n\n\n@Component\nexport struct Banner {\n  \n  @State index: number = 0;\n  private imageArray: Array<PictureItem> = [];\n  private swiperController: SwiperController = new SwiperController();\n\n  aboutToAppear() {\n    \n    this.imageArray = initializePictures(PictureType.BANNER);\n    \n    startPlay(this.swiperController);\n  }\n\n  aboutToDisappear() {\n    stopPlay();\n  }\n\n  build() {\n    Swiper(this.swiperController) {\n      ForEach(this.imageArray, (item: PictureItem) => {\n        Stack({ alignContent: Alignment.TopStart }) {\n          Image(item.image)\n            .objectFit(ImageFit.Fill)\n            .height(CommonConstants.FULL_HEIGHT)\n            .width(CommonConstants.FULL_WIDTH)\n            .borderRadius(CommonConstants.BORDER_RADIUS)\n            .align(Alignment.Center)\n            .onClick(() => {\n              router.pushUrl({ url: CommonConstants.PLAY_PAGE });\n            })\n\n          Column() {\n            Text($r('app.string.movie_classic'))\n              .textStyle(CommonConstants.FONT_SIZE_DESCRIPTION, CommonConstants.FONT_WEIGHT_LIGHT)\n              .opacity($r('app.float.opacity_deep'))\n              .margin({ bottom: CommonConstants.BOTTOM_TEXT })\n            Text(item.name)\n              .textStyle(CommonConstants.FONT_SIZE_TITLE, CommonConstants.FONT_WEIGHT_BOLD)\n          }\n          .alignItems(HorizontalAlign.Start)\n          .height(CommonConstants.HEIGHT_CAROUSEL_TITLE)\n          .margin({ top: CommonConstants.TOP_ADS, left: CommonConstants.ADS_LEFT })\n        }\n        .height(CommonConstants.FULL_HEIGHT)\n        .width(CommonConstants.FULL_WIDTH)\n      }, (item: PictureItem) => JSON.stringify(item))\n    }\n    .width(CommonConstants.PAGE_WIDTH)\n    .height(CommonConstants.HEIGHT_BANNER)\n    .index(this.index)\n    .indicatorStyle({ selectedColor: $r('app.color.start_window_background') })\n    .indicator(true)\n    .duration(CommonConstants.DURATION_ADS)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\common\\Banner.ets", "project_name": "codelabs-master", "id": "cdc2a3321fb74bc7b9fa0f77dd5ad6f38e10077fa9813b675facf0d9328f3f87"}
{"text": "import router from '@ohos.router';\nimport { PictureItem } from '../../viewmodel/PictureItem';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Component\nexport struct PictureView {\n  private photos: PictureItem = new PictureItem();\n\n  build() {\n    Column() {\n      Image(this.photos.image).borderRadius(CommonConstants.BORDER_RADIUS)\n        .height(CommonConstants.WIDTH_PICTURE)\n        .onClick(() => {\n          router.pushUrl({ url: CommonConstants.PLAY_PAGE });\n        })\n\n      Text(this.photos.name).width(CommonConstants.PAGE_WIDTH)\n        .fontSize(CommonConstants.FONT_SIZE_PHOTO_NAME)\n        .fontWeight(CommonConstants.FONT_WEIGHT_NORMAL)\n        .margin({ top: CommonConstants.TOP_NAME })\n\n      Text(this.photos.description)\n        .width(CommonConstants.PAGE_WIDTH)\n        .fontSize(CommonConstants.FONT_SIZE_DESCRIPTION)\n        .fontWeight(CommonConstants.FONT_WEIGHT_LIGHT)\n        .opacity($r('app.float.opacity_light'))\n        .margin({ top: CommonConstants.TOP_DESCRIPTION, bottom: CommonConstants.BOTTOM_TEXT })\n    }\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\common\\PictureView.ets", "project_name": "codelabs-master", "id": "3ae6f6542d94a046df84e497d2173ede1d6bb89a6d7e9eab15942b4a41432acf"}
{"text": "import { TopBarItem } from '../../viewmodel/TopBarItem';\nimport { initializeOnStartup } from '../../viewmodel/TopBarViewModel';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Component\nexport struct TopBar {\n  \n  @Link index: number;\n  private tabArray: Array<TopBarItem> = initializeOnStartup();\n\n  build() {\n    Row({ space: CommonConstants.SPACE_TOP_BAR }) {\n      ForEach(this.tabArray,\n        (item: TopBarItem) => {\n          Text(item.name)\n            .fontSize(this.index === item.id ? CommonConstants.FONT_SIZE_CHECKED : CommonConstants.FONT_SIZE_UNCHECKED)\n            .fontColor(Color.Black)\n            .textAlign(TextAlign.Center)\n            .fontWeight(this.index === item.id ? FontWeight.Bold : FontWeight.Regular)\n            .onClick(() => {\n              this.index = item.id;\n            })\n        }, (item: TopBarItem) => JSON.stringify(item))\n    }\n    .margin({ left: CommonConstants.ADS_LEFT })\n    .width(CommonConstants.FULL_WIDTH)\n    .height(CommonConstants.TOP_BAR_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\common\\TopBar.ets", "project_name": "codelabs-master", "id": "772d6b9276e78c9f26556ce7fe1ce281176d08b3b188d087a148fb0b4c6b6fb1"}
{"text": "import { VideoItem } from '../../viewmodel/VideoItem';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Extend(Text) function textStyle(fontSize: number, fonWeight: number) {\n  .fontSize(fontSize)\n  .fontWeight(fonWeight)\n  .fontColor($r('app.color.start_window_background'))\n  .textAlign(TextAlign.Center)\n}\n\n\n@Component\nexport struct CommentView {\n  @ObjectLink private item: VideoItem;\n\n  build() {\n    Column() {\n      Image($r('app.media.head'))\n        .width(CommonConstants.WIDTH_HEAD)\n        .height(CommonConstants.HEIGHT_HEAD)\n        .margin({ top: CommonConstants.TOP_HEAD })\n        .objectFit(ImageFit.Contain)\n        .border({\n          width: CommonConstants.WIDTH_HEAD_BORDER,\n          color: Color.White,\n          radius: CommonConstants.RADIUS_HEAD\n        })\n\n      Image(this.item.isLikes ? $r('app.media.vote1') : $r('app.media.vote0'))\n        .width(CommonConstants.WIDTH_VOTE)\n        .height(CommonConstants.HEIGHT_COMMENT)\n        .onClick(() => {\n          if (this.item.isLikes) {\n            this.item.likesCount--;\n          } else {\n            this.item.likesCount++;\n          }\n          this.item.isLikes = !this.item.isLikes;\n        })\n        .margin({ top: CommonConstants.TOP_IMAGE_VOTE })\n\n      Text(this.item.likesCount === 0 ? $r('app.string.like') : (this.item.likesCount.toString()))\n        .textStyle(CommonConstants.FONT_SIZE_DESCRIPTION, CommonConstants.FONT_WEIGHT_LIGHT)\n\n      Image($r('app.media.comment'))\n        .width(CommonConstants.WIDTH_VOTE)\n        .height(CommonConstants.HEIGHT_COMMENT)\n        .margin({ top: CommonConstants.TOP_IMAGE_VOTE })\n      Text(this.item.commentCount === 0 ? $r('app.string.comment') : (this.item.commentCount.toString()))\n        .textStyle(CommonConstants.FONT_SIZE_DESCRIPTION, CommonConstants.FONT_WEIGHT_LIGHT)\n\n      Image($r('app.media.share'))\n        .width(CommonConstants.WIDTH_VOTE)\n        .height(CommonConstants.HEIGHT_COMMENT)\n        .margin({ top: CommonConstants.TOP_IMAGE_VOTE })\n      Text(this.item.shareTimes === 0 ? $r('app.string.share') : (this.item.shareTimes.toString()))\n        .textStyle(CommonConstants.FONT_SIZE_DESCRIPTION, CommonConstants.FONT_WEIGHT_LIGHT)\n    }\n    .offset({ x: CommonConstants.OFFSET_COMMENT_X, y: CommonConstants.OFFSET_COMMENT_Y })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\play\\CommentView.ets", "project_name": "codelabs-master", "id": "3691e160883fc06562f424b36a3b76b3684b4900ef25ca2f28050c147698b81c"}
{"text": "import { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Extend(Text) function textStyle(fontSize: number, fonWeight: number) {\n  .fontSize(fontSize)\n  .fontWeight(fonWeight)\n  .fontColor($r('app.color.start_window_background'))\n  .textAlign(TextAlign.Center)\n  .margin(CommonConstants.MARGIN_PLAY_PAGE)\n}\n\n\n@Component\nexport struct DescriptionView {\n  build() {\n    Column() {\n      Text($r('app.string.movie_description_1'))\n        .textStyle(CommonConstants.FONT_SIZE_SORT_TITLE, CommonConstants.FONT_WEIGHT_NORMAL)\n      Text($r('app.string.movie_description_2'))\n        .textStyle(CommonConstants.FONT_SIZE_PHOTO_NAME, CommonConstants.FONT_WEIGHT_LIGHT)\n        .opacity($r('app.float.opacity_deep'))\n    }\n    .height(CommonConstants.HEIGHT_DESCRIPTION)\n    .width(CommonConstants.WIDTH_PLAY)\n    .alignItems(HorizontalAlign.Start)\n    .offset({ y: CommonConstants.OFFSET_DESCRIPTION_Y })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\play\\DescriptionView.ets", "project_name": "codelabs-master", "id": "74b0012d791093ece4c7f0d2ac4e89403e157200139a3b7d0218c02a204228d9"}
{"text": "import { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Component\nexport struct NavigationView {\n  build() {\n    Navigator({ target: CommonConstants.HOME_PAGE, type: NavigationType.Back }) {\n      Row({ space: CommonConstants.SPACE_NAVIGATION }) {\n        Image($r('app.media.ic_back'))\n          .width(CommonConstants.WIDTH_BACK_ICON)\n          .height(CommonConstants.HEIGHT_BACK_ICON)\n          .objectFit(ImageFit.Contain)\n\n        Text($r('app.string.movie'))\n          .fontSize(CommonConstants.FONT_SIZE_TITLE)\n          .fontWeight(CommonConstants.FONT_WEIGHT_BOLD)\n          .fontColor($r('app.color.start_window_background'))\n          .textAlign(TextAlign.Center)\n          .margin(CommonConstants.MARGIN_PLAY_PAGE)\n          .lineHeight(CommonConstants.LINE_HEIGHT_NAVIGATION)\n      }\n    }\n    .position({ x: CommonConstants.LEFT_POSITION, y: CommonConstants.START_POSITION })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\play\\NavigationView.ets", "project_name": "codelabs-master", "id": "f9591fdaa9125e1af7ba360625af7472588a783ad54959eed4685280fd223733"}
{"text": "import { VideoItem } from '../../viewmodel/VideoItem';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\nimport { PlayState } from '../../common/constants/VideoConstants';\nimport { NavigationView } from './NavigationView';\nimport { CommentView } from './CommentView';\nimport { DescriptionView } from './DescriptionView';\n\n\n@Component\nexport struct PlayView {\n  private isShow: boolean = false;\n  \n  @Link @Watch('needPageShow') index: number;\n  @Link @Watch('needPageShow') pageShow: boolean;\n  @State item: VideoItem = new VideoItem();\n  private barPosition: number = 0;\n  @State private playState: number = PlayState.STOP;\n  private videoController: VideoController = new VideoController();\n\n  build() {\n    Stack({ alignContent: Alignment.End }) {\n      Video({\n        src: this.item.src,\n        controller: this.videoController\n      })\n        .controls(false)\n        .autoPlay(this.playState === PlayState.START ? true : false)\n        .objectFit(ImageFit.Fill)\n        .loop(true)\n        .height(CommonConstants.WIDTH_VIDEO)\n        .width(CommonConstants.FULL_WIDTH)\n        .onClick(() => {\n          if (this.playState === PlayState.START) {\n            this.playState = PlayState.PAUSE;\n            this.videoController.pause();\n          } else if (this.playState === PlayState.PAUSE) {\n            this.playState = PlayState.START;\n            this.videoController.start();\n          }\n        })\n\n      NavigationView()\n      CommentView({ item: this.item })\n      DescriptionView()\n    }\n    .backgroundColor(Color.Black)\n    .width(CommonConstants.FULL_WIDTH)\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n\n  onPageSwiperShow(): void {\n    if (this.playState != PlayState.START) {\n      this.playState = PlayState.START;\n      this.videoController.start();\n    }\n  }\n\n  onPageSwiperHide(): void {\n    if (this.playState != PlayState.STOP) {\n      this.playState = PlayState.STOP;\n      this.videoController.stop();\n    }\n  }\n\n  needPageShow(): void {\n    if (this.pageShow === true) {\n      if (this.barPosition === this.index) { \n        this.isShow = true;\n        this.onPageSwiperShow();\n      } else {\n        if (this.isShow === true) { \n          this.isShow = false;\n          this.onPageSwiperHide();\n        }\n      }\n    } else { \n      this.isShow = false;\n      this.onPageSwiperHide();\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\play\\PlayView.ets", "project_name": "codelabs-master", "id": "73de2015622e0da3dca678ded4e60e642a4f220d0e0801289614cdce730b3ce4"}
{"text": "import { Banner } from '../common/Banner';\nimport { PictureSort } from '../all/PictureSort';\nimport { CommonConstants } from '../../common/constants/CommonConstant';\nimport { PictureType } from '../../common/constants/PictureConstants';\n\n\n@Component\nexport struct PageAll {\n  build() {\n    Scroll() {\n      Column() {\n        Banner()\n        PictureSort({ initType: PictureType.RECENTLY })\n        PictureSort({ initType: PictureType.PHOTO })\n      }\n      .width(CommonConstants.FULL_WIDTH)\n    }\n    .scrollable(ScrollDirection.Vertical).scrollBar(BarState.Off)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\tabcontent\\PageAll.ets", "project_name": "codelabs-master", "id": "649231f80029108e6fb1f56662faad750c2b880bb70652ecfaee109e11d71be4"}
{"text": "import { CommonConstants } from '../../common/constants/CommonConstant';\n\n\n@Component\nexport struct PageEntertainment {\n  build() {\n    Column() {\n      Text($r('app.string.entertainment'))\n        .height(CommonConstants.FULL_HEIGHT)\n        .fontSize(CommonConstants.FONT_SIZE_PAGE_CONTENT)\n        .fontWeight(CommonConstants.FONT_WEIGHT_LIGHT)\n    }\n    .width(CommonConstants.FULL_WIDTH)\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\tabcontent\\PageEntertainment.ets", "project_name": "codelabs-master", "id": "20886aa923666ba4900e078f081f65484720bbb411398ecaa4727911be1cd5fe"}
{"text": "import { Banner } from '../common/Banner';\nimport { MovieSort } from '../movie/MovieSort';\nimport { CommonConstants } from '../../common/constants/CommonConstant'\n\n\n@Component\nexport struct PageMovie {\n  build() {\n    Scroll() {\n      Column() {\n        Banner()\n        MovieSort()\n      }\n      .width(CommonConstants.FULL_WIDTH)\n    }\n    .scrollable(ScrollDirection.Vertical).scrollBar(BarState.Off)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\view\\tabcontent\\PageMovie.ets", "project_name": "codelabs-master", "id": "3f215d04c962098357dabdbde1915e53ec6ecde61ddb7694c3246c5c92b27f6e"}
{"text": "export class PictureItem {\n  id: string = '';\n  name: string = '';\n  description: string = '';\n  image: Resource = $r('app.media.image1');\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\viewmodel\\PictureItem.ets", "project_name": "codelabs-master", "id": "93646c50bb452f2ddc28ddd026c9e7bbc2590c7b6791a4cdcc146f8b3b9c0d5d"}
{"text": "import { PictureItem } from './PictureItem';\nimport { PICTURE_RECENTLY, PICTURE_PHOTO, PICTURE_LATEST, PICTURE_BANNER } from '../common/constants/PictureConstants';\nimport { PictureType } from '../common/constants/PictureConstants';\nimport { CommonConstants } from '../common/constants/CommonConstant';\n\n\nexport function initializePictures(initType: string): Array<PictureItem> {\n  let imageDataArray: Array<PictureItem> = [];\n  switch (initType) {\n    case PictureType.BANNER:\n      PICTURE_BANNER.forEach((item: PictureItem) => {\n        imageDataArray.push(item);\n      })\n      break;\n    case PictureType.RECENTLY:\n      PICTURE_RECENTLY.forEach((item: PictureItem) => {\n        imageDataArray.push(item);\n      })\n      break;\n    case PictureType.PHOTO:\n      PICTURE_PHOTO.forEach((item: PictureItem) => {\n        imageDataArray.push(item);\n      })\n      break;\n    case PictureType.LATEST:\n      PICTURE_LATEST.forEach((item: PictureItem) => {\n        imageDataArray.push(item);\n      })\n      break;\n    default:\n      break;\n  }\n  return imageDataArray;\n}\n\nlet timerIds: number[] = [];\n\n\nexport function startPlay(swiperController: SwiperController): void {\n  let timerId = setInterval(() => {\n    swiperController.showNext();\n  }, CommonConstants.SWIPER_TIME);\n  timerIds.push(timerId);\n}\n\n\nexport function stopPlay(): void {\n  timerIds.forEach((item: number) => {\n    clearTimeout(item);\n  })\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\viewmodel\\PictureViewModel.ets", "project_name": "codelabs-master", "id": "0a2c73c64f4c002f3ccde9ba9aba611908e6272ec347a95f9d65bb6aa4687316"}
{"text": "export class TopBarItem {\n  id: number;\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\viewmodel\\TopBarItem.ets", "project_name": "codelabs-master", "id": "2ecf8fff0637a72ac67e269c7f9e44a495f072fd174f17103ac23132558e160a"}
{"text": "import { TopBarItem } from './TopBarItem';\nimport { TOP_BAR_DATA } from '../common/constants/TopBarConstants';\n\n\nexport function initializeOnStartup(): Array<TopBarItem> {\n  let tabDataArray: Array<TopBarItem> = []\n  TOP_BAR_DATA.forEach((item: TopBarItem) => {\n    tabDataArray.push(new TopBarItem(item.id, item.name));\n  })\n  return tabDataArray;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\viewmodel\\TopBarViewModel.ets", "project_name": "codelabs-master", "id": "9616be8a644d39f9a74067adda36b28ec4d46255f8e8899c01d2d9d78c22ea69"}
{"text": "@Observed\nexport class VideoItem {\n  id: string = '';\n  src: Resource = $rawfile('video1.mp4');\n  likesCount: number = 0;\n  isLikes: boolean = false;\n  commentCount: number = 102;\n  shareTimes: number = 666;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\viewmodel\\VideoItem.ets", "project_name": "codelabs-master", "id": "a5c723ebb97bd69ce44017dc5d42c8c36ecb7a54017aec47c4f321bc790efbb8"}
{"text": "import { VideoItem } from './VideoItem';\nimport { VIDEO_DATA } from '../common/constants/VideoConstants';\n\n\nexport function initializeOnStartup(): Array<VideoItem> {\n  let videoDataArray: Array<VideoItem> = [];\n  VIDEO_DATA.forEach((item: VideoItem) => {\n    videoDataArray.push(item);\n  })\n  return videoDataArray;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\SwiperArkTS\\entry\\src\\main\\ets\\viewmodel\\VideoViewModel.ets", "project_name": "codelabs-master", "id": "e536a49915cb511e6c086c5ad91d8618dc92040c2734f0dc0d44b58504a30dd2"}
{"text": "import { CommonConstants } from '../common/constants/CommonConst';\nimport CommonEventListComponent from '../view/CommonEventListComponent';\n\n@Entry\n@Component\nstruct MainPage {\n  build() {\n    Row() {\n      CommonEventListComponent()\n    }\n    .height(CommonConstants.FULL_SCREEN_HEIGHT)\n    .backgroundColor($r('app.color.global_bg_color'))\n  }\n}\n\n", "path": "codelabs-master\\HarmonyOS_NEXT\\SystemCommonEvent\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "c33dbc4dd30307e24d8166a7ec8da786cb819884270f39a03cb6fe71c312718a"}
{"text": "import { CommonEventBean } from './CommonEventBean';\nimport { CommonConstants } from '../common/constants/CommonConst';\n\nclass MainPageViewModel {\n  getCommonEventData(): Array<CommonEventBean> {\n    let CommonEventData: Array<CommonEventBean> = [];\n    for (let i = 0; i < COMMON_EVENT.length; i++) {\n      CommonEventData.push(COMMON_EVENT[i]);\n    }\n    return CommonEventData;\n  }\n}\n\nconst COMMON_EVENT: CommonEventBean[] = [\n  {\n    title: $r('app.string.wifi_event_title'),\n    state: $r('app.string.event_init_state'),\n    changeState: false,\n    name: $r('app.string.wifi_connection_state'),\n    buttonTitle: $r('app.string.btn_title_subscribe'),\n    isSubscribe: false,\n    subscriber: null,\n    subEvents: CommonConstants.CONN_STATE,\n    onIcon: $r('app.media.ic_wifi_on'),\n    offIcon: $r('app.media.ic_wifi_off')\n  } as CommonEventBean,\n  {\n    title: $r('app.string.charge_event_title'),\n    state: $r('app.string.event_init_state'),\n    changeState: false,\n    name: $r('app.string.battery_charge_state'),\n    buttonTitle: $r('app.string.btn_title_subscribe'),\n    isSubscribe: false,\n    subscriber: null,\n    subEvents: CommonConstants.BATTERY_CHANGED,\n    onIcon: $r('app.media.ic_batteries_on'),\n    offIcon: $r('app.media.ic_batteries_off')\n  } as CommonEventBean\n];\n\nlet mainPageViewModel = new MainPageViewModel();\n\nexport default mainPageViewModel as MainPageViewModel;", "path": "codelabs-master\\HarmonyOS_NEXT\\SystemCommonEvent\\entry\\src\\main\\ets\\viewmodel\\MainPageViewModel.ets", "project_name": "codelabs-master", "id": "b379e71b7b20e414cac42058df28bf2e39fa7d95da09c3afe457a93d7bf14dbb"}
{"text": "import { CommonConstants } from '../constant/CommonConstant';\n\n\nexport default function getCurrentTime(): string {\n  let date = new Date();\n  let year = date.getFullYear();\n  let month = date.getMonth() + CommonConstants.PLUS_ONE;\n  let day = date.getDate();\n  let hours = date.getHours();\n  let minutes = date.getMinutes().toString();\n  if (Number.parseInt(minutes) < CommonConstants.TEN) {\n    minutes = `0${minutes}`;\n  }\n  let second = date.getSeconds().toString();\n  if (Number.parseInt(second) < CommonConstants.TEN) {\n    second = `0${second}`;\n  }\n  return `${year}/${month}/${day} ${hours}:${minutes}:${second}`;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TargetManagement\\entry\\src\\main\\ets\\common\\utils\\DateUtil.ets", "project_name": "codelabs-master", "id": "00b8ec3f9b72b9b1937f140718b73295b7fa14f755407c68d5377f2d1ca722d1"}
{"text": "import { CommonConstants } from '../common/constant/CommonConstant';\n\n@Component\nexport default struct ProgressEditPanel {\n  @Link sliderMode: number;\n  @Prop slidingProgress: number = 0;\n  onCancel?: () => void;\n  onClickOK?: (progress: number) => void;\n\n  build() {\n    Column() {\n      Row() {\n        Slider({\n          value: this.slidingProgress,\n          min: CommonConstants.SLIDER_MIN_VALUE,\n          max: CommonConstants.SLIDER_MAX_VALUE,\n          style: SliderStyle.InSet,\n          step: CommonConstants.SLIDER_STEP\n        })\n          .width(CommonConstants.SLIDER_INNER_WIDTH)\n          .onChange((value: number, mode: SliderChangeMode) => {\n            this.slidingProgress = Math.floor(value);\n            this.sliderMode = mode;\n          })\n        Text(`${this.slidingProgress}%`)\n          .fontSize($r('app.float.progress_font'))\n          .fontWeight(CommonConstants.FONT_WEIGHT)\n          .fontColor($r('app.color.dialog_progress'))\n          .textAlign(TextAlign.Center)\n          .margin({ left: $r('app.float.slider_margin_left') })\n      }\n      .width(CommonConstants.SLIDER_WIDTH)\n      .height(CommonConstants.SLIDER_HEIGHT)\n\n      Row() {\n        CustomButton({\n          buttonText: $r('app.string.cancel_button')\n        })\n          .onClick(() => {\n            if (this.onCancel !== undefined) {\n              this.onCancel();\n            }\n          })\n        CustomButton({\n          buttonText: $r('app.string.confirm_button')\n        })\n          .onClick(() => {\n            if (this.onClickOK !== undefined) {\n              this.onClickOK(this.slidingProgress);\n            }\n          })\n      }\n      .margin({ top: CommonConstants.SLIDER_BUTTON_MARGIN })\n      .width(CommonConstants.DIALOG_OPERATION_WIDTH)\n      .justifyContent(FlexAlign.SpaceBetween)\n    }\n    .height($r('app.float.edit_panel_height'))\n    .width(CommonConstants.FULL_WIDTH)\n    .justifyContent(FlexAlign.End)\n  }\n}\n\n@Component\nstruct CustomButton {\n  @State buttonColor: Resource = $r('app.color.start_window_background');\n  buttonText?: Resource;\n\n  build() {\n    Text(this.buttonText)\n      .dialogButtonStyle()\n      .backgroundColor(this.buttonColor)\n      .borderRadius(CommonConstants.LIST_RADIUS)\n      .textAlign(TextAlign.Center)\n      .onTouch((event?: TouchEvent) => {\n        if (event !== undefined && event.type === TouchType.Down) {\n          this.buttonColor = $r('app.color.custom_button_color');\n        }\n        if (event !== undefined && event.type === TouchType.Up) {\n          this.buttonColor = $r('app.color.start_window_background');\n        }\n      })\n  }\n}\n\n\n@Extend(Text) function dialogButtonStyle() {\n  .fontSize($r('app.float.button_font'))\n  .height($r('app.float.dialog_btn_height'))\n  .width($r('app.float.dialog_btn_width'))\n  .fontColor($r('app.color.main_blue'))\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TargetManagement\\entry\\src\\main\\ets\\view\\ProgressEditPanel.ets", "project_name": "codelabs-master", "id": "257582e358d8a7d07130804ccc495d5065c866a5f07353e2dd3fc04f65663df6"}
{"text": "import TaskItemModel from '../viewmodel/TaskItemModel';\nimport { CommonConstants } from '../common/constant/CommonConstant';\nimport getCurrentTime from '../common/utils/DateUtil';\nimport DataModel from '../viewmodel/DataModel';\nimport ProgressEditPanel from './ProgressEditPanel';\n\n@Component\nexport default struct TargetListItem {\n  private taskItem?: TaskItemModel;\n  @State latestProgress?: number = 0;\n  @State updateDate?: string = '';\n  @Link selectArr: Array<boolean>;\n  @Prop isEditMode: boolean = false;\n  @Link @Watch('onClickIndexChanged') clickIndex: number;\n  @State isExpanded: boolean = false;\n  @Consume overAllProgressChanged: boolean;\n  @State sliderMode: number = CommonConstants.DEFAULT_SLIDER_MODE;\n  public index: number = 0;\n\n  aboutToAppear() {\n    this.latestProgress = this.taskItem?.progressValue;\n    this.updateDate = this.taskItem?.updateDate;\n  }\n\n  \n  onClickIndexChanged() {\n    if (this.clickIndex !== this.index) {\n      this.isExpanded = false;\n    }\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Start }) {\n      Column() {\n        this.TargetItem()\n        if (this.isExpanded) {\n          Blank()\n          ProgressEditPanel({\n            slidingProgress: this.latestProgress,\n            onCancel: () => this.isExpanded = false,\n            onClickOK: (progress: number): void => {\n              this.latestProgress = progress;\n              this.updateDate = getCurrentTime();\n              let result = DataModel.updateProgress(this.index, this.latestProgress, this.updateDate);\n              if (result) {\n                this.overAllProgressChanged = !this.overAllProgressChanged;\n              }\n              this.isExpanded = false;\n            },\n            sliderMode: $sliderMode\n          })\n            .transition({\n              scale: {\n                x: CommonConstants.TRANSITION_ANIMATION_X,\n                y: CommonConstants.TRANSITION_ANIMATION_Y\n              }\n            })\n        }\n      }\n      .padding({\n        left: $r('app.float.list_padding'),\n        top: $r('app.float.list_padding_top'),\n        bottom: $r('app.float.list_padding_bottom'),\n        right: this.isEditMode ? $r('app.float.list_edit_padding') : $r('app.float.list_padding')\n      })\n      .height(this.isExpanded ? $r('app.float.expanded_item_height') : $r('app.float.list_item_height'))\n      .width(CommonConstants.FULL_WIDTH)\n      .opacity(\n        this.latestProgress === CommonConstants.SLIDER_MAX_VALUE ?\n        CommonConstants.OPACITY : CommonConstants.NO_OPACITY\n      )\n      .borderRadius(CommonConstants.LIST_RADIUS)\n      .animation({ duration: CommonConstants.DURATION })\n      .backgroundColor(this.selectArr[this.index] ? $r('app.color.edit_blue') : Color.White)\n      .onClick(() => {\n        if (this.sliderMode === CommonConstants.CLICK_SLIDER_MODE) {\n          this.sliderMode = CommonConstants.DEFAULT_SLIDER_MODE;\n          return;\n        }\n        if (!this.isEditMode) {\n          animateTo({ duration: CommonConstants.DURATION }, () => {\n            this.isExpanded = !this.isExpanded;\n          })\n          this.clickIndex = this.index;\n        }\n      })\n\n      if (this.isEditMode) {\n        Row() {\n          Checkbox()\n            .select(this.selectArr[this.index])\n            .selectedColor($r('app.color.main_blue'))\n            .width(CommonConstants.CHECKBOX_WIDTH)\n            .margin({ right: $r('app.float.list_padding') })\n            .onChange((isCheck: boolean) => {\n              this.selectArr[this.index] = isCheck;\n            })\n        }\n        .width(CommonConstants.FULL_WIDTH)\n        .justifyContent(FlexAlign.End)\n      }\n    }\n    .width(CommonConstants.FULL_WIDTH)\n  }\n\n  @Builder TargetItem() {\n    Row() {\n      Text(this.taskItem?.taskName)\n        .fontSize($r('app.float.list_font'))\n        .fontWeight(CommonConstants.FONT_WEIGHT)\n        .fontColor($r('app.color.title_black_color'))\n        .width(CommonConstants.TASK_NAME_WIDTH)\n        .textAlign(TextAlign.Start)\n        .maxLines(CommonConstants.MAX_LINES)\n      Blank()\n      Column() {\n        Text(`${this.latestProgress}%`)\n          .fontSize($r('app.float.list_font'))\n          .fontWeight(CommonConstants.FONT_WEIGHT)\n          .fontColor($r('app.color.title_black_color'))\n        Row() {\n          Text($r('app.string.latest_updateTime'))\n            .opacityTextStyle()\n          Text(this.updateDate)\n            .opacityTextStyle()\n        }\n        .margin({ top: $r('app.float.text_margin') })\n      }\n      .alignItems(HorizontalAlign.End)\n    }\n    .width(CommonConstants.FULL_WIDTH)\n  }\n}\n\n\n@Extend(Text) function opacityTextStyle() {\n  .fontSize($r('app.float.text_font'))\n  .fontColor($r('app.color.title_black_color'))\n  .opacity(CommonConstants.OPACITY)\n  .fontWeight(CommonConstants.FONT_WEIGHT)\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TargetManagement\\entry\\src\\main\\ets\\view\\TargetListItem.ets", "project_name": "codelabs-master", "id": "0a06409ec37ca9dbbda46470e39dd2b92f476db888d04c93b539d60154ccee52"}
{"text": "import { CommonConstants } from '../common/constant/CommonConstant';\nimport Logger from '../common/utils/Logger';\nimport TaskItemModel from './TaskItemModel';\n\nconst TAG = '[DataModel]';\n\n\nexport class DataModel {\n\n  \n  private targetData: Array<TaskItemModel> = [];\n\n  \n  getData(): Array<TaskItemModel> {\n    return this.targetData;\n  }\n\n  \n  deleteData(selectArr: Array<boolean>) {\n    if (!selectArr) {\n      Logger.error(TAG, 'Failed to delete data because selectArr is ' + selectArr);\n    }\n    let dataLen = this.targetData.length - CommonConstants.ONE_TASK;\n    for (let i = dataLen; i >= 0; i--) {\n      if (selectArr[i]) {\n        this.targetData.splice(i, CommonConstants.ONE_TASK);\n      }\n    }\n  }\n\n  \n  addData(data: TaskItemModel) {\n    if (!data) {\n      Logger.error(TAG, 'addData error because data is: ' + data);\n      return;\n    }\n    this.targetData.push(data);\n  }\n\n  \n  getLatestProgressValue(): number {\n    if (this.targetData.length === 0) {\n      return 0;\n    }\n    return this.targetData[this.targetData.length - CommonConstants.ONE_TASK].progressValue;\n  }\n\n  \n  updateProgress(index: number, updateValue: number, updateDate: string): boolean {\n    if (!this.targetData[index]) {\n      return false;\n    }\n    this.targetData[index].progressValue = updateValue;\n    this.targetData[index].updateDate = updateDate;\n    return true;\n  }\n}\n\nexport default new DataModel();", "path": "codelabs-master\\HarmonyOS_NEXT\\TargetManagement\\entry\\src\\main\\ets\\viewmodel\\DataModel.ets", "project_name": "codelabs-master", "id": "92f0e89510835105c892120695befdd5acbf87966c8eaceeb5ab20c3765daa9b"}
{"text": "export default class TaskItemBean {\n  \n  taskName: string;\n\n  \n  updateDate: string;\n\n  \n  progressValue: number;\n\n\n  \n  constructor(taskName: string, progressValue: number, updateDate: string) {\n    this.taskName = taskName;\n    this.progressValue = progressValue;\n    this.updateDate = updateDate;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TargetManagement\\entry\\src\\main\\ets\\viewmodel\\TaskItemBean.ets", "project_name": "codelabs-master", "id": "306617f22efb9f6c06cad4ff70fe2fede62adb9f1e4815def01ae2bb6d4aee7c"}
{"text": "import { Outer } from '../view/OuterComponent';\nimport { Inner } from '../view/InnerComponent';\nimport { CommonConstants } from '../common/constants/CommonConst';\n\n@Entry\n@Component\nstruct Index {\n  private controller: TabsController = new TabsController();\n  @State currentIndex: number = 0;\n\n  @Builder NavigationTitle() {\n    Column() {\n      Text($r('app.string.main_title'))\n        .fontColor(Color.Black)\n        .lineHeight($r('app.float.default_33'))\n        .fontSize($r('app.float.fontSize_24'))\n        .fontWeight(FontWeight.Bold)\n    }\n    .height($r('app.float.default_56'))\n    .justifyContent(FlexAlign.Center)\n  }\n\n  @Builder TabBuilder(index: number) {\n    Column() {\n      Column() {\n        Text(index === CommonConstants.FIRST_TAB ? $r('app.string.tab_title_inner') : $r('app.string.tab_title_outer'))\n          .fontColor(this.currentIndex === index ? $r('app.color.tab_selectedColor') : $r('app.color.tab_fontColor'))\n          .fontSize($r('app.float.fontSize_16'))\n      }\n      .height(CommonConstants.CONTAINER_HEIGHT)\n      .justifyContent(FlexAlign.Center)\n      .border(this.currentIndex === index\n        ? {width: { bottom: $r('app.float.default_1') }, color: $r('app.color.tab_selectedColor') }\n        : {}\n      )\n    }\n    .height($r('app.float.default_56'))\n    .padding({ top: $r('app.float.default_10'), bottom: $r('app.float.default_10') })\n    .justifyContent(FlexAlign.Center)\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n        Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n          TabContent() {\n            Inner()\n          }.tabBar(this.TabBuilder(CommonConstants.FIRST_TAB))\n\n          TabContent() {\n            Outer()\n          }.tabBar(this.TabBuilder(CommonConstants.SECOND_TAB))\n        }\n        .barWidth(CommonConstants.BAR_WIDTH)\n        .barHeight($r('app.float.default_56'))\n        .onChange((index: number) => {\n          this.currentIndex = index;\n        })\n      }\n      .titleMode(NavigationTitleMode.Mini)\n      .title(this.NavigationTitle)\n      .hideBackButton(true)\n    }\n    .backgroundColor($r('app.color.app_bg'))\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\ThirdPartyLibrary\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "e0a372351a55b452828086f828a06001e7efb419cb634b507862d98115b6f774"}
{"text": "import lottie, { AnimationItem } from '@ohos/lottie';\nimport Logger from '../common/utils/log/logger';\nimport { CommonConstants } from '../common/constants/CommonConst';\n\n@Component\nexport struct Outer {\n  private renderingSettings: RenderingContextSettings = new RenderingContextSettings(true);\n  private renderingContext: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.renderingSettings);\n  private animateName: string = CommonConstants.ANIMATE_NAME;\n  private animateItem: AnimationItem | null = null;\n  @State canvasTitle: Resource | undefined = undefined;\n\n  aboutToDisappear(): void {\n    Logger.info(CommonConstants.OUTER_TAG, `aboutToDisappear`);\n    lottie.destroy();\n  }\n\n  onPageShow(): void {\n    Logger.info(CommonConstants.OUTER_TAG, `onPageShow`);\n    lottie.play();\n  }\n\n  onPageHide(): void {\n    Logger.info(CommonConstants.OUTER_TAG, `onPageShow`);\n    lottie.pause();\n  }\n\n  build() {\n    Flex({\n      direction: FlexDirection.Column,\n      justifyContent: FlexAlign.SpaceBetween\n    }) {\n      \n      Column() {\n        Canvas(this.renderingContext)\n          .width(CommonConstants.CONTAINER_WIDTH)\n          .aspectRatio(CommonConstants.ASPECT_RATIO_176)\n          .backgroundImage($r('app.media.canvasBg'))\n          .backgroundImageSize(ImageSize.Cover)\n          .onDisAppear(() => {\n            lottie.destroy(this.animateName);\n          })\n        Text(this.canvasTitle)\n          .width(CommonConstants.CONTAINER_WIDTH)\n          .fontSize($r('app.float.fontSize_14'))\n          .textAlign(TextAlign.Center)\n          .fontWeight(FontWeight.Bold)\n          .fontColor($r('app.color.outer_canvas_title'))\n          .margin({ top: $r('app.float.default_12') })\n          .opacity(CommonConstants.OPACITY_4)\n      }\n      .margin({\n        top: $r('app.float.default_10'),\n        left: $r('app.float.default_10'),\n        right: $r('app.float.default_10')\n      })\n\n      \n      Column({ space: CommonConstants.SPACE_12 }) {\n        Button() {\n          Text($r('app.string.outer_button_load'))\n            .fontSize($r('app.float.fontSize_16'))\n            .fontColor($r('app.color.outer_button_font'))\n            .fontWeight(FontWeight.Bold)\n        }\n        .width(CommonConstants.CONTAINER_WIDTH)\n        .height($r('app.float.default_40'))\n        .backgroundColor($r('app.color.outer_button_bg'))\n        .onClick(() => {\n          if (this.animateItem !== null) {\n            this.animateItem.destroy();\n            this.animateItem = null;\n          }\n          this.canvasTitle = $r('app.string.outer_button_load');\n          this.animateItem = lottie.loadAnimation({\n            container: this.renderingContext,\n            renderer: 'canvas',\n            loop: 10,\n            autoplay: true,\n            name: this.animateName,\n            path: 'common/lottie/data.json'\n          });\n        })\n\n        Button() {\n          Text($r('app.string.outer_button_end'))\n            .fontSize($r('app.float.fontSize_16'))\n            .fontColor($r('app.color.outer_button_font'))\n            .fontWeight(FontWeight.Bold)\n        }\n        .width(CommonConstants.CONTAINER_WIDTH)\n        .height($r('app.float.default_40'))\n        .backgroundColor($r('app.color.outer_button_bg'))\n        .onClick(() => {\n          if (this.animateItem === null) return;\n          this.canvasTitle = $r('app.string.outer_button_end');\n          this.animateItem.goToAndPlay(CommonConstants.ZERO_FRAME, true);\n        })\n\n        Flex({ justifyContent: FlexAlign.SpaceBetween }) {\n          Button() {\n            Text($r('app.string.outer_button_start'))\n              .fontSize($r('app.float.fontSize_16'))\n              .fontColor($r('app.color.outer_button_font'))\n              .fontWeight(FontWeight.Bold)\n          }\n          .width(CommonConstants.CONTAINER_HALF_WIDTH)\n          .height($r('app.float.default_40'))\n          .backgroundColor($r('app.color.outer_button_bg'))\n          .onClick(() => {\n            if (this.animateItem === null) return;\n            this.canvasTitle = $r('app.string.outer_button_start');\n            lottie.play();\n          })\n\n          Button() {\n            Text($r('app.string.outer_button_pause'))\n              .fontSize($r('app.float.fontSize_16'))\n              .fontColor($r('app.color.outer_button_font'))\n              .fontWeight(FontWeight.Bold)\n          }\n          .width(CommonConstants.CONTAINER_HALF_WIDTH)\n          .height($r('app.float.default_40'))\n          .backgroundColor($r('app.color.outer_button_bg'))\n          .onClick(() => {\n            if (this.animateItem === null) return;\n            this.canvasTitle = $r('app.string.outer_button_pause');\n            lottie.pause();\n          })\n        }\n      }\n      .padding({\n        left: $r('app.float.default_23'),\n        right: $r('app.float.default_23'),\n        bottom: $r('app.float.default_41')\n      })\n    }\n    .height(CommonConstants.CONTAINER_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ThirdPartyLibrary\\entry\\src\\main\\ets\\view\\OuterComponent.ets", "project_name": "codelabs-master", "id": "cb337d87ee8a76f561fb413fb25dcc7102dee21ea87ab537510feaca33e77d06"}
{"text": "export class ButtonList {\n  title: string = '';\n  subtitle: string = '';\n  backgroundImage: string = '';\n  buttonText: string = '';\n  buttonShape: string = '';\n  buttonType: string = '';\n  stateEffect: boolean = false;\n  fontColor: string = '';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ThirdPartyLibrary\\entry\\src\\main\\ets\\viewmodel\\ButtonList.ets", "project_name": "codelabs-master", "id": "826c75431e53017d0f793c4d7a97563c410045bbade5ad7276fcab646e409c83"}
{"text": "import ButtonViewModel from '../../viewmodel/ButtonsViewModel';\n\n@Component\nexport struct Buttons {\n  @Prop buttonText: string = '';\n  @Prop stateEffect: boolean = false;\n  @Prop buttonShape: string = '';\n  @Prop buttonType: string = '';\n  @Prop fontColor: string = '';\n\n  build() {\n    Row() {\n      Column() {\n        Button({\n          type: ButtonViewModel.fetchType(this.buttonShape),\n          stateEffect: this.stateEffect\n        }) {\n          Text(this.buttonText)\n            .fontSize($r('app.float.default_16'))\n            .fontColor(this.fontColor || $r('app.color.white'))\n        }\n        .width($r('app.float.default_90'))\n        .height($r('app.float.default_35'))\n        .backgroundColor(ButtonViewModel.fetchBackgroundColor(this.buttonType))\n      }\n    }\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\ThirdPartyLibrary\\library\\src\\main\\ets\\components\\MainPage\\Buttons.ets", "project_name": "codelabs-master", "id": "0916b8d5c54c5625ca71d9a682e4982839d57985b192da45fc6b4237b50e14d9"}
{"text": "class ButtonViewModel {\n  fetchType(shape: string) {\n    let ret: ButtonType;\n    switch (shape) {\n      case 'capsule':\n        ret = ButtonType.Capsule;\n        break\n      case 'circle':\n        ret = ButtonType.Circle;\n        break\n      case 'normal':\n        ret = ButtonType.Normal;\n        break\n      default:\n        ret = ButtonType.Capsule;\n        break\n    }\n    return ret\n  }\n\n  fetchBackgroundColor(type: string) {\n    let ret: Resource;\n    switch (type) {\n      case 'success':\n        ret = $r('app.color.success');\n        break\n      case 'info':\n        ret = $r('app.color.info');\n        break\n      case 'warning':\n        ret = $r('app.color.warning');\n        break\n      case 'danger':\n        ret = $r('app.color.danger');\n        break\n      case 'none':\n        ret = $r('app.color.none');\n        break\n      default:\n        ret = $r('app.color.normal');\n        break\n    }\n    return ret\n  }\n}\n\nlet buttonViewModel = new ButtonViewModel();\n\nexport default buttonViewModel as ButtonViewModel", "path": "codelabs-master\\HarmonyOS_NEXT\\ThirdPartyLibrary\\library\\src\\main\\ets\\viewmodel\\ButtonsViewModel.ets", "project_name": "codelabs-master", "id": "0d3504fa9d6e45e7869c02a3c21a58dcf31da1e9d917c5ecf0728fefef0483b9"}
{"text": "import DataModel from '../viewmodel/DataModel';\nimport CommonConstants from '../common/constant/CommonConstant';\nimport ToDoItem from '../view/ToDoItem';\n\n@Entry\n@Component\nstruct ToDoListPage {\n  private totalTasks: Array<string> = [];\n\n  aboutToAppear() {\n    this.totalTasks = DataModel.getData();\n  }\n\n  build() {\n    Column({ space: CommonConstants.COLUMN_SPACE }) {\n      Text($r('app.string.page_title'))\n        .fontSize($r('app.float.title_font_size'))\n        .fontWeight(FontWeight.Bold)\n        .lineHeight($r('app.float.title_font_height'))\n        .width(CommonConstants.TITLE_WIDTH)\n        .margin({\n          top: $r('app.float.title_margin_top'),\n          bottom: $r('app.float.title_margin_bottom')\n        })\n        .textAlign(TextAlign.Start)\n\n      ForEach(this.totalTasks, (item: string) => {\n        ToDoItem({ content: item })\n      }, (item: string) => JSON.stringify(item))\n    }\n    .width(CommonConstants.FULL_LENGTH)\n    .height(CommonConstants.FULL_LENGTH)\n    .backgroundColor($r('app.color.page_background'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ToDoListArkTS\\entry\\src\\main\\ets\\pages\\ToDoListPage.ets", "project_name": "codelabs-master", "id": "cc6781d7b00ae3eaf4ba2606557ec95417093508ac6937f19c17ef25aeddab24"}
{"text": "import CommonConstants from '../common/constant/CommonConstant';\n\n@Component\nexport default struct ToDoItem {\n  private content?: string;\n  @State isComplete: boolean = false;\n\n  @Builder labelIcon(icon: Resource) {\n    Image(icon)\n      .objectFit(ImageFit.Contain)\n      .width($r('app.float.checkbox_width'))\n      .height($r('app.float.checkbox_width'))\n      .margin($r('app.float.checkbox_margin'))\n  }\n\n  build() {\n    Row() {\n      if (this.isComplete) {\n        this.labelIcon($r('app.media.ic_ok'));\n      } else {\n        this.labelIcon($r('app.media.ic_default'));\n      }\n\n      Text(this.content)\n        .fontSize($r('app.float.item_font_size'))\n        .fontWeight(CommonConstants.FONT_WEIGHT)\n        .opacity(this.isComplete ? CommonConstants.OPACITY_COMPLETED : CommonConstants.OPACITY_DEFAULT)\n        .decoration({ type: this.isComplete ? TextDecorationType.LineThrough : TextDecorationType.None })\n    }\n    .borderRadius(CommonConstants.BORDER_RADIUS)\n    .backgroundColor($r('app.color.start_window_background'))\n    .width(CommonConstants.LIST_DEFAULT_WIDTH)\n    .height($r('app.float.list_item_height'))\n    .onClick(() => {\n      this.isComplete = !this.isComplete;\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\ToDoListArkTS\\entry\\src\\main\\ets\\view\\ToDoItem.ets", "project_name": "codelabs-master", "id": "184585349c678eb1b05d05daefc419ad501830fd1cb115f16e7e2decfd3ecb32"}
{"text": "import CommonConstants from '../common/constant/CommonConstant';\n\n\nexport class DataModel {\n  \n  private tasks: Array<string> = CommonConstants.TODO_DATA;\n\n  \n  getData(): Array<string> {\n    return this.tasks;\n  }\n}\n\nexport default new DataModel();", "path": "codelabs-master\\HarmonyOS_NEXT\\ToDoListArkTS\\entry\\src\\main\\ets\\viewmodel\\DataModel.ets", "project_name": "codelabs-master", "id": "10f209d757656a83bd7706d7b2b3a0d9924bccf2629850043f282b2076941dc1"}
{"text": "import TransitionElement from '../view/TransitionElement';\nimport { TRANSITION_ANIMATION_DURATION } from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct BottomTransition {\n  build() {\n    Column() {\n      TransitionElement()\n    }\n  }\n\n  \n  pageTransition() {\n    PageTransitionEnter({ duration: TRANSITION_ANIMATION_DURATION, curve: Curve.Smooth }).slide(SlideEffect.Bottom);\n    PageTransitionExit({ duration: TRANSITION_ANIMATION_DURATION, curve: Curve.Smooth }).slide(SlideEffect.Bottom);\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\pages\\BottomTransition.ets", "project_name": "codelabs-master", "id": "16bcc7d1c25614e5e600040d60d46df3111a060ac0d38ebe2667bb9f6251b33c"}
{"text": "import TransitionElement from '../view/TransitionElement';\nimport {\n  TRANSITION_ANIMATION_DURATION,\n  CUSTOM_TRANSITION_OPACITY,\n  CUSTOM_TRANSITION_SCALE,\n  CUSTOM_TRANSITION_TRANSLATE\n} from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct CustomTransition {\n  build() {\n    Column() {\n      TransitionElement()\n    }\n  }\n\n  \n  pageTransition() {\n    PageTransitionEnter({ duration: TRANSITION_ANIMATION_DURATION, curve: Curve.Smooth })\n      .opacity(CUSTOM_TRANSITION_OPACITY)\n      .scale(CUSTOM_TRANSITION_SCALE)\n    PageTransitionExit({ duration: TRANSITION_ANIMATION_DURATION, curve: Curve.Smooth })\n      .translate(CUSTOM_TRANSITION_TRANSLATE)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\pages\\CustomTransition.ets", "project_name": "codelabs-master", "id": "a74fdc72705f9dd918d5d819908882fa1c6af5a2b44e5a714aaf60e340ea0b35"}
{"text": "import TransitionElement from '../view/TransitionElement';\nimport {\n  TRANSITION_ANIMATION_DURATION,\n  FULL_CUSTOM_TRANSITION_DEFAULT_ANIM_VALUE,\n  FULL_CUSTOM_TRANSITION_ROTATE_Z,\n  FULL_CUSTOM_TRANSITION_ANGLE\n} from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct FullCustomTransition {\n  @State animValue: number = FULL_CUSTOM_TRANSITION_DEFAULT_ANIM_VALUE;\n\n  build() {\n    Column() {\n      TransitionElement()\n    }\n    .opacity(this.animValue)\n    .scale({ x: this.animValue, y: this.animValue })\n    .rotate({\n      z: FULL_CUSTOM_TRANSITION_ROTATE_Z,\n      angle: FULL_CUSTOM_TRANSITION_ANGLE * this.animValue\n    })\n  }\n\n  \n  pageTransition() {\n    PageTransitionEnter({ duration: TRANSITION_ANIMATION_DURATION, curve: Curve.Smooth })\n      .onEnter((type?: RouteType, progress?: number) => {\n        if (!progress) {\n          return;\n        }\n        this.animValue = progress;\n      });\n    PageTransitionExit({ duration: TRANSITION_ANIMATION_DURATION, curve: Curve.Smooth })\n      .onExit((type?: RouteType, progress?: number) => {\n        if (!progress) {\n          return;\n        }\n        this.animValue = FULL_CUSTOM_TRANSITION_DEFAULT_ANIM_VALUE - progress;\n      });\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\pages\\FullCustomTransition.ets", "project_name": "codelabs-master", "id": "8cceaea1ef394fc72ef6c7e1307d87a2e615a3c9ba83602b77a4858826f55e2c"}
{"text": "import router from '@ohos.router';\nimport {\n  INDEX_ANIMATION_MODE,\n  FULL_LENGTH,\n  DEFAULT_LAYOUT_WEIGHT,\n  BORDER_RADIUS,\n  DOMAIN,\n  PREFIX,\n  FORMAT\n} from '../common/constants/CommonConstants';\nimport DimensionUtil from '../common/utils/DimensionUtil';\nimport hilog from '@ohos.hilog';\nimport AnimationModel from '../viewmodel/AnimationModel';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column() {\n      Text($r('app.string.main_page_title'))\n        .fontSize(DimensionUtil.getFp($r('app.float.main_page_title_font_size')))\n        .fontWeight(FontWeight.Regular)\n        .width(FULL_LENGTH)\n        .margin({\n          top: DimensionUtil.getVp($r('app.float.main_page_title_margin_top')),\n          bottom: DimensionUtil.getVp($r('app.float.main_page_title_margin_bottom')),\n          left: DimensionUtil.getVp($r('app.float.main_page_title_margin_left'))\n        })\n\n      Scroll() {\n        Column() {\n          ForEach(INDEX_ANIMATION_MODE, (item: AnimationModel) => {\n            Row()\n              .backgroundImage(item.imgRes)\n              .backgroundImageSize(ImageSize.Cover)\n              .backgroundColor($r('app.color.trans_parent'))\n              .height(DimensionUtil.getVp($r('app.float.main_page_body_height')))\n              .margin({ bottom: DimensionUtil.getVp($r('app.float.main_page_body_margin')) })\n              .width(FULL_LENGTH)\n              .borderRadius(BORDER_RADIUS)\n              .onClick(() => {\n                router.pushUrl({ url: item.url })\n                  .catch((err: Error) => {\n                    hilog.error(DOMAIN, PREFIX, FORMAT, err);\n                  });\n              })\n          }, (item: AnimationModel) => JSON.stringify(item))\n        }\n      }\n      .align(Alignment.Top)\n      .layoutWeight(DEFAULT_LAYOUT_WEIGHT)\n      .scrollBar(BarState.Off)\n    }\n    .height(FULL_LENGTH)\n    .backgroundColor($r('app.color.grey_light'))\n    .padding({\n      left: DimensionUtil.getVp($r('app.float.main_page_body_padding')),\n      right: DimensionUtil.getVp($r('app.float.main_page_body_padding'))\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "a88570a2a7d2f2b4a0d818d23800d27a7a56dde9f2e7fada3bee41deae29eaa1"}
{"text": "import TransitionElement from '../view/TransitionElement';\nimport {\n  SHARE_TRANSITION_ID,\n  SHARE_ITEM_DURATION,\n  SHARE_ITEM_ANIMATION_DELAY\n} from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct SharePage {\n  build() {\n    Column() {\n      TransitionElement({ imgFit: ImageFit.Cover })\n        .sharedTransition(SHARE_TRANSITION_ID, {\n          duration: SHARE_ITEM_DURATION,\n          curve: Curve.Smooth,\n          delay: SHARE_ITEM_ANIMATION_DELAY\n        })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\pages\\SharePage.ets", "project_name": "codelabs-master", "id": "d4ec36b2ff61ac3dba035fce8e3c61d5c1bc0448c4f74556fa20d3fbf0e20d8b"}
{"text": "import { FULL_LENGTH } from '../common/constants/CommonConstants';\n\n@Component\nexport default struct TransitionElement {\n  private imgRes: string | Resource = $r('app.media.bg_transition');\n  private imgFit: ImageFit = ImageFit.Fill;\n\n  build() {\n    Image(this.imgRes)\n      .objectFit(this.imgFit)\n      .width(FULL_LENGTH)\n      .height(FULL_LENGTH)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\view\\TransitionElement.ets", "project_name": "codelabs-master", "id": "cfd60f5ea3eee86395bee2005a0ef89b4e0ba12d235ea8885fda724915658d13"}
{"text": "export default class ClassifyModel {\n  imgRes: Resource;\n  url: string;\n\n  constructor(imgRes: Resource, url: string) {\n    this.imgRes = imgRes;\n    this.url = url;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\TransitionAnimation\\entry\\src\\main\\ets\\viewmodel\\AnimationModel.ets", "project_name": "codelabs-master", "id": "c3f8489d77ad51c62c0223cb658edf2cc55d3fca899f370ce14c21a8b49c1307"}
{"text": "import Logger from '../common/util/Logger';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n@Entry\n@Component\nstruct LifeCyclePage {\n  @State textColor: Color = Color.Black;\n\n  aboutToAppear() {\n    this.textColor = Color.Blue;\n    Logger.info('[LifeCyclePage]  LifeCyclePage aboutToAppear');\n  }\n\n  onPageShow() {\n    this.textColor = Color.Brown;\n    Logger.info('[LifeCyclePage]  LifeCyclePage onPageShow');\n  }\n\n  onPageHide() {\n    Logger.info('[LifeCyclePage]  LifeCyclePage onPageHide');\n  }\n\n  onBackPress() {\n    this.textColor = Color.Red;\n    Logger.info('[LifeCyclePage]  LifeCyclePage onBackPress');\n    return false;\n  }\n\n  aboutToDisappear() {\n    Logger.info('[LifeCyclePage]  LifeCyclePage aboutToDisappear');\n  }\n\n  build() {\n    Column() {\n      Text($r('app.string.hello_message'))\n        .fontSize(CommonConstants.DEFAULT_FONT_SIZE)\n        .fontColor(this.textColor)\n        .margin(CommonConstants.DEFAULT_MARGIN)\n        .fontWeight(FontWeight.Bold)\n    }\n    .width(CommonConstants.FULL_WIDTH)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\UIAbilityLifeCycle\\entry\\src\\main\\ets\\pages\\LifeCyclePage.ets", "project_name": "codelabs-master", "id": "c315b79da39c948168ed8a302972bfbfe7fb9c84e0b699c80f6deb14921691ff"}
{"text": "import { VideoItem } from '../../viewmodel/VideoItem'\n\n@Observed\nexport class HomeTabModel {\n  videoList: Array<VideoItem> = [];\n  name: string = '';\n  src: string = '';\n  linkCheck: Resource = $r('app.string.link_check');\n  confirmAdd: Resource = $r('app.string.confirm_add');\n  loadColor: Resource = $r('app.color.index_tab_selected_font_color');\n  confirm: () => void = () => {\n  };\n  controller?: CustomDialogController;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\common\\model\\HomeTabModel.ets", "project_name": "codelabs-master", "id": "a097a8da0262c6714230feca5f7e672bcf755797f6aff5110f5cdee02f27aada"}
{"text": "import { CommonConstants } from '../constants/CommonConstants';\nimport { PlayConstants } from '../constants/PlayConstants';\n\n@Observed\nexport class PlayerModel {\n  videoHeight: string = PlayConstants.PLAY_PLAYER_HEIGHT;\n  videoWidth: string = CommonConstants.FULL_PERCENT;\n  videoMargin: string = PlayConstants.MARGIN_ZERO;\n  videoPosition: FlexAlign = FlexAlign.Center;\n  playSpeed: number = PlayConstants.PLAY_SPEED;\n  volume: number = PlayConstants.VOLUME;\n  volumeShow: boolean = PlayConstants.VOLUME_SHOW;\n  bright: number = PlayConstants.BRIGHT;\n  brightShow: boolean = PlayConstants.BRIGHT_SHOW;\n  currentTime: string = PlayConstants.PROGRESS_CURRENT_TIME;\n  totalTime: string = PlayConstants.PROGRESS_TOTAL_TIME;\n  progressVal: number = PlayConstants.PROGRESS_PROGRESS_VAL;\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\common\\model\\PlayerModel.ets", "project_name": "codelabs-master", "id": "3a8397e3755bdaef8e76cf33341534944afb2adc1562fbac715b1ea3db21bb8e"}
{"text": "import { CommonConstants } from '../constants/CommonConstants';\n\nclass DateFormatUtil {\n  \n  secondToTime(seconds: number): string {\n    let hourUnit = CommonConstants.TIME_UNIT * CommonConstants.TIME_UNIT;\n    let hour = Math.floor(seconds / hourUnit);\n    let minute = Math.floor((seconds - hour * hourUnit) / CommonConstants.TIME_UNIT);\n    let second = seconds - hour * hourUnit - minute * CommonConstants.TIME_UNIT;\n    if (hour > 0) {\n      return `${this.padding(hour.toString())}${':'}\n        ${this.padding(minute.toString())}${':'}${this.padding(second.toString())}`;\n    }\n    if (minute > 0) {\n      return `${this.padding(minute.toString())}${':'}${this.padding(second.toString())}`;\n    } else {\n      return `${CommonConstants.INITIAL_TIME_UNIT}${':'}${this.padding(second.toString())}`;\n    }\n  }\n\n  \n  padding(num: string): string {\n    let length = CommonConstants.PADDING_LENGTH;\n    for (let len = (num.toString()).length; len < length; len = num.length) {\n      num = `${CommonConstants.PADDING_STR}${num}`;\n    }\n    return num;\n  }\n}\n\nexport default new DateFormatUtil();", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\common\\util\\DateFormatUtil.ets", "project_name": "codelabs-master", "id": "ea6fc6b3248dbe22731aea37a0b1b53ce7fb35b0f049e292052aaa99cb774e6c"}
{"text": "import Window from '@ohos.window';\nimport Logger from '../util/Logger';\nimport { GlobalContext } from './GlobalContext';\n\nclass ScreenUtil {\n  setScreenSize(): void {\n    Window.getLastWindow(getContext(this))\n      .then((windowClass: Window.Window) => {\n        let screenWidth = px2fp(windowClass.getWindowProperties().windowRect.width);\n        let screenHeight = px2fp(windowClass.getWindowProperties().windowRect.height);\n        GlobalContext.getContext().setObject('screenWidth', screenWidth);\n        GlobalContext.getContext().setObject('screenHeight', screenHeight);\n        GlobalContext.getContext().setObject('windowClass', windowClass);\n      })\n      .catch((error: Error) => {\n        Logger.error('[ScreenUtil] Failed to obtain the window size. Cause: ' + JSON.stringify(error));\n      })\n  }\n}\n\nexport default new ScreenUtil();", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\common\\util\\ScreenUtil.ets", "project_name": "codelabs-master", "id": "235711726f5418840e3ccccef50cba0c273688bf60202b29d8ae3975105408da"}
{"text": "import ScreenUtil from '../common/util/ScreenUtil';\nimport { HomeConstants } from '../common/constants/HomeConstants';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { HomeTabContent } from '../view/HomeTabContent';\n\n@Entry\n@Component\nstruct HomePage {\n  @State currentIndex: number = HomeConstants.CURRENT_INDEX;\n  private controller: TabsController = new TabsController();\n\n  async aboutToAppear() {\n    ScreenUtil.setScreenSize();\n  }\n\n  @Builder TabBuilder(index: number, name: Resource) {\n    Column() {\n      Text(name)\n        .fontColor(this.currentIndex === index ?\n          $r('app.color.index_tab_selected_font_color') : $r('app.color.index_tab_font_color'))\n        .fontSize($r('app.float.home_page_font_size'))\n        .fontWeight(this.currentIndex === index ? HomeConstants.FONT_WEIGHT_SELECT : HomeConstants.FONT_WEIGHT_UNSELECT)\n        .lineHeight(HomeConstants.LINE_HEIGHT)\n        .margin({\n          top: HomeConstants.MARGIN_TOP_TWO,\n          bottom: HomeConstants.MARGIN_BOTTOM\n        })\n      Divider()\n        .strokeWidth(HomeConstants.STROKE_WIDTH)\n        .color($r('app.color.index_tab_selected_font_color'))\n        .opacity(this.currentIndex === index ? HomeConstants.TAB_BAR_SECOND : HomeConstants.TAB_BAR_FIRST)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n  }\n\n  build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          HomeTabContent({ currIndex: HomeConstants.TAB_BAR_FIRST });\n        }.tabBar(this.TabBuilder(HomeConstants.TAB_BAR_FIRST, $r('app.string.index_tab_local_video')))\n\n        TabContent() {\n          HomeTabContent({ currIndex: HomeConstants.TAB_BAR_SECOND });\n        }.tabBar(this.TabBuilder(HomeConstants.TAB_BAR_SECOND, $r('app.string.index_tab_internet_video')))\n      }\n      .vertical(false)\n      .barMode(BarMode.Fixed)\n      .barWidth(HomeConstants.BAR_WIDTH)\n      .barHeight(HomeConstants.BAR_HEIGHT)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n      })\n      .width(CommonConstants.FULL_PERCENT)\n      .height(CommonConstants.FULL_PERCENT)\n      .margin({ top: $r('app.float.home_tab_margin_top') })\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .backgroundColor($r('app.color.index_background'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\pages\\HomePage.ets", "project_name": "codelabs-master", "id": "18a9f67ae48e61153fcbf9a30c918987ca6d8d2ac5b10115869e19aa954c8e79"}
{"text": "import { HomeTabContentList } from './HomeTabContentList';\nimport { HomeTabContentButton } from './HomeTabContentButton';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { HomeDialogModel } from '../viewmodel/HomeDialogModel';\nimport { HomeTabModel } from '../common/model/HomeTabModel';\n\n@Component\nexport struct HomeTabContent {\n  private currIndex: number = 0;\n  private homeDialogModel: HomeDialogModel = new HomeDialogModel();\n  @Provide homeTabModel: HomeTabModel = this.homeDialogModel.homeTabModel;\n\n  build() {\n    Column() {\n      HomeTabContentList({ currIndex: this.currIndex });\n      HomeTabContentButton({ currIndex: this.currIndex, homeDialogModel: this.homeDialogModel });\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\view\\HomeTabContent.ets", "project_name": "codelabs-master", "id": "78a842019e40692ff218e006b9ec18612e858b22a0db572ad7579b6a9ace194f"}
{"text": "import { HomeDialogModel } from '../viewmodel/HomeDialogModel';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { HomeConstants } from '../common/constants/HomeConstants';\nimport { HomeTabModel } from '../common/model/HomeTabModel';\n\n@CustomDialog\nexport struct HomeTabContentDialog {\n  private homeDialogModel?: HomeDialogModel | null = null;\n  ;\n  @Consume homeTabModel: HomeTabModel;\n  controller: CustomDialogController = new CustomDialogController({\n    builder: HomeTabContentDialog({ homeDialogModel: this.homeDialogModel! })\n  });\n\n  build() {\n    Column() {\n      TextInput({ placeholder: $r('app.string.link_placeholder'), text: this.homeTabModel.src })\n        .height(HomeConstants.TEXT_HEIGHT)\n        .width(CommonConstants.NINETY_PERCENT)\n        .margin({ top: HomeConstants.TEXT_MARGIN_TOP })\n        .onChange((value: string) => {\n          this.homeTabModel.src = value;\n        })\n      TextInput({ placeholder: $r('app.string.name_placeholder'), text: this.homeTabModel.name })\n        .height(HomeConstants.TEXT_HEIGHT)\n        .width(CommonConstants.NINETY_PERCENT)\n        .margin({ top: HomeConstants.TEXT_MARGIN_TOP })\n        .onChange((value: string) => {\n          this.homeTabModel.name = value;\n        })\n      Flex({ justifyContent: FlexAlign.SpaceAround }) {\n        Text(this.homeTabModel.linkCheck)\n          .fontSize($r('app.float.dialog_font_size'))\n          .fontColor(this.homeTabModel.loadColor)\n          .onClick(() => {\n            if (this.homeDialogModel!.checkSrcNull()) {\n              this.homeDialogModel!.checkSrcValidity(0);\n            }\n          })\n        Divider()\n          .vertical(true)\n          .height($r('app.float.tab_dialog_divider_height'))\n          .color($r('app.color.divider_color'))\n          .opacity($r('app.float.tab_dialog_divider_opacity'))\n          .margin({\n            left: $r('app.float.dialog_divider_margin_left'),\n            right: $r('app.float.dialog_divider_margin_left')\n          })\n        Text(this.homeTabModel.confirmAdd)\n          .fontSize($r('app.float.dialog_font_size'))\n          .fontColor(this.homeTabModel.loadColor)\n          .onClick(() => {\n            if (this.homeDialogModel!.checkSrcNull() && this.homeDialogModel!.checkNameNull()) {\n              this.homeDialogModel!.checkSrcValidity(1);\n            }\n          })\n      }\n      .margin({\n        top: $r('app.float.dialog_column_margin_top'),\n        bottom: $r('app.float.dialog_column_margin_bottom')\n      })\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\view\\HomeTabContentDialog.ets", "project_name": "codelabs-master", "id": "797ce93bd3d3ac43aa3c2d9fa88606224066cd0cb40eea4f47ec3174d865a0ed"}
{"text": "import resourceManager from '@ohos.resourceManager';\nimport { VideoItem } from '../viewmodel/VideoItem';\nimport { HomeConstants } from '../common/constants/HomeConstants';\nimport { CommonConstants } from '../common/constants/CommonConstants';\n\n@Component\nexport struct HomeTabContentListItem {\n  private item: VideoItem = new VideoItem('video1', {} as resourceManager.RawFileDescriptor, 'video1.mp4');\n\n  build() {\n    Row() {\n      Image(this.item.pixelMap === undefined ? $r('app.media.ic_internet') : this.item.pixelMap)\n        .height(HomeConstants.IMAGE_HEIGHT)\n        .width(HomeConstants.IMAGE_WIDTH)\n        .margin({ left: $r('app.float.item_image_margin_left') })\n        .borderRadius($r('app.float.image_border_radius'))\n      Column() {\n        Column() {\n          Text(this.item.name)\n            .fontSize($r('app.float.item_font_size'))\n            .margin({\n              left: $r('app.float.item_text_margin_left'),\n              right: $r('app.float.item_text_margin_right')\n            })\n        }\n        .height(CommonConstants.FULL_PERCENT)\n        .width(CommonConstants.FULL_PERCENT)\n        .justifyContent(FlexAlign.Center)\n        .alignItems(HorizontalAlign.Start)\n\n        Divider()\n          .strokeWidth(HomeConstants.DIVIDER_STROKE_WIDTH)\n          .color($r('app.color.divider_color'))\n          .margin({\n            left: $r('app.float.item_divider_margin_left'),\n            right: $r('app.float.item_divider_margin_right')\n          })\n      }\n      .height(CommonConstants.FULL_PERCENT)\n      .width(HomeConstants.LIST_ITEM_ROW_COLUMN_WIDTH)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(HomeConstants.LIST_ITEM_ROW_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\view\\HomeTabContentListItem.ets", "project_name": "codelabs-master", "id": "6ee803856b62838bf58d981136613833a542dbf8e7d670937cffa883f0e77558"}
{"text": "import { VideoController } from '../controller/VideoController';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { PlayConstants } from '../common/constants/PlayConstants';\n\n@Component\nexport struct PlayControl {\n  @Consume status: number;\n  private playVideoModel?: VideoController;\n\n  build() {\n    Column() {\n      Row() {\n        Image($r('app.media.ic_previous'))\n          .width($r('app.float.control_image_width'))\n          .aspectRatio(CommonConstants.ASPECT_RATIO)\n          .onClick(async () => {\n            if (this.playVideoModel !== null) {\n              this.playVideoModel!.previousVideo();\n            }\n            this.status = CommonConstants.STATUS_START;\n          })\n        Column() {\n          Image(this.status === CommonConstants.STATUS_START ?\n          $r('app.media.ic_pause') : $r('app.media.ic_play'))\n            .width($r('app.float.control_image_width'))\n            .aspectRatio(CommonConstants.ASPECT_RATIO)\n            .onClick(async () => {\n              if (this.playVideoModel !== null) {\n                let curStatus = (this.playVideoModel!.getStatus() === CommonConstants.STATUS_START);\n                this.status = curStatus ? CommonConstants.STATUS_PAUSE : CommonConstants.STATUS_START;\n                this.playVideoModel!.switchPlayOrPause();\n              }\n            })\n        }\n        .layoutWeight(1)\n\n        Image($r('app.media.ic_next'))\n          .width($r('app.float.control_image_width'))\n          .aspectRatio(CommonConstants.ASPECT_RATIO)\n          .onClick(() => {\n            if (this.playVideoModel !== null) {\n              this.playVideoModel!.nextVideo();\n            }\n            this.status = CommonConstants.STATUS_START;\n          })\n      }\n      .width(PlayConstants.CONTROL_ROW_WIDTH)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\view\\PlayControl.ets", "project_name": "codelabs-master", "id": "77f0bf3a09286467670e43242dd5fdbcea345edb1725836bbdae9956c3ae2075"}
{"text": "import { VideoController } from '../controller/VideoController';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { PlayConstants } from '../common/constants/PlayConstants';\nimport { PlayerModel } from '../common/model/PlayerModel';\n\n@Component\nexport struct PlayProgress {\n  @Consume playerModel: PlayerModel;\n  private playVideoModel?: VideoController;\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.playerModel.currentTime)\n          .fontSize($r('app.float.slider_font_size'))\n          .fontColor(Color.White)\n        Slider({\n          value: this.playerModel.progressVal,\n          step: PlayConstants.PROGRESS_STEP,\n          style: SliderStyle.OutSet\n        })\n          .blockColor(Color.White)\n          .trackColor($r('app.color.track_color'))\n          .selectedColor(Color.White)\n          .trackThickness(PlayConstants.PROGRESS_TRACK_THICKNESS)\n          .layoutWeight(1)\n          .margin({ left: PlayConstants.PROGRESS_MARGIN_LEFT })\n          .onChange((value: number, mode: SliderChangeMode) => {\n            this.playVideoModel!.setSeekTime(value, mode);\n          })\n        Text(this.playerModel.totalTime)\n          .fontSize($r('app.float.slider_font_size'))\n          .fontColor(Color.White)\n          .margin({ left: PlayConstants.PROGRESS_MARGIN_LEFT })\n      }\n      .width(PlayConstants.PROGRESS_ROW_WIDTH)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\view\\PlayProgress.ets", "project_name": "codelabs-master", "id": "ec29a7a2fc89a2b1ccb069b1bf74602690d85e294b467c9155bb55a022807426"}
{"text": "import { VideoSpeed } from '../viewmodel/VideoSpeed';\nimport { VideoController } from '../controller/VideoController';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { PlayConstants } from '../common/constants/PlayConstants';\n\n@CustomDialog\nexport struct PlayTitleDialog {\n  private playVideoModel?: VideoController;\n  controller?: CustomDialogController;\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.speed_play'))\n          .fontSize($r('app.float.title_font_size'))\n      }\n      .height(PlayConstants.TITLE_DIALOG_ROW_HEIGHT)\n      .width(PlayConstants.TITLE_DIALOG_ROW_WIDTH)\n\n      Column() {\n        Grid() {\n          ForEach(CommonConstants.SPEED_ARRAY, (item: VideoSpeed) => {\n            GridItem() {\n              Text(item.text)\n                .fontSize($r('app.float.title_dialog_font_size'))\n                .backgroundColor($r('app.color.speed_text_color'))\n                .width(CommonConstants.FULL_PERCENT)\n                .height(CommonConstants.FULL_PERCENT)\n                .textAlign(TextAlign.Center)\n                .borderRadius($r('app.float.text_border_radius'))\n            }\n            .onClick(() => {\n              this.playVideoModel!.setSpeed(item.value);\n              this.controller!.close();\n            })\n          }, (item: VideoSpeed) => JSON.stringify(item))\n        }\n        .columnsTemplate(PlayConstants.TITLE_DIALOG_COLUMNS_TEMPLATE)\n        .rowsTemplate(PlayConstants.TITLE_DIALOG_ROWS_TEMPLATE)\n        .columnsGap(PlayConstants.TITLE_DIALOG_COLUMNS_GAP)\n        .rowsGap(PlayConstants.TITLE_DIALOG_ROWS_GAP)\n        .width(PlayConstants.TITLE_DIALOG_ROW_WIDTH)\n        .height(CommonConstants.FULL_PERCENT)\n      }\n      .height(CommonConstants.FIFTY_PERCENT)\n\n      Row() {\n        Text($r('app.string.cancel'))\n          .fontColor($r('app.color.index_tab_selected_font_color'))\n          .fontSize($r('app.float.title_dialog_font_size'))\n      }\n      .height(PlayConstants.TITLE_DIALOG_ROW_HEIGHT)\n      .width(PlayConstants.TITLE_DIALOG_ROW_WIDTH)\n      .justifyContent(FlexAlign.Center)\n      .onClick(() => {\n        this.controller!.close();\n      })\n    }\n    .height(PlayConstants.TITLE_DIALOG_COLUMN_WIDTH)\n    .width(CommonConstants.FULL_PERCENT)\n    .backgroundColor(Color.White)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\view\\PlayTitleDialog.ets", "project_name": "codelabs-master", "id": "5dad7e865742c1e5c734e86bce164c558f1e6d81b62fe439e49c187782537c1d"}
{"text": "import image from '@ohos.multimedia.image';\nimport resourceManager from '@ohos.resourceManager';\nimport { VideoItem } from './VideoItem';\nimport { VIDEO_DATA } from '../common/constants/CommonConstants';\nimport { GlobalContext } from '../common/util/GlobalContext';\n\nexport class HomeVideoListModel {\n  private videoLocalList: Array<VideoItem> = [];\n  private videoInternetList: Array<VideoItem> = [];\n\n  \n  async getLocalVideo() {\n    this.videoLocalList = [];\n    await this.assemblingVideoBean();\n    GlobalContext.getContext().setObject('videoLocalList', this.videoLocalList);\n    return this.videoLocalList;\n  }\n\n  \n  async assemblingVideoBean() {\n    for (let index = 0; index < VIDEO_DATA.length; index++) {\n      const element = VIDEO_DATA[index];\n      let videoBean = await getContext().resourceManager.getRawFd(element.iSrc);\n      let uri = videoBean;\n      this.videoLocalList.push(new VideoItem(element.name, uri, ''));\n    }\n  }\n\n  \n  async setInternetVideo(name: string, src: string, pixelMap?: image.PixelMap) {\n    this.videoInternetList.push(new VideoItem(name, {} as resourceManager.RawFileDescriptor, src, pixelMap));\n    let videoInternetList = this.videoInternetList;\n    GlobalContext.getContext().setObject('videoInternetList', videoInternetList);\n    return videoInternetList;\n  }\n}\n\nlet homeVideoListModel = new HomeVideoListModel();\n\nexport default homeVideoListModel as HomeVideoListModel;", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\viewmodel\\HomeVideoListModel.ets", "project_name": "codelabs-master", "id": "3ff22fb10abed5f2e4fcd2938eb040027ac0461e26a90318e71665b7b94d7fc7"}
{"text": "import image from '@ohos.multimedia.image';\nimport resourceManager from '@ohos.resourceManager';\n\n@Observed\nexport class VideoItem {\n  name: string;\n  src: resourceManager.RawFileDescriptor;\n  iSrc: string;\n  pixelMap?: image.PixelMap;\n\n  constructor(name: string, src: resourceManager.RawFileDescriptor, iSrc: string, pixelMap?: image.PixelMap) {\n    this.name = name;\n    this.src = src;\n    this.iSrc = iSrc;\n    this.pixelMap = pixelMap;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\viewmodel\\VideoItem.ets", "project_name": "codelabs-master", "id": "1c33405be42f51686ac3108d6f695b3dc29269e6117cb9ab5066f4ee65e57628"}
{"text": "export class VideoSpeed {\n  text: string;\n  value: number;\n\n  constructor(text: string, value: number) {\n    this.text = text;\n    this.value = value;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\VideoPlayer\\entry\\src\\main\\ets\\viewmodel\\VideoSpeed.ets", "project_name": "codelabs-master", "id": "60dd1a6dea78bec008f149d8f657449b792d70878fc1e3b9cc73a3ed95b00fec"}
{"text": "import UIAbility from '@ohos.app.ability.UIAbility';\nimport window from '@ohos.window';\nimport Logger from '../common/utils/Logger';\n\n\nexport default class EntryAbility extends UIAbility {\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    \n    windowStage.loadContent('pages/HomePage', (err, data) => {\n      if (err.code) {\n        Logger.error('Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      Logger.info('Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "21b88dd2846e0777cfeda2e1b43c66d10a1ccd2a00144bb899564997ecaf30da"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport ClassifyComponent from '../view/ClassifyComponent';\nimport SearchComponent from '../view/SearchComponent';\nimport SwiperComponent from '../view/SwiperComponent';\nimport WaterFlowComponent from '../view/WaterFlowComponent';\n\n\n@Entry\n@Component\nstruct HomePage {\n  build() {\n    Stack({ alignContent: Alignment.Top }) {\n      Image($r('app.media.ic_app_background'))\n        .width(Const.FULL_WIDTH)\n        .height($r('app.float.image_background_height'))\n        .objectFit(ImageFit.Cover)\n      Column() {\n        SearchComponent()\n        ClassifyComponent()\n        SwiperComponent()\n        WaterFlowComponent()\n      }\n      .padding({\n        left: $r('app.float.home_margin_left'),\n        right: $r('app.float.home_margin_right')\n      })\n    }\n    .backgroundColor($r('app.color.home_background_color'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\pages\\HomePage.ets", "project_name": "codelabs-master", "id": "4f3602622a9375cd734120f56ff4b101471da939224e3c20648bb24f09cb0ca3"}
{"text": "import { classifyTitle } from '../viewmodel/HomeViewModel';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n\n@Component\nexport default struct ClassifyComponent {\n  @State titleIndex: number = 0;\n\n  build() {\n    Flex({ justifyContent: FlexAlign.SpaceBetween }) {\n      ForEach(classifyTitle, (item: Resource, index: number | undefined) => {\n        if (index !== undefined) {\n          Text(item)\n            .fontSize($r('app.float.middle_font_size'))\n            .opacity(this.titleIndex === index ? Const.FULL_OPACITY : Const.EIGHTY_OPACITY)\n            .fontWeight(this.titleIndex === index ? Const.FONT_WEIGHT_FIVE : FontWeight.Normal)\n            .fontColor(Color.White)\n            .onClick(() => {\n              this.titleIndex = index;\n            })\n        }\n      }, (item: Resource) => JSON.stringify(item))\n\n      Row() {\n        Image($r('app.media.ic_split_line'))\n          .width($r('app.float.split_line_width'))\n          .height($r('app.float.split_line_height'))\n        Image($r('app.media.ic_more'))\n          .width($r('app.float.more_width'))\n          .height($r('app.float.more_height'))\n          .margin({\n            left: $r('app.float.more_margin_left'),\n            right: $r('app.float.more_margin_right')\n          })\n        Text($r('app.string.title_bar_classification'))\n          .fontSize($r('app.float.middle_font_size'))\n          .fontColor(Color.White)\n          .opacity(this.titleIndex === Const.INVALID_INDEX ? Const.FULL_OPACITY : Const.EIGHTY_OPACITY)\n          .fontWeight(this.titleIndex === Const.INVALID_INDEX ? Const.FONT_WEIGHT_FIVE : FontWeight.Normal)\n      }\n      .onClick(() => {\n        this.titleIndex = Const.INVALID_INDEX;\n      })\n    }\n    .width(Const.FULL_WIDTH)\n    .margin({ top: $r('app.float.classify_title_margin') })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\view\\ClassifyComponent.ets", "project_name": "codelabs-master", "id": "025bd62e02abe722e69d82409e743b7053b8e8f99eb83f7b00a6ad0441038f76"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { swiperImage } from '../viewmodel/HomeViewModel';\n\n\n@Component\nexport default struct SwiperComponent {\n  private dotIndicator: DotIndicator = new DotIndicator();\n\n  aboutToAppear(){\n    this.dotIndicator.selectedColor($r('app.color.indicator_select'));\n  }\n\n  build() {\n    Swiper() {\n      ForEach(swiperImage, (item: Resource) => {\n        Image(item)\n          .width(Const.FULL_WIDTH)\n          .height($r('app.float.swiper_image_height'))\n          .borderRadius($r('app.float.swiper_radius'))\n          .backgroundColor(Color.White)\n      }, (item: Resource) => JSON.stringify(item))\n    }\n    .indicator(this.dotIndicator)\n    .autoPlay(true)\n    .itemSpace(0)\n    .width(Const.FULL_WIDTH)\n    .displayCount(1)\n    .margin({\n      top: $r('app.float.swiper_margin_top'),\n      bottom: $r('app.float.swiper_margin_bottom')\n    })\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\view\\SwiperComponent.ets", "project_name": "codelabs-master", "id": "0107bc83e516d1fe0f04a28e544bd4022013a8efb7f98be621fdb4d0d553d819"}
{"text": "import ProductItem from '../viewmodel/ProductItem';\nimport { WaterFlowDataSource } from '../viewmodel/WaterFlowDataSource';\nimport { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { waterFlowData } from '../viewmodel/HomeViewModel';\nimport FlowItemComponent from '../view/FlowItemComponent';\n\n\n@Component\nexport default struct WaterFlowComponent {\n  private datasource: WaterFlowDataSource = new WaterFlowDataSource();\n\n  aboutToAppear() {\n    this.datasource.setDataArray(waterFlowData);\n  }\n\n  build() {\n    WaterFlow({ footer: (): void => this.itemFoot() }) {\n      LazyForEach(this.datasource, (item: ProductItem) => {\n        FlowItem() {\n          FlowItemComponent({ item: item })\n        }\n      }, (item: ProductItem) => JSON.stringify(item))\n    }\n    .layoutWeight(Const.WATER_FLOW_LAYOUT_WEIGHT)\n    .layoutDirection(FlexDirection.Column)\n    .columnsTemplate(Const.WATER_FLOW_COLUMNS_TEMPLATE)\n    .columnsGap($r('app.float.water_flow_columns_gap'))\n    .rowsGap($r('app.float.water_flow_row_gap'))\n  }\n\n  @Builder\n  itemFoot() {\n    Column() {\n      Text($r('app.string.footer_text'))\n        .fontColor(Color.Gray)\n        .fontSize($r('app.float.footer_text_size'))\n        .width(Const.FULL_WIDTH)\n        .height($r('app.float.footer_text_height'))\n        .textAlign(TextAlign.Center)\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\view\\WaterFlowComponent.ets", "project_name": "codelabs-master", "id": "36b14cc82de423c2475f6d2ab115df76542a3095d289877fadd780380cb3360b"}
{"text": "export interface IProductBean {\n  \n  image_url: Resource;\n\n  \n  name: string;\n\n  \n  discount: string;\n\n  \n  price: string;\n\n  \n  promotion: string;\n\n  \n  bonus_points: string;\n}\n\n\nexport default class ProductBean implements IProductBean {\n  image_url: Resource;\n  name: string;\n  discount: string;\n  price: string;\n  promotion: string;\n  bonus_points: string;\n\n  constructor(props: ProductBean) {\n    this.image_url = props.image_url;\n    this.name = props.name;\n    this.discount = props.discount;\n    this.price = props.price;\n    this.promotion = props.promotion;\n    this.bonus_points = props.bonus_points;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\viewmodel\\ProductBean.ets", "project_name": "codelabs-master", "id": "67b81c6b6b2ec7c82f71554e2bf6062f74368d5f4b21741f3bb3b91b0bcf01b3"}
{"text": "import ProductItem from './ProductItem';\n\n\nexport class WaterFlowDataSource implements IDataSource {\n  private dataArray: ProductItem[] = [];\n  private listeners: DataChangeListener[] = [];\n\n  \n  public setDataArray(productDataArray: ProductItem[]): void {\n    this.dataArray = productDataArray;\n  }\n\n  \n  public totalCount(): number {\n    return this.dataArray.length;\n  }\n\n  \n  public getData(index: number): ProductItem {\n    return this.dataArray[index];\n  }\n\n  \n  registerDataChangeListener(listener: DataChangeListener): void {\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n    }\n  }\n\n  \n  unregisterDataChangeListener(listener: DataChangeListener): void {\n    let pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n    }\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WaterFlow\\entry\\src\\main\\ets\\viewmodel\\WaterFlowDataSource.ets", "project_name": "codelabs-master", "id": "c58835bcef08ba230906f4992d95d2846206a690d1cb7c69af1795b1708a719b"}
{"text": "import { NavigatorBean } from '../viewmodel/NavigatorBean';\nimport { CommonConstant as Const } from '../common/Constant';\n\n@Extend(Button) function fancy (top: string) {\n  .fontSize(Const.MainConstant_BUTTON_FONT_SIZE)\n  .fontColor($r('app.color.start_window_background'))\n  .width(Const.MainConstant_BUTTON_WIDTH)\n  .height(Const.MainConstant_BUTTON_HEIGHT)\n  .margin({ top: top })\n  .backgroundColor($r('app.color.blue'))\n  .borderRadius(Const.MainConstant_BUTTON_BORDER_RADIUS)\n}\n\n@Entry\n@Component\nstruct MainPage {\n  build() {\n    Column() {\n      Image($r('app.media.background'))\n        .width(Const.MainConstant_FULL_HEIGHT)\n        .height(Const.MainConstant_IMAGE_HEIGHT)\n      Navigator({ target: Const.WEB_PAGE_URI, type: NavigationType.Push }) {\n        Button($r('app.string.loadLocalH5'))\n          .fancy(Const.MainConstant_BUTTON_MARGIN_TOP)\n      }\n      .params({ path: Const.LOCAL_PATH, tips: $r('app.string.local') } as NavigatorBean)\n\n      Navigator({ target: Const.WEB_PAGE_URI, type: NavigationType.Push }) {\n        Button($r('app.string.loadCloudH5'))\n          .fancy(Const.MainConstant_BUTTON_MARGIN_TOP_BUTTON)\n      }\n      .params({ path: Const.CLOUD_PATH, tips: $r('app.string.online') } as NavigatorBean)\n    }\n    .height(Const.MainConstant_FULL_HEIGHT)\n    .backgroundColor($r('app.color.navy_blue'))\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WebComponent\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "ce183a23c8bee9efc6b9da0490f2b2a0c2b1602ab3a9ef342f5b703b4bb32c14"}
{"text": "export class NavigatorBean {\n  \n  path: Resource | string = '';\n\n  \n  tips: Resource | string = '';\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WebComponent\\entry\\src\\main\\ets\\viewmodel\\NavigatorBean.ets", "project_name": "codelabs-master", "id": "de73dc6657e0deca9699474d8faa78c5a87a0ed1ffc777c1f408f8169904090e"}
{"text": "import Logger from '../utils/Logger';\nimport { CommonConstants } from '../constants/CommonConstant';\n\n\nexport function showDialog(message: ResourceStr): void {\n  let newMessage = message.toString();\n  if (newMessage.length > CommonConstants.SUB_LENGTH) {\n    message = newMessage.substring(0, CommonConstants.SUB_LENGTH);\n  }\n  AlertDialog.show(\n    {\n      title: $r('app.string.dialog_message'),\n      message: message,\n      confirm: {\n        value: $r('app.string.button_confirm'),\n        action: () => {\n          Logger.info('Button-clicking callback');\n        }\n      },\n      cancel: () => {\n        Logger.info('Closed callbacks');\n      }\n    }\n  )\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WebCookie\\entry\\src\\main\\ets\\common\\utils\\DialogUtil.ets", "project_name": "codelabs-master", "id": "8c709e214ab2f4963957a7a795f8dfe742c041233124372b37b917e85937bbe7"}
{"text": "import web_webview from '@ohos.web.webview';\nimport { showDialog } from '../common/utils/DialogUtil';\nimport { CommonConstants } from '../common/constants/CommonConstant';\n\n\n@Entry\n@Component\nstruct Verify {\n  fileAccess: boolean = true;\n  controller: web_webview.WebviewController = new web_webview.WebviewController();\n  isRedirect: boolean = false;\n\n  onPageShow(): void {\n    this.isRedirect = false;\n  }\n\n  build() {\n    Column() {\n      Navigator({ target: CommonConstants.PAGE_INDEX, type: NavigationType.Back }) {\n        Row() {\n          Image($r('app.media.ic_back'))\n            .width(CommonConstants.BACK_WIDTH)\n            .height(CommonConstants.BACK_HEIGHT)\n            .objectFit(ImageFit.Contain)\n\n          Text($r('app.string.navigator_name'))\n            .fontSize(CommonConstants.NAVIGATOR_SIZE)\n            .fontWeight(CommonConstants.FONT_WEIGHT_DEEPER)\n            .fontColor($r('app.color.navigator_black'))\n        }\n        .width(CommonConstants.FULL_WIDTH)\n      }\n      .width(CommonConstants.FULL_WIDTH)\n      .margin({\n        top: CommonConstants.NAVIGATOR_MARGIN_TOP,\n        left: CommonConstants.NAVIGATOR_MARGIN_LEFT\n      })\n\n      Text($r('app.string.title_name'))\n        .fontSize(CommonConstants.TITLE_SIZE)\n        .fontWeight(CommonConstants.FONT_WEIGHT_DEEPER)\n        .fontColor($r('app.color.title_black'))\n        .width(CommonConstants.PAGE_TITLE_WIDTH)\n        .height(CommonConstants.PAGE_TITLE_HEIGHT)\n        .margin({\n          top: $r('app.float.page_title_margin_top'),\n          bottom: $r('app.float.page_title_margin_bottom')\n        })\n\n      Web({\n        src: CommonConstants.USER_ABOUT_URL,\n        controller: this.controller\n      })\n        .height(CommonConstants.WEB_HEIGHT)\n        .width(CommonConstants.WEB_WIDTH)\n        .fileAccess(this.fileAccess)\n        .javaScriptAccess(true)\n        .onPageEnd(() => {\n          try {\n            let originCookie = web_webview.WebCookieManager.getCookie(CommonConstants.USER_ABOUT_URL);\n            if (originCookie === '' || this.isRedirect) {\n              return;\n            }\n            this.isRedirect = true;\n            showDialog(originCookie);\n          } catch (error) {\n            showDialog('Failed to load the web page.'+JSON.stringify(error));\n          }\n        })\n    }\n    .backgroundColor($r('app.color.page_background_grey'))\n    .width(CommonConstants.FULL_WIDTH)\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\WebCookie\\entry\\src\\main\\ets\\pages\\Verify.ets", "project_name": "codelabs-master", "id": "249d836a9c208b68f39bc7e0fa8cd8d4101c39946c21057203d9bc8992bca5e8"}
{"text": "import web_webview from '@ohos.web.webview';\nimport { CommonConstants, CookieOperation } from '../common/constants/CommonConstant';\nimport { LinkButton } from '../view/LinkButton'\nimport { showDialog } from '../common/utils/DialogUtil';\n\n\n@Entry\n@Component\nstruct WebIndex {\n  controller: web_webview.WebviewController = new web_webview.WebviewController();\n\n  build() {\n    Column() {\n      Text($r('app.string.navigator_name'))\n        .fontSize(CommonConstants.NAVIGATOR_SIZE)\n        .fontWeight(CommonConstants.FONT_WEIGHT_DEEPER)\n        .fontColor($r('app.color.navigator_black'))\n        .width(CommonConstants.FULL_WIDTH)\n        .margin({\n          top: CommonConstants.APP_TITLE_MARGIN_TOP,\n          left: CommonConstants.APP_TITLE_MARGIN_LEFT\n        })\n\n      Text($r('app.string.title_name'))\n        .fontSize(CommonConstants.TITLE_SIZE)\n        .fontWeight(CommonConstants.FONT_WEIGHT_DEEPER)\n        .fontColor($r('app.color.title_black'))\n        .width(CommonConstants.PAGE_TITLE_WIDTH)\n        .height(CommonConstants.PAGE_TITLE_HEIGHT)\n        .margin({\n          top: $r('app.float.page_title_margin_top'),\n          bottom: $r('app.float.page_title_margin_bottom')\n        })\n\n      Web({\n        src: CommonConstants.USER_CENTER_URL,\n        controller: this.controller\n      })\n        .domStorageAccess(true)\n        .javaScriptAccess(true)\n        .height(CommonConstants.WEB_HEIGHT)\n        .width(CommonConstants.WEB_WIDTH)\n        .margin({ bottom: CommonConstants.WEB_MARGIN_BOTTOM })\n        .onErrorReceive((event) => {\n          if (event?.request.isMainFrame()) {\n            let message = $r('app.string.load_error');\n            showDialog(message);\n          }\n        })\n\n      Row() {\n        LinkButton({ buttonType: CookieOperation.GET_COOKIE, isNeedDivider: true })\n        LinkButton({ buttonType: CookieOperation.SET_COOKIE, isNeedDivider: true })\n        LinkButton({ buttonType: CookieOperation.DELETE_COOKIE, isNeedDivider: true })\n        LinkButton({ buttonType: CookieOperation.VERIFY_COOKIE, isNeedDivider: false })\n      }\n      .width(CommonConstants.WEB_WIDTH)\n    }\n    .backgroundColor($r('app.color.page_background_grey'))\n    .width(CommonConstants.FULL_WIDTH)\n    .height(CommonConstants.FULL_HEIGHT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WebCookie\\entry\\src\\main\\ets\\pages\\WebIndex.ets", "project_name": "codelabs-master", "id": "6bb32f5a3ff4abe7fccfc90f9a7f1380e82d36beb0c0e0d82d172cfbfcfbca21"}
{"text": "import UIAbility from '@ohos.app.ability.UIAbility';\nimport window from '@ohos.window';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport Logger from '../common/utils/Logger';\nimport WindowModel from '../model/WindowModel';\n\nexport default class EntryAbility extends UIAbility {\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    Logger.info('Ability onWindowStageCreate');\n\n    let windowModel = WindowModel.getInstance();\n    windowModel.setWindowStage(windowStage);\n    windowModel.setMainWindowImmersive();\n    windowStage.loadContent(CommonConstants.LOGIN_PAGE_URL, (err) => {\n      if (err.code) {\n        Logger.error(`Failed to load the content. Code:${err.code},message:${err.message}`);\n        return;\n      }\n    });\n  }\n}\n", "path": "codelabs-master\\HarmonyOS_NEXT\\WindowManager\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "codelabs-master", "id": "83d46a4c1ad81f55cf6e31d65d86f997d879223ae575a47ef187e705bd9c7704"}
{"text": "export default class GridItem {\n  \n  title: Resource;\n  \n  image: Resource = $r('app.media.ic_love');\n  \n  others?: Resource;\n\n  constructor(title: Resource, image: Resource, others?: Resource) {\n    this.title = title;\n    this.image = image;\n    this.others = others;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WindowManager\\entry\\src\\main\\ets\\viewmodel\\GridItem.ets", "project_name": "codelabs-master", "id": "7882c930b449f2cf70c81b704bc2053017656340c8eda54d22a836143fc398d3"}
{"text": "export default class VerifyItem {\n  \n  image: Resource;\n  \n  characters: string;\n\n  constructor(image: Resource, characters: string) {\n    this.image = image;\n    this.characters = characters;\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\WindowManager\\entry\\src\\main\\ets\\viewmodel\\VerifyItem.ets", "project_name": "codelabs-master", "id": "38c323a46f24466f8575ad0bf282637ac2f40a3e7acf4f87dd3403b264951c12"}
{"text": "import nativeRender from 'libnativerender.so';\nimport { ContextType } from '../entryability/EntryAbility';\nimport CommonConstants from '../common/CommonConstants';\n\nconst nativePageLifecycle: Record<string, () => void> =\n  nativeRender.getContext(ContextType.PAGE_LIFECYCLE) as Record<string, () => void>;\n\n@Entry\n@Component\nstruct Index {\n  private xComponentContext: Record<string, () => void> = {};\n\n  aboutToAppear(): void {\n    console.log('[LIFECYCLE-Index] aboutToAppear');\n    nativePageLifecycle.aboutToAppear();\n  }\n\n  aboutToDisappear(): void {\n    console.log('[LIFECYCLE-Index] aboutToDisappear');\n    nativePageLifecycle.aboutToDisappear();\n  }\n\n  onPageShow(): void {\n    console.log('[LIFECYCLE-Page] onPageShow');\n    nativePageLifecycle.onPageShow();\n  }\n\n  onPageHide(): void {\n    console.log('[LIFECYCLE-Page] onPageHide');\n    nativePageLifecycle.onPageHide();\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.title'))\n          .fontSize($r('app.float.title_text_font_size'))\n          .fontWeight(CommonConstants.FONT_WEIGHT)\n          .margin({\n            left: $r('app.float.title_text_margin_left'),\n            top: $r('app.float.title_text_margin_top')\n          })\n      }\n      .margin({ top: $r('app.float.title_margin_top') })\n      .width(CommonConstants.FULL_PARENT)\n      .height($r('app.float.title_height'))\n\n      Column() {\n        XComponent({\n          id: CommonConstants.XCOMPONENT_ID,\n          type: CommonConstants.XCOMPONENT_TYPE,\n          libraryname: CommonConstants.XCOMPONENT_LIBRARY_NAME\n        })\n          .onLoad((xComponentContext?: object | Record<string, () => void>) => {\n            if (xComponentContext) {\n              this.xComponentContext = xComponentContext as Record<string, () => void>;\n            }\n          })\n      }\n      .margin({\n        top: $r('app.float.xcomponent_margin_top'),\n        left: $r('app.float.xcomponent_margin_left'),\n        right: $r('app.float.xcomponent_margin_right')\n      })\n      .height(CommonConstants.XCOMPONENT_HEIGHT)\n\n      Row() {\n        Button($r('app.string.button_text'))\n          .fontSize($r('app.float.button_font_size'))\n          .fontWeight(CommonConstants.FONT_WEIGHT)\n          .margin({ bottom: $r('app.float.button_margin_bottom') })\n          .onClick(() => {\n            if (this.xComponentContext) {\n              this.xComponentContext.drawRectangle();\n            }\n          })\n          .width(CommonConstants.BUTTON_WIDTH)\n          .height($r('app.float.button_height'))\n      }\n      .width(CommonConstants.FULL_PARENT)\n      .justifyContent(FlexAlign.Center)\n      .alignItems(VerticalAlign.Bottom)\n      .layoutWeight(CommonConstants.LAYOUT_WEIGHT)\n    }\n    .width(CommonConstants.FULL_PARENT)\n    .height(CommonConstants.FULL_PARENT)\n  }\n}", "path": "codelabs-master\\HarmonyOS_NEXT\\XComponent\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "codelabs-master", "id": "bad6f70a91004672b3c748fa71f9fb0490d66ce18a2d32bf90d880cb0e6f55e5"}
{"text": "export { PreferenceManager } from './src/main/ets/datasource/datastore/PreferenceManager';\n\nexport { GlobalContext } from './src/main/ets/datasource/datastore/GlobalContext';", "path": "codelabs-master\\HmosWorld\\commons\\datastore\\Index.ets", "project_name": "codelabs-master", "id": "7b4ec43e6520e1aa45ecea0992b102608ce918d3935d0fdc4a643e27809f5ed8"}
{"text": "import { BusinessError } from '@ohos.base';\nimport connection from '@ohos.net.connection';\nimport promptAction from '@ohos.promptAction';\nimport cloud, { FunctionResult } from '@hw-agconnect/cloud';\nimport { Logger } from '@ohos/utils';\nimport ErrorCode from '../constants/ErrorCodeConstants';\n\nconst MAX_RETRIES = 3;\nconst TAG = '[Request]';\n\ninterface RejectError {\n  code: number;\n  message: string;\n}\n\n\nclass Request {\n  async performRequest(trigger: string, params?: Object, times?: number): Promise<Object> {\n    return new Promise((resolve: (value: Object | PromiseLike<Object>) => void, reject: ((reason?: RejectError) => void)) => {\n      Logger.info(TAG, 'Request call :' + trigger);\n      Logger.info(TAG, 'Request params :' + JSON.stringify(params));\n      connection.hasDefaultNet((error: BusinessError, data: Object) => {\n        if (!data) {\n          Logger.error(TAG, 'The default data network is disconnected ' + JSON.stringify(error));\n          promptAction.showToast({\n            message: $r('app.string.network_error_msg')\n          });\n          reject({ code: ErrorCode.ERROR_NETWORK_CONNECT_FAILED, message: 'The network seems to have deserted' });\n          return;\n        }\n\n        cloud.callFunction({\n          name: trigger,\n          version: '$latest',\n          timeout: 2000,\n          params: params\n        }).then((functionResult: FunctionResult) => {\n          Logger.info(TAG, 'Request call success--------' + JSON.stringify(functionResult));\n          resolve(functionResult.getValue().data);\n        }).catch((error: RejectError) => {\n          if (times && times > 0) {\n            Logger.error(TAG, 'retry times--------' + (MAX_RETRIES - times + 1));\n            resolve(request.performRequest(trigger, params, times - 1));\n          } else {\n            Logger.error(TAG, 'reject error--------' + JSON.stringify(error));\n            reject(error);\n          }\n        });\n      })\n    });\n  }\n\n  async call(trigger: string, params?: Object): Promise<Object> {\n    return await this.performRequest(trigger, params, MAX_RETRIES)\n  }\n}\n\nlet request = new Request();\n\nexport default request;", "path": "codelabs-master\\HmosWorld\\commons\\network\\src\\main\\ets\\agc\\Request.ets", "project_name": "codelabs-master", "id": "59466bdb32c4369cb75f1b23ee32d5dc73ce639c802aa7366c966753d43aa2e4"}
{"text": "export default class ErrorCode {\n  \n  static readonly ERROR_NETWORK_CONNECT_FAILED = 2100002;\n}", "path": "codelabs-master\\HmosWorld\\commons\\network\\src\\main\\ets\\constants\\ErrorCodeConstants.ets", "project_name": "codelabs-master", "id": "4e6adc88aa391bcd630903e412979cd1b5c9507495da496a0c2e0488bb8edd38"}
{"text": "export class Constants {\n\n  \n  static readonly SM_SPACE: number = 5;\n  static readonly MD_SPACE: number = 10;\n  static readonly LG_SPACE: number = 15;\n\n  \n  static readonly BLUR_SCALE: number = 0.15;\n\n  \n  static readonly SECOND_LEVEL_OPACITY: number = 0.6;\n\n  \n  static readonly DELAY_TIME: number = 30;\n}", "path": "codelabs-master\\HmosWorld\\commons\\uicomponents\\src\\main\\ets\\common\\Constants.ets", "project_name": "codelabs-master", "id": "7200a03da5f2bdca1b2cdecbf2831f1d56dd215beade1ea7afa6691dcda8472a"}
{"text": "import { Constants } from '../common/Constants';\nimport { CommonConstants, CommonUtil } from '@ohos/utils';\n\n@Component\nexport struct ActionButtonView {\n  @Prop imgResource: Resource = $r('app.media.ic_failure');\n  @Prop count: number = 0;\n  @Prop imageSize: number = 16;\n  @Prop fontSize: Resource = $r('app.float.small_text_size');\n  @Prop textWidth: Resource = $r('app.float.default_icon_width');\n  private horizontalAlign: FlexAlign = FlexAlign.Center;\n\n  build() {\n    Row() {\n      Image(this.imgResource)\n        .size({ width: this.imageSize, height: this.imageSize })\n        .margin({ right: $r('app.float.xs_padding_margin') })\n      Text(CommonUtil.transNumberOverOneThousand(this.count))\n        .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n        .fontSize(this.fontSize)\n        .width(this.textWidth)\n        .opacity(Constants.SECOND_LEVEL_OPACITY)\n    }\n    .width($r('app.float.action_button_width'))\n    .padding({ top: $r('app.float.sm_padding_margin') })\n    .alignItems(VerticalAlign.Center)\n    .justifyContent(this.horizontalAlign)\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\uicomponents\\src\\main\\ets\\components\\ActionButtonView.ets", "project_name": "codelabs-master", "id": "c7739e9602bd0dda24250de7614d8f696cb21086ba5bcad5ae34a86b5ef5d517"}
{"text": "import { CommonConstants } from '@ohos/utils';\n\n@Component\nexport struct LoadingLayout {\n  build() {\n    Column() {\n      Column() {\n        LoadingProgress()\n      }\n      .margin({top: $r('app.float.loading_img_margin')})\n      .width($r('app.float.loading_img_size'))\n      .height($r('app.float.loading_img_size'))\n    }\n    .height(CommonConstants.FULL_PERCENT)\n    .width(CommonConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\uicomponents\\src\\main\\ets\\components\\LoadingLayout.ets", "project_name": "codelabs-master", "id": "4b546264d74ee90b27fa12d160b50b91d363eeac5eaaf00ef9def80f296a3b79"}
{"text": "import { CommonConstants } from '@ohos/utils';\n\n@Component\nexport struct NoMoreLayout {\n  build() {\n    Row() {\n      Divider()\n        .color($r('app.color.no_more_divider_color'))\n        .height(1)\n        .layoutWeight(1)\n      Text($r('app.string.no_more'))\n        .fontColor($r('app.color.no_more_title_color'))\n        .fontSize($r('app.float.ssm_text_size'))\n        .margin($r('app.float.md_padding_margin'))\n      Divider()\n        .color($r('app.color.no_more_divider_color'))\n        .height(1)\n        .layoutWeight(1)\n    }\n    .alignItems(VerticalAlign.Center)\n    .width(CommonConstants.FULL_PERCENT)\n    .margin({ bottom: $r('app.float.no_more_layout_margin') })\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\uicomponents\\src\\main\\ets\\components\\NoMoreLayout.ets", "project_name": "codelabs-master", "id": "edf3483e7ab6369fd2da48ebac42039ce3c794fc437498d739fd37675a199abf"}
{"text": "import { CommonConstants } from '@ohos/utils';\n\n@Builder\nfunction DefaultBuilder() {\n}\n\n@Component\nexport struct TopNavigationView {\n  title?: ResourceStr;\n  @BuilderParam menuView?: CustomBuilder = DefaultBuilder;\n  onBackClick: Function = () => {\n  };\n  horizontalPadding: Resource = $r('app.float.xxl_padding_margin');\n\n  build() {\n    Row() {\n      Image($r('app.media.ic_back'))\n        .width($r('app.float.normal_img_size'))\n        .height($r('app.float.normal_img_size'))\n        .margin({ right: $r('app.float.lg_padding_margin') })\n        .onClick(() => this.onBackClick())\n\n      Text(this.title)\n        .fontSize($r('app.float.title_text_size'))\n        .fontWeight(FontWeight.Medium)\n        .textAlign(TextAlign.Start)\n        .layoutWeight(1)\n\n      Row() {\n        if (this.menuView) {\n          this.menuView();\n        }\n      }\n    }\n    .alignItems(VerticalAlign.Center)\n    .justifyContent(FlexAlign.SpaceBetween)\n    .width(CommonConstants.FULL_PERCENT)\n    .height($r('app.float.navigation_height'))\n    .padding({\n      left: this.horizontalPadding,\n      right: this.horizontalPadding\n    })\n  }\n}\n\n\n", "path": "codelabs-master\\HmosWorld\\commons\\uicomponents\\src\\main\\ets\\components\\TopNavigationView.ets", "project_name": "codelabs-master", "id": "2f53cc24c71f0e0ebe57b5f276af40cc4bc2fa18561fbc4f82f001faa797319f"}
{"text": "import { ColumnEnum, CommonConstants, Logger, OffsetEnum, SpanEnum, WebpageStatus } from '@ohos/utils';\nimport { FailureLayout } from './FailureLayout';\nimport { LoadingLayout } from './LoadingLayout';\n\nconst TAG = '[WebView]';\n\n@Component\nexport struct WebView {\n  handlePageEnd?: () => void;\n  url: ResourceStr = '';\n  isLarge?: boolean = true;\n  @Link webViewController: WebviewController;\n  @State webStatus: WebpageStatus = WebpageStatus.INIT;\n\n  build() {\n    GridRow({\n      columns: this.isLarge ? { sm: ColumnEnum.SM, md: ColumnEnum.MD, lg: ColumnEnum.LG } : 1,\n      gutter: {\n        x: {\n          sm: $r('app.float.xxl_padding_margin'),\n          md: $r('app.float.md_padding_margin'),\n          lg: $r('app.float.md_padding_margin')\n        }\n      },\n      breakpoints: { reference: BreakpointsReference.ComponentSize }\n    }) {\n      GridCol({\n        span: this.isLarge ? { sm: SpanEnum.SM, md: SpanEnum.MD, lg: SpanEnum.LG } : 1,\n        offset: this.isLarge ? { sm: OffsetEnum.SM, md: OffsetEnum.MD, lg: OffsetEnum.LG } : 0\n      }) {\n        Stack() {\n          Web({ controller: this.webViewController, src: this.url })\n            .darkMode(WebDarkMode.Auto)\n            .domStorageAccess(true)\n            .zoomAccess(true)\n            .fileAccess(true)\n            .mixedMode(MixedMode.All)\n            .cacheMode(CacheMode.None)\n            .javaScriptAccess(true)\n            .width(CommonConstants.FULL_PERCENT)\n            .onProgressChange((event) => {\n              Logger.info(TAG, 'newProgress:' + event?.newProgress);\n            })\n            .onPageBegin(() => {\n              Logger.info(TAG, 'start loading');\n            })\n            .onErrorReceive(() => {\n              this.webStatus = WebpageStatus.FINISHED\n            })\n            .onPageEnd(() => {\n              Logger.info(TAG, 'loading completed');\n              if (this.webStatus != WebpageStatus.ERROR) {\n                this.webStatus = WebpageStatus.FINISHED;\n                this.handlePageEnd && this.handlePageEnd();\n              }\n            })\n\n          if (this.webStatus === WebpageStatus.INIT) {\n            Column() {\n              LoadingLayout()\n            }\n            .backgroundColor(Color.White)\n          }\n\n          if (this.webStatus === WebpageStatus.ERROR) {\n            Column() {\n              FailureLayout({ handleReload: () => {\n                this.webViewController.refresh();\n                this.webStatus = WebpageStatus.INIT;\n              } })\n            }\n            .justifyContent(FlexAlign.Center)\n            .alignItems(HorizontalAlign.Center)\n            .backgroundColor(Color.White)\n            .width(CommonConstants.FULL_PERCENT)\n            .height(CommonConstants.FULL_PERCENT)\n          }\n        }\n      }\n    }\n    .layoutWeight(1)\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\uicomponents\\src\\main\\ets\\components\\WebView.ets", "project_name": "codelabs-master", "id": "3a9030ae679d4422889365b85210c28e64129b7bac36b95910979beb7ba856b7"}
{"text": "export class CommonUtil {\n  \n  public static formatNumToMaxText(count: number, max: number, replaceText: string): string {\n    return count > max ? max + replaceText : (count ?? 0).toString();\n  }\n\n  \n  public static transNumberOverOneThousand(count: number): string {\n    return CommonUtil.formatNumToMaxText(count, 999, '+');\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\utils\\src\\main\\ets\\utils\\CommonUtil.ets", "project_name": "codelabs-master", "id": "a548bd90fb1cb09e30cb864eea4e7804ac32f741eefee508d81c220d23b5c9b6"}
{"text": "import lottie, { AnimationConfigWithData, AnimationConfigWithPath, AnimationItem } from '@ohos/lottie';\n\nexport class LottieUtil {\n  public static loadAnimation(config: AnimationConfigWithPath | AnimationConfigWithData): AnimationItem {\n    return lottie.loadAnimation(config);\n  }\n\n  public static play(name?: string): void {\n    lottie.play(name);\n  }\n\n  public static destroy(name?: string): void {\n    lottie.destroy(name);\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\utils\\src\\main\\ets\\utils\\LottieUtil.ets", "project_name": "codelabs-master", "id": "29eef1d068d7d2fbba212d9bf947eea2c865375c456c96dd419c52a68800ba2b"}
{"text": "@Observed\nexport class ObservedArray<T> extends Array<T> {\n  constructor(args?: T[]) {\n    if (args instanceof Array) {\n      super(...args);\n    } else {\n      super();\n    }\n  }\n}\n", "path": "codelabs-master\\HmosWorld\\commons\\utils\\src\\main\\ets\\utils\\ObservedArray.ets", "project_name": "codelabs-master", "id": "a711db3788e6f0108193317d46cad640ca229629be61fbd294c558fd822581a9"}
{"text": "import common from '@ohos.app.ability.common';\nimport window from '@ohos.window';\nimport Logger from './Logger';\n\nconst TAG: string = '[WindowUtil]';\n\nexport class WindowUtil {\n  public static updateStatusBarColor(context: common.BaseContext, isDark: boolean) {\n    window.getLastWindow(context).then((windowClass: window.Window) => {\n      try {\n        windowClass.setWindowSystemBarProperties({ statusBarContentColor: isDark ? '#FFFFFF' : '#000000' }, (err) => {\n          if (err.code) {\n            Logger.error(TAG, 'Failed to set the system bar properties. Cause: ' + JSON.stringify(err));\n            return;\n          }\n          Logger.info(TAG, 'Succeeded in setting the system bar properties.');\n        });\n      } catch (exception) {\n        Logger.error(TAG, 'Failed to set the system bar properties. Cause: ' + JSON.stringify(exception));\n      }\n    });\n  }\n}", "path": "codelabs-master\\HmosWorld\\commons\\utils\\src\\main\\ets\\utils\\WindowUtil.ets", "project_name": "codelabs-master", "id": "1a53373f4007b34d7a1f703537ac9d065667fd9d78dbabf43d406253b6d48426"}
{"text": "\n\nimport webview from '@ohos.web.webview';\nimport { WebView } from '@ohos/uicomponents';\nimport { CommonConstants } from '@ohos/utils';\n\n@Component\nexport struct ActivityView {\n  url: string = 'https://developer.huawei.com/consumer/cn/hdc/hdc2023/ticket/101677813051874334/?ha_source=HDCminisite&ha_sourceId=89000360';\n  @Link webViewController: WebviewController;\n\n  aboutToAppear() {\n    this.webViewController = new webview.WebviewController();\n  }\n\n  build() {\n    Column() {\n      WebView({\n        url: this.url,\n        webViewController: $webViewController,\n      })\n    }\n    .padding({ top: AppStorage.get<number>('statusBarHeight') })\n    .backgroundColor(Color.White)\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\activity\\src\\main\\ets\\view\\ActivityView.ets", "project_name": "codelabs-master", "id": "31c970a139e47634e4e3f5abb2e641464d6c01a966ad76d444bf45c7ebe50af7"}
{"text": "import { ChallengeConstants as Const } from '../constants/ChallengeConstants';\nimport { MapElement } from '../model/MapData';\n\n@Component\nexport default struct AnimIcon {\n  private item: MapElement = new MapElement();\n  @State translateY: number = 0;\n  @State scaleX: number = 1;\n  @State scaleY: number = 1;\n\n  performAnimation(): void {\n    animateTo(\n      {\n        duration: Const.ANIMATION_DURATION_NORMAL,\n        curve: Curve.EaseIn,\n        iterations: -1,\n        playMode: PlayMode.Alternate,\n      }, () => {\n      this.translateY = Const.MAP_ICON_TRANSLATE_Y;\n      this.scaleX = Const.MAP_ICON_SCALE_X;\n      this.scaleY = Const.MAP_ICON_SCALE_Y;\n    });\n  }\n\n  build() {\n    Stack() {\n      Image($r('app.media.icon_bg'))\n        .height($r('app.float.map_icon_bg_size'))\n        .width($r('app.float.map_icon_bg_size'))\n      Image(this.item.icon)\n        .interpolation(ImageInterpolation.High)\n        .height($r('app.float.map_icon_size'))\n        .width($r('app.float.map_icon_size'))\n    }\n    .onAppear(() => {\n      const randomDelay = Math.floor(Math.random() * Const.ICON_RANDOM_DELAY);\n      setTimeout(() => {\n        this.performAnimation();\n      }, randomDelay);\n    })\n    .translate({ y: this.translateY })\n    .scale({ x: this.scaleX, y: this.scaleY })\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\components\\AnimIcon.ets", "project_name": "codelabs-master", "id": "c6a93c03dbcc583c10eab994f351c990749871d3ea5b84e783fd1ba5a30ea2de"}
{"text": "import { BreakpointType, BreakpointTypeEnum } from '@ohos/utils';\nimport ZonesItem from '../entity/ZonesItem';\nimport { ChallengeConstants as Const } from '../constants/ChallengeConstants';\n\n@Component\nexport default struct BuildListItem {\n  @Consume('introductionData') introductionData: ZonesItem;\n  @Prop buildingImgRatio: number = 0;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Image(this.introductionData.starLinePic[1])\n        .width(new BreakpointType<Length>({\n          sm: Const.PERCENT_86,\n          md: Const.PERCENT_70,\n          lg: Const.PERCENT_47\n        }).getValue(this.currentBreakpoint))\n        .margin({ bottom: $r('app.float.introduction_star_line_margin') })\n      Text(this.introductionData.buildingInformation)\n        .width(new BreakpointType<Length>({\n          sm: Const.PERCENT_86,\n          md: Const.PERCENT_93,\n          lg: Const.PERCENT_63\n        }).getValue(this.currentBreakpoint))\n        .fontSize($r('app.float.font_size_normal'))\n        .letterSpacing(0)\n      Column() {\n        Image(this.introductionData.buildingPic)\n          .width(Const.FULL_PERCENT)\n          .aspectRatio(Const.BUILD_TOP_ASPECT_RATIO)\n          .margin({ top: `${-this.buildingImgRatio * Const.BUILDING_COEFFICIENT}%` })\n      }\n      .width(new BreakpointType<Length>({\n        sm: Const.FULL_PERCENT,\n        md: Const.PERCENT_70,\n        lg: Const.PERCENT_47\n      }).getValue(this.currentBreakpoint))\n      .aspectRatio(Const.BUILDING_ASPECT_RATIO)\n      .borderRadius($r('app.float.introduction_image_border_radius'))\n      .margin({ top: $r('app.float.introduction_image_margin') })\n      .clip(true)\n    }\n    .width(Const.FULL_PERCENT)\n    .padding({ top: $r('app.float.xxl_padding_margin'), bottom: $r('app.float.xxl_padding_margin') })\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\components\\BuildListItem.ets", "project_name": "codelabs-master", "id": "df1a5c19a54b232a34d0734f772ee07ac5d71593efe268c36f38cd89388e94e5"}
{"text": "import curves from '@ohos.curves';\nimport { BreakpointType, BreakpointTypeEnum } from '@ohos/utils';\nimport ZonesItem from '../entity/ZonesItem';\nimport { ChallengeConstants as Const } from '../constants/ChallengeConstants';\nimport { ImageViewDialog } from './ImageViewDialog';\n\n@Component\nexport default struct DesignStyleSwiper {\n  @State currentIndex: number = Const.HALF_COUNT;\n  @Consume('introductionData') introductionData: ZonesItem;\n  @State isPresent: boolean = false;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  @Builder\n  PhotoBuilder() {\n    ImageViewDialog({ isPresent: $isPresent, currentIndex: $currentIndex })\n      .width(Const.FULL_PERCENT)\n      .height(Const.FULL_PERCENT)\n      .transition(TransitionEffect.opacity(1))\n      .backgroundBlurStyle(this.isPresent ? BlurStyle.Regular : BlurStyle.NONE, { colorMode: ThemeColorMode.DARK })\n  }\n\n  \n  getImgCoefficients(index: number): number {\n    let coefficient = this.currentIndex - index;\n    let tempCoefficient = Math.abs(coefficient);\n    if (tempCoefficient <= Const.HALF_COUNT) {\n      return coefficient;\n    }\n    let dataLength = this.introductionData.imageList.length;\n    let tempOffset = dataLength - tempCoefficient;\n    if (tempOffset <= Const.HALF_COUNT) {\n      if (coefficient > 0) {\n        return -tempOffset;\n      }\n      return tempOffset;\n    }\n    return 0;\n  }\n\n  \n  getOffSetX(index: number): number {\n    let offsetIndex = this.getImgCoefficients(index);\n    let tempOffset = Math.abs(offsetIndex);\n    let offsetX = 0;\n    if (tempOffset === 1) {\n      offsetX = -Const.IMAGE_X_OFFSET_MAX * offsetIndex;\n    } else if (tempOffset === Const.HALF_COUNT) {\n      offsetX = -Const.IMAGE_x_OFFSET_MIN * offsetIndex;\n    }\n    let scale: number = 1;\n    if (this.currentBreakpoint === BreakpointTypeEnum.MD) {\n      scale = 1.2\n    } else if (this.currentBreakpoint === BreakpointTypeEnum.LG) {\n      scale = 1.5;\n    }\n    return offsetX * scale;\n  }\n\n  startAnimation(isLeft: boolean): void {\n    animateTo({\n      duration: Const.IMAGE_ANIMATION_DURATION,\n    }, () => {\n      let dataLength = this.introductionData.imageList.length;\n      let tempIndex = isLeft ? this.currentIndex + 1 : this.currentIndex - 1 + dataLength;\n      this.currentIndex = tempIndex % dataLength;\n    });\n  }\n\n  build() {\n    Stack() {\n      ForEach(this.introductionData.imageList, (item: ResourceStr, index?: number) => {\n        if (index !== undefined) {\n          Row() {\n            Image(item)\n              .objectFit(ImageFit.ScaleDown)\n              .geometryTransition(index === this.currentIndex ? 'share_' + this.currentIndex : '')\n              .shadow({\n                radius: Const.SHADOW_RADIUS,\n                color: Const.SHADOW_COLOR,\n                offsetY: Const.SHADOW_RADIUS / Const.DOUBLE_NUM\n              })\n              .borderRadius($r('app.float.small_image_border_radius'))\n          }\n          .offset({ x: this.getOffSetX(index), y: 0 })\n          .zIndex(index !== this.currentIndex && this.getImgCoefficients(index) === 0 ?\n            0 : Const.HALF_COUNT - Math.abs(this.getImgCoefficients(index)))\n          .height(index !== this.currentIndex && this.getImgCoefficients(index) === 0 ?\n          Const.IMAGE_HEIGHT_MIN : `${Const.FULL_PERCENT_NUMBER -\n              Const.IMAGE_WIDTH_OFFSET * Math.abs(this.getImgCoefficients(index))}%`)\n          .aspectRatio(Const.IMAGE_ASPECT_RATIO)\n          .onClick(() => {\n            animateTo({ curve: curves.springMotion(Const.SPRING_RESPONSE, Const.DAMPING_FRACTION) }, () => {\n              this.isPresent = !this.isPresent;\n            });\n          })\n        }\n      })\n    }\n    .width(new BreakpointType<Length>({\n      sm: Const.PERCENT_86,\n      md: Const.PERCENT_70,\n      lg: Const.PERCENT_47\n    }).getValue(this.currentBreakpoint))\n    .aspectRatio(1.48)\n    .alignContent(Alignment.Center)\n    .bindContentCover($$this.isPresent, this.PhotoBuilder, ModalTransition.NONE)\n    .gesture(\n      PanGesture({ direction: PanDirection.Horizontal })\n        .onActionStart((event?: GestureEvent) => {\n          if (event) {\n            this.startAnimation(event.offsetX < 0)\n          }\n        })\n    )\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\components\\DesignStyleSwiper.ets", "project_name": "codelabs-master", "id": "9a39e46ec55446a164f8dfebc7d8e8446129e14f25e2cfa37c128cd6ab05aa80"}
{"text": "import { ChallengeConstants } from '../constants/ChallengeConstants';\n\n@Component\nexport default struct StrokeText {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true);\n  private context: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings);\n  private textColor: string = '';\n  private textStr: string = '';\n  @State canvasWidth: number = 0;\n  @State canvasHeight: number = 0;\n\n  build() {\n    Column() {\n      Canvas(this.context)\n        .onReady(() => {\n          let ctx = this.context;\n          this.context.textBaseline = 'top';\n          ctx.font = ChallengeConstants.MAP_ICON_FONT_STYLE;\n          ctx.fillStyle = this.textColor;\n          ctx.strokeStyle = Color.White;\n          ctx.lineWidth = 1;\n          this.canvasWidth = this.context.measureText(this.textStr).width;\n          this.canvasHeight = this.context.measureText(this.textStr).height;\n          ctx.strokeText(this.textStr, 0, 0);\n          ctx.fillText(this.textStr, 0, 0);\n        })\n    }\n    .width(this.canvasWidth)\n    .height(this.canvasHeight)\n    .margin({ top: $r('app.float.map_text_margin_top') })\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\components\\StrokeText.ets", "project_name": "codelabs-master", "id": "eeda56b1c2da8a0341fee500e2342580d05102e4f8f837a8bb50de6210112da8"}
{"text": "import { BreakpointType, BreakpointTypeEnum } from '@ohos/utils';\nimport ZonesItem from '../entity/ZonesItem';\nimport { ChallengeConstants as Const } from '../constants/ChallengeConstants';\nimport DesignStyleSwiper from './DesignStyleSwiper';\n\n@Component\nexport default struct StyleListItem {\n  @Consume('introductionData') introductionData: ZonesItem;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      ForEach(this.introductionData.content, (item: string) => {\n        Text(item)\n          .width(new BreakpointType<Length>({\n            sm: Const.PERCENT_86,\n            md: Const.PERCENT_93,\n            lg: Const.PERCENT_63\n          }).getValue(this.currentBreakpoint))\n          .fontSize($r('app.float.font_size_normal'))\n          .margin({ bottom: $r('app.float.xxl_padding_margin') })\n      }, (item: ResourceStr) => JSON.stringify(item))\n      Column() {\n        DesignStyleSwiper()\n      }\n      .margin({\n        top: $r('app.float.xxl_padding_margin'),\n        bottom: $r('app.float.xxl_padding_margin') })\n    }\n    .width(Const.FULL_PERCENT)\n    .padding({ top: $r('app.float.xxl_padding_margin'), bottom: $r('app.float.xxl_padding_margin') })\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\components\\StyleListItem.ets", "project_name": "codelabs-master", "id": "71ed0529dcba2455f3cf799c7e29b860f556d32773eedd99c60592cbf2fc73f0"}
{"text": "import { BreakpointType, BreakpointTypeEnum } from '@ohos/utils';\nimport { ChallengeConstants as Const } from '../constants/ChallengeConstants';\nimport ZonesItem from '../entity/ZonesItem';\n\nconst ASPECT_MD: number = 0.7;\nconst ASPECT_LG: number = 0.47;\n\n@Component\nexport default struct SubTitleItem {\n  private deviceWidth: number = (AppStorage.get('deviceWidth') as number);\n  @State imgHeight: number = Math.ceil(this.deviceWidth / Const.TOP_IMG_ASPECT);\n  @Consume('introductionData') introductionData: ZonesItem;\n  @Prop topImgOffset: number = 0;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Text(this.introductionData.title)\n        .fontSize($r('app.float.navigation_title_size'))\n        .fontColor($r('app.color.white'))\n        .fontWeight(FontWeight.Medium)\n        .margin({ top: $r('app.float.zone_title_margin') })\n      Text(this.introductionData.subTitle)\n        .fontSize($r('app.float.font_size_normal'))\n        .margin({ bottom: $r('app.float.xxl_padding_margin'), top: $r('app.float.normal_margin') })\n        .fontColor($r('app.color.desc_white_font_color'))\n      Image(this.introductionData.starLinePic[0])\n        .height($r('app.float.star_img_height'))\n        .aspectRatio(Const.STAR_IMG_ASPECT)\n      Column() {\n        Text(this.introductionData.createTime)\n          .fontSize($r('app.float.font_size_normal'))\n          .fontColor($r('app.color.desc_white_font_color'))\n      }\n      .padding({ top: $r('app.float.sub_title_margin_bottom'), bottom: $r('app.float.zone_desc_margin') })\n      .backgroundColor(this.introductionData.backgroundColor)\n      .zIndex(2)\n\n      Stack({ alignContent: Alignment.Top }) {\n        Image(this.introductionData.subPicMedium)\n          .offset({ x: 0, y: -this.topImgOffset })\n          .width(new BreakpointType<Length>({\n            sm: Const.FULL_PERCENT,\n            md: Const.PERCENT_70,\n            lg: Const.PERCENT_47\n          }).getValue(this.currentBreakpoint))\n          .height(Math.floor(this.deviceWidth * new BreakpointType<number>({\n            sm: 1,\n            md: ASPECT_MD,\n            lg: ASPECT_LG\n          }).getValue(this.currentBreakpoint) / Const.TOP_IMG_ASPECT))\n          .objectFit(ImageFit.Fill)\n        Image(this.introductionData.subPicTop)\n          .objectFit(ImageFit.Cover)\n          .width(new BreakpointType<Length>({\n            sm: Const.FULL_PERCENT,\n            md: Const.PERCENT_70,\n            lg: Const.PERCENT_47\n          }).getValue(this.currentBreakpoint))\n      }\n      .width(Const.FULL_PERCENT)\n      .height(Math.floor(this.deviceWidth * new BreakpointType<number>({\n        sm: 1,\n        md: ASPECT_MD,\n        lg: ASPECT_LG\n      }).getValue(this.currentBreakpoint) / Const.TOP_IMG_ASPECT - this.topImgOffset))\n      .clip(true)\n    }\n    .width(Const.FULL_PERCENT)\n    .alignItems(HorizontalAlign.Center)\n    .backgroundColor(this.introductionData.backgroundColor)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\components\\SubTitleItem.ets", "project_name": "codelabs-master", "id": "2186144ca5044da3170906f544a95f2f5d81f285df0c87d6d2d1d4c5d2a83886"}
{"text": "\n\nimport router from '@ohos.router';\nimport webview from '@ohos.web.webview';\nimport { TopNavigationView, WebView } from '@ohos/uicomponents';\nimport { ChallengeConstants } from '../constants/ChallengeConstants';\n\n@Entry\n@Component\nstruct ChallengeDetailPage {\n  url = 'https://developer.huawei.com/consumer/cn/hdc/hdc2023/codelabs/index.html';\n  @State webViewController: webview.WebviewController = new webview.WebviewController();\n\n  onBackPress(): boolean {\n    if (this.webViewController.accessBackward()) {\n      this.webViewController.backward();\n      return true;\n    }\n    return false;\n  }\n\n  build() {\n    Column() {\n      TopNavigationView({\n        title: $r('app.string.code_lab_challenge'),\n        onBackClick: () => {\n          const isBack: boolean = this.onBackPress();\n          if (!isBack) {\n            router.back();\n          }\n        }\n      })\n      WebView({\n        url: this.url,\n        webViewController: $webViewController,\n      })\n    }\n    .padding({ top: AppStorage.get<number>('statusBarHeight') })\n    .width(ChallengeConstants.FULL_PERCENT)\n    .height(ChallengeConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\challenge\\src\\main\\ets\\pages\\ChallengeDetailPage.ets", "project_name": "codelabs-master", "id": "7b88fcd3f7e0b8753e533f1b55fe8395402b71a78c23033215f6ab4c09faa9ff"}
{"text": "export { DiscoverView } from './src/main/ets/DiscoverView';\n\nexport { ArticleDetailView } from './src/main/ets/components/ArticleDetailView';\n\nexport { FeedList } from './src/main/ets/components/FeedList';", "path": "codelabs-master\\HmosWorld\\features\\discover\\Index.ets", "project_name": "codelabs-master", "id": "2761c2fec0ab780cd07cd38544bc6e47ec7a81c114c4bdeaeddc4c36978616d2"}
{"text": "import webview from '@ohos.web.webview';\nimport common from '@ohos.app.ability.common';\nimport { EventTypeEnum, LearningResource, UserModel } from '@ohos/mine';\nimport { InteractiveAreaView, TopNavigationView, WebView } from '@ohos/uicomponents';\nimport { CommonConstants, ObservedArray, ResourcesType } from '@ohos/utils';\n\nconst eventHub: common.EventHub = (getContext(this) as common.UIAbilityContext).eventHub;\n\n@Component\nexport struct ArticleDetailView {\n  onDestinationBack: () => boolean = () => false;\n  @Prop articleDetail: LearningResource = new LearningResource();\n  @Link webViewController: WebviewController;\n  @State userModel: UserModel = UserModel.getInstance();\n  @State collectedIds: ObservedArray<string> = this.userModel.collectedIds;\n  @State likedIds: ObservedArray<string> = this.userModel.likedIds;\n  @State showInteractiveArea: boolean = true;\n\n  aboutToAppear() {\n    this.webViewController = new webview.WebviewController();\n  }\n\n  isCollected(): boolean {\n    return this.collectedIds.some((id: string) => id === this.articleDetail.id);\n  }\n\n  isLiked(): boolean {\n    return this.likedIds.some((id: string) => id === this.articleDetail.id);\n  }\n\n  build() {\n    NavDestination() {\n      Column() {\n        TopNavigationView({\n          title: this.articleDetail.type === ResourcesType.FEED ? $r('app.string.feed') : $r('app.string.article'),\n          onBackClick: this.onDestinationBack\n        })\n        Stack({ alignContent: Alignment.Bottom }) {\n          Column() {\n            WebView({\n              url: this.articleDetail.webUrl,\n              webViewController: $webViewController,\n              handlePageEnd: () => {\n                if (this.webViewController.accessBackward()) {\n                  this.showInteractiveArea = false;\n                } else {\n                  this.showInteractiveArea = true;\n                }\n              }\n            })\n          }\n          .padding({\n            left: $r('app.float.md_padding_margin'),\n            right: $r('app.float.md_padding_margin')\n          })\n\n          if (this.showInteractiveArea) {\n            InteractiveAreaView({\n              isLiked: this.isLiked(),\n              isCollected: this.isCollected(),\n              onCollected: () => {\n                eventHub.emit(EventTypeEnum.COLLECTED, {\n                  resourceId: this.articleDetail.id,\n                  resourceType: this.articleDetail.type,\n                  actionValue: !this.isCollected()\n                })\n              },\n              onLiked: () => {\n                eventHub.emit(EventTypeEnum.LIKED, {\n                  resourceId: this.articleDetail.id,\n                  resourceType: this.articleDetail.type,\n                  actionValue: !this.isLiked()\n                })\n              }\n            })\n              .margin({ bottom: $r('app.float.top_navigation_height') })\n          }\n        }\n      }\n      .padding({ top: AppStorage.get<number>('statusBarHeight') })\n      .width(CommonConstants.FULL_PERCENT)\n      .height(CommonConstants.FULL_PERCENT)\n    }\n    .hideTitleBar(true)\n    .onBackPressed(() => this.onDestinationBack())\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\components\\ArticleDetailView.ets", "project_name": "codelabs-master", "id": "4e92e02a64c2f5825fdbd47727c5415db62f29753bc4b2ea8aa48d821a21f764"}
{"text": "import { LearningResource } from '@ohos/mine';\nimport { LoadingMoreLayout, NoMoreLayout, TopNavigationView } from '@ohos/uicomponents';\nimport { BreakpointType, BreakpointTypeEnum, CommonConstants, LoadingStatus, ObservedArray } from '@ohos/utils';\nimport { DiscoverModel } from '../model/DiscoverModel';\nimport { FeedCardView } from './feed/FeedCardView';\n\nconst LOAD_MORE_MIN_DRAG_DISTANCE = 60;\n\n@Component\nexport struct FeedList {\n  onDestinationBack: () => void = () => {\n  };\n  @State webViewController?: WebviewController = undefined;\n\n  build() {\n    NavDestination() {\n      Column() {\n        TopNavigationView({\n          title: $r('app.string.hot_feeds'),\n          onBackClick: () => this.onDestinationBack()\n        })\n        HotFeeds()\n      }\n      .padding({\n        top: AppStorage.get<number>('statusBarHeight'),\n      })\n      .justifyContent(FlexAlign.Center)\n      .constraintSize({ minHeight: CommonConstants.FULL_PERCENT })\n      .backgroundColor($r('app.color.page_background_color'))\n      .width(CommonConstants.FULL_PERCENT)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .hideTitleBar(true)\n    .onBackPressed(() => {\n      this.onDestinationBack();\n      return true;\n    })\n  }\n}\n\n@Component\nstruct HotFeeds {\n  @State discoverModel: DiscoverModel = DiscoverModel.getInstance();\n  @State hotFeedList: ObservedArray<LearningResource> = this.discoverModel.hotFeedList;\n  @State isListReachEnd: boolean = false;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  build() {\n    List() {\n      ListItem() {\n        Column() {\n          List({ space: CommonConstants.SPACE_12 }) {\n            ForEach(this.hotFeedList, (item: LearningResource, index?: number) => {\n              ListItem() {\n                NavRouter({ name: 'articleDetail', param: item }) {\n                  FeedCardView({ feedItem: item })\n                }\n              }\n              .padding({\n                left: index && index % new BreakpointType({\n                  sm: 2,\n                  md: 3,\n                  lg: 6\n                }).getValue(this.currentBreakpoint) !== 0 ? $r('app.float.md_padding_margin') : 0,\n              })\n            }, (item: LearningResource) => item.id)\n          }\n          .lanes(new BreakpointType({\n            sm: 2,\n            md: 3,\n            lg: 6\n          }).getValue(this.currentBreakpoint))\n          .alignListItem(ListItemAlign.Start)\n          .scrollBar(BarState.Off)\n        }\n      }\n\n      if (this.discoverModel.loadingFeedStatus === LoadingStatus.LOADING) {\n        ListItem() {\n          LoadingMoreLayout()\n        }\n      }\n\n      if (!this.discoverModel.hasNextFeed) {\n        ListItem() {\n          NoMoreLayout()\n        }\n      }\n    }\n    .onReachEnd(() => {\n      this.isListReachEnd = true;\n    })\n    .parallelGesture(\n      PanGesture({ direction: PanDirection.Up, distance: LOAD_MORE_MIN_DRAG_DISTANCE })\n        .onActionStart(() => {\n          if (this.isListReachEnd) {\n            this.discoverModel.loadMoreFeed();\n            this.isListReachEnd = false;\n          }\n        })\n    )\n    .padding({\n      left: $r('app.float.md_padding_margin'),\n      right: $r('app.float.md_padding_margin')\n    })\n    .width(CommonConstants.FULL_PERCENT)\n    .scrollBar(BarState.Off)\n    .layoutWeight(1)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\components\\FeedList.ets", "project_name": "codelabs-master", "id": "5a87b64c6ccd11e8728a2c37a124b1d1e8531aa933ad35ff0f9d5556412e456a"}
{"text": "import { LearningResource } from '@ohos/mine';\nimport { ActionButtonView, ArticleCardButtonView } from '@ohos/uicomponents';\nimport { CommonConstants } from '@ohos/utils';\n\n@Reusable\n@Component\nexport struct ArticleCardView {\n  @Prop isCollected: boolean = false;\n  @Prop isLiked: boolean = false;\n  @Prop articleItem: LearningResource = new LearningResource();\n  onCollected?: () => void;\n  onLiked?: () => void;\n\n  aboutToReuse(params: Record<string, Object>): void {\n    this.isCollected = params.isCollected as boolean;\n    this.isLiked = params.isLiked as boolean;\n  }\n\n  build() {\n    Row({ space: CommonConstants.SPACE_16 }) {\n      Column() {\n        Column() {\n          Text(this.articleItem.title)\n            .fontSize($r('app.float.md_font_size'))\n            .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .opacity(CommonConstants.FIRST_LEVEL_OPACITY)\n            .maxLines(CommonConstants.MAX_LINE_TWO)\n            .margin({ bottom: $r('app.float.xs_padding_margin') })\n\n          Text(this.articleItem.brief)\n            .fontSize($r('app.float.sm_font_size'))\n            .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n            .opacity(CommonConstants.SECOND_LEVEL_OPACITY)\n            .maxLines(1)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .textAlign(TextAlign.Start)\n        }\n        .alignItems(HorizontalAlign.Start)\n        .layoutWeight(1)\n\n        Row() {\n          ActionButtonView({\n            imgResource: $r('app.media.ic_eye_open'),\n            count: this.articleItem.viewsCount,\n            textWidth: $r('app.float.view_count_icon_width')\n          })\n\n          ArticleCardButtonView({\n            clickAnimationPath: 'common/lottie/liked_lottie.json',\n            cancelAnimationPath: 'common/lottie/cancel_liked_lottie.json',\n            isClicked: this.isLiked,\n            count: this.articleItem.likesCount,\n            articleId: this.articleItem.id,\n            textWidth: $r('app.float.like_icon_width'),\n            type: 'like',\n            onClicked: this.onLiked,\n            normalImage: $r('app.media.btn_good_normal'),\n            onImage: $r('app.media.btn_good_on')\n          })\n            .onClick(() => {\n              this.onLiked?.();\n            })\n\n          ArticleCardButtonView({\n            clickAnimationPath: 'common/lottie/collected_lottie.json',\n            cancelAnimationPath: 'common/lottie/cancel_collect_lottie.json',\n            isClicked: this.isCollected,\n            count: this.articleItem.collectionCount,\n            articleId: this.articleItem.id,\n            textWidth: $r('app.float.star_icon_width'),\n            type: 'collect',\n            onClicked: this.onCollected,\n            normalImage: $r('app.media.btn_favorites_normal'),\n            onImage: $r('app.media.btn_favorites_on')\n          })\n            .onClick(() => {\n              this.onCollected?.();\n            })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .justifyContent(FlexAlign.SpaceBetween)\n      }\n      .layoutWeight(1)\n      .height(CommonConstants.FULL_PERCENT)\n      .justifyContent(FlexAlign.SpaceAround)\n\n      Image(this.articleItem.headerImageUrl)\n        .interpolation(ImageInterpolation.High)\n        .height($r('app.float.article_card_image_height'))\n        .width($r('app.float.article_card_image_width'))\n        .borderRadius($r('app.float.md_border_radius'))\n        .alt($r('app.media.img_placeholder'))\n        .objectFit(ImageFit.Cover)\n    }\n    .padding($r('app.float.md_padding_margin'))\n    .borderRadius($r('app.float.lg_border_radius'))\n    .backgroundColor(Color.White)\n    .alignItems(VerticalAlign.Top)\n    .width(CommonConstants.FULL_PERCENT)\n    .height($r('app.float.article_card_height'))\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\components\\article\\ArticleCardView.ets", "project_name": "codelabs-master", "id": "61e05287d17e7f55b5e79eeb2ffe034777e3c79eae76e1e1ca7e003f491103b1"}
{"text": "import { LearningResource } from '@ohos/mine';\nimport { CommonConstants, CommonUtil, Logger, TagColorMap } from '@ohos/utils';\n\nconst IMAGE_HEIGHT = '55%';\nconst TITLE_HEIGHT = '28%';\nconst TOPICS_HEIGHT = '16%';\nconst MAX_TOPIC_NUM = 2;\nconst TAG = '[FeedCardView]';\n\n@Reusable\n@Component\nexport struct FeedCardView {\n  @Prop feedItem: LearningResource = new LearningResource();\n\n  aboutToReuse(params: Record<string, Object>) {\n    this.feedItem = params.feedItem as LearningResource;\n    Logger.info(TAG, 'aboutToReuse');\n  }\n\n  build() {\n    Column() {\n      Stack({ alignContent: Alignment.BottomEnd }) {\n        Image(this.feedItem.headerImageUrl)\n          .alt($r('app.media.img_placeholder'))\n          .borderRadius({\n            topLeft: $r('app.float.lg_border_radius'),\n            topRight: $r('app.float.lg_border_radius')\n          })\n          .objectFit(ImageFit.Cover)\n          .height(CommonConstants.FULL_PERCENT)\n          .width(CommonConstants.FULL_PERCENT)\n        ViewsCountLabel({ viewsCount: this.feedItem.viewsCount })\n      }\n      .height(IMAGE_HEIGHT)\n      .width(CommonConstants.FULL_PERCENT)\n\n      Text(this.feedItem.title)\n        .width(CommonConstants.FULL_PERCENT)\n        .fontSize($r('app.float.md_font_size'))\n        .textAlign(TextAlign.Start)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .maxLines(CommonConstants.MAX_LINE_TWO)\n        .height(TITLE_HEIGHT)\n        .padding({\n          top: $r('app.float.sm_padding_margin'),\n          bottom: $r('app.float.xs_padding_margin'),\n          left: $r('app.float.md_padding_margin'),\n          right: $r('app.float.md_padding_margin')\n        })\n\n      Row() {\n        if (this.feedItem.topics.length > 0) {\n          ForEach(this.feedItem.topics.slice(0, MAX_TOPIC_NUM), (topic: string) => {\n            LabelCard({ text: topic })\n              .margin({ right: $r('app.float.xs_padding_margin') })\n          }, (item: string) => item)\n        }\n      }\n      .width(CommonConstants.FULL_PERCENT)\n      .height(TOPICS_HEIGHT)\n      .borderRadius({\n        bottomLeft: $r('app.float.lg_border_radius'),\n        bottomRight: $r('app.float.lg_border_radius')\n      })\n      .padding({\n        left: $r('app.float.md_padding_margin'),\n        right: $r('app.float.md_padding_margin'),\n        bottom: $r('app.float.md_padding_margin')\n      })\n    }\n    .backgroundColor(Color.White)\n    .borderRadius($r('app.float.lg_border_radius'))\n    .height($r('app.float.feed_card_height'))\n  }\n}\n\n@Component\nstruct LabelCard {\n  @Prop text: string = '';\n\n  build() {\n    Row() {\n      Text(this.text)\n        .fontSize($r('app.float.xs_font_size'))\n        .fontColor('#' + TagColorMap.get(this.text))\n        .textAlign(TextAlign.Center)\n        .fontWeight(FontWeight.Medium)\n        .fontFamily(CommonConstants.HARMONY_HEITI_MEDIUM_FONT_FAMILY)\n    }\n    .borderRadius($r('app.float.xs_border_radius'))\n    .backgroundColor('#1A' + TagColorMap.get(this.text))\n    .padding({\n      left: $r('app.float.sm_padding_margin'),\n      right: $r('app.float.sm_padding_margin'),\n      top: $r('app.float.feed_label_padding'),\n      bottom: $r('app.float.feed_label_padding')\n    })\n  }\n}\n\n@Component\nstruct ViewsCountLabel {\n  @Prop viewsCount: number = 0;\n\n  build() {\n    Row() {\n      Image($r('app.media.ic_eye_open'))\n        .size({ width: $r('app.float.icon_size'), height: $r('app.float.icon_size') })\n        .fillColor(Color.White)\n        .margin({ right: $r('app.float.xs_padding_margin') })\n\n      Text(CommonUtil.transNumberOverOneThousand(this.viewsCount))\n        .fontSize($r('app.float.sm_font_size'))\n        .textAlign(TextAlign.Center)\n        .fontColor(Color.White)\n        .opacity(CommonConstants.FIRST_LEVEL_OPACITY)\n    }\n    .height($r('app.float.view_count_height'))\n    .padding({ left: $r('app.float.xs_padding_margin'), right: $r('app.float.xs_padding_margin') })\n    .backgroundColor($r('app.color.view_counts_bg_color'))\n    .borderRadius($r('app.float.md_border_radius'))\n    .margin({ right: $r('app.float.sm_padding_margin'), bottom: $r('app.float.sm_padding_margin') })\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\components\\feed\\FeedCardView.ets", "project_name": "codelabs-master", "id": "8e7ec21253e2165050e35c6888959a362ef3e17842ef8a9e40add46a295b9f85"}
{"text": "import { LearningResource } from '@ohos/mine';\nimport { ResourcesData } from './ResourcesData';\n\nexport interface HomeResources {\n  \n  bannerList: LearningResource[];\n\n  \n  feedData: ResourcesData;\n\n  \n  articleData: ResourcesData;\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\model\\HomeResource.ets", "project_name": "codelabs-master", "id": "8573c62ec72d56524c42873157c89a7e97f63e04a3d8c94683f6f678e5439f98"}
{"text": "export interface UserIdParams {\n  userId: string;\n}\n\nexport interface GetMoreResourcesParams extends UserIdParams {\n  type: string;\n  pageNum: number;\n  pageSize: number;\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\service\\DiscoverParams.ets", "project_name": "codelabs-master", "id": "6059f9b9e2d684f306129be8526af03c66ff4a6352b5e07402ce84f9fbbdf81f"}
{"text": "export enum DiscoverTrigger {\n  \n  HOME_RESOURCE = 'home-resource',\n  \n  RESOURCE_PAGE = 'resource-list'\n}", "path": "codelabs-master\\HmosWorld\\features\\discover\\src\\main\\ets\\service\\DiscoverTrigger.ets", "project_name": "codelabs-master", "id": "27d7a35a205edae53b0cf74b2c7a1b9596785d151377b47d8854531c9c92fd7a"}
{"text": "import { LearningConstants } from '../constants/LearningConstants';\nimport { LearningPath } from '../entity/LearningPath';\n\nconst IMG_ASPECT_RATIO: number = 1.78;\nconst MAX_LINES: number = 2;\nconst SPACE: number = 4;\n\n@Component\nexport struct LearningItem {\n  @Prop learningItem: LearningPath;\n\n  build() {\n    Column() {\n      Image(this.learningItem.thumbnail)\n        .width(LearningConstants.FULL_PERCENT)\n        .aspectRatio(IMG_ASPECT_RATIO)\n      Column({ space: SPACE }) {\n        Text(this.learningItem.title)\n          .textAlign(TextAlign.Start)\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .maxLines(1)\n          .fontSize($r('app.float.font_size_normal'))\n          .width(LearningConstants.FULL_PERCENT)\n        Text(this.learningItem.brief)\n          .textAlign(TextAlign.Start)\n          .fontColor($r('app.color.achieve_grey_text_color'))\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .fontSize($r('app.float.font_size_small'))\n          .maxLines(MAX_LINES)\n          .width(LearningConstants.FULL_PERCENT)\n      }\n      .width(LearningConstants.FULL_PERCENT)\n      .padding($r('app.float.md_padding_margin'))\n    }\n    .clip(true)\n    .borderRadius($r('app.float.common_border_radius'))\n    .backgroundColor(Color.White)\n    .width(LearningConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\learning\\src\\main\\ets\\components\\LearningItem.ets", "project_name": "codelabs-master", "id": "3836b054ddf5f3e2dca2490501dd70e12d76482744d477292d0d632e74cadd98"}
{"text": "@Observed\nexport class LearningPath {\n  id: string;\n  title: string;\n  brief: string;\n  url: string;\n  isLearned: boolean;\n  achieveImg: ResourceStr;\n  thumbnail: ResourceStr;\n\n  constructor(id: string, title: string, url: string, brief: string,\n              achieveImg: ResourceStr, thumbnail: ResourceStr, isLearned: boolean) {\n    this.id = id;\n    this.title = title;\n    this.brief = brief;\n    this.url = url;\n    this.achieveImg = achieveImg;\n    this.thumbnail = thumbnail;\n    this.isLearned = isLearned;\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\learning\\src\\main\\ets\\entity\\LearningPath.ets", "project_name": "codelabs-master", "id": "e5bd14c17b5d873d3035cfd5b217b668ca6dc06b413f763832b9bae2dd9e01a8"}
{"text": "import { BusinessError } from '@ohos.base';\nimport { Request } from '@ohos/network';\nimport { Logger } from '@ohos/utils';\nimport { LearningPath } from '../entity/LearningPath';\nimport { LearningParams, UserIdParams } from './LearningParams';\nimport { LearningTrigger } from './LearningTrigger';\n\nconst TAG = '[LearningNetFunc]';\n\nexport class LearningNetFunc {\n  public getLearningPaths(): Promise<LearningPath[]> {\n    const params: UserIdParams = {\n      userId: AppStorage.get<string>('userId') as string\n    };\n    return new Promise((resolve: (list: LearningPath[]) => void, reject: (error: BusinessError) => void) => {\n      Request.call(LearningTrigger.LEARNING_PATHS, params)\n        .then((result: Object) => {\n          Logger.info(TAG, ' getLearningPaths success--------' + JSON.stringify(result));\n          let pathList: LearningPath[] = [];\n          if (result) {\n            pathList = (result as LearningPath[]);\n          }\n          resolve(pathList);\n        })\n        .catch((error: BusinessError) => {\n          Logger.error(TAG, 'getLearningPaths error--------' + JSON.stringify(error));\n          reject(error);\n        });\n    });\n  }\n\n  public updateLearnedPath(pathId: string): Promise<void> {\n    const params: LearningParams = {\n      pathId,\n      userId: AppStorage.get<string>('userId') as string\n    };\n    return new Promise((resolve: () => void, reject: (error: BusinessError) => void) => {\n      Request.call(LearningTrigger.LEARNING_MODIFY, params).then(() => {\n        Logger.info(TAG, ' updateLearnedPath success--------');\n        resolve();\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'updateLearnedPath error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\learning\\src\\main\\ets\\services\\LearningNetFunc.ets", "project_name": "codelabs-master", "id": "d2f0880f606f97c6a3346655e8e376a60596cc24564b69603e37110bf7f29376"}
{"text": "export interface UserIdParams {\n  userId: string;\n}\n\nexport interface LearningParams extends UserIdParams {\n  pathId: string;\n}\n", "path": "codelabs-master\\HmosWorld\\features\\learning\\src\\main\\ets\\services\\LearningParams.ets", "project_name": "codelabs-master", "id": "c12710600a24ac74a862d39b813eb02110b0c8443a8e8a2543e0f29bbd793ba5"}
{"text": "export enum LearningTrigger {\n  \n  LEARNING_PATHS = 'learning-path',\n  \n  LEARNING_MODIFY = 'learning-modify'\n}", "path": "codelabs-master\\HmosWorld\\features\\learning\\src\\main\\ets\\services\\LearningTrigger.ets", "project_name": "codelabs-master", "id": "b36adb3319952d131b02eb8266944785521a118898f6dea6a6eb9efe105ee8b8"}
{"text": "import { BreakpointType, BreakpointTypeEnum, CommonConstants, LottieUtil, ObservedArray } from '@ohos/utils';\nimport Constants from '../constants/Constants';\nimport { UserModel } from '../model/UserModel';\nimport { AchieveImage, ACHIEVE_IMAGE_LIST } from '../model/AchievementModel';\n\n@Component\nexport struct AchievesView {\n  @State userModel: UserModel = UserModel.getInstance();\n  @State learnedIds: ObservedArray<string> = this.userModel.learnedIds;\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @State isShow: boolean = false;\n  private renderingSettings: RenderingContextSettings = new RenderingContextSettings(true);\n  private mainCanvasRenderingContext: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.renderingSettings);\n  @State clickedItem: AchieveImage | null = null;\n\n  aboutToAppear() {\n    this.userModel.getUserAchievements();\n  }\n\n  getShowImg(item: AchieveImage): Resource | undefined {\n    if (this.learnedIds.includes(item.pathId)) {\n      return item.activeImage;\n    }\n    return item.defaultImage;\n  }\n\n  build() {\n    Column() {\n      Text($r('app.string.total_achieve_count', this.learnedIds.length))\n        .fontSize($r('app.float.default_font_size'))\n        .width(CommonConstants.FULL_PERCENT)\n        .fontWeight(FontWeight.Medium)\n        .fontFamily(CommonConstants.HARMONY_HEITI_MEDIUM_FONT_FAMILY)\n        .padding({\n          left: $r('app.float.md_padding_margin'),\n          top: $r('app.float.achievements_count_padding_top'),\n          bottom: $r('app.float.achievements_count_padding_bottom')\n        })\n        .textAlign(TextAlign.Start)\n\n      List({ space: Constants.MIDDLE_SPACE }) {\n        ForEach(ACHIEVE_IMAGE_LIST, (item: AchieveImage) => {\n          ListItem() {\n            Image(this.getShowImg(item))\n              .interpolation(ImageInterpolation.High)\n              .width(new BreakpointType({\n                sm: $r('app.float.achievement_image_size_sm'),\n                md: $r('app.float.achievement_image_size_md'),\n                lg: $r('app.float.achievement_image_size_lg')\n              }).getValue(this.currentBreakpoint))\n              .aspectRatio(1)\n          }\n          .padding({\n            left: $r('app.float.achievement_list_padding_left_right'),\n            right: $r('app.float.achievement_list_padding_left_right'),\n            bottom: $r('app.float.md_padding_margin'),\n            top: $r('app.float.md_padding_margin') })\n          .onClick(() => {\n            if (this.learnedIds.includes(item.pathId)) {\n              LottieUtil.loadAnimation({\n                container: this.mainCanvasRenderingContext,\n                renderer: 'canvas',\n                loop: false,\n                autoplay: false,\n                name: item.pathId,\n                path: item.lottiePath\n              });\n              LottieUtil.play();\n              this.clickedItem = item;\n              this.isShow = true;\n            }\n          })\n        }, (item: AchieveImage) => JSON.stringify(item))\n      }\n      .alignListItem(ListItemAlign.Center)\n      .lanes(new BreakpointType({\n        sm: Constants.ACHIEVEMENT_LIST_LANES_SM,\n        md: Constants.ACHIEVEMENT_LIST_LANES_MD,\n        lg: Constants.ACHIEVEMENT_LIST_LANES_LG\n      }).getValue(this.currentBreakpoint))\n      .width(CommonConstants.FULL_PERCENT)\n      .edgeEffect(EdgeEffect.None)\n      .scrollBar(BarState.Off)\n      .bindContentCover(\n        this.isShow,\n        this.playLottieBuilder(),\n        {\n          modalTransition: ModalTransition.ALPHA,\n          backgroundColor: $r('app.color.achieve_background_color'),\n          onDisappear: () => {\n            LottieUtil.destroy();\n          }\n        }\n      )\n    }\n    .height(CommonConstants.FULL_PERCENT)\n    .width(CommonConstants.FULL_PERCENT)\n    .padding({\n      left: $r('app.float.md_padding_margin'),\n      right: $r('app.float.md_padding_margin')\n    })\n  }\n\n  @Builder\n  playLottieBuilder() {\n    Column() {\n      Column() {\n        Canvas(this.mainCanvasRenderingContext)\n          .height(Constants.PERCENT_50)\n          .width(Constants.PERCENT_80)\n          .backgroundColor($r('app.color.achieve_background_color'))\n          .onReady(() => {\n            if (this.clickedItem != null) {\n              LottieUtil.loadAnimation({\n                container: this.mainCanvasRenderingContext,\n                renderer: 'canvas',\n                loop: false,\n                autoplay: true,\n                name: this.clickedItem.pathId,\n                path: this.clickedItem.lottiePath\n              })\n            }\n          })\n          .onClick(() => {\n            this.isShow = false;\n          })\n      }\n\n      Column() {\n        Button($r('app.string.achieves_button'))\n          .onClick(() => {\n            this.isShow = false;\n          })\n      }\n    }\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor($r('app.color.achieve_background_color'))\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\components\\AchievesView.ets", "project_name": "codelabs-master", "id": "a4aef6cee4249fd46ba421c9c3bf4020d121c58028133d895b482168d009ef65"}
{"text": "import { CommonConstants } from '@ohos/utils';\n\n@Component\nexport struct NoneContentView {\n  imgSrc: Resource = $r('app.media.ic_browse_no');\n  description: Resource = $r('app.string.to_view');\n\n  build() {\n    Row() {\n      Column() {\n        Row() {\n          Image(this.imgSrc)\n            .size({ width: $r('app.float.none_view_image_size'), height: $r('app.float.none_view_image_size') })\n        }\n        .justifyContent(FlexAlign.Center)\n        .margin({ top: $r('app.float.none_view_image_padding') })\n        .width(CommonConstants.FULL_PERCENT)\n\n        Text(this.description)\n          .fontColor($r('app.color.hmos_medium_black'))\n          .fontSize($r('app.float.title_font_size'))\n          .padding({ top: $r('app.float.sm_padding_margin') })\n      }\n      .height(CommonConstants.FULL_PERCENT)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\components\\NoneContentView.ets", "project_name": "codelabs-master", "id": "6e4035f93d04b04ca09276905d9d34a0c0cd9bfbe674782bc8efd66a9d051d0e"}
{"text": "@Observed\nexport class Achieve {\n  \n  pathId: string;\n  \n  isLearned: boolean;\n  \n  time?: string;\n\n  constructor(achieve: Achieve) {\n    this.pathId = achieve.pathId;\n    this.isLearned = achieve.isLearned;\n    this.time = achieve.time;\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\model\\Achieve.ets", "project_name": "codelabs-master", "id": "7ea83bf98cc59aa1abe6cf1a63efbb3f9ca9dc6bd75636ced73eef32eae1e238"}
{"text": "import { ResourcesType } from '@ohos/utils';\n\nexport interface ActionEventData {\n  \n  resourceId: string;\n\n  \n  resourceType: ResourcesType;\n\n  \n  actionValue: boolean;\n}\n\nexport enum EventTypeEnum  {\n  COLLECTED = 'collected_event',\n  LIKED = 'liked_event',\n  LEARNING = 'learning_event',\n  VIEW = 'view_event'\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\model\\ActionEventData.ets", "project_name": "codelabs-master", "id": "ecc682d2b3a130f355a1769c0c5e921fa6b347fd440f22b2dfaac8b56790a476"}
{"text": "import util from '@ohos.util';\nimport { ResourcesType, TagType } from '@ohos/utils';\n\n@Observed\nexport class LearningResource {\n  \n  uuid: string;\n  \n  id: string = '';\n  \n  title: string = '';\n  \n  brief?: string = '';\n  \n  type: ResourcesType = ResourcesType.FEED;\n  \n  webUrl: string = '';\n  \n  publishDate: Date = new Date();\n  \n  headerImageUrl: string = '';\n  \n  topics: string[] = [];\n  \n  viewsCount: number = 0;\n  \n  collectionCount: number = 0;\n  \n  likesCount: number = 0;\n  \n  tag: TagType = TagType.NORMAL;\n  \n  isLiked: boolean = false;\n  \n  isCollected: boolean = false;\n  \n  isViewed: boolean = false;\n  \n  mediaSrc: string = '';\n  \n  bannerSrc: string = '';\n\n  constructor(resource?: LearningResource) {\n    this.uuid = util.generateRandomUUID(false);\n    if (resource !== undefined) {\n      this.id = resource.id;\n      this.title = resource.title;\n      this.type = resource.type;\n      this.tag = resource.tag;\n      this.brief = resource.brief;\n      this.webUrl = resource.webUrl;\n      this.publishDate = resource.publishDate;\n      this.headerImageUrl = resource.headerImageUrl;\n      this.bannerSrc = resource.bannerSrc;\n      this.mediaSrc = resource.mediaSrc;\n      this.topics = resource.topics;\n      this.viewsCount = resource.viewsCount;\n      this.collectionCount = resource.collectionCount;\n      this.likesCount = resource.likesCount;\n      this.isLiked = resource.isLiked;\n      this.isCollected = resource.isCollected;\n      this.isViewed = resource.isViewed;\n    }\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\model\\LearningResource.ets", "project_name": "codelabs-master", "id": "bb54af15f06eb7fa1046d735aabfd9857a24ab921d60670cabdd61a83647c155"}
{"text": "import router from '@ohos.router';\nimport fs from '@ohos.file.fs';\nimport common from '@ohos.app.ability.common';\nimport { BreakpointSystem, BreakpointType, BreakpointTypeEnum, CommonConstants } from '@ohos/utils';\nimport Constants from '../constants/Constants';\n\nlet params: Record<string, Object> = router.getParams() as Record<string, Object>;\nlet uri: string = params['uri'].toString();\nlet context = getContext(this) as common.ApplicationContext;\nlet filesDir = context.cacheDir;\nlet imageWidth: BreakpointType<string> = new BreakpointType<string>({\n  sm: CommonConstants.FULL_PERCENT,\n  md: Constants.CLIP_RATIO_FOLD,\n  lg: Constants.CLIP_RATIO_PAD\n})\nlet halfImagetop: BreakpointType<Resource> = new BreakpointType<Resource>({\n  sm: $r('app.float.safe_logo_sm_md'),\n  md: $r('app.float.xxl_padding_margin'),\n  lg: $r('app.float.account_padding_top')\n})\n\n@Entry\n@Component\nstruct ConfirmPage {\n  @StorageLink('profilePath')\n  profilePath: string = '';\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  private breakpointSystem: BreakpointSystem = new BreakpointSystem();\n\n  aboutToAppear() {\n    this.breakpointSystem.register();\n  }\n\n  aboutToDisappear() {\n    this.breakpointSystem.unregister();\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Image($r('app.media.ic_back'))\n          .height($r('app.float.normal_icon_size'))\n          .width($r('app.float.normal_icon_size'))\n          .fillColor(Color.Black)\n          .onClick(() => {\n            router.back();\n          })\n\n        Image($r('app.media.ic_public_ok'))\n          .height($r('app.float.normal_icon_size'))\n          .width($r('app.float.normal_icon_size'))\n          .fillColor(Color.Black)\n          .onClick(() => {\n            let srcFile = fs.openSync(uri, fs.OpenMode.READ_ONLY);\n            let destFile = fs.openSync(filesDir + '/profile.jpg', fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n            fs.copyFileSync(srcFile.fd, destFile.fd);\n            fs.closeSync(srcFile);\n            fs.closeSync(destFile);\n            this.profilePath = filesDir + '/profile.jpg';\n            router.back();\n          })\n      }\n      .padding({\n        right: $r('app.float.xxl_padding_margin'),\n        left: $r('app.float.xxl_padding_margin'),\n        top: $r('app.float.xxl_padding_margin')\n      })\n      .justifyContent(FlexAlign.SpaceBetween)\n      .width(CommonConstants.FULL_PERCENT)\n      .margin({ bottom: halfImagetop.getValue(this.currentBreakpoint), top: $r('app.float.xxl_padding_margin') })\n\n      Stack() {\n        Image(uri)\n          .mask(new Rect({\n            width: CommonConstants.FULL_PERCENT,\n            height: CommonConstants.FULL_PERCENT\n          }).fill(Color.Gray))\n          .aspectRatio(Constants.CLIP_RATIO_PHONR)\n        Image(uri)\n          .aspectRatio(Constants.CLIP_RATIO_PHONR)\n          .clip(new Circle({ height: Constants.CLIP_RATIO, width: CommonConstants.FULL_PERCENT })\n            .position({\n              y: Constants.CIRCLE_RATIO_Y\n            })\n          )\n      }\n      .width(imageWidth.getValue(this.currentBreakpoint))\n    }\n    .backgroundColor(Color.White)\n    .height(CommonConstants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Start)\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\pages\\ConfirmPage.ets", "project_name": "codelabs-master", "id": "1b90ab696a516dbbb053d890dd27f2a0e9cfe4b1d5cc3509c4a0eff72cee14d6"}
{"text": "export interface UserIdParams {\n  userId: string;\n}\n\nexport interface LoginParams {\n  username: string;\n  password: string;\n}\n\nexport interface ToggleActionParams extends UserIdParams {\n  resourceId: string;\n  operation: number;\n}", "path": "codelabs-master\\HmosWorld\\features\\mine\\src\\main\\ets\\service\\UserParams.ets", "project_name": "codelabs-master", "id": "160eafe44762b9d495e3d5c22bf617939254ce1218149cdde3d1ccbea2082b03"}
{"text": "import image from '@ohos.multimedia.image';\nimport { ResourcesType } from '@ohos/utils';\n\nexport class Topic {\n  \n  id: string;\n\n  \n  name: string;\n\n  \n  resourceType?: ResourcesType;\n\n  \n  type: TopicType;\n\n  \n  icon?: image.PixelMap;\n\n  \n  isFollowed: boolean;\n\n  constructor(topic: Topic) {\n    this.id = topic.id;\n    this.name = topic.name;\n    this.type = topic.type;\n    this.resourceType = topic.resourceType;\n    this.isFollowed = topic.isFollowed;\n  }\n}\n\nexport enum TopicType {\n  FEED = 'feed',\n  TOPIC = 'topic',\n}", "path": "codelabs-master\\HmosWorld\\features\\topic\\src\\main\\ets\\model\\Topic.ets", "project_name": "codelabs-master", "id": "063d2d4d486cd42621bf47262836680ed8ebae496c0abac3ae8f8c04f00746be"}
{"text": "import { Logger, ObservedArray } from '@ohos/utils';\nimport { TopicNetFunc } from '../service/TopicNetFunc';\nimport { Topic } from './Topic';\n\nconst TAG = '[TopicModel]';\n\nexport class TopicModel {\n  public totalTopicList: ObservedArray<Topic> = new ObservedArray<Topic>();\n  private funNetwork: TopicNetFunc;\n  private static instance: TopicModel;\n\n  private constructor() {\n    this.funNetwork = new TopicNetFunc();\n  }\n\n  public static getInstance(): TopicModel {\n    if (!TopicModel.instance) {\n      TopicModel.instance = new TopicModel();\n    }\n    return TopicModel.instance;\n  }\n\n  getTopics(): Promise<void> {\n    return new Promise((resolve: Function, reject: Function) => {\n      this.funNetwork.getTopics(AppStorage.get<string>('userId') as string).then((topics: Topic[]) => {\n        this.totalTopicList.length = 0;\n        topics.forEach((topic: Topic) => {\n          this.totalTopicList.push(new Topic(topic));\n        })\n        resolve();\n      }).catch((err: Error) => {\n        Logger.error(TAG, `Get topics failed! Error message is ${err}`);\n        reject();\n      });\n    });\n  }\n\n  updateFollowedTopics(followedIds: string[]): Promise<void> {\n    return new Promise((resolve: Function, reject: Function) => {\n      this.funNetwork.editTopicsFollowed(AppStorage.get<string>('userId') as string, followedIds.join(',')).then(() => {\n        this.totalTopicList.forEach((topic: Topic) => {\n          topic.isFollowed = followedIds.find((id: string) => id === topic.id) ? true : false;\n        })\n        resolve();\n      }).catch((err: Error) => {\n        Logger.error(TAG, `Update followed topics failed! Error message is ${err}`);\n        reject();\n      })\n    })\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\topic\\src\\main\\ets\\model\\TopicModel.ets", "project_name": "codelabs-master", "id": "e6d89a4c5993c3eb35a66423ebda1c7ea5a9d5a8da14b1cad6574665201203be"}
{"text": "import { BusinessError } from '@ohos.base';\nimport { Request } from '@ohos/network';\nimport { Logger } from '@ohos/utils';\nimport { Topic } from '../model/Topic';\nimport { EditTopicsParams, UserIdParams } from './TopicParams';\nimport { TopicTrigger } from './TopicTrigger';\n\nconst TAG = '[TopicNetFunc]';\n\nexport class TopicNetFunc {\n  \n  public getTopics(userId: string): Promise<Topic[]> {\n    let params: UserIdParams = { userId };\n    return new Promise((resolve: (value: Topic[] | PromiseLike<Topic[]>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(TopicTrigger.TOPICS, params).then((result: Object) => {\n        Logger.info(TAG, 'getTopics success--------' + JSON.stringify(result));\n        resolve(result as Topic[]);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'getTopics error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  \n  public editTopicsFollowed(userId: string, followTopics: string,): Promise<void> {\n    let params: EditTopicsParams = { userId, followTopics };\n    return new Promise((resolve: (value: void | PromiseLike<void>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(TopicTrigger.TOPIC_MODIFY, params).then(() => {\n        Logger.info(TAG, 'editTopicsFollowed success--------');\n        resolve();\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'editTopicsFollowed error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n}", "path": "codelabs-master\\HmosWorld\\features\\topic\\src\\main\\ets\\service\\TopicNetFunc.ets", "project_name": "codelabs-master", "id": "722045c644eff386a4ff9f16c79fef8afb0fbee297250c707c0e47e419b2d04b"}
{"text": "export enum TopicTrigger {\n  \n  TOPICS = 'topics',\n  \n  TOPIC_MODIFY = 'topic-modify'\n}", "path": "codelabs-master\\HmosWorld\\features\\topic\\src\\main\\ets\\service\\TopicTrigger.ets", "project_name": "codelabs-master", "id": "d14dd3b49d5f52df9b6a8343b0740c43d63e875b64f72cb853362717cfe20b0e"}
{"text": "import { BreakpointType, BreakpointTypeEnum, WindowUtil } from '@ohos/utils';\nimport { AppConstants } from '../constants/AppConstants';\nimport { TabBarData, TabBarType, TabsInfo } from '../model/TabBarModel';\n\n@Component\nexport struct CustomTabBar {\n  @Link currentIndex: TabBarType;\n  @StorageLink('currentBreakpoint') currentBreakpoint: BreakpointTypeEnum = BreakpointTypeEnum.MD;\n\n  onChange(index: TabBarType): void {\n    this.currentIndex = index;\n    if (this.currentIndex === TabBarType.MINE) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    } else {\n      WindowUtil.updateStatusBarColor(getContext(this), false);\n    }\n  }\n\n  build() {\n    Flex({\n      direction: this.currentBreakpoint === BreakpointTypeEnum.LG ? FlexDirection.Column : FlexDirection.Row,\n      alignItems: ItemAlign.Center,\n      justifyContent: FlexAlign.SpaceAround\n    }) {\n      ForEach(TabsInfo, (item: TabBarData) => {\n        TabItem({\n          index: item.id,\n          selectedIndex: this.currentIndex,\n          onChange: (index: number) => this.onChange(index)\n        })\n      }, (item: TabBarData) => item.id.toString())\n    }\n    .backgroundColor(this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE ?\n    $r('app.color.backgroundColor') : $r('app.color.hmos_light_white'))\n    .backgroundBlurStyle(BlurStyle.BACKGROUND_THIN)\n    .border({\n      width: this.currentBreakpoint === BreakpointTypeEnum.LG ? { right: $r('app.float.tab_border_width') } : {\n        top: $r('app.float.tab_border_width')\n      },\n      color: $r('app.color.tab_border_color')\n    })\n    .padding(this.currentBreakpoint === BreakpointTypeEnum.LG ? {\n      top: AppConstants.TAB_PERCENT,\n      bottom: AppConstants.TAB_PERCENT\n    } : 0)\n    .clip(false)\n    .height(new BreakpointType<Length>({\n      sm: $r('app.float.tool_bar_height'),\n      md: $r('app.float.tool_bar_height'),\n      lg: AppConstants.FULL_PERCENT\n    }).getValue(this.currentBreakpoint))\n    .width(new BreakpointType<Length>({\n      sm: AppConstants.FULL_PERCENT,\n      md: AppConstants.FULL_PERCENT,\n      lg: $r('app.float.tool_bar_width')\n    }).getValue(this.currentBreakpoint))\n  }\n}\n\n@Component\nstruct TabItem {\n  @Prop index: number\n  @Prop selectedIndex: number;\n  onChange: (index: number) => void = () => {\n  };\n  @StorageLink('currentBreakpoint') currentBreakpoint: BreakpointTypeEnum = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Image(this.selectedIndex === this.index ? TabsInfo[this.index].activeIcon : TabsInfo[this.index].defaultIcon)\n        .size(this.index === TabBarType.CHALLENGE ?\n          { width: $r('app.float.tab_big_img_width'), height: $r('app.float.tab_big_img_height') } :\n          { width: $r('app.float.tab_img_size'), height: $r('app.float.tab_img_size') })\n        .margin({ top: this.index === TabBarType.CHALLENGE ? $r('app.float.tab_margin') : 0 })\n      Text(TabsInfo[this.index].title)\n        .fontSize($r('app.float.tab_font_size'))\n        .margin({ top: $r('app.float.tab_title_margin') })\n        .fontWeight(AppConstants.TAB_FONT_WEIGHT)\n        .fontColor(this.index === this.selectedIndex ?\n          (this.index == TabBarType.CHALLENGE ? $r('app.color.challenge_light') : $r('app.color.theme_blue_color')) :\n          $r('app.color.tab_bar_color'))\n    }\n    .clip(false)\n    .padding(this.currentBreakpoint === BreakpointTypeEnum.LG ?\n      { top: $r('app.float.sm_padding_margin'), bottom: $r('app.float.sm_padding_margin') } :\n      { left: $r('app.float.md_padding_margin'), right: $r('app.float.md_padding_margin') })\n    .size(this.currentBreakpoint === BreakpointTypeEnum.LG ?\n      { width: AppConstants.FULL_PERCENT } :\n      { height: AppConstants.FULL_PERCENT })\n    .justifyContent(FlexAlign.Center)\n    .onClick(() => this.onChange(this.index))\n  }\n}", "path": "codelabs-master\\HmosWorld\\products\\phone\\src\\main\\ets\\components\\CustomTabBar.ets", "project_name": "codelabs-master", "id": "a36d7a4878c71390a88a7b0bc8047cde5fac4b99ccf86c77328ceb7736f302a6"}
{"text": "export class SplashSource implements IDataSource {\n  private splashArray: Resource[] = [];\n  private listeners: DataChangeListener[] = [];\n\n  public setDataArray(dataArray: Resource[]): void {\n    this.splashArray = dataArray;\n  }\n\n  totalCount(): number {\n    return this.splashArray.length;\n  }\n\n  getData(index: number): Resource {\n    return this.splashArray[index];\n  }\n\n  registerDataChangeListener(listener: DataChangeListener): void {\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n    }\n  }\n\n  unregisterDataChangeListener(listener: DataChangeListener): void {\n    let pos: number = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n    }\n  }\n}", "path": "codelabs-master\\HmosWorld\\products\\phone\\src\\main\\ets\\model\\SplashSource.ets", "project_name": "codelabs-master", "id": "89e177d1fccb87a65bfc59093f4d10f542bcccf04c22200883ddf79d06392fec"}
{"text": "export interface TabBarData {\n  id: TabBarType;\n  title: ResourceStr;\n  activeIcon: ResourceStr;\n  defaultIcon: ResourceStr;\n}\n\nexport enum TabBarType {\n  DISCOVER = 0,\n  LEARNING,\n  CHALLENGE,\n  ACTIVITY,\n  MINE\n}\n\nexport const TabsInfo: TabBarData[] = [\n  {\n    id: TabBarType.DISCOVER,\n    title: $r('app.string.tab_discover'),\n    activeIcon: $r('app.media.ic_explore_on'),\n    defaultIcon: $r('app.media.ic_explore_off')\n  },\n  {\n    id: TabBarType.LEARNING,\n    title: $r('app.string.tab_learning'),\n    activeIcon: $r('app.media.ic_study_on'),\n    defaultIcon: $r('app.media.ic_study_off')\n  },\n  {\n    id: TabBarType.CHALLENGE,\n    title: $r('app.string.tab_challenge'),\n    activeIcon: $r('app.media.ic_challenge_on'),\n    defaultIcon: $r('app.media.ic_challenge_off')\n  },\n  {\n    id: TabBarType.ACTIVITY,\n    title: $r('app.string.tab_activity'),\n    activeIcon: $r('app.media.ic_activity_on'),\n    defaultIcon: $r('app.media.ic_activity_off')\n  },\n  {\n    id: TabBarType.MINE,\n    title: $r('app.string.tab_mine'),\n    activeIcon: $r('app.media.ic_mine_on'),\n    defaultIcon: $r('app.media.ic_mine_off')\n  }\n]", "path": "codelabs-master\\HmosWorld\\products\\phone\\src\\main\\ets\\model\\TabBarModel.ets", "project_name": "codelabs-master", "id": "c86e8040aab2ad9169a04afb5c9a404095e55863ece551d81e7aed5e83734506"}
{"text": "import router from '@ohos.router';\nimport webview from '@ohos.web.webview';\nimport { TopNavigationView, WebView } from '@ohos/uicomponents';\nimport { CommonConstants } from '@ohos/utils';\n\n@Entry\n@Component\nstruct PrivacyPage {\n  @State webViewController: webview.WebviewController = new webview.WebviewController();\n\n  build() {\n    Column() {\n      TopNavigationView({\n        title: $r('app.string.privacy_statement'),\n        onBackClick: () => {\n          router.back();\n        }\n      })\n      WebView({\n        url: $rawfile('privacy-statement-zh-cn.htm'),\n        webViewController: $webViewController,\n      })\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .backgroundColor($r('app.color.common_background_color'))\n    .padding({ top: AppStorage.get<number>('statusBarHeight'), bottom: $r('app.float.xxl_padding_margin') })\n  }\n}", "path": "codelabs-master\\HmosWorld\\products\\phone\\src\\main\\ets\\pages\\PrivacyPage.ets", "project_name": "codelabs-master", "id": "187c241293511d9d7dbfa9ed80c423ca75c3a9a41eb70f6059e95a82da315ed4"}
{"text": "import mediaLibrary from '@ohos.multimedia.mediaLibrary';\nimport fs from '@ohos.file.fs';\nimport image from '@ohos.multimedia.image';\nimport Logger from './LoggerUtil';\nimport { CommonConstants } from '../common/constant/CommonConstants';\n\nconst TAG: string = 'imageEdit_Encode';\n\n\nexport async function encode(component: Object, pixelMap: PixelMap) {\n  const newPixelMap = pixelMap;\n  \n  const imagePackerApi = image.createImagePacker();\n  const packOptions: image.PackingOption = {\n    format: CommonConstants.ENCODE_FORMAT,\n    quality: CommonConstants.ENCODE_QUALITY\n  }\n  const imageData = await imagePackerApi.packing(newPixelMap, packOptions);\n  Logger.info(TAG, `imageData's length is ${imageData.byteLength}`);\n  \n  const context = getContext(component);\n  const media = mediaLibrary.getMediaLibrary(context);\n  const publicPath = await media.getPublicDirectory(mediaLibrary.DirectoryType.DIR_IMAGE);\n  const currentTime = new Date().getTime();\n  \n  const imageAssetInfo = await media.createAsset(\n    mediaLibrary.MediaType.IMAGE,\n    `${CommonConstants.IMAGE_PREFIX}_${currentTime}${CommonConstants.IMAGE_FORMAT}`,\n    publicPath\n  );\n  const imageFd = await imageAssetInfo.open(CommonConstants.ENCODE_FILE_PERMISSION);\n  await fs.write(imageFd, imageData);\n  \n  await imageAssetInfo.close(imageFd);\n  imagePackerApi.release();\n  await media.release();\n}\n\n\n", "path": "codelabs-master\\ImageEdit\\entry\\src\\main\\ets\\utils\\EncodeUtil.ets", "project_name": "codelabs-master", "id": "60c7712434be49eb1f0b6cb599d165040e5fbb3160ae6a9d3d10a4439791c5bd"}
{"text": "export default class DataSource<T> implements IDataSource {\n  private listData: T[];\n\n  constructor(listData: T[]) {\n    this.listData = listData;\n  }\n\n  totalCount() {\n    return this.listData.length;\n  }\n\n  getData(index: number) {\n    return this.listData[index];\n  }\n\n  registerDataChangeListener() {\n  }\n\n  unregisterDataChangeListener() {\n  }\n}", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\common\\datasource\\DataSource.ets", "project_name": "codelabs-master", "id": "9079f8fefe7176bf3249c3f68dff048c37c9ecca3ff87c94949ce7c9a461a2f4"}
{"text": "import StyleConstants from '../common/constants/StyleConstants';\nimport DataSource from '../common/datasource/DataSource';\nimport MovieData from '../viewmodel/MovieData';\nimport MovieItem from '../view/MovieItem';\nimport CommonUtils from '../common/utils/CommonUtils';\nimport { GlobalContext } from '../common/utils/GlobalContext';\n\n\n@Entry\n@Component\nstruct MovieListPage {\n  \n  private dataSource: DataSource<MovieData> = new DataSource([]);\n\n  aboutToAppear() {\n    this.dataSource = new DataSource(CommonUtils.getListData());\n    \n    CommonUtils.startTimer();\n  }\n\n  aboutToDisappear() {\n    let intervalId = GlobalContext.getContext().getObject('intervalId') as number;\n    clearInterval(intervalId);\n  }\n\n  build() {\n    Column() {\n      Text($r('app.string.list_page_title'))\n        .fontWeight(FontWeight.Bolder)\n        .fontSize($r('app.float.list_title_size'))\n        .alignSelf(ItemAlign.Start)\n        .margin({\n          left: StyleConstants.COMMON_MARGIN_LEFT,\n          top: StyleConstants.COMMON_MARGIN_TOP,\n          bottom: StyleConstants.LIST_TITLE_MARGIN\n        })\n        .height($r('app.float.list_title_height'))\n      List({ space: StyleConstants.LIST_COMPONENT_SPACE }) {\n        LazyForEach(this.dataSource, (item: MovieData) => {\n          ListItem() {\n            MovieItem({ movieItem: item });\n          }\n        }, (item: MovieData) => JSON.stringify(item))\n      }\n      .listDirection(Axis.Vertical)\n      .edgeEffect(EdgeEffect.None)\n      .layoutWeight(StyleConstants.WEIGHT_ONE)\n      .width(StyleConstants.FULL_WIDTH)\n      .height(StyleConstants.FULL_HEIGHT)\n    }\n    .backgroundColor($r('app.color.common_background_color'))\n    .width(StyleConstants.FULL_WIDTH)\n    .height(StyleConstants.FULL_HEIGHT)\n  }\n}", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\pages\\MovieListPage.ets", "project_name": "codelabs-master", "id": "3620c0c36a236a0eb7bf9c75af54a91e9894000ee9e93a0a20ea39f4e6376424"}
{"text": "import CommonConstants from '../common/constants/CommonConstants';\nimport StyleConstants from '../common/constants/StyleConstants';\nimport CommonUtils from '../common/utils/CommonUtils';\nimport MovieData from '../viewmodel/MovieData';\nimport StarsWidget from './StarsWidget';\nimport Logger from '../common/utils/Logger';\n\n@Component\nexport default struct MovieDetailsTitle {\n  private movieDetail: MovieData = new MovieData();\n  private movieImage: Resource = $r('app.media.ic_movie_one');\n  private title: string = '';\n  private rating: string = '';\n  private stars: Resource[] = [];\n  private describe: string = '';\n\n  aboutToAppear() {\n    if (CommonUtils.isEmpty(this.movieDetail)) {\n      Logger.error(CommonConstants.TAG_DETAILS_COMPONENT, 'movieDetail is null');\n      return;\n    }\n    this.movieImage = this.movieDetail.movieImage;\n    this.title = this.movieDetail.title;\n    this.rating = this.movieDetail.rating;\n    this.stars = this.movieDetail.stars;\n    this.describe = this.movieDetail.describe;\n  }\n\n  build() {\n    Row() {\n      Image(this.movieImage)\n        .objectFit(ImageFit.Cover)\n        .borderRadius($r('app.float.title_image_radius'))\n        .width($r('app.float.title_image_width'))\n        .height($r('app.float.title_image_height'))\n      Column() {\n        Text(this.title)\n          .fontSize($r('app.float.title_size'))\n          .fontWeight(FontWeight.Bolder)\n          .fontColor($r('app.color.common_font_color'))\n          .alignSelf(ItemAlign.Start)\n        StarsWidget({\n          rating: this.rating,\n          stars: this.stars\n        })\n        Text(this.describe)\n          .fontSize($r('app.float.describe_size'))\n          .fontColor($r('app.color.common_font_color'))\n          .fontWeight(FontWeight.Normal)\n          .opacity($r('app.float.common_opacity'))\n          .alignSelf(ItemAlign.Start)\n          .margin({ bottom: $r(\"app.float.describe_bottom\") })\n        Text($r('app.string.want_to_see'))\n          .fontWeight(FontWeight.Bolder)\n          .fontSize($r(\"app.float.see_button_size\"))\n          .textAlign(TextAlign.Center)\n          .fontColor(Color.White)\n          .borderRadius($r(\"app.float.see_button_radius\"))\n          .alignSelf(ItemAlign.Start)\n          .backgroundColor($r(\"app.color.see_button_background\"))\n          .width($r(\"app.float.see_button_width\"))\n          .height($r(\"app.float.see_button_height\"))\n      }\n      .layoutWeight(StyleConstants.WEIGHT_ONE)\n      .margin({ left: $r('app.float.see_button_left') })\n    }\n    .alignSelf(ItemAlign.Start)\n  }\n}", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\view\\MovieDetailsTitle.ets", "project_name": "codelabs-master", "id": "5e99da3249510f62a835950ef15f37b0e2eb680302cf9bebccd394a1727cbe11"}
{"text": "import CommonUtils from '../common/utils/CommonUtils';\nimport StyleConstants from '../common/constants/StyleConstants';\nimport DataSource from '../common/datasource/DataSource';\n\n@Component\nexport default struct MovieStills {\n  private dataSource: DataSource<Resource> = new DataSource([]);\n\n  aboutToAppear() {\n    this.dataSource = new DataSource(CommonUtils.getStillsData());\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.stills'))\n          .fontSize($r('app.float.stills_title_size'))\n          .fontColor($r('app.color.common_font_color'))\n          .fontWeight(FontWeight.Bolder)\n        Text($r('app.string.stills_count'))\n          .fontSize($r('app.float.stills_content_size'))\n          .opacity($r('app.float.common_opacity'))\n          .fontColor($r('app.color.common_font_color'))\n          .layoutWeight(StyleConstants.WEIGHT_ONE)\n          .width(StyleConstants.STILLS_TEXT_WIDTH)\n          .textAlign(TextAlign.End)\n          .fontWeight(FontWeight.Normal)\n          .margin({ right: $r('app.float.stills_margin_right') })\n        Image($r(\"app.media.ic_arrow\"))\n          .width($r('app.float.image_arrow_width'))\n          .height($r('app.float.image_arrow_height'))\n      }\n      .margin({\n        left: StyleConstants.COMMON_MARGIN_LEFT,\n        top: StyleConstants.COMMON_MARGIN_TOP,\n        right: StyleConstants.COMMON_MARGIN_RIGHT,\n        bottom: StyleConstants.COMMON_MARGIN_BOTTOM\n      })\n      .width(StyleConstants.STILLS_WIDTH)\n\n      List({ space: StyleConstants.STILLS_LIST_SPACE }) {\n        LazyForEach(this.dataSource, (item: Resource) => {\n          ListItem() {\n            Image(item)\n              .width($r('app.float.stills_image_width'))\n              .height($r('app.float.stills_image_height'))\n              .borderRadius($r('app.float.stills_image_radius'))\n          }\n        }, (item: Resource) => JSON.stringify(item))\n      }\n      .listDirection(Axis.Horizontal)\n      .edgeEffect(EdgeEffect.None)\n      .margin({ left: StyleConstants.COMMON_MARGIN_LEFT })\n      .width(StyleConstants.STILLS_LIST_WIDTH)\n      .height($r('app.float.stills_list_height'))\n    }\n  }\n}", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\view\\MovieStills.ets", "project_name": "codelabs-master", "id": "07004e51ec8d034cbe791e0b6d38b060fed892486b155fbd297fc802136e6ec5"}
{"text": "import StyleConstants from '../common/constants/StyleConstants';\n\n@Component\nexport default struct StarsWidget {\n  private rating: string = '';\n  private stars: Resource[] = [];\n\n  build() {\n    Row() {\n      List({ space: StyleConstants.STARS_LIST_SPACE }) {\n        ForEach(this.stars, (item: Resource) => {\n          ListItem() {\n            Image(item)\n              .width($r('app.float.stars_image_size'))\n              .height($r('app.float.stars_image_size'))\n          }\n        }, (item: Resource) => JSON.stringify(item))\n      }\n      .listDirection(Axis.Horizontal)\n      .edgeEffect(EdgeEffect.None)\n      .height($r('app.float.stars_list_height'))\n      .width($r('app.float.stars_list_width'))\n\n      Blank().width($r('app.float.blank_width'))\n      Text(this.rating)\n        .fontSize($r('app.float.rating_text_size'))\n        .fontWeight(FontWeight.Bolder)\n        .fontColor($r('app.color.common_font_color'))\n    }\n    .margin({\n      top: $r('app.float.stars_margin_size'),\n      bottom: $r('app.float.stars_margin_size')\n    })\n    .alignSelf(ItemAlign.Start)\n  }\n}", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\view\\StarsWidget.ets", "project_name": "codelabs-master", "id": "36a8f880372ff33e2781a0b5d9c823a76bed193770b6baf328f1b19b7685f453"}
{"text": "export default interface FormData {\n  topIndex: number;\n  topMovieImage: string;\n  topTitle: string;\n  topDescribe: string;\n  bottomIndex: number;\n  bottomMovieImage: string;\n  bottomTitle: string;\n  bottomDescribe: string;\n}", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\viewmodel\\FormData.ets", "project_name": "codelabs-master", "id": "ae7b1739dcd8d7d83ee7f6943b2bd335b16462bd1d5501019ecf56fbdcf30b29"}
{"text": "import relationalStore from '@ohos.data.relationalStore';\n\n\nexport default class FormItem {\n  \n  formId: string = '';\n  \n  formName: string = '';\n  \n  dimension: number = 0;\n\n  \n  toValuesBucket(): relationalStore.ValuesBucket {\n    return {\n      'formId': this.formId,\n      'formName': this.formName,\n      'dimension': this.dimension\n    };\n  }\n}\n", "path": "codelabs-master\\MovieCard\\entry\\src\\main\\ets\\viewmodel\\FormItem.ets", "project_name": "codelabs-master", "id": "5c99465b627085bd1994fd602cb98c36ff640522f300f3f0a9fc35122fa705e2"}
{"text": "export class RouterUrlConstants {\n  \n  static readonly MUSIC_PLAY: string = 'pages/PlayPage';\n\n  \n  static readonly MUSIC_LIST: string = 'pages/MusicList';\n\n  \n  static readonly MUSIC_COMMENT: string = 'pages/MusicComment';\n}", "path": "codelabs-master\\MultiDeviceMusic\\entry\\src\\main\\ets\\common\\constants\\RouterUrlConstants.ets", "project_name": "codelabs-master", "id": "193e4e90bde4666a35044c3ba17bd756b02d12c2dcdbc14f5b78cef5845bbc45"}
{"text": "import Logger from '../common/utils/Logger';\nimport HobbyItem from '../viewmodel/HobbyItem';\nimport CommonUtils from '../common/utils/CommonUtils';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n@CustomDialog\nexport default struct CustomDialogWidget {\n  @State hobbyItems: HobbyItem[] = [];\n  @Link hobbies: string;\n  private controller?: CustomDialogController;\n\n  aboutToAppear() {\n    let context: Context = getContext(this);\n    if (CommonUtils.isEmpty(context) || CommonUtils.isEmpty(context.resourceManager)) {\n      Logger.error(CommonConstants.TAG_CUSTOM, 'context or resourceManager is null');\n      return;\n    }\n    let manager = context.resourceManager;\n    manager.getStringArrayValue($r('app.strarray.hobbies_data').id, (error, hobbyArray) => {\n      if (!CommonUtils.isEmpty(error)) {\n        Logger.error(CommonConstants.TAG_CUSTOM, 'error = ' + JSON.stringify(error));\n      } else {\n        hobbyArray.forEach((hobby: string) => {\n          let hobbyItem = new HobbyItem();\n          hobbyItem.label = hobby;\n          hobbyItem.isChecked = false;\n          this.hobbyItems.push(hobbyItem);\n        });\n      }\n    });\n  }\n\n  \n  setHobbiesValue(hobbyItems: HobbyItem[]) {\n    if (CommonUtils.isEmptyArr(hobbyItems)) {\n      Logger.error(CommonConstants.TAG_HOME, 'hobbyItems length is 0');\n      return;\n    }\n    let hobbiesText: string = '';\n    hobbiesText = hobbyItems.filter((isCheckItem: HobbyItem) => isCheckItem?.isChecked)\n      .map<string>((checkedItem: HobbyItem) => {\n        return checkedItem.label!;\n      })\n      .join(CommonConstants.COMMA);\n    if (hobbiesText.length > 0) {\n      this.hobbies = hobbiesText;\n    }\n  }\n\n  build() {\n    Column() {\n      Text($r('app.string.text_title_hobbies'))\n        .fontColor($r('app.color.custom_color'))\n        .fontSize($r('app.float.title_hobbies_size'))\n        .lineHeight($r('app.float.title_line_height'))\n        .fontWeight(CommonConstants.BIGGER)\n        .alignSelf(ItemAlign.Start)\n        .margin({ left: $r('app.float.title_left_distance') })\n      List() {\n        ForEach(this.hobbyItems, (itemHobby: HobbyItem) => {\n          ListItem() {\n            Row() {\n              Text(itemHobby.label)\n                .fontSize($r('app.float.label_size'))\n                .fontColor($r('app.color.custom_color'))\n                .layoutWeight(CommonConstants.WEIGHT_ONE)\n                .textAlign(TextAlign.Start)\n                .fontWeight(CommonConstants.BIGGER)\n                .margin({ left: $r('app.float.label_left_distance') })\n              Toggle({ type: ToggleType.Checkbox, isOn: false })\n                .onChange((isCheck) => {\n                  itemHobby.isChecked = isCheck;\n                })\n                .width($r('app.float.toggle_size'))\n                .height($r('app.float.toggle_size'))\n                .margin({ right: $r('app.float.toggle_right_distance') })\n            }\n            .height($r('app.float.options_height'))\n            .margin({\n              top: $r('app.float.options_top_distance'),\n              bottom: $r('app.float.options_bottom_distance')\n            })\n          }\n        }, (itemHobby: HobbyItem) => JSON.stringify(itemHobby.label))\n      }\n      .margin({\n        top: $r('app.float.list_top_distance'),\n        bottom: $r('app.float.list_bottom_distance')\n      })\n      .divider({\n        strokeWidth: $r('app.float.divider_height'),\n        color: $r('app.color.divider_color')\n      })\n      .listDirection(Axis.Vertical)\n      .edgeEffect(EdgeEffect.None)\n      .width(CommonConstants.FULL_WIDTH)\n      .height($r('app.float.options_list_height'))\n\n      Row() {\n        Button($r('app.string.cancel_button'))\n          .dialogButtonStyle()\n          .onClick(() => {\n            this.controller?.close();\n          })\n        Blank()\n          .backgroundColor($r('app.color.custom_blank_color'))\n          .width($r('app.float.blank_width'))\n          .opacity($r('app.float.blank_opacity'))\n          .height($r('app.float.blank_height'))\n        Button($r('app.string.definite_button'))\n          .dialogButtonStyle()\n          .onClick(() => {\n            this.setHobbiesValue(this.hobbyItems);\n            this.controller?.close();\n          })\n      }\n    }\n    .width(CommonConstants.COMMON_DIALOG_WIDTH)\n    .padding({\n      top: $r('app.float.dialog_top_distance'),\n      bottom: $r('app.float.dialog_bottom_distance')\n    })\n    .borderRadius($r('app.float.dialog_radius'))\n    .backgroundColor(Color.White)\n  }\n}\n\n@Extend(Button) function dialogButtonStyle() {\n  .fontSize($r('app.float.button_text_size'))\n  .fontColor($r('app.color.custom_button_color'))\n  .layoutWeight(CommonConstants.WEIGHT_ONE)\n  .backgroundColor(Color.White)\n  .width(CommonConstants.FULL_WIDTH)\n  .height($r('app.float.button_height'))\n}", "path": "codelabs-master\\MultipleDialog\\entry\\src\\main\\ets\\view\\CustomDialogWidget.ets", "project_name": "codelabs-master", "id": "464714339c1d797c8f1b7cf924f36bde638db0d1f5a739704b5a44950ace9e34"}
{"text": "import { BreakpointConstants, CommonConstants } from '@ohos/commons';\n\n@Component\nexport struct VideoImgRating {\n  private rating: string = '';\n\n  build() {\n    Row() {\n      Text(this.rating)\n        .fontSize($r('app.float.video_img_rating_font'))\n        .fontWeight(FontWeight.Normal)\n        .fontColor(Color.White)\n        .height($r('app.float.video_img_rating_height'))\n        .width($r('app.float.video_img_rating_width'))\n        .margin({\n          right: $r('app.float.video_img_rating_margin'),\n          bottom: $r('app.float.video_img_rating_margin')\n        })\n        .backgroundColor($r('app.color.main_daily_rating_background'))\n        .borderRadius($r('app.float.video_img_rating_radius'))\n        .textAlign(TextAlign.Center)\n    }\n    .justifyContent(FlexAlign.End)\n    .width(CommonConstants.FULL_PERCENT)\n    .visibility(this.rating === null ? Visibility.None : Visibility.Visible)\n  }\n}\n\n@Component\nexport struct VideoTitle {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @Prop currentTopIndex: number = 0;\n  private title: string = '';\n\n  build() {\n    Text(this.title)\n      .fontWeight(FontWeight.Normal)\n      .fontSize($r('app.float.video_title_font'))\n      .lineHeight($r('app.float.video_title_line'))\n      .margin({ top: $r('app.float.video_title_margin') })\n      .fontColor(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG && this.currentTopIndex === 2 ?\n        Color.White : $r('app.color.normal_font_color'))\n      .textOverflow({ overflow: TextOverflow.Ellipsis })\n  }\n}\n\n@Component\nexport struct VideoContent {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @Prop currentTopIndex: number = 0;\n  private content: string = '';\n\n  build() {\n    Text(this.content)\n      .fontSize($r('app.float.video_content_font'))\n      .lineHeight($r('app.float.video_content_line'))\n      .opacity(CommonConstants.TEXT_OPACITY[0])\n      .fontWeight(FontWeight.Normal)\n      .maxLines(1)\n      .margin({ top: $r('app.float.video_content_margin') })\n      .fontColor(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG && this.currentTopIndex === 2 ?\n        Color.White : $r('app.color.normal_font_color'))\n      .textOverflow({ overflow: TextOverflow.Ellipsis })\n  }\n}\n\n@Component\nexport struct SubtitleComponent {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @Prop currentTopIndex: number = 0;\n  private title: string = '';\n\n  build() {\n    Row() {\n      Text(this.title)\n        .fontSize($r('app.float.sub_title_font'))\n        .fontWeight(CommonConstants.FONT_WEIGHT_500)\n        .fontColor(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG && this.currentTopIndex === 2 ?\n          Color.White : $r('app.color.normal_font_color'))\n    }\n    .height($r('app.float.sub_title_row_height'))\n    .width(CommonConstants.FULL_PERCENT)\n    .margin({\n      left: $r('app.float.sub_title_row_margin'),\n      right: $r('app.float.sub_title_row_margin')\n    })\n  }\n}\n\n@Component\nexport struct VideoImgComponent {\n  private imgSrc?: Resource;\n\n  build() {\n    Image(this.imgSrc !== undefined ? this.imgSrc : '')\n      .objectFit(ImageFit.Fill)\n      .width(CommonConstants.FULL_PERCENT)\n      .height(CommonConstants.FULL_PERCENT)\n      .draggable(false)\n  }\n}\n\n@Component\nexport struct VideoImgPlay {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n\n  build() {\n    Column() {\n      Image($r('app.media.new_video_play'))\n        .height(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? $r('app.float.video_img_size_lg') :\n          $r('app.float.video_img_size'))\n        .width(this.currentBreakpoint === BreakpointConstants.BREAKPOINT_LG ? $r('app.float.video_img_size_lg') :\n          $r('app.float.video_img_size'))\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\MultiVideoApplication\\features\\home\\src\\main\\ets\\view\\CommonView.ets", "project_name": "codelabs-master", "id": "7a6c35e21775f3e54794cd0b9d86cf8d846773d73e0c9cf110d53567bdbbb1e2"}
{"text": "import formInfo from '@ohos.app.form.formInfo';\nimport formBindingData from '@ohos.app.form.formBindingData';\nimport FormExtensionAbility from '@ohos.app.form.FormExtensionAbility';\nimport Want from '@ohos.app.ability.Want';\nimport { PreferencesUtil } from '../utils/PreferencesUtil';\n\nexport default class EntryFormAbility extends FormExtensionAbility {\n  onAddForm(want: Want) {\n    \n    let formId: string = (want.parameters as Record<string, string>)[formInfo.FormParam.IDENTITY_KEY];\n    PreferencesUtil.getInstance().addFormId(this.context, formId);\n    let formData: Record<string, string> = {\n      'formId': formId\n    };\n    return formBindingData.createFormBindingData(formData);\n  }\n\n  onCastToNormalForm(formId: string) {\n  }\n\n  onUpdateForm(formId: string) {\n  }\n\n  onChangeFormVisibility(newStatus: Record<string, number>) {\n  }\n\n  onFormEvent(formId: string, message: string) {\n  }\n\n  onRemoveForm(formId: string) {\n    PreferencesUtil.getInstance().removeFormId(this.context, formId);\n  }\n\n  onAcquireFormState(want: Want) {\n    return formInfo.FormState.READY;\n  }\n};", "path": "codelabs-master\\MusicPlay\\entry\\src\\main\\ets\\entryformability\\EntryFormAbility.ets", "project_name": "codelabs-master", "id": "5ef51b2daae5ff6e19e9b01d68b2d00e0b7b34749e87e98c666d4817459bc5b5"}
{"text": "import rpc from '@ohos.rpc';\n\n\nexport class MusicMessageAble implements rpc.Parcelable {\n  status: string = 'success';\n\n  setStatus(status: string) {\n    this.status = status;\n  }\n\n  marshalling(messageSequence: rpc.MessageSequence) {\n    messageSequence.writeString(this.status);\n    return true;\n  }\n\n  unmarshalling(messageSequence: rpc.MessageSequence) {\n    this.status = messageSequence.readString();\n    return true;\n  }\n}", "path": "codelabs-master\\MusicPlay\\entry\\src\\main\\ets\\model\\MusicMessageAble.ets", "project_name": "codelabs-master", "id": "f69796ce260362845307191de2a55e28a40a34611fe96519ecbe32a1b3f9ba5b"}
{"text": "import { MediaService } from './MediaService';\n\nexport class CardControlUtil {\n  \n  controlByMessage(message: string, index: number): void {\n    switch (message) {\n      case 'play':\n        if (MediaService.getInstance().getFirst()) {\n          MediaService.getInstance().loadAssent(0)\n        } else {\n          MediaService.getInstance().play();\n        }\n        break;\n      case 'pause':\n        MediaService.getInstance().pause();\n        break;\n      case 'next':\n        MediaService.getInstance().playNextAuto(true);\n        break;\n      case 'last':\n        MediaService.getInstance().playPrevious();\n        break;\n      case 'index':\n        MediaService.getInstance().loadAssent(index);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nlet controlMusicPlayUtil = new CardControlUtil();\n\nexport default controlMusicPlayUtil as CardControlUtil;", "path": "codelabs-master\\MusicPlay\\entry\\src\\main\\ets\\utils\\CardControlUtil.ets", "project_name": "codelabs-master", "id": "35aa35141f9c9be4aa2265ae24a939e71f1d815a97ae06d8bd72d1400f180fd5"}
{"text": "import NewsList from '../view/newslist';\nimport { CommonConstant as Const } from '../common/constant/CommonConstant';\nimport NewsViewModel, { NewsTypeBean } from '../viewmodel/NewsViewModel';\n\n\n@Component\nexport default struct TabBar {\n  @State tabBarArray: NewsTypeBean[] = NewsViewModel.getDefaultTypeList();\n  @State currentIndex: number = 0;\n  @State currentPage: number = 1;\n\n  @Builder TabBuilder(index: number) {\n    Column() {\n      Text(this.tabBarArray[index].name)\n        .height(Const.FULL_HEIGHT)\n        .padding({ left: Const.TabBars_HORIZONTAL_PADDING, right: Const.TabBars_HORIZONTAL_PADDING })\n        .fontSize(this.currentIndex === index ? Const.TabBars_SELECT_TEXT_FONT_SIZE : Const.TabBars_UN_SELECT_TEXT_FONT_SIZE)\n        .fontWeight(this.currentIndex === index ? Const.TabBars_SELECT_TEXT_FONT_WEIGHT : Const.TabBars_UN_SELECT_TEXT_FONT_WEIGHT)\n        .fontColor($r('app.color.fontColor_text3'))\n    }\n  }\n\n  aboutToAppear() {\n    \n    NewsViewModel.getNewsTypeList().then((typeList: NewsTypeBean[]) => {\n      this.tabBarArray = typeList;\n    }).catch((typeList: NewsTypeBean[]) => {\n      this.tabBarArray = typeList;\n    });\n  }\n\n  build() {\n    Tabs() {\n      ForEach(this.tabBarArray, (tabsItem: NewsTypeBean) => {\n        TabContent() {\n          Column() {\n            NewsList({ currentIndex: $currentIndex })\n          }\n        }\n        .tabBar(this.TabBuilder(tabsItem.id))\n      }, (item: NewsTypeBean) => JSON.stringify(item));\n    }\n    .barHeight(Const.TabBars_BAR_HEIGHT)\n    .barMode(BarMode.Scrollable)\n    .barWidth(Const.TabBars_BAR_WIDTH)\n    .onChange((index: number) => {\n      this.currentIndex = index;\n      this.currentPage = 1;\n    })\n    .vertical(false)\n  }\n}", "path": "codelabs-master\\NewsDataArkTS\\entry\\src\\main\\ets\\view\\TabBar.ets", "project_name": "codelabs-master", "id": "58460cc44e5d938c25b98c070a2bb98f56a4b395c937ed64ab46ee96b2c4fa96"}
{"text": "import { CommonConstant as Const } from '../common/constant/CommonConstant';\nimport { httpRequestGet } from '../common/utils/HttpUtil';\nimport Logger from '../common/utils/Logger';\n\nclass NewsViewModel {\n  \n  getNewsTypeList(): Promise<NewsTypeBean[]> {\n    return new Promise((resolve: Function) => {\n      let url = `${Const.SERVER}/${Const.GET_NEWS_TYPE}`;\n      httpRequestGet(url).then((data: ResponseResult) => {\n        if (data.code === Const.SERVER_CODE_SUCCESS) {\n          resolve(data.data);\n        } else {\n          resolve(Const.TabBars_DEFAULT_NEWS_TYPES);\n        }\n      }).catch(() => {\n        resolve(Const.TabBars_DEFAULT_NEWS_TYPES);\n      });\n    });\n  }\n\n  \n  getDefaultTypeList(): NewsTypeBean[] {\n    return Const.TabBars_DEFAULT_NEWS_TYPES;\n  }\n\n  \n  getNewsList(currentPage: number, pageSize: number, path: string): Promise<NewsData[]> {\n    return new Promise(async (resolve: Function, reject: Function) => {\n      let url = `${Const.SERVER}/${path}`;\n      url += '?currentPage=' + currentPage + '&pageSize=' + pageSize;\n      httpRequestGet(url).then((data: ResponseResult) => {\n        if (data.code === Const.SERVER_CODE_SUCCESS) {\n          resolve(data.data);\n        } else {\n          Logger.error('getNewsList failed', JSON.stringify(data));\n          reject($r('app.string.page_none_msg'));\n        }\n      }).catch((err: Error) => {\n        Logger.error('getNewsList failed', JSON.stringify(err));\n        reject($r('app.string.http_error_message'));\n      });\n    });\n  }\n}\n\nlet newsViewModel = new NewsViewModel();\n\nexport default newsViewModel as NewsViewModel;\n\n\nexport class NewsData {\n  \n  title: string = '';\n\n  \n  content: string = '';\n\n  \n  imagesUrl: Array<NewsFile> = [new NewsFile()];\n\n  \n  source: string = '';\n}\n\n\nexport class NewsFile {\n  \n  id: number = 0;\n\n  \n  url: string = '';\n\n  \n  type: number = 0;\n\n  \n  newsId: number = 0;\n}\n\n\n@Observed\nexport class CustomRefreshLoadLayoutClass {\n  \n  isVisible: boolean;\n\n  \n  imageSrc: Resource;\n\n  \n  textValue: Resource;\n\n  \n  heightValue: number;\n\n  constructor(isVisible: boolean, imageSrc: Resource, textValue: Resource, heightValue: number) {\n    this.isVisible = isVisible;\n    this.imageSrc = imageSrc;\n    this.textValue = textValue;\n    this.heightValue = heightValue;\n  }\n}\n\nexport class NewsTypeBean {\n  id: number = 0;\n  name: ResourceStr = '';\n}\n\nexport class ResponseResult {\n  \n  code: string;\n\n  \n  msg: string | Resource;\n\n  \n  data: string | Object | ArrayBuffer;\n\n  constructor() {\n    this.code = '';\n    this.msg = '';\n    this.data = '';\n  }\n}", "path": "codelabs-master\\NewsDataArkTS\\entry\\src\\main\\ets\\viewmodel\\NewsViewModel.ets", "project_name": "codelabs-master", "id": "8377a29f789cf9b7b848bfecd380811c1671a4460ff12734ab64e7a1f986e1dc"}
{"text": "import window from '@ohos.window';\nimport Logger from './Logger';\nimport { CommonConstants as Const } from '../constants/CommonConstants';\n\nexport class WindowBarManager {\n  private static instance: WindowBarManager;\n  currentBarColor: string | Resource = '';\n  cacheWindowStage?: window.WindowStage;\n\n  constructor() {\n    if (!WindowBarManager.instance) {\n      WindowBarManager.instance = this;\n    }\n    return WindowBarManager.instance;\n  }\n\n  immersiveWindow(windowStage: window.WindowStage, color: string, isLayoutFullScreen: boolean) {\n    if (this.currentBarColor && this.currentBarColor === color) return;\n\n    if (windowStage) {\n      this.cacheWindowStage = windowStage;\n    } else if (this.cacheWindowStage) {\n      windowStage = this.cacheWindowStage;\n    }\n\n    let windowClass: window.Window | null = null;\n    windowStage.getMainWindow((err, data: window.Window) => {\n      if (err.code) {\n        Logger.error(`Failed to obtain the main window. Cause: ${JSON.stringify(err)}`);\n        return;\n      }\n\n      windowClass = data;\n      Logger.info(`Succeeded in obtaining the main window. Data:  ${JSON.stringify(data)}`);\n      windowClass.setWindowLayoutFullScreen(isLayoutFullScreen, (err) => {\n        if (err.code) {\n          Logger.error(`Failed to set the window layout to full-screen mode. Cause: ${JSON.stringify(err)}`);\n          return;\n        }\n        Logger.info('Succeeded in setting the window layout to full-screen mode.');\n      });\n\n      let sysBarProps = {\n        statusBarColor: color,\n        navigationBarColor: Const.NAVIGATION_BAR_COLOR,\n        statusBarContentColor: Const.STATUS_BAR_CONTENT_COLOR,\n        navigationBarContentColor: Const.NAVIGATION_BAR_CONTENT_COLOR\n      } as window.SystemBarProperties;\n      windowClass.setWindowSystemBarProperties(sysBarProps, (err) => {\n        if (err.code) {\n          Logger.error(`Failed to set the system bar properties. Cause: ${JSON.stringify(err)}`)\n          return;\n        }\n        this.currentBarColor = color;\n        Logger.info('Succeeded in setting the system bar properties.')\n      });\n    });\n  }\n}", "path": "codelabs-master\\OxHornCampus\\entry\\src\\main\\ets\\common\\utils\\WindowBar.ets", "project_name": "codelabs-master", "id": "4d59552882950fc4e40d8cd2c40949f4f248ef22ef13a07fbab292f4bdd24b14"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\nimport { Map } from '../view/MapComponent';\nimport { Zones } from '../view/ZonesComponent';\nimport { Trains } from '../view/TrainsComponent';\nimport { BottomTabsList } from '../viewmodel/BottomTabsModel';\n\n@Entry\n@Component\nstruct MainPage {\n  @State @Watch('onIndexChange') bottomTabIndex: number = 1;\n  private controller: TabsController = new TabsController();\n\n  @Builder TabBuilder(index: number, _name: string) {\n    Column() {\n      Image(this.bottomTabIndex === index ? BottomTabsList[index].iconSelected : BottomTabsList[index].icon)\n        .width(Const.ICON_SIZE)\n        .height(Const.ICON_SIZE)\n        .objectFit(ImageFit.Contain)\n\n      Text(BottomTabsList[index].text)\n        .fontSize($r('app.float.bottom_font_size'))\n        .opacity(Const.OPACITY)\n        .fontColor(this.bottomTabIndex === index ?\n        $r('app.color.bottom_tabs_font_color_selected') : $r('app.color.bottom_tabs_font_color'))\n    }\n    .width(Const.FULL_PERCENT)\n    .height(Const.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n    .border({ width: { top: Const.BORDER_WIDTH }, color: $r('app.color.color_border') })\n    .backgroundColor($r('app.color.bottom_tabs_background_color'))\n  }\n\n  onIndexChange() {\n    this.controller.changeIndex(this.bottomTabIndex);\n  }\n\n  pageTransition() {\n    PageTransitionEnter({ duration: Const.SHARED_DURATION })\n      .slide(SlideEffect.Top)\n    PageTransitionExit({ delay: Const.EXIT_DELAY })\n      .opacity(0)\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.End, justifyContent: FlexAlign.End }) {\n      Tabs({ barPosition: BarPosition.End, index: 1, controller: this.controller }) {\n        TabContent() {\n          Map()\n        }.tabBar(this.TabBuilder(0, 'Map'))\n\n        TabContent() {\n          Zones()\n        }.tabBar(this.TabBuilder(1, 'Zone'))\n\n        TabContent() {\n          Trains()\n        }.tabBar(this.TabBuilder(2, 'Train'))\n      }\n      .width(Const.FULL_PERCENT)\n      .height(Const.FULL_PERCENT)\n      .vertical(false)\n      .scrollable(false)\n      .barHeight(Const.BAR_HEIGHT)\n      .onChange((index: number) => {\n        this.bottomTabIndex = index;\n      })\n    }\n    .width(Const.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\OxHornCampus\\entry\\src\\main\\ets\\pages\\MainPage.ets", "project_name": "codelabs-master", "id": "820023d4645ad3b9a1a1c99fe5c4e04a7a7f4551336588f931b08681a49a89b5"}
{"text": "import { CommonConstants as Const } from '../common/constants/CommonConstants';\n\n@Observed\nexport class AnimationItem {\n  screenHeight: number = 0;\n  offsetSum: number = 0;\n  scrollerForList: Scroller = new Scroller();\n  arrowIconOpacity: number = Const.OPACITY_MAX;\n  imageHeight: number = Const.FULL_PERCENT_NUMBER;\n  listPosition: number = Const.LIST_POSITION_BEGIN;\n  geographicPicType: string = Const.GEOGRAPHY_LIGHT;\n  currentListIndex: number = Const.LIST_POSITION_BEGIN;\n  iconTitle: string = Const.ICON_SUBTITLE_ARRAY[0];\n  scaleIcon: Array<number> = [Const.OPACITY_MAX, Const.OPACITY_MIN, Const.OPACITY_MIN];\n}", "path": "codelabs-master\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\AnimationItem.ets", "project_name": "codelabs-master", "id": "c6ef66c5d4fb1475b77d5374a2167541f83382f0421eafd5e8299beb9e1281c3"}
{"text": "@Observed\nexport class TrainsMap {\n  imgBg: ImageBitmap = new ImageBitmap('common/images/ic_line1.png');\n  interval: number = 0;\n  \n  lineData: Array<Position> = [];\n}\n\nexport class Position {\n  x: number = 0;\n  y: number = 0;\n}\n\nexport class RouteTitle {\n  src: Resource = $r('app.media.ic_design_style');\n  scale: number = 0;\n}", "path": "codelabs-master\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\TrainsMap.ets", "project_name": "codelabs-master", "id": "c5753f582b8c788adb52cdb28bcb6e5ef64faa90e48a8597e83ca87544834302"}
{"text": "export default class ZonesItem {\n  id: number = 0;\n  title: ResourceStr = $r('app.string.area_name_a');\n  subTitle: ResourceStr = $r('app.string.area_sub_name_a');\n  createTime: ResourceStr = $r('app.string.create_year_2015');\n  content: ResourceStr[] = [];\n  thumbnail: ResourceStr = $r('app.media.ic_thumbnail_a');\n  swiperPic: ResourceStr = $r('app.media.ic_A');\n  subPicTop: ResourceStr = $r('app.media.ic_A_photo_top');\n  subPicBottom: ResourceStr = $r('app.media.ic_A_photo_bottom');\n  titleIcon: ResourceStr = $r('app.media.ic_title_top_A');\n  imageList: ResourceStr[] = [];\n  buildingInformation: ResourceStr = $r('app.string.build_information_a');\n  buildingPic: ResourceStr = $r('app.media.ic_building_A');\n  geographyPic: ResourceStr = $r('app.media.ic_geography_dark_A');\n  geographyPicLight: ResourceStr = $r('app.media.ic_geography_lighter_A');\n  backgroundColor: ResourceStr = $r('app.color.introduction_page_green');\n  starLinePic: ResourceStr[] = [];\n}", "path": "codelabs-master\\OxHornCampus\\entry\\src\\main\\ets\\viewmodel\\ZonesItem.ets", "project_name": "codelabs-master", "id": "d0c76d52d216af70e9c11296dd8750242e146649faa5314b2d932c04a818c655"}
{"text": "import router from '@ohos.router';\nimport CommonConstants from '../common/constants/CommonConstants';\nimport Logger from '../common/utils/Logger';\n\nconst TAG = '[IndexPage]';\n\n\n@Entry\n@Component\nstruct IndexPage {\n  @State message: string = CommonConstants.INDEX_MESSAGE;\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(CommonConstants.FONT_SIZE)\n          .fontWeight(FontWeight.Bold)\n        Blank()\n        Button($r('app.string.next'))\n          .fontSize(CommonConstants.BUTTON_FONT_SIZE)\n          .width(CommonConstants.BUTTON_WIDTH)\n          .height(CommonConstants.BUTTON_HEIGHT)\n          .backgroundColor($r('app.color.button_bg'))\n          .onClick(() => {\n            router.pushUrl({\n              url: CommonConstants.SECOND_URL,\n              params: {\n                src: CommonConstants.SECOND_SRC_MSG\n              }\n            }).catch((error: Error) => {\n              Logger.info(TAG, 'IndexPage push error' + JSON.stringify(error));\n            });\n          })\n      }\n      .width(CommonConstants.FULL_WIDTH)\n      .height(CommonConstants.LAYOUT_HEIGHT)\n    }\n    .height(CommonConstants.FULL_HEIGHT)\n    .backgroundColor($r('app.color.page_bg'))\n  }\n}", "path": "codelabs-master\\PagesRouter\\entry\\src\\main\\ets\\pages\\IndexPage.ets", "project_name": "codelabs-master", "id": "9acb1aacaac92d355e962c97747cd99f976bb444cca5030f680fe599e7d254d4"}
{"text": "import router from '@ohos.router';\nimport CommonConstants from '../common/constants/CommonConstants';\n\n\n@Entry\n@Component\nstruct SecondPage {\n  @State message: string = CommonConstants.SECOND_MESSAGE;\n  @State src: string = (router.getParams() as Record<string, string>)[CommonConstants.SECOND_SRC_PARAM];\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(CommonConstants.FONT_SIZE)\n          .fontWeight(FontWeight.Bold)\n        Text(this.src)\n          .fontSize(CommonConstants.PARAMS_FONT_SIZE)\n          .opacity(CommonConstants.PARAMS_OPACITY)\n        Blank()\n        Button($r('app.string.back'))\n          .fontSize(CommonConstants.BUTTON_FONT_SIZE)\n          .width(CommonConstants.BUTTON_WIDTH)\n          .height(CommonConstants.BUTTON_HEIGHT)\n          .backgroundColor($r('app.color.button_bg'))\n          .onClick(() => {\n            router.back();\n          })\n      }\n      .width(CommonConstants.FULL_WIDTH)\n      .height(CommonConstants.LAYOUT_HEIGHT)\n    }\n    .height(CommonConstants.FULL_HEIGHT)\n    .backgroundColor($r('app.color.page_bg'))\n  }\n}", "path": "codelabs-master\\PagesRouter\\entry\\src\\main\\ets\\pages\\SecondPage.ets", "project_name": "codelabs-master", "id": "c29de80fe3bd49dc6824f729af3a6bfc2d797b2bc0435b0234dd52ed0c9a8715"}
{"text": "export const code = `\n  const JSBridgeMap = {};\n  let callID = 0;\n\n  function JSBridgeCallback (id, params){\n    JSBridgeMap[id](params);\n    JSBridgeMap[id] = null;\n    delete JSBridgeMap[id];\n  }\n\n  window.ohosCallNative = {\n    callNative(method, params, callback){\n      const id = callID++;\n      const paramsObj = {\n          callID: id,\n          data: params || null\n      }\n      JSBridgeMap[id] = callback || (() => {});\n      JSBridgeHandle.call(method, JSON.stringify(paramsObj));\n    }\n  }\n`;", "path": "codelabs-master\\SelectContact\\entry\\src\\main\\ets\\common\\constant\\CodeConstant.ets", "project_name": "codelabs-master", "id": "3f122d6df40d1e31f84e4ce044472db21a124ac95655f495a4378935c9730233"}
{"text": "import WebView from '@ohos.web.webview';\nimport display from '@ohos.display';\nimport promptAction from '@ohos.promptAction';\nimport JSBridge from '../common/utils/JsBridge';\nimport { CommonConstants } from '../common/constant/CommonConstant';\nimport Logger from '../common/utils/Logger';\n\n@Entry\n@Component\nstruct SelectContact {\n  @StorageLink('isClick') isClick: boolean = false;\n  @StorageLink('tel') phoneNumber: string = '';\n  @StorageLink('proportion') proportion: number = 0;\n  @State chargeTip: Resource = $r('app.string.recharge_button');\n  webController: WebView.WebviewController = new WebView.WebviewController();\n  private jsBridge: JSBridge = new JSBridge(this.webController);\n\n  aboutToAppear() {\n    display.getAllDisplays((err, displayClass: display.Display[]) => {\n      if (err.code) {\n        Logger.error('SelectContact Page', 'Failed to obtain all the display objects. Code: ' + JSON.stringify(err));\n        return;\n      }\n      this.proportion = displayClass[0].densityDPI / CommonConstants.COMMON_VALUE;\n      Logger.info('Succeeded in obtaining all the display objects. Data: ' + JSON.stringify(displayClass));\n    });\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.navigation_title'))\n          .fontSize($r('app.float.font_size_large'))\n          .fontWeight(FontWeight.Medium)\n      }\n      .height($r('app.float.navigation_height'))\n      .width(CommonConstants.FULL_SIZE)\n      .alignItems(VerticalAlign.Center)\n      .padding({ left: $r('app.float.padding_left_normal') })\n\n      Web({\n        src: $rawfile('MainPage.html'),\n        controller: this.webController\n      })\n        .javaScriptAccess(true)\n        .javaScriptProxy(this.jsBridge.javaScriptProxy)\n        .height($r('app.float.web_height'))\n        .onPageBegin(() => {\n          this.jsBridge.initJsBridge();\n        })\n\n      Blank()\n\n      Button(this.chargeTip)\n        .width(CommonConstants.FULL_SIZE)\n        .height($r('app.float.button_height'))\n        .margin({ bottom: $r('app.float.button_margin_bottom') })\n        .enabled(this.isClick)\n        .onClick(() => {\n          promptAction.showToast({\n            message: this.phoneNumber === '' ? $r('app.string.phone_check') : $r('app.string.recharge_success')\n          });\n        })\n    }\n    .width(CommonConstants.FULL_SIZE)\n    .height(CommonConstants.FULL_SIZE)\n    .backgroundColor($r('app.color.page_color'))\n    .padding({\n      left: $r('app.float.margin_left_normal'),\n      right: $r('app.float.margin_right_normal')\n    })\n  }\n}", "path": "codelabs-master\\SelectContact\\entry\\src\\main\\ets\\pages\\SelectContact.ets", "project_name": "codelabs-master", "id": "db35e7fd633fa6a95f477d416640c765160f5336a88fd204da68dda774b6ba6d"}
{"text": "export interface callType {\n  call: (func: string, params: string) => void\n}\n\nexport interface JavaScriptItem {\n  object: callType,\n  name: string,\n  methodList: Array<string>,\n  controller: WebviewController\n}", "path": "codelabs-master\\SelectContact\\entry\\src\\main\\ets\\viewmodel\\JavaScriptItem.ets", "project_name": "codelabs-master", "id": "cff30784d6c13f6e1c54cefe58f7dbc574f0e57a33620adf599d29e099c1e603"}
{"text": "export interface ParamsItem {\n  callID: number,\n  data: ParamsDataItem\n}\n\n\nexport interface ParamsDataItem {\n  name?: string;\n  tel?: string\n}", "path": "codelabs-master\\SelectContact\\entry\\src\\main\\ets\\viewmodel\\ParamsItem.ets", "project_name": "codelabs-master", "id": "6033af2534213426adc9a82d8d2b17fdcedb899f7430cf90eeb8183d2096eb39"}
{"text": "import dataPreferences from '@ohos.data.preferences';\nimport { GlobalContext } from '../utils/GlobalContext';\nimport Logger from '../utils/Logger';\n\nconst TAG = '[PreferencesUtil]';\nconst PREFERENCES_NAME = 'myPreferences';\nconst KEY_APP_FONT_SIZE = 'appFontSize';\n\n\nexport class PreferencesUtil {\n  createFontPreferences(context: Context) {\n    let fontPreferences: Function = (() => {\n      let preferences: Promise<dataPreferences.Preferences> = dataPreferences.getPreferences(context,\n        PREFERENCES_NAME);\n      return preferences;\n    });\n    GlobalContext.getContext().setObject('getFontPreferences', fontPreferences);\n  }\n\n  saveDefaultFontSize(fontSize: number) {\n    let getFontPreferences: Function = GlobalContext.getContext().getObject('getFontPreferences') as Function;\n    getFontPreferences().then((preferences: dataPreferences.Preferences) => {\n      preferences.has(KEY_APP_FONT_SIZE).then(async (isExist: boolean) => {\n        Logger.info(TAG, 'preferences has changeFontSize is ' + isExist);\n        if (!isExist) {\n          await preferences.put(KEY_APP_FONT_SIZE, fontSize);\n          preferences.flush();\n        }\n      }).catch((err: Error) => {\n        Logger.error(TAG, 'Has the value failed with err: ' + err);\n      });\n    }).catch((err: Error) => {\n      Logger.error(TAG, 'Get the preferences failed, err: ' + err);\n    });\n  }\n\n  saveChangeFontSize(fontSize: number) {\n    let getFontPreferences: Function = GlobalContext.getContext().getObject('getFontPreferences') as Function;\n    getFontPreferences().then(async (preferences: dataPreferences.Preferences) => {\n      await preferences.put(KEY_APP_FONT_SIZE, fontSize);\n      preferences.flush();\n    }).catch((err: Error) => {\n      Logger.error(TAG, 'put the preferences failed, err: ' + err);\n    });\n  }\n\n  async getChangeFontSize() {\n    let fontSize: number = 0;\n    let getFontPreferences: Function = GlobalContext.getContext().getObject('getFontPreferences') as Function;\n    fontSize = await (await getFontPreferences()).get(KEY_APP_FONT_SIZE, fontSize);\n    return fontSize;\n  }\n\n  async deleteChangeFontSize() {\n    let getFontPreferences: Function = GlobalContext.getContext().getObject('getFontPreferences') as Function;\n    const preferences: dataPreferences.Preferences = await getFontPreferences();\n    let deleteValue = preferences.delete(KEY_APP_FONT_SIZE);\n    deleteValue.then(() => {\n      Logger.info(TAG, 'Succeeded in deleting the key appFontSize.');\n    }).catch((err: Error) => {\n      Logger.error(TAG, 'Failed to delete the key appFontSize. Cause: ' + err);\n    });\n  }\n}\n\nexport default new PreferencesUtil();", "path": "codelabs-master\\SetAppFontSize\\entry\\src\\main\\ets\\common\\database\\PreferencesUtil.ets", "project_name": "codelabs-master", "id": "19c727243a1c700b81861d05451c8a4bb4ec259bd853f3b4b3ab31ec87cb2c1a"}
{"text": "import {\n  COMMON_NUM_MINUTE,\n  COMMON_NUM_DOUBLE,\n  ZERO_STR,\n  SPLIT\n} from '../common/constants/CommonConstants';\n\n\nexport function changeSliderTime(value: number): string {\n  let second: number = value % COMMON_NUM_MINUTE;\n  let min: number = Number.parseInt((value / COMMON_NUM_MINUTE).toString());\n  let head = min < COMMON_NUM_DOUBLE ? `${ZERO_STR}${min}` : min;\n  let end = second < COMMON_NUM_DOUBLE ? `${ZERO_STR}${second}` : second;\n  let nowTime = `${head}${SPLIT}${end}`;\n  return nowTime;\n}", "path": "codelabs-master\\SimpleVideo\\entry\\src\\main\\ets\\model\\VideoControll.ets", "project_name": "codelabs-master", "id": "2ee498069442938d21980f84b6a5452bf0d7508f2de199f1d5af46e730264d42"}
{"text": "import router from '@ohos.router';\nimport { VideoPlayer } from '../view/VideoPlayer';\nimport {\n  MARGIN_FONT_SIZE,\n  COMMON_NUM_FONT_WEIGHT,\n  ALL_PERCENT,\n  STACK_STYLE\n} from '../common/constants/CommonConstants';\n\n\n@Entry\n@Component\nstruct Play {\n  private source: string = (router.getParams() as Record<string, Object>).source as string;\n  private startIconResource: Resource = $r('app.media.ic_public_play');\n  private backIconResource: Resource = $r('app.media.ic_back');\n  @Provide isPlay: boolean = false;\n  @Provide isOpacity: boolean = false;\n  controller: VideoController = new VideoController();\n  @Provide isLoading: boolean = false;\n  @Provide progressVal: number = 0;\n  @Provide flag: boolean = false;\n\n  aboutToAppear() {\n    this.source;\n  }\n\n  onPageHide() {\n    this.controller.pause();\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Image(this.backIconResource)\n          .width(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .height(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .margin({ left: MARGIN_FONT_SIZE.FOURTH_MARGIN })\n          .onClick(() => {\n            router.back();\n          })\n        Text($r('app.string.back'))\n          .fontColor(Color.White)\n          .fontSize(MARGIN_FONT_SIZE.FOURTH_MARGIN)\n          .fontWeight(COMMON_NUM_FONT_WEIGHT)\n          .margin({ left: MARGIN_FONT_SIZE.FIRST_MARGIN })\n      }\n      .width(ALL_PERCENT)\n      .margin({\n        left: MARGIN_FONT_SIZE.FIRST_MARGIN,\n        top: MARGIN_FONT_SIZE.FIRST_MARGIN\n      })\n      .justifyContent(FlexAlign.Start)\n\n      Stack() {\n        if (!this.isPlay && !this.isLoading) {\n          Image(this.startIconResource)\n            .width(MARGIN_FONT_SIZE.FIFTH_MARGIN)\n            .height(MARGIN_FONT_SIZE.FIFTH_MARGIN)\n            .zIndex(STACK_STYLE.IMAGE_Z_INDEX)\n        }\n        if (this.isLoading) {\n          Progress({\n            value: STACK_STYLE.PROGRESS_VALUE,\n            total: STACK_STYLE.PROGRESS_TOTAL,\n            type: ProgressType.ScaleRing\n          })\n            .color(Color.Grey)\n            .value(this.progressVal)\n            .width(STACK_STYLE.PROGRESS_WIDTH)\n            .style({\n              strokeWidth: STACK_STYLE.PROGRESS_STROKE_WIDTH,\n              scaleCount: STACK_STYLE.PROGRESS_SCALE_COUNT,\n              scaleWidth: STACK_STYLE.PROGRESS_SCALE_WIDTH\n            })\n            .zIndex(STACK_STYLE.PROGRESS_Z_INDEX)\n        }\n        VideoPlayer({\n          source: this.source,\n          controller: this.controller\n        })\n          .zIndex(0)\n      }\n    }\n    .height(ALL_PERCENT)\n    .backgroundColor(Color.Black)\n  }\n}", "path": "codelabs-master\\SimpleVideo\\entry\\src\\main\\ets\\pages\\SimpleVideoPlay.ets", "project_name": "codelabs-master", "id": "7400df21df9eac3680e08d5d9b03ebe0e79638a94c6a650742de6d8b7bfbf90c"}
{"text": "import prompt from '@ohos.promptAction';\nimport { VideoSlider } from '../view/VideoPlaySlider';\nimport {changeSliderTime } from '../model/VideoControll';\nimport {\n  START_TIME,\n  STRING_PERCENT,\n  COMMON_NUM_DURATION,\n  MESSAGE,\n  ALL_PERCENT,\n  COMMON_NUM_MINUTE,\n  COMMON_NUM_DOUBLE,\n  ZERO_STR,\n  SPLIT\n} from '../common/constants/CommonConstants';\n\n\n@Component\nexport struct VideoPlayer {\n  private source: string | Resource = '';\n  private controller: VideoController = new VideoController();\n  private previewUris: Resource = $r('app.media.preview');\n  @Provide currentTime: number = 0;\n  @Provide durationTime: number = 0;\n  @Provide durationStringTime: string = START_TIME;\n  @Provide currentStringTime: string = START_TIME;\n  @Consume isPlay: boolean;\n  @Consume isOpacity: boolean;\n  @Consume flag: boolean;\n  @Consume isLoading: boolean;\n  @Consume progressVal: number;\n\n  build() {\n    Column() {\n      Video({\n        src: this.source,\n        previewUri: this.previewUris,\n        controller: this.controller\n      })\n        .width(ALL_PERCENT)\n        .height(STRING_PERCENT.NINETY_PERCENT)\n        .controls(false)\n        .autoPlay(false)\n        .objectFit(ImageFit.Contain)\n        .loop(false)\n        .onUpdate((event) => {\n          if (event) {\n            this.currentTime = event.time;\n            this.currentStringTime = changeSliderTime(this.currentTime);\n          }\n        })\n        .onPrepared((event) => {\n          this.prepared(event?.duration);\n        })\n        .onFinish(() => {\n          this.finish();\n        })\n        .onError(() => {\n          prompt.showToast({\n            duration: COMMON_NUM_DURATION,\n            message: MESSAGE\n          });\n        })\n      VideoSlider({ controller: this.controller })\n    }\n  }\n\n  \n  prepared(duration: number) {\n    this.durationTime = duration;\n    let second: number = duration % COMMON_NUM_MINUTE;\n    let min: number = Number.parseInt((duration / COMMON_NUM_MINUTE).toString());\n    let head = min < COMMON_NUM_DOUBLE ? `${ZERO_STR}${min}` : min;\n    let end = second < COMMON_NUM_DOUBLE ? `${ZERO_STR}${second}` : second;\n    this.durationStringTime = `${head}${SPLIT}${end}`;\n    this.flag = true;\n  }\n\n  \n  finish() {\n    this.isPlay = false;\n    this.isOpacity = false;\n  }\n}", "path": "codelabs-master\\SimpleVideo\\entry\\src\\main\\ets\\view\\VideoPlayer.ets", "project_name": "codelabs-master", "id": "84fab75e6a8a6bc47e48dde2ee2f8191ea5e20b9170f855b77d37a963595cf9a"}
{"text": "import { BalanceStyle } from '../common/constants/Constants';\n\n\n@Component\nexport default struct BalanceComponent {\n  @BuilderParam right: () => void = () => {};\n  @BuilderParam left: () => void = () => {};\n\n  build() {\n    Row() {\n      Row() {\n        this.left()\n      }\n      .layoutWeight(BalanceStyle.LAYOUT_WEIGHT)\n      .align(Alignment.Start)\n\n      Row() {\n        this.right()\n      }\n      .layoutWeight(BalanceStyle.LAYOUT_WEIGHT)\n      .justifyContent(FlexAlign.End)\n    }\n  }\n}", "path": "codelabs-master\\StageAbilityDemo\\entry\\src\\main\\ets\\view\\BalanceComponent.ets", "project_name": "codelabs-master", "id": "682672d8d441f16ae578d37687ca2cb79b049e3f14c85e11448845c96ed614b6"}
{"text": "import relationalStore from '@ohos.data.relationalStore';\n\n\nexport default class SensorData {\n  \n  date: string = '';\n\n  \n  stepsValue: number = 0;\n\n  \n  toValuesBucket():relationalStore.ValuesBucket {\n    return {\n      'date': this.date,\n      'stepsValue': this.stepsValue\n    };\n  }\n}", "path": "codelabs-master\\StepsCardJS\\entry\\src\\main\\ets\\common\\database\\SensorData.ets", "project_name": "codelabs-master", "id": "3d8e7a7e2cecab1653c22fd863ce32f01b1ed8ff46c4f4902bb0457e6517350e"}
{"text": "import CommonConstants from '../constants/CommonConstants';\n\n\nexport class DateUtils {\n  \n  getDate(days: number) {\n    let date: Date = new Date(new Date().getTime() - days * CommonConstants.TODAY_MILLI_SECOND);\n    let year: number = date.getFullYear();\n    let month: number = date.getMonth() + CommonConstants.MONTH_PLUS_ONE;\n    let day: number = date.getDate();\n    return '' + year + month + day;\n  }\n}\n\nexport default new DateUtils();", "path": "codelabs-master\\StepsCardJS\\entry\\src\\main\\ets\\common\\utils\\DateUtils.ets", "project_name": "codelabs-master", "id": "3e5ffe262310ba44ce7f9cb434441bacd5b647a3ef30654f0c71fb74b734ba97"}
{"text": "import PointStyle from './PointStyle';\n\n\nexport default class ChartPoint {\n  \n  value: number = 0;\n  \n  pointStyle: PointStyle = {\n    shape: '',\n    fillColor: '',\n    strokeColor: '',\n    size: 0\n  };\n\n  \n  description: string = '';\n\n  \n  textLocation: string = '';\n\n  \n  textColor: string='';\n}", "path": "codelabs-master\\StepsCardJS\\entry\\src\\main\\ets\\viewmodel\\ChartPoint.ets", "project_name": "codelabs-master", "id": "56f24229b96451bc3286476e62eb67b6cfd84ffe19e14d1279e78076ccbd248d"}
{"text": "import router from '@ohos.router';\nimport { SLEEP, TASK_NAME, TASK_TARGET, TASK_PROGRESS, FREQUENCY, REMIND_TIME, EVERYDAY } from '../common/Const';\n\nclass DetailModel {\n  title: string = '';\n  value: string = '';\n}\n\nconst DETAILS: Array<DetailModel> = [\n  { title: TASK_NAME, value: SLEEP },\n  { title: TASK_TARGET, value: SLEEP },\n  { title: TASK_PROGRESS, value: '100%' },\n  { title: FREQUENCY, value: EVERYDAY },\n  { title: REMIND_TIME, value: '09:00' }\n];\n\n@Entry\n@Component\nstruct TaskDetailPage {\n  @State detailList: Array<DetailModel> = DETAILS;\n\n  showDialog() {\n    AlertDialog.show({\n      title: $r('app.string.task_clock'),\n      message: $r('app.string.task_done'),\n      autoCancel: true,\n      confirm: {\n        value: $r('app.string.clock'),\n        action: () => {\n        }\n      }\n    });\n  }\n\n  backAction() {\n    router.back();\n  }\n  \n  build() {\n\n  }\n}", "path": "codelabs-master\\SuperVisualSample\\entry\\src\\main\\ets\\pages\\TaskDetailPage.ets", "project_name": "codelabs-master", "id": "d7748d683d2c9c666615f456a1c107f65f16de3705124e6383974a2f91547aa1"}
{"text": "import { VideoItem } from '../viewmodel/VideoItem';\nimport { HomeTabContentList } from './HomeTabContentList';\nimport { HomeTabContentButton } from './HomeTabContentButton';\nimport { CommonConstants } from '../common/constants/CommonConstants';\n\n@Component\nexport struct HomeTabContent {\n  private currIndex: number = 0;\n  @Provide videoList: Array<VideoItem> = [];\n\n  build() {\n    Column() {\n      HomeTabContentList({ currIndex: this.currIndex });\n      HomeTabContentButton({ currIndex: this.currIndex });\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n  }\n}", "path": "codelabs-master\\VideoPlayer\\entry\\src\\main\\ets\\view\\HomeTabContent.ets", "project_name": "codelabs-master", "id": "d672563d434b4d4cd08130e771ae862ef8b6896ba9f8bfca824b9bd460f2aa2c"}
{"text": "import { HomeTabContentDialog } from './HomeTabContentDialog';\nimport { VideoItem } from '../viewmodel/VideoItem';\nimport HomeVideoListModel from '../viewmodel/HomeVideoListModel';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { HomeConstants } from '../common/constants/HomeConstants';\nimport { GlobalContext } from '../common/util/GlobalContext';\n\n@Component\nexport struct HomeTabContentButton {\n  private currIndex: number = 0;\n  @Consume videoList: Array<VideoItem>;\n  @State name: string = '';\n  @State src: string = '';\n  dialogController: CustomDialogController = new CustomDialogController({\n    builder: HomeTabContentDialog({\n      confirm: this.confirm,\n      name: $name,\n      src: $src,\n      videoList: $videoList\n    }),\n    autoCancel: true,\n    alignment: DialogAlignment.Default,\n    offset: {\n      dx: HomeConstants.OFFSET_DX,\n      dy: HomeConstants.OFFSET_DY\n    },\n    gridCount: HomeConstants.GRID_COUNT,\n    customStyle: false\n  });\n\n  confirm() {\n    HomeVideoListModel.setInternetVideo(this.name, this.src);\n    let videoInternetList = GlobalContext.getContext().getObject('videoInternetList') as VideoItem[];\n    this.videoList = videoInternetList;\n    this.src = '';\n    this.name = '';\n  }\n\n  build() {\n    Column() {\n      Button(this.currIndex === 0 ? $r('app.string.scan_local_video') : $r('app.string.add_internet_video'), {\n        type: ButtonType.Normal,\n        stateEffect: true\n      })\n        .borderRadius($r('app.float.tab_border_radius'))\n        .fontSize($r('app.float.button_font_size'))\n        .height(HomeConstants.TAB_BUTTON_HEIGHT)\n        .backgroundColor($r('app.color.button_back_ground_color'))\n        .onClick(async () => {\n          if (this.currIndex === 0) {\n            this.videoList = await HomeVideoListModel.getLocalVideo();\n          } else {\n            this.dialogController.open();\n          }\n        })\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(HomeConstants.TAB_COLUMN_HEIGHT)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\VideoPlayer\\entry\\src\\main\\ets\\view\\HomeTabContentButton.ets", "project_name": "codelabs-master", "id": "f9414142c1d0aab0421db1678a5504c33688ae07a5bf85b65a575da6c4b8202e"}
{"text": "import { VideoItem } from '../viewmodel/VideoItem';\nimport { HomeDialogModel } from '../viewmodel/HomeDialogModel';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { HomeConstants } from '../common/constants/HomeConstants';\n\n@CustomDialog\nexport struct HomeTabContentDialog {\n  private dialogModel: HomeDialogModel = new HomeDialogModel(this);\n  @State linkCheck: Resource = $r('app.string.link_check');\n  @State confirmAdd: Resource = $r('app.string.confirm_add');\n  @State loadColor: Resource = $r('app.color.index_tab_selected_font_color');\n  @Link name: string;\n  @Link src: string;\n  @Link videoList: Array<VideoItem>;\n  controller: CustomDialogController = new CustomDialogController({\n    builder: HomeTabContentDialog({\n      name: '',\n      src: '',\n      videoList: []\n    }),\n  });\n  confirm: () => void = () => {\n  };\n\n  build() {\n    Column() {\n      TextInput({ placeholder: $r('app.string.link_placeholder'), text: this.src })\n        .height(HomeConstants.TEXT_HEIGHT)\n        .width(CommonConstants.NINETY_PERCENT)\n        .margin({ top: HomeConstants.TEXT_MARGIN_TOP })\n        .onChange((value: string) => {\n          this.src = value;\n        })\n      TextInput({ placeholder: $r('app.string.name_placeholder'), text: this.name })\n        .height(HomeConstants.TEXT_HEIGHT)\n        .width(CommonConstants.NINETY_PERCENT)\n        .margin({ top: HomeConstants.TEXT_MARGIN_TOP })\n        .onChange((value: string) => {\n          this.name = value;\n        })\n      Flex({ justifyContent: FlexAlign.SpaceAround }) {\n        Text(this.linkCheck)\n          .fontSize($r('app.float.dialog_font_size'))\n          .fontColor(this.loadColor)\n          .onClick(() => {\n            if (this.dialogModel.checkSrcNull()) {\n              this.dialogModel.checkSrcValidity(0);\n            }\n          })\n        Divider()\n          .vertical(true)\n          .height($r('app.float.tab_dialog_divider_height'))\n          .color($r('app.color.divider_color'))\n          .opacity($r('app.float.tab_dialog_divider_opacity'))\n          .margin({\n            left: $r('app.float.dialog_divider_margin_left'),\n            right: $r('app.float.dialog_divider_margin_left')\n          })\n        Text(this.confirmAdd)\n          .fontSize($r('app.float.dialog_font_size'))\n          .fontColor(this.loadColor)\n          .onClick(() => {\n            if (this.dialogModel.checkSrcNull() && this.dialogModel.checkNameNull()) {\n              this.dialogModel.checkSrcValidity(1);\n            }\n          })\n      }\n      .margin({\n        top: $r('app.float.dialog_column_margin_top'),\n        bottom: $r('app.float.dialog_column_margin_bottom')\n      })\n    }\n  }\n}", "path": "codelabs-master\\VideoPlayer\\entry\\src\\main\\ets\\view\\HomeTabContentDialog.ets", "project_name": "codelabs-master", "id": "1c3d36a9c8f4d80a73680560295505a6a36c4ff18b0ae8bb1074a2f83cd51121"}
{"text": "import { VideoController } from '../controller/VideoController';\nimport { CommonConstants } from '../common/constants/CommonConstants';\nimport { PlayConstants } from '../common/constants/PlayConstants';\n\n@Component\nexport struct PlayProgress {\n  private playVideoModel: VideoController = new VideoController();\n  @State currentTime: string = PlayConstants.PROGRESS_CURRENT_TIME;\n  @State totalTime: string = PlayConstants.PROGRESS_TOTAL_TIME;\n  @State progressVal: number = PlayConstants.PROGRESS_PROGRESS_VAL;\n\n  aboutToAppear() {\n    if (this.playVideoModel !== null) {\n      this.playVideoModel.initProgressThis(this);\n    }\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.currentTime)\n          .fontSize($r('app.float.slider_font_size'))\n          .fontColor(Color.White)\n        Slider({\n          value: this.progressVal,\n          step: PlayConstants.PROGRESS_STEP,\n          style: SliderStyle.OutSet\n        })\n          .blockColor(Color.White)\n          .trackColor($r('app.color.track_color'))\n          .selectedColor(Color.White)\n          .trackThickness(PlayConstants.PROGRESS_TRACK_THICKNESS)\n          .layoutWeight(1)\n          .margin({ left: PlayConstants.PROGRESS_MARGIN_LEFT })\n          .onChange((value: number, mode: SliderChangeMode) => {\n            this.playVideoModel.setSeekTime(value, mode);\n          })\n        Text(this.totalTime)\n          .fontSize($r('app.float.slider_font_size'))\n          .fontColor(Color.White)\n          .margin({ left: PlayConstants.PROGRESS_MARGIN_LEFT })\n      }\n      .width(PlayConstants.PROGRESS_ROW_WIDTH)\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "codelabs-master\\VideoPlayer\\entry\\src\\main\\ets\\view\\PlayProgress.ets", "project_name": "codelabs-master", "id": "80e82491110a2e3a8603d1285f7cdcb547d966b1479803ab82db4e655509a689"}
{"text": "export class NavigatorModel {\n  \n  path: Resource | string = '';\n\n  \n  tips: Resource | string = '';\n}", "path": "codelabs-master\\WebComponent\\entry\\src\\main\\ets\\viewmodel\\NavigatorModel.ets", "project_name": "codelabs-master", "id": "fcd51fa5088a6cb4c3e7ecff0a98a3eb9cc8854a4fd3ccde1bb78ac7448656b4"}
{"text": "export class StorageKeys {\n  static readonly APP_KEY = \"app_key\";\n  static readonly USER_INFO_KEY = \"user_info_key\";\n  static readonly USER_LOGIN = \"user_login\";\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\constants\\StorageKeys.ets", "project_name": "HarmoneyOpenEye-master", "id": "00a00c7ba4d4dc6598fb5494f6ca82112218cc4c715ca4888bdab1f677cb429a"}
{"text": "export class EventKeys {\n  \n  static readonly LOADING_DIALOG_EVENT = 0x10000\n}\n\n\nexport const loadingEvent = {\n  eventId: EventKeys.LOADING_DIALOG_EVENT\n}\n", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\event\\EventKeys.ets", "project_name": "HarmoneyOpenEye-master", "id": "913f5dbf1188c73e51036d94927b932b03c0ac7ea63e8214f462a84fd6700e41"}
{"text": "export function TestEvent(testContent: string) {\n  return {\n    data: {\n      \"testContent\": testContent\n    }\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\event\\TestEvent.ets", "project_name": "HarmoneyOpenEye-master", "id": "442e9872f077f580a29ee3ecc6e5a32e4d14e1aa5bd74e48707220bc62b63ecd"}
{"text": "import http from '@ohos.net.http';\n\nexport interface BaseResponse {\n  \n  errorCode: number\n  errorMsg: string\n  \n}\n\n\nexport interface ApiResponse<T = any> extends BaseResponse {\n  \n  data: T | any;\n  \n}\n\ninterface HttpRequestConfig extends http.HttpRequestOptions {\n  showLoading?: boolean; \n  checkResultCode?: boolean; \n  checkLoginState?: boolean \n  needJumpToLogin?: boolean \n  url?: string, \n}\n\n\n\nclass HttpBuilder {\n  httpClient: http.HttpRequest\n  config: HttpRequestConfig\n\n  constructor(options: HttpRequestConfig) {\n    this.httpClient = http.createHttp()\n    this.config = options\n    this.setupInterceptor()\n  }\n  \n  setupInterceptor() {\n\n  }\n\n  request<T = any>(config: HttpRequestConfig): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.httpClient.request(\n        config.url,\n        config,\n        (error, data) => {\n          if (!error) {\n            resolve(data.result as T);\n          } else {\n            reject(error)\n          }\n          \n          this.httpClient.destroy()\n        }\n      )\n    })\n  }\n\n  get<T = any>(config: HttpRequestConfig): Promise<T> {\n    return this.request({ ...config, method: http.RequestMethod.GET })\n  }\n\n  post<T = any>(config: HttpRequestConfig): Promise<T> {\n    return this.request({ ...config, method: http.RequestMethod.POST })\n  }\n}\n\nexport default HttpBuilder", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\http\\http.ets", "project_name": "HarmoneyOpenEye-master", "id": "2b37659a5097c025902b93561c0f8da72dbb817cb6fce352faf9b2e456ab8c23"}
{"text": "export interface BannerDataModelData {\n  desc: string;\n  id: number;\n  imagePath: string;\n  isVisible: number;\n  order: number;\n  title: string;\n  type: number;\n  url: string;\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\model\\BannerDataModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "48dbb44198747acdc09f15fcf453eb14517233fde792636467435ee1ff5f7ea8"}
{"text": "export class BaseDataSourceWrapper<T> implements IDataSource{\n  private list: T[] = []\n  private listener: DataChangeListener\n\n  constructor(list: T[]) {\n    this.list = list\n  }\n\n  unregisterDataChangeListener(listener: DataChangeListener): void {\n\n  }\n\n  registerDataChangeListener(listener: DataChangeListener): void {\n    this.listener = listener\n  }\n\n  getData(index: number) {\n    return this.list[index]\n  }\n\n  totalCount(): number {\n    return this.list.length\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\model\\BaseDataSourceWrapper.ets", "project_name": "HarmoneyOpenEye-master", "id": "b6c5fec8d8af8f8681c30875f7385a8fff43c7885b192559fe7a41428b4812b7"}
{"text": "export type CategoryModel = CategoryModelChild[];\n\nexport interface CategoryModelChild {\n  id: number;\n  name: string;\n  alias?: any;\n  description: string;\n  bgPicture: string;\n  bgColor: string;\n  headerImage: string;\n  defaultAuthorId: number;\n  tagId: number;\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\model\\CategoryModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "58f9bee0c726ad3c7bd28fa496a0b9bef773b706cc22fbf3246bf2c5e81b644e"}
{"text": "import router from '@ohos.router'\nimport { RoutePath } from '../route/RoutePath'\n\n@Entry\n@Component\nstruct SplashPage {\n  aboutToAppear() {\n    setTimeout(() => {\n      router.replaceUrl({ url: RoutePath.MainPage })\n    }, 2000)\n  }\n\n  build() {\n    Stack() {\n      Image($r('app.media.landing_image')).objectFit(ImageFit.ScaleDown)\n    }.width(\"100%\").height(\"100%\").backgroundColor($r(\"app.color.color_white\")).alignContent(Alignment.Center)\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\pages\\SplashPage.ets", "project_name": "HarmoneyOpenEye-master", "id": "d6ddf2ed27bbfb480593779b5d4ed296ee39aac68ee2f6d4eb0766adcb8a1249"}
{"text": "import { StateComponent } from '../../../views/StateComponent'\nimport { ViewStateConstant } from '../../../constants/ViewStateConstant'\nimport { HomeModelIssueListItemList } from '../../../model/HomeModel'\nimport VideoDetailViewModel from '../../../viewmodel/VideoDetailViewModel'\n\n@Component\nexport struct VideoBottomComponent {\n  @State viewState: string = ViewStateConstant.VIEW_STATE_LOADING\n  @State relationDataList: HomeModelIssueListItemList[] = []\n  @State playIndex: number = -1\n  private onItemClick: (playUrl: string) => void\n  private relationId: number\n\n  aboutToAppear() {\n    VideoDetailViewModel.observeState((state) => this.viewState = state)\n    VideoDetailViewModel.relationId = this.relationId\n    this.loadNet()\n  }\n\n  loadNet() {\n    VideoDetailViewModel.getRelationList((result) => {\n      this.relationDataList = result\n    })\n  }\n\n  build() {\n    Stack() {\n      StateComponent({ viewState: this.viewState, retryCallback: () => {\n        this.loadNet()\n      } }) {\n        List() {\n          ForEach(this.relationDataList, (item: HomeModelIssueListItemList, index: number) => {\n            ListItem() {\n              this.detailItemBuilder(item, index)\n            }.onClick(() => {\n              this.onItemClick?.(item.data.playUrl)\n              this.playIndex = index\n            })\n          })\n        }\n        .width(\"100%\")\n        .height(\"100%\")\n        .padding({ left: 10, right: 10 })\n      }\n    }\n    .width(\"100%\")\n    .height(\"100%\")\n  }\n\n  @Builder\n  detailItemBuilder(item: HomeModelIssueListItemList, index: number) {\n    Row() {\n      Image(item.data?.cover.feed)\n        .width($r('app.float.size_100'))\n        .height($r('app.float.size_70'))\n        .alt($r('app.media.back_placeholder'))\n        .border({ radius: $r(\"app.float.size_5\") })\n        .backgroundColor($r('app.color.color_f5f5f5'))\n      Column() {\n        Text(item.data?.title)\n          .maxLines(1)\n          .fontColor(this.playIndex == index ? $r('app.color.color_red') : $r('app.color.color_333'))\n          .fontSize($r('app.float.size_text_15'))\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n        Blank()\n        Text(item.data?.description)\n          .maxLines(2)\n          .fontColor(this.playIndex == index ? $r('app.color.color_red') : $r('app.color.color_777'))\n          .fontSize($r('app.float.size_text_12'))\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n      }\n      .alignItems(HorizontalAlign.Start)\n      .layoutWeight(1)\n      .height($r('app.float.size_70'))\n      .margin({ left: 10 })\n      .padding({ top: 5, bottom: 5 })\n    }\n    .width(\"100%\")\n    .height($r('app.float.size_80'))\n    .alignItems(VerticalAlign.Center)\n  }\n}\n\n\n\n\n", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\pages\\commonDetail\\component\\VideoBottomComponent.ets", "project_name": "HarmoneyOpenEye-master", "id": "8b0ebb43b8c377f56d7ab647f88b693e0fc4fa1b4ef185344a8fd55dfba8b12f"}
{"text": "import router from '@ohos.router'\nimport { LogUtils } from '../utils/LogUtils';\n\nexport class Router {\n  static push(url: string, params?: Object) {\n    router.pushUrl({ url: url, params: params }, router.RouterMode.Standard, (err) => {\n      if (err) {\n        LogUtils.error(`pushUrl failed, code is ${err.code}, message is ${err.message}`);\n        return;\n      }\n      LogUtils.info('pushUrl success' + url);\n    })\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\route\\Router.ets", "project_name": "HarmoneyOpenEye-master", "id": "558a52b8a2e46e24282c9da2b2fbb0ce3a48162a626604d450c5cbed469168d2"}
{"text": "const regex = /^(https?:\\/\\/)img\\.(.*)$/\nconst replacement = \"$1ali-img.$2\"\nconst ImageRegexUtils = (imageUrl: string | undefined) => {\n    if (imageUrl === undefined) return \"\"\n    return imageUrl.replace(regex, replacement)\n}\n\nexport default ImageRegexUtils", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\utils\\ImageRegexUtils.ets", "project_name": "HarmoneyOpenEye-master", "id": "7d65bad00050d9f5a43fdc02f1bd14a6b47b64c963cd7854cab79205195af902"}
{"text": "export class JsonUtils {\n  private constructor() {\n  }\n\n  static stringify(data: any, space: number = 2): string {\n    return JSON.stringify(data, null, space);\n  }\n\n  static parse(jsonString: string): any {\n    return JSON.parse(jsonString);\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\utils\\JsonUtils.ets", "project_name": "HarmoneyOpenEye-master", "id": "7cc3a1ad9c2f65797ca593057506bd9c8af5a89a63dca9f3afe4037b3e8e09d2"}
{"text": "import dataPreferences from '@ohos.data.preferences'\n\nconst defaultPreferenceName = \"OPEN_EYE_PREFERENCES\"\n\ntype ValueType = number | string | boolean | Array<number> | Array<string> | Array<boolean>;\n\n\nexport class StorageUtils {\n  private constructor() {\n  }\n\n  static readonly context = getContext();\n\n  \n  static async getPreferences(preferenceName: string = defaultPreferenceName) {\n    return await dataPreferences.getPreferences(this.context, preferenceName)\n  }\n\n  static async put(key: string, value: ValueType, preferenceName: string = defaultPreferenceName) {\n    \n    let preferences = await this.getPreferences(preferenceName)\n    await preferences.put(key, value)\n    \n    await preferences.flush()\n  }\n  \n  static async get(key: string, defaultValue: ValueType = \"\", preferenceName: string = defaultPreferenceName) {\n    \n    let preferences = await this.getPreferences(preferenceName)\n    return preferences.get(key, defaultValue)\n  }\n\n  \n  static async delete(key: string, preferenceName: string = defaultPreferenceName) {\n    let preferences = await this.getPreferences(preferenceName)\n    return await preferences.delete(key)\n  }\n\n  \n  static async clear(preferenceName: string = defaultPreferenceName) {\n    let preferences = await this.getPreferences(preferenceName)\n    return await preferences.clear()\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\utils\\StorageUtils.ets", "project_name": "HarmoneyOpenEye-master", "id": "92ab3755c1c6af6ab32312775ddd5afadf863863d2d9068e82f326cb9bbb9c7d"}
{"text": "import promptAction from '@ohos.promptAction'\n\n\nexport default function showToast(message: string, duration: number = 2000) {\n  try {\n    promptAction.showToast({\n      message: message,\n      duration: duration,\n      bottom: \"center\",\n    })\n  } catch (error) {\n    console.error(`showToast args error code is ${error.code}, message is ${error.message}`);\n  }\n}\n", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\utils\\ToastUtils.ets", "project_name": "HarmoneyOpenEye-master", "id": "fbda4b3005017a0963681156b034d670495b39607244e6243f2d9a5925db4270"}
{"text": "import useRequestStatus from '../http/useRequestStatus'\n\nexport type StateCallback = (state: string) => void\n\nexport type ResultCallback = (result: any) => void\n\nexport class BaseViewModel {\n  private stateCallback?: StateCallback\n\n  observeState(stateCallback: StateCallback) {\n    this.stateCallback = stateCallback\n  }\n\n  dispatchViewState(state: string) {\n    this.stateCallback?.(state)\n  }\n\n  httpRequest(checkResult?: boolean) {\n    return useRequestStatus(state => this.dispatchViewState(state), checkResult)\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\BaseViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "396cde50879e55734bf37b95ca75b716d85c4664f079c79a5c606a8153bb790e"}
{"text": "import { getCategoryDetailList } from '../http/apiService';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class CategoryDetailViewModel extends BaseViewModel {\n  id: number = -1\n  pageIndex: number = 0\n\n  async getCategoryDetailList(resultCallback?: ResultCallback) {\n    await this.httpRequest()\n      .promise(getCategoryDetailList(this.id, this.pageIndex), this.pageIndex == 0 ? true : false)\n      .then((result) => {\n        resultCallback?.(result.itemList)\n        this.pageIndex++\n      })\n  }\n}\n\nlet categoryDetailViewModel = new CategoryDetailViewModel()\n\nexport default categoryDetailViewModel as CategoryDetailViewModel", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\CategoryDetialViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "5032ce8dd4fe722dda4eb815b7caf4698e4f4953fb8b950c75c503c25935fe1f"}
{"text": "import { getCategories } from '../http/apiService';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class CategoryViewModel extends BaseViewModel {\n  async getCategoryDataList(resultCallback?: ResultCallback) {\n    await this.httpRequest()\n      .promise(getCategories(), true)\n      .then(result => resultCallback?.(result))\n  }\n}\n\nlet categoryViewModel = new CategoryViewModel();\n\nexport default categoryViewModel as CategoryViewModel;", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\CategoryViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "fde8cd506032f96e6fda82423042da1f6e2bc59132a61ac7d6e4d4bf5b246aa9"}
{"text": "import { getFocusData } from '../http/apiService';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class FocusViewModel extends BaseViewModel {\n  pageIndex: number = 0\n\n  async getFocusData(resultCallback: ResultCallback) {\n    await this.httpRequest()\n      .promise(getFocusData(this.pageIndex), this.pageIndex == 0 ? true : false)\n      .then((result) => {\n        this.pageIndex++\n        resultCallback(result.itemList)\n      })\n  }\n}\n\nlet focusViewModel = new FocusViewModel()\n\nexport default focusViewModel as FocusViewModel", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\FocusViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "f5d4b515625f243d1b0fa423b9aac8b0c116cc5ca8e294ab443d0c7ec8dc05d9"}
{"text": "import { getRankList } from '../http/apiService';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class RankViewModel extends BaseViewModel {\n  async getRankList(rankType: string, resultCallback?: ResultCallback) {\n    await this.httpRequest()\n      .promise(getRankList(rankType), true)\n      .then((result) => {\n        resultCallback?.(result.itemList)\n      })\n  }\n}\n\n\n\n", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\RankViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "ce771d65872da96eef048a44fa42912d03b4c9ff4ea936916bf2becbb53f9d06"}
{"text": "import { getWanAndroidBanner } from '../http/apiService';\nimport { LogUtils } from '../utils/LogUtils';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class TestViewModel extends BaseViewModel {\n  async getHomeBanner(resultCallback?: ResultCallback) {\n    await this.httpRequest(true)\n      .promise(getWanAndroidBanner())\n      .then((result) => {\n        LogUtils.debug(`>>>>>>${JSON.stringify(result.data, null, 2)}`)\n        resultCallback?.(result.data)\n      })\n  }\n}\n\nlet testViewModel = new TestViewModel()\n\nexport default testViewModel as TestViewModel\n", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\TestViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "d2f3fdf992cbddd5d7abc6384fee7ba1f49b4554c0309959c5ae9c9f7d963e75"}
{"text": "import { getTopicDetailList } from '../http/apiService'\nimport { BaseViewModel, ResultCallback } from './BaseViewModel'\n\nexport class TopicDetailViewModel extends BaseViewModel {\n  topicId: number = -1\n\n  async getTopicDetailList(resultCallback?: ResultCallback) {\n    await this.httpRequest()\n      .promise(getTopicDetailList(this.topicId), true)\n      .then((result) => {\n        resultCallback?.(result)\n      })\n  }\n}\n\nlet topicDetailViewModel = new TopicDetailViewModel()\n\nexport default topicDetailViewModel as TopicDetailViewModel", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\TopicDetailViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "24ce654088d12f029c14e7b10f202a0476a69273c0a4399596d2cba7f87d1b61"}
{"text": "import { getTopicData } from '../http/apiService';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class TopicViewModel extends BaseViewModel {\n  pageIndex: number = 0\n\n  async getTopicData(resultCallback: ResultCallback) {\n    await this.httpRequest()\n      .promise(getTopicData(this.pageIndex), this.pageIndex == 0 ? true : false)\n      .then((result) => {\n        resultCallback?.(result.itemList)\n        this.pageIndex += result.count\n      })\n  }\n}\n\nlet topicViewModel = new TopicViewModel()\n\nexport default topicViewModel as TopicViewModel", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\TopicViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "72574b80b98742188d5769df4a5e28d9419aa8181a8b2578dd855e9d91bcd2c5"}
{"text": "import { getRelationList } from '../http/apiService';\nimport { BaseViewModel, ResultCallback } from './BaseViewModel';\n\nexport class VideoDetailViewModel extends BaseViewModel {\n  relationId: number = -1\n\n  async getRelationList(resultCallback?: ResultCallback) {\n    await this.httpRequest()\n      .promise(getRelationList(this.relationId), true)\n      .then((result) => {\n        let filterList = result.itemList.filter((item) => item.type === \"videoSmallCard\")\n        resultCallback?.(filterList)\n      })\n  }\n}\n\nlet videoDetailViewModel = new VideoDetailViewModel()\n\nexport default videoDetailViewModel as VideoDetailViewModel", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\viewmodel\\VideoDetailViewModel.ets", "project_name": "HarmoneyOpenEye-master", "id": "a2bf3a6a5d9d58cdcaa023fc1f40f00ee113b6154eed44eb694bab3e6d0c7bd6"}
{"text": "@Component\nexport struct CommonImage {\n  private src: string | PixelMap | Resource\n\n  build() {\n    Image(this.src).alt($r('app.media.back_placeholder')).objectFit(ImageFit.Cover).height(\"100%\").width(\"100%\")\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\views\\CommonImage.ets", "project_name": "HarmoneyOpenEye-master", "id": "04086c2ed2be3b4fbaee5ffc11baae2ad352fb5a9f81cb53b9ce3884abdef9be"}
{"text": "import { LogUtils } from '../utils/LogUtils'\n\n\n@Component\nexport struct CustomTabLayout {\n  \n  @Link tabTitle: string[]\n  \n  @Link currentIndex: number\n  \n  private flexAlign?: FlexAlign = FlexAlign.Center;\n  \n  private tabSelectCallback: (position: number, title: string) => void = (position: number, title: string) => {\n    LogUtils.debug('tabSelected position = ' + position + ', title = ' + title)\n  }\n\n  aboutToAppear() {\n\n  }\n\n  aboutToDisappear() {\n\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Row, justifyContent: this.flexAlign }) {\n      ForEach(this.tabTitle, (item: string, index: number) => {\n        this.TabBuilder(index, item)\n      }, item => item.index)\n    }\n    .backgroundColor($r(\"app.color.color_red\"))\n  }\n\n  @Builder TabBuilder(index: number, name: string) {\n    Column() {\n      Text(name)\n        .fontColor(this.currentIndex === index ? $r(\"app.color.color_white\") : $r(\"app.color.color_f5f5f5\"))\n        .fontSize($r('app.float.size_text_15'))\n        .fontWeight(this.currentIndex === index ? 500 : 400)\n        .textAlign(TextAlign.Center)\n        .height($r(\"app.float.size_40\"))\n      Divider()\n        .strokeWidth(5)\n        .color($r(\"app.color.color_white\"))\n        .opacity(this.currentIndex === index ? 1 : 0)\n        .width($r(\"app.float.size_80\"))\n        .lineCap(LineCapStyle.Round)\n    }\n    .width('101%') \n    .height($r(\"app.float.size_50\"))\n    .backgroundColor($r(\"app.color.color_red\"))\n    .justifyContent(FlexAlign.End)\n    .onClick(() => {\n      this.tabSelectCallback(index, name)\n      LogUtils.debug(`${this.currentIndex}`)\n      LogUtils.debug(`${index}`)\n      LogUtils.debug(`${name}`)\n    })\n  }\n}", "path": "HarmoneyOpenEye-master\\entry\\src\\main\\ets\\views\\CustomTabLayout.ets", "project_name": "HarmoneyOpenEye-master", "id": "9a87ffc0bf6caa16bbf48650ecc69813bcdc366c9f2c345e58f219aeb788d361"}
{"text": "import axios from '@ohos/axios'\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nexport const _____ = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\base\\axios.ets", "project_name": "harmony-netease-main", "id": "2a9f99ff0465ebc4d4e79f080eb91bbedcf717310044f283947abcf9e632c8e9"}
{"text": "export class ResponseResult {\n  code: string;\n  data: string | Object | ArrayBuffer;\n\n  constructor() {\n    this.code = '';\n    this.data = '';\n  }\n}\n\nexport interface ResponseData<T = any> {\n  data: T\n  code: any\n  errorMsg: String\n  error: String\n  message: String\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\base\\BaseModel.ets", "project_name": "harmony-netease-main", "id": "b4ca78ed3dc8707bd97f2066689b6817fba3dc42f20ebf1f4369c5c6db7c1622"}
{"text": "export enum PageState {\n  None,\n  Loading,\n  Success,\n  Error\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\base\\PageState.ets", "project_name": "harmony-netease-main", "id": "39afdd0150fe25c80bb9ce00d644b730fdb3b6636a88298891dda82577feb0a7"}
{"text": "export const redPackageUrl =\n  'http://yanxuan.nosdn.127.net/352b0ea9b2d058094956efde167ef852.png'\nexport const dftAvatarIcon =\n'https://yanxuan.nosdn.127.net/8945ae63d940cc42406c3f67019c5cb6.png';\nexport const user_icon_url =\n  'http://yanxuan.nosdn.127.net/8945ae63d940cc42406c3f67019c5cb6.png';\n\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\base\\Url.ets", "project_name": "harmony-netease-main", "id": "d2100d02a3924990ebff85d919ce54f9e5ad5ea3bfbc8612fa731a95f3416e0e"}
{"text": "import { textBlack, textGray, textWhite } from '../base/color';\nimport { dftAvatarIcon } from '../base/Url';\nimport { ResultItem } from '../model/ResultItem';\nimport { dateFormat } from '../utils/TimeUtil';\n\n@Builder\nexport function CommentItemView(item: ResultItem) {\n  Column() {\n    Row() {\n      Image(item.frontUserAvatar ?? dftAvatarIcon).size({ width: 30, height: 30 }).borderRadius(15)\n      Text(item.frontUserName ?? '').fontSize(14).fontColor(textBlack).margin({ left: 8 })\n      Text() {\n        Span('V').fontColor(textWhite).fontSize(14).fontWeight(600).fontStyle(FontStyle.Italic)\n        Span(`${item.memberLevel}`).fontColor(textWhite).fontSize(8)\n      }\n      .letterSpacing(-2)\n      .backgroundColor(0xFFB19C6D)\n      .borderRadius(2)\n      .padding({ left: 2, right: 2 })\n      .margin({ left: 5 })\n\n      Rating({ rating: item.star == null ? 0.0 : item.star, indicator: false })\n        .height(14)\n        .aspectRatio(5)\n        .margin({ left: 10 })\n    }.alignItems(VerticalAlign.Center)\n\n    Text(`${dateFormat(item.createTime??'')}   ${item.skuInfo[0]??''}`)\n      .fontSize(12)\n      .fontColor(textGray)\n      .textAlign(TextAlign.Start)\n      .margin({ top: 6 })\n    Text(item.content)\n      .fontSize(14)\n      .fontColor(textBlack)\n      .textAlign(TextAlign.Start)\n      .margin({ top: 6 })\n    GridRow({ columns: 4, gutter: 8 }) {\n      ForEach(item.picList ?? [], (item: string) => {\n        GridCol() {\n          Image(item).borderRadius(4)\n        }.width('100%').aspectRatio(1)\n      })\n    }.margin({ top: 16 })\n  }\n  .width('100%')\n  .padding({ left: 12, right: 12, top: 16, bottom: 16 })\n  .alignItems(HorizontalAlign.Start)\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\CommentItem.ets", "project_name": "harmony-netease-main", "id": "df0fb8765a2af2a91228787c3139999f29722960ab39343299ca01a80f3eeef9"}
{"text": "import { appWhite, lineColor, textBlack } from '../base/color'\n\n@CustomDialog\nexport struct CustomDialog01 {\n  @BuilderParam content?: () => void\n  @Prop title: string = ''\n  controller: CustomDialogController\n\n  build() {\n    Column() {\n      Stack() {\n        Text(this.title).width('100%').fontSize(16).fontColor(textBlack).textAlign(TextAlign.Center)\n        Image($r('app.media.close')).size({ width: 18, height: 18 }).onClick(e => {\n          this.controller.close()\n        })\n      }\n      .padding(16)\n      .alignContent(Alignment.End)\n      .border({width:{bottom:0.5},color:{bottom:lineColor}})\n\n      if (this.content !== undefined) this.content()\n    }\n    .width('100%')\n    .backgroundColor(appWhite)\n    .borderRadius({ topLeft: 12, topRight: 12 })\n  }\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\CustomDialog01.ets", "project_name": "harmony-netease-main", "id": "ad42ecf3ef733978614e6225c5ab2ad926506a61405381445efd48285f18a23d"}
{"text": "@Builder function Loading(size: number = 80) {\n  LoadingProgress().color(Color.Blue).size({ width: size, height: size })\n}\nexport { Loading }", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\Loading.ets", "project_name": "harmony-netease-main", "id": "ba87bfb9d1646a3c69080e6168462058013499452f4c85be7c94ef2dc9a38641"}
{"text": "@Component\nexport struct PageLoading {\n  build() {\n    LoadingProgress().color(Color.Blue).size({ width: 80, height: 80 })\n  }\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\PageLoading.ets", "project_name": "harmony-netease-main", "id": "ea5ac4c35b3b9db7ad29db1d97fd14a4696811f083e2baed5726880483a04c50"}
{"text": "@Builder\nfunction Tabs() {\n\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\Tabs.ets", "project_name": "harmony-netease-main", "id": "360478807a22b6958f52ffca1e428947309b0adb4e766fd51141190715fa8b98"}
{"text": "@Component\nstruct TimerText {\n  @Prop time: number\n  @State _timer: number = 0\n\n  aboutToAppear() {\n    this._timer = this.time\n  }\n\n  build() {\n    Text(`${this._timer}`)\n  }\n\n  timersStart() {\n    let _interval = setInterval(() => {\n      this._timer -= 1\n      if (this._timer <= 0) {\n        clearInterval(_interval)\n      }\n    }, 1000)\n  }\n\n  aboutToDisappear() {\n    clearInterval()\n  }\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\TimerText.ets", "project_name": "harmony-netease-main", "id": "b8720d1bc814edbdf0dc2d00a169744bfe4063d075da7f2a8615b94e321e07dc"}
{"text": "import router from '@ohos.router'\nimport { textBlack } from '../base/color'\n\n@Builder\nexport function TitleBar($$: { title: string }) {\n  RelativeContainer() {\n    Image($r('app.media.back'))\n      .onClick(e => {\n        router.back()\n      })\n      .height(46)\n      .padding(8)\n      .id('image')\n      .relativeStartCenter()\n    Text(`${$$.title}`).fontSize(18).fontColor(textBlack).id('tv').relativeCenter()\n  }.height(46).width('100%')\n}\n\n\n@Styles function relativeCenter() {\n  .alignRules(\n    {\n      middle: { anchor: '__container__', align: HorizontalAlign.Center },\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n    }\n  )\n}\n\n@Styles function relativeStartCenter() {\n  .alignRules(\n    {\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      left: { anchor: '__container__', align: HorizontalAlign.Start }\n    }\n  )\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\component\\TitleBar.ets", "project_name": "harmony-netease-main", "id": "367cd3a4d03f9be33886745d54a96cd26f85a3fa744cf1a764d44c5ca1e19a5d"}
{"text": "export class BannerItem {\n  id: number\n  picUrl: string\n  targetUrl: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\BannerItem.ets", "project_name": "harmony-netease-main", "id": "ab26e9beede0febcbe88b1b81ab869248cfa843a72f0dd8efe85fb5097e4437b"}
{"text": "import { PriceModel } from './PriceModel'\n\nexport class BannerModel {\n  status: number\n  type: number\n  processBanner: ProcessBanner\n}\n\nexport class ProcessBanner {\n  title: string\n  supplementText: string\n  priceInfo: PriceModel\n  logoUrl: string\n  timePrefix: string\n  endTimeGap: number\n  bgColor: string\n  priceBgColor: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\BannerModel.ets", "project_name": "harmony-netease-main", "id": "432788e43a854cc621d67889a1c477c32060366cdb45de728f298d45d600e356"}
{"text": "import List from '@ohos.util.List'\nimport { BannerItem } from './BannerItem'\nimport { ItemPicBeanList } from './home/ItemPicBeanList'\nimport { KingKongType } from './kinfkong/KingKongType'\n\nexport class Category extends KingKongType {\n  id: Number\n  superCategoryId: Number\n  showIndex: Number\n  picUrl: string\n  categoryName: string\n  targetUrl: string\n  showPicUrl: String\n  wapBannerUrl: string\n  name: string\n  frontName: String\n  frontDesc: string\n  test: String\n  itemPicBeanList: List<ItemPicBeanList>\n  bannerList: Array<BannerItem>\n  type: number = 0\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\Category.ets", "project_name": "harmony-netease-main", "id": "e8e18f980d9ccb622f7d5e4fb1eaba6b6cc9eb0c34b440b5146d39511e703935"}
{"text": "import { Category } from './Category';\nimport { ItemListItem } from './ItemListItem';\n\nexport class CategoryItemListItem {\n  category: Category\n  itemList: Array<ItemListItem>\n  type: number = 1\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\CategoryItemListItem.ets", "project_name": "harmony-netease-main", "id": "088aaa224a8f06094a212a97d2bb30455c6fb50422832f2add36f768eea26428"}
{"text": "export class CategoryL1ListItem {\n  id: number\n  superCategoryId: number\n  showIndex: number\n  name: string\n  frontName: string\n  frontDesc: string\n  bannerUrl: string\n  wapBannerUrl: string\n  iconUrl: string\n  imgUrl: string\n  level: string\n  type: number\n  categoryType: number\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\CategoryL1ListItem.ets", "project_name": "harmony-netease-main", "id": "f04d4d43c8bc13eeb1e4b3b9a519b2670cd81c9369fa24116d8bba14d6ad77cf"}
{"text": "export class CouponModel {\n  code: string\n  validStartTime: number\n  couponItemPath: string\n  appOnly: boolean\n  buttonFlag: boolean\n  type: number\n  baseActiveNewUserOnly: number\n  path: string\n  usable: boolean\n  unit: string\n  hasCoupon: boolean\n  newUserOnly: number\n  validEndTime: number\n  briefDesc: string\n  useCondition: string\n  name: string\n  timeDesc: string\n  useTime: number\n  activationCode: string\n  id: number\n  albeToActivated: boolean\n  isSelected: boolean\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\CouponModel.ets", "project_name": "harmony-netease-main", "id": "acedea9437544051604ffa6d38c6bc8b4f9b9e037e7128c5ab508ab6fa0a38c0"}
{"text": "export class IssueListItem {\n  question: string\n  answer: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\IssueListItem.ets", "project_name": "harmony-netease-main", "id": "2acea57aa87fcc29ee13fb43defdfe7cdcb9b8669619535c7a2db1e0b1da8314"}
{"text": "export class ItemTagListItem {\n  type: number\n  subType: number\n  tagId: number\n  itemId: number\n  name: string\n  forbidJump: boolean\n  freshmanExclusive: boolean\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\ItemTagListItem.ets", "project_name": "harmony-netease-main", "id": "903491c9abb451c1c59efb9709eac87b30293cfc808322c79fee7fbef9d9c7e2"}
{"text": "export class LocationItemModel {\n  zipCode: string\n  townName: string\n  address: string\n  incompleteDesc: string\n  districtName: string\n  mobile: string\n  cityId: number\n  completed: boolean\n  townId: number\n  provinceId: number\n  dft: boolean\n  districtId: number\n  cityName: string\n  fullAddress: string\n  name: string\n  id: number\n  provinceName: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\LocationItemModel.ets", "project_name": "harmony-netease-main", "id": "ab4ea0bfd93aa9653f26154c0a5ffa4ffeab57f493cadb62f3a7244b988aadf0"}
{"text": "export class Logo {\n  logoUrl: string\n  width: number\n  height: number\n  type: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\Logo.ets", "project_name": "harmony-netease-main", "id": "64110a9386568957ccc25034224ba085480da2f861c9246cf4c390567be591ef"}
{"text": "import { FinalPrice } from './home/FinalPriceInfoVO';\n\nexport class PriceModel {\n  finalPrice: FinalPrice\n  counterPrice: string = ''\n  basicPrice: string = ''\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\PriceModel.ets", "project_name": "harmony-netease-main", "id": "0acb615e3eb1c476d867493237e01f580f0428872dd9fe8c071a461fe5da6418"}
{"text": "export class ResultItem {\n  skuInfo: Array<String>\n  frontUserName: string\n  content: string\n  createTime: number\n  picList: Array<string>\n  frontUserAvatar: string\n  commentReplyVO: CommentReplyVO\n  memberLevel: number\n  appendCommentVO: AppendCommentVO\n  star: number\n  itemId: number\n  commentItemTagVO: CommentItemTagVO\n}\n\nexport class CommentReplyVO {\n  replyContent: string\n}\n\nexport class AppendCommentVO {\n  content: string\n  createTime: number\n  picList: Array<string>\n}\n\nexport class CommentItemTagVO {\n  schemeUrl: string\n  type: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\ResultItem.ets", "project_name": "harmony-netease-main", "id": "5c4e9b9dd2a3d7b4d182c1cd9b72eabdefb41e3296b46eeb707295dfe01ca07d"}
{"text": "export class ShoppingReward {\n  name: string\n  rewardDesc: string\n  rewardValue: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\ShoppingReward.ets", "project_name": "harmony-netease-main", "id": "6bd54f2540d1787e6a4b406f1dc1399de415e288d1351b8444fce80541dd944b"}
{"text": "import { PolicyListItem } from './SkuMapValue'\n\nexport class ShoppingRewardRule {\n  title: string\n  ruleList: Array<PolicyListItem>\n}\n\nexport class RuleListItem {\n  title:string\n  content:string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\ShoppingRewardRule.ets", "project_name": "harmony-netease-main", "id": "f4121961c61cbdba0c2e3d3bfb4966273bf36b1b06c07dba539ca89e0adb24cc"}
{"text": "import { SkuSpec } from './SkuSpec'\nimport { SkuSpecValue } from './SkuSpecValue'\nexport class SkuListItem {\n  id: number\n  counterPrice: number\n  retailPrice: number\n  primarySku: boolean\n  sellVolume: number\n  noActivitySellVolume: number\n  valid: boolean\n  baseId: number\n  startTime: number\n  endTime: number\n  name: string\n  pinPrice: number\n  skuNum: number\n  userNum: number\n  skuId: number\n  itemSkuSpecValueList: Array<ItemSkuSpecValueListItem>\n}\n\nexport class ItemSkuSpecValueListItem {\n  id: number\n  skuId: number\n  skuSpecId: number\n  skuSpecValueId: number\n  skuSpec: SkuSpec\n  skuSpecValue: SkuSpecValue\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\SkuListItem.ets", "project_name": "harmony-netease-main", "id": "4f5dd4fd9d46895d8659e2108711c0927ca6a71a511b654e01953135838aa9fa"}
{"text": "export class SkuSpec {\n  name: string\n  id: number\n  type: number\n  skuSpecValueList: Array<SkuSpecValueListItem>\n}\n\nexport class SkuSpecValueListItem {\n  id: number\n  value: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\SkuSpec.ets", "project_name": "harmony-netease-main", "id": "696a727b474f717755eaeb201147467fa0484d52f05e1f7689b4dcca496dd9a8"}
{"text": "import List from '@ohos.util.List'\nimport { SkuSpecValue } from './SkuSpecValue'\n\nexport class SkuSpecListItem {\n  id: number\n  name: String\n  type: number\n  skuSpecValueList: List<SkuSpecValue>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\SkuSpecListItem.ets", "project_name": "harmony-netease-main", "id": "002efbce6fa1484418d60793e5b82792f5392606c7b2b86fcbfe28f6f6e47a6a"}
{"text": "export class SkuSpecValue {\n  id: number\n  skuSpecId: number\n  picUrl: string\n  value: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\SkuSpecValue.ets", "project_name": "harmony-netease-main", "id": "e33fd2449b29fb349f783f22b790623133baf857a8d37199df27412bf52ab9e0"}
{"text": "import { CartItemListItem } from './CartItemListItem'\n\nexport class AddBuyStepListItem {\n  stepNo: number\n  title: string\n  isSatisfy: boolean\n  addBuyItemList: Array<CartItemListItem>\n  giftItemList: Array<CartItemListItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\AddBuyStepListItem.ets", "project_name": "harmony-netease-main", "id": "77a849e4215248a448a3b1e8ddd4af7a70e2cd44266638b3a86b33c47d0ac495"}
{"text": "export class CartBottomBannerVO{\n  promotionCartLeadInfo:PromotionCartLeadInfo\n}\n\nexport class PromotionCartLeadInfo{\n  icon:string\n  content:Array<PromotionCartLeadInfoContent>\n  button:PromotionCartLeadInfoButton\n  spmcTip:SpmcTip\n}\n\nexport class SpmcTip{\n  title:string\n  content:string\n  saveList:Array<SaveList>\n}\n\nexport class SaveList{\n  title:string\n  detail:string\n  showStar:boolean\n}\n\nexport class PromotionCartLeadInfoContent{\n  value:string\n  type:number\n  schemeUrl:string\n  bold:boolean\n  crossLine:boolean\n  underLine:boolean\n  fontSize:number\n}\n\nexport class PromotionCartLeadInfoButton{\n  name:string\n  picUrl:string\n  schemeUrl:string\n  jumpType:string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\CartBottomBannerVO.ets", "project_name": "harmony-netease-main", "id": "80dfb15a95df9f53e712000eed317cf2dc19a00cc002338fba5bf893bf03cd71"}
{"text": "import { CartItemListItem } from './CartItemListItem'\n\nexport class CartGlobalGroup {\n  promTitle: string\n  promTip: string\n  promId: number\n  promType: number\n  promSatisfy: boolean\n  couponSendOut: boolean\n  invalid: boolean\n  checked: boolean\n  canCheck: boolean\n  promotionTip: string\n  showTable: boolean\n  showCheck: boolean\n  addBuyPreview: AddBuyPreview\n  cartItemList:Array<CartItemListItem>\n}\n\nexport class AddBuyPreview {\n  addBuyPreviewItemList: Array<CartItemListItem>\n  hasMore: boolean\n  tip: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\CartGlobalGroup.ets", "project_name": "harmony-netease-main", "id": "f492eff1137107feeb6d76fcb420b310c3370b11b48d03a0b6845d7c4008f1e2"}
{"text": "import { CartGlobalGroup } from './CartGlobalGroup'\n\nexport class CartItemGroup{\n  groupTitle:string\n  groupTip:string\n  checked:boolean\n  canCheck:boolean\n  promotionGroupList:Array<CartGlobalGroup>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\CartItemGroup.ets", "project_name": "harmony-netease-main", "id": "035fcd6f95f0929cf4a9b95df39f054919038749e8772d121981fa7e10a2ab91"}
{"text": "export class CartItemListItem {\n  uniqueKey: string\n  id: number\n  itemId: number\n  status: number\n  skuId: number\n  sellVolume: number\n  cnt: number\n  totalPrice: number\n  retailPrice: number\n  actualPrice: number\n  subtotalPrice: number\n  preSellStatus: number\n  preSellPrice: number\n  preSellVolume: number\n  type: number\n  source: number\n  sources: Array<number>\n  itemName: string\n  pic: string\n  extId: string\n  promTag: string\n  priceReductDesc: string\n  \n\n  valid: boolean\n  checked: boolean\n  editChecked: boolean\n  \n  limitPurchaseFlag: boolean\n  \n  limitPurchaseCount: number\n  \n  preemptionStatus: number\n  \n  canSwitchSpec: boolean\n  stepNo: number\n  checkExt: Object\n  specList: Array<SpecListItem>\n  cartItemTips: Array<string>\n  timingPromotion: string\n  finishTip: string\n  prefix: string\n  showActualPrice: string\n  showRetailPrice: string\n  remainTime: number\n  warehouseInfo: WarehouseInfo\n  appFreshmanBannerVO: AppFreshmanBannerVO\n  bottomTips: Array<BottomTips>\n  leftTag:LeftTag\n}\n\nexport class LeftTag{\n  type:number\n  name:string\n}\n\nexport class BottomTips {\n  key: string\n  value: string\n  picUrl: string\n}\n\nexport class SpecListItem {\n  specName: String\n  specValue: String\n}\n\nexport class WarehouseInfo {\n  desc: string\n  type: number\n}\n\nexport class AppFreshmanBannerVO {\n  freshmanDesc: String\n  appFreshmanPrice: String\n}\n\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\CartItemListItem.ets", "project_name": "harmony-netease-main", "id": "7bb6d13bfced6ee4a6e596793c745cf55df8f07b42312d41683b0bc7dc6434a5"}
{"text": "export class PostageVO {\n  showTip: boolean\n  postFree: boolean\n  priceRangeId: number\n  leftPostFreePrice: number\n  postageTip: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\PostageVO.ets", "project_name": "harmony-netease-main", "id": "156e7546d863038d707b345db1a357b042e228e1c4ff5763bac8fbedbeba8d44"}
{"text": "export class PriceDetailBanner {\n  promPrice: PromPrice\n  discountPrice:PromPrice\n  totalPrice:PromPrice\n  totalPriceV2:PromPrice\n  originTotalPriceV2:PromPrice\n}\n\nexport class DiscountPrice{\n\n}\n\nexport class PromPrice {\n  title: string\n  titleRemark: string\n  price: string\n  priceRemark: any\n  priceList: Array<PriceList>\n}\n\nexport class PriceList {\n  title: string\n  price: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\PriceDetailBanner.ets", "project_name": "harmony-netease-main", "id": "08aafb269f2e25d326b32ea13fbb34cd82ea52264ab5a8cdb65d191d13f8f2c9"}
{"text": "import { CarItem } from './CarItem'\nimport { PostageVO } from './PostageVO'\n\nexport class ShoppingCartModel {\n  totalPrice: number\n  promotionPrice: number\n  actualPrice: number\n  totalPoint: number\n  actualPoint: number\n  postageVO: PostageVO\n  cartGroupList: Array<CarItem>\n  invalidCartGroupList: Array<CarItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\cart\\ShoppingCartModel.ets", "project_name": "harmony-netease-main", "id": "9e416ae3c10adda8a50b6076567da3b051973e99422f696a4df906bd3fd7b7d1"}
{"text": "import { ItemListItem } from '../ItemListItem'\n\nexport class BrandIndexModel {\n  extInfo: string\n  hasMore: boolean\n  itemList: Array<ItemListItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\BrandIndexModel.ets", "project_name": "harmony-netease-main", "id": "88a6a67fad427f879f5c1653940c2f3bc578188dd14ea0527970c4b17aacfe53"}
{"text": "export class CommentItem {\n  name: string\n  strCount: string\n  type: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\CommentItem.ets", "project_name": "harmony-netease-main", "id": "4ea63d0aaa2c56ddba376be8f9ea3ffdfd7b1ff173bff87cc7247fb57d8fc54f"}
{"text": "import { AppendCommentVO, CommentItemTagVO, CommentReplyVO, ResultItem } from '../ResultItem'\nimport { Pagination } from './Pagination'\n\nexport class CommondPageModel {\n  pagination: Pagination\n  result: Array<ResultItem>\n}\n\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\CommondPageModel.ets", "project_name": "harmony-netease-main", "id": "08d7dfaa06961f40f7fa2d14db8729adba96372f4e40c3dae9e0dc0c27d46605"}
{"text": "import { PolicyListItem } from '../SkuMapValue';\nimport { GoodDetail } from './GoodDetail';\n\nexport class GoodDetailPre {\n  item: GoodDetail\n  policyList: Array<PolicyListItem>\n  commentCount: number\n  commentWithPicCount: number\n  source: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\GoodDetailPre.ets", "project_name": "harmony-netease-main", "id": "4e3bd75d5b408d32ea494f3a6104d8f3437af1c06908b8b0909ce26d73b3487a"}
{"text": "export class Praise {\n  goodCmtRate: string\n  star: number\n  defGoodCmtCnt: number\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\Praise.ets", "project_name": "harmony-netease-main", "id": "0f2027068d1094d1b8a6d08ed02e85812c9faf3b6ee7f10b6c9bb715a3f429da"}
{"text": "import { ItemListItem } from '../ItemListItem'\n\nexport class RecommendModel {\n  items: Array<ItemListItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\RecommendModel.ets", "project_name": "harmony-netease-main", "id": "f4fdea5fe9207ea2b7dccfee65471a37524c7f0c7531e538ada0be53b01de77d"}
{"text": "export class WapitemDeliveryModel {\n  status: number\n  addressId: number\n  addressName: string\n  deliveryTime: string\n  deliveryStatus: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\detail\\WapitemDeliveryModel.ets", "project_name": "harmony-netease-main", "id": "7835bcb0376b7637bd9f2053b2d6cae35f0f90f08368b0dfdab93fc49c3da4b3"}
{"text": "import { FloorItem } from './FloorItem'\nexport class BigPromotionModule {\n  floorList: Array<FloorItem> = []\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\BigPromotionModule.ets", "project_name": "harmony-netease-main", "id": "a32095412cfd1301cd3e19a9b126e332ef84ccba116befdbdef0bbeb3231bb3b"}
{"text": "import { Category } from '../Category'\nexport class CategoryHotSellModule {\n  titleTargetUrl: String\n  title: String\n  categoryList: Array<Category>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\CategoryHotSellModule.ets", "project_name": "harmony-netease-main", "id": "80077dccbe4f23025eeb88761ddc1987a0ae8f6c795cba0c38a4904e080b562e"}
{"text": "export class Cells {\n  subTitleColor: String\n  rcmdItem: Boolean\n  schemeUrl: string\n  title: string\n  picUrl: string = ''\n  rcmdSort: Boolean\n  itemCnt: Number\n  itemFrom: Number\n  subTitle: String\n  titleColor: String\n  showPrice: Boolean\n  popupUrl: String\n  leftTime: Number\n  id: Number\n  targetUrl: String\n  itemList: Array<Cells> = []\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\CellsModel.ets", "project_name": "harmony-netease-main", "id": "7033b11542c90f5f874e9f794cef091817f170a894571a7be9c2736a81a74460"}
{"text": "export class FinalPriceInfoVO {\n  banner: BannerVO\n  priceInfo: PriceInfo\n  type: number\n}\n\nexport class BannerVO {\n  logo: string\n  title: string\n  content: string\n  price: string\n}\n\nexport class PriceInfo {\n  finalPrice: FinalPrice\n  counterPrice: string\n  basicPrice: string\n}\n\nexport class FinalPrice {\n  prefix: string\n  price: string\n  suffix: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\FinalPriceInfoVO.ets", "project_name": "harmony-netease-main", "id": "3cd508e0f334115934bb7540b87f4b0d020d40daa7cb89de3ff2c64d99e4109f"}
{"text": "import List from '@ohos.util.List'\nimport { FlashSaleModuleItem } from './FlashSaleModuleItem'\n\nexport class FlashSaleModule {\n  activityPrice: Number\n  nextStartTime: Number\n  remainTime: Number\n  flashSaleScreenId: Number\n  showFlash: Boolean\n  primaryPicUrl: String\n  itemList: List<FlashSaleModuleItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\FlashSaleModule.ets", "project_name": "harmony-netease-main", "id": "31da61b2b72a8053f7cce6e488ba5b17471d3551f75ad54d27dfe208add26cac"}
{"text": "export class FlashSaleModuleItem {\n  itemId: Number\n  originPrice: Number\n  activityPrice: Number\n  picUrl: String\n  showPicUrl: String\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\FlashSaleModuleItem.ets", "project_name": "harmony-netease-main", "id": "9b42a2efb1f46f080cbfb5dfdaf1de6629033f29d46fb2d95d1fe30cfe1648f0"}
{"text": "import { Cells } from './CellsModel'\n\nexport class FloorItem {\n  layout: Number\n  columnNum: number\n  floorType: Number\n  cells: Array<Cells> = []\n  style: Number\n  taskId: Number\n  height: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\FloorItem.ets", "project_name": "harmony-netease-main", "id": "97abe0d97c41852d103be5b41499867236a082cab58618159d22ae7355efc576"}
{"text": "export class FocusItem {\n  picUrl: string\n  name: string\n  originSchemeUrl: string\n  targetUrl: string\n  expireTime: number\n  onlineTime: number\n  id: number\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\FocusItem.ets", "project_name": "harmony-netease-main", "id": "71439b659b25daff0eab26444d1722bc1b478226b70fcf133536a2e6f9edd77b"}
{"text": "import { ItemListItem } from '../ItemListItem'\n\nexport class HomeItems {\n  itemList: Array<ItemListItem> = []\n  itemIdsStr: string\n  rcmdVer: String\n  hasMore: boolean\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\HomeItems.ets", "project_name": "harmony-netease-main", "id": "3a028ec4d3f8c5a13feb61399fa3f9b96c8887ff534b8a14f8c12083620f6334"}
{"text": "export class HotSaleListBottomInfo {\n  iconUrl: string\n  content: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\HotSaleListBottomInfo.ets", "project_name": "harmony-netease-main", "id": "0da7d04546b9090928cedbc5f4e9a57d5ee21d4c74cb9f333621ac86010ccf05"}
{"text": "export class ItemPicBeanList {\n  itemId: Number\n  picUrl: String\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\ItemPicBeanList.ets", "project_name": "harmony-netease-main", "id": "e8de200a317c6a6dc9b41d482565fd81fa3b4c48dbe893b44ec14af8b22f8920"}
{"text": "export class KingKongModule {\n  norColor: String\n  background: String\n  selectedColor: String\n  kingKongList: Array<KingKongItem>\n}\n\nexport class KingKongItem {\n  picUrl: string\n  schemeUrl: string\n  text: string\n  textColor: String\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\KingKongModule.ets", "project_name": "harmony-netease-main", "id": "cb36d6b7d9ed74ebd1ee3b7273be354f63a9fd4fe8f128247db91b6f123f2a51"}
{"text": "import List from '@ohos.util.List'\nimport { NewItemTagModel } from './NewItemTagModel'\n\nexport class NewItemModel {\n  scenePicUrl: String\n  simpleDesc: String\n  retailPrice: Number\n  itemTagList: List<NewItemTagModel>\n  id: Number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\NewItemModel.ets", "project_name": "harmony-netease-main", "id": "c717ae5a2f6365de5d04e2cb9a27836ca4beb65f3f85d545b2c7defc8908f830"}
{"text": "export class PolicyDescItem {\n  icon: string\n  schemeUrl: string\n  desc: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\PolicyDescItem.ets", "project_name": "harmony-netease-main", "id": "4567f432a831b0e97381144aa65773e1fb6bea0a84afb0fe2f7ef14e6d3b9889"}
{"text": "import { StyleItem } from './StyleItem'\n\nexport class SceneLightShoppingGuideModule {\n  styleItem: StyleItem\n  styleBanner: StyleItem\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\SceneLightShoppingGuideModule.ets", "project_name": "harmony-netease-main", "id": "575f647cd2614c725e2e4aa364d1237bcd3863c96ad563835d9e4c40adde1667"}
{"text": "import List from '@ohos.util.List';\n\nexport class StyleItem {\n  targetUrl: String\n  title: String\n  picUrl: String\n  originSchemeUrl: String\n  descColor: String\n  titleColor: String\n  desc: String\n  picUrlList: List<String>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\home\\StyleItem.ets", "project_name": "harmony-netease-main", "id": "81f17e069a9bacdfec41a2995cd949dd5614f94fb8a226ff80fa2c30ad09e8be"}
{"text": "import { ItemListItem } from '../ItemListItem'\n\nexport class HotListData {\n  itemList: Array<ItemListItem>\n  extra: Extra\n}\n\nclass Extra {\n  rankLongId: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\hotlist\\HotListData.ets", "project_name": "harmony-netease-main", "id": "6bf993bfce8d93c1a1449ae27e296ec41aae6421fc2d067957469d048ede0d95"}
{"text": "import { CurrentCategory } from '../sort/CurrentCategory';\n\nexport class HotListNav {\n  currentCategory: CurrentCategory\n  moreCategories: Array<CurrentCategory>\n  desc: string\n  title: string\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\hotlist\\NavCat.ets", "project_name": "harmony-netease-main", "id": "0ebd48e613e599f1e4642a78675736c283aa24199d6f98a7b6cecd7338947598"}
{"text": "import { Category } from '../Category';\nimport { CategoryItemListItem } from '../CategoryItemListItem';\n\nexport class KingKongModel {\n  currentCategory: Category\n  categoryItemList: Array<CategoryItemListItem>\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\kinfkong\\KingkongModel.ets", "project_name": "harmony-netease-main", "id": "83dc0c0618a3b697c5f1327333bfe0af852c2381f67bcf7ca2b8a04dea5628d7"}
{"text": "import { Category } from '../Category'\nimport { ItemListItem } from '../ItemListItem'\nexport class KingKongType{\n  category:Category\n  itemListItem:ItemListItem\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\kinfkong\\KingKongType.ets", "project_name": "harmony-netease-main", "id": "ba02b7a0f8c3d5755195687e1136e1976a2a2edd7a3ca0c601031c88e98c1838"}
{"text": "export class UserModel {\n  userSimpleVO: UserSimpleVO\n  spmcEntrance: SpmcEntrance\n  monthCardEntrance: WelfareCardEntrance\n  welfareFissionInfo: WelfareFissionInfo\n  welfareCardEntrance: WelfareCardEntrance\n}\n\nexport class UserSimpleVO {\n  avatar: string\n  nickname: string\n  memberLevel: number\n  isNewUser: number\n  hasInterestCategory: boolean\n  hasMemGift: boolean\n  pointsCnt: number\n  mosaicUid: string\n  uniqueId: number\n  frontendAccountType: number\n  hideQrCode: boolean\n  mobile: string\n}\n\nexport class SpmcEntrance {\n  open: boolean\n  status: number\n  statusDesc: string\n  showGiftIcon: boolean\n}\n\nexport class MonthCardEntrance {\n  title: string\n  content: string\n}\n\nexport class WelfareFissionInfo {\n  picUrl: string\n  schemeUrl: string\n}\n\nexport class WelfareCardEntrance {\n  title: string\n  content: string\n  url: string\n  userType: number\n  hasBuy: boolean\n  type: number\n  buttonName: string\n  iconPicUrl: string\n  titleUrl: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\profile\\UserModel.ets", "project_name": "harmony-netease-main", "id": "63d21761b2ed161d92caae861ba40c93a559982359decf1b532f0a7137b93a64"}
{"text": "import List from '@ohos.util.List';\nimport { Category } from '../Category';\n\nexport class CategoryGroupItem {\n  id: number\n  name: string\n  categoryList: Array<Category>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\sort\\CategoryGroupItem.ets", "project_name": "harmony-netease-main", "id": "5f93ad3de9bf0bcae5d0d67dc75c23ff997c17660fee502c0412d32239bfe0cb"}
{"text": "export class CategoryL1Item {\n  id: number\n  superCategoryId: number\n  showIndex: number\n  name: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\sort\\CategoryL1Item.ets", "project_name": "harmony-netease-main", "id": "d0a569109a67367dd3da29fcd8529f37c5a7ae948732d3079c46186b5218df82"}
{"text": "import List from '@ohos.util.List'\nimport { BannerItem } from '../BannerItem'\n\nexport class CurrentCategory {\n  id: number\n  superCategoryId: number\n  showIndex: number\n  name: string\n  frontName: string\n  frontDesc: string\n  bannerUrl: string\n  showItem: ShowItem\n  bannerList: Array<BannerItem>\n  subCateList: Array<CurrentCategory>\n}\n\nexport class ShowItem {\n  id: number\n  picUrl: string\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\sort\\CurrentCategory.ets", "project_name": "harmony-netease-main", "id": "b8542c92c32b3e4a397d03e98933d33de4918058d6aa490abb405fe797d30c8a"}
{"text": "import List from '@ohos.util.List';\nimport { CategoryGroupItem } from './CategoryGroupItem';\nimport { CategoryL1Item } from './CategoryL1Item';\nimport { CurrentCategory } from './CurrentCategory';\n\nexport class SortData {\n  categoryL1List: Array<CategoryL1Item>\n  currentCategory: CurrentCategory\n  categoryGroupList: Array<CategoryGroupItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\sort\\SortData.ets", "project_name": "harmony-netease-main", "id": "afcb3cdea9c7194b8a1dab6116f2b84a46e96c954c5db4db5ffe21f2a84e3504"}
{"text": "import { Category } from '../Category'\nimport { ItemListItem } from '../ItemListItem'\n\nexport class SortListData {\n  categoryItems: SortlistCategoryItem\n  categoryL2List: Array<Category>\n}\n\nexport class SortlistCategoryItem {\n  category: Category\n  itemList: Array<ItemListItem>\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\sort\\SortListData.ets", "project_name": "harmony-netease-main", "id": "9566615350d844ed33d7c8d317c8a5ff5e388969c1e73cbb23a280c5e3214fdc"}
{"text": "export class BannerInfo {\n  duration: number\n  hasVideo: boolean\n  picUrl: string\n  videoUrl: string\n  size: number\n  width: number\n  height: number\n  isVideo: boolean\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\BannerInfo.ets", "project_name": "harmony-netease-main", "id": "5aa69f39c2d15f0253cb882973b992e1a8b74e9aeeff646528e9711c5699ce19"}
{"text": "export class BuyNow {\n  itemId: number\n  purchaseAttribute: number\n  countPrice: number\n  retailPrice: number\n  primarySkuId;\n  itemName: string\n  itemUrl: string\n  valid: boolean\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\BuyNow.ets", "project_name": "harmony-netease-main", "id": "79eaf7b482cd927486153b185183d2759b350e08a5ab90540b0b8bc2772f310b"}
{"text": "export class NavItem {\n  id: number\n  picUrl: string\n  mainTitle: string\n  viceTitle: string\n  columnUrl: string\n  onlineType: boolean\n  vaildStartTime: number\n  vaildEndTime: number\n  rank: number\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\NavItem.ets", "project_name": "harmony-netease-main", "id": "28b035ff9017c304fc5f151f711541590f7d962ac14ed6608bdb1b51d89563c4"}
{"text": "import { NavItem } from './NavItem'\n\nexport class TopData {\n  checkNavType: boolean\n  navList: Array<NavItem>\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\TopData.ets", "project_name": "harmony-netease-main", "id": "523ce600726637e8c7d1b857d82d5a27401ad2f8162e024f0f263cdf10694464"}
{"text": "import { TopicResult } from './TopicResult';\n\nexport class TopicData {\n  hasMore: boolean\n  result: Array<TopicResult>;\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\TopicData.ets", "project_name": "harmony-netease-main", "id": "67eb5883fbff29073198210620006a3235424b56532158e1db77e0470d154103"}
{"text": "import { BannerInfo } from './BannerInfo'\nimport { BuyNow } from './BuyNow'\nexport class TopicItem {\n  topicId: string\n  type: number\n  pubType: number\n  readCount: number\n  style: number\n  schemeUrl: string\n  nickname: string\n  bannerUrl: string\n  avatar: string\n  title: string\n  subTitle: string\n  picUrl: string\n  newAppBanner;\n  hasVideo: boolean\n  hasLookCollects: boolean\n  size: number\n  duration: number\n  supportNum: number\n  appBanHeight: number\n  appBanWidth: number\n  newAppBannerWidth: number\n  newAppBannerHeight: number\n  supportFlag: boolean\n  bannerInfo: BannerInfo\n  lookPics: Array<any>\n  buyNow: BuyNow\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\TopicItem.ets", "project_name": "harmony-netease-main", "id": "6733f9b0e93cf47ba0214ae99ce083e8a5bf0b7b5335b6a806fb0b1dff60da4a"}
{"text": "import { TopicItem } from './TopicItem'\nexport class TopicResult {\n  topics: Array<TopicItem>\n  look:TopicItem\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\model\\topic\\TopicResult.ets", "project_name": "harmony-netease-main", "id": "1d17f68970ef4f7e754dd325b36d4e5a5f4410186c65fc97f05bda87080f1b1b"}
{"text": "import { tabBarList, TabBarModel } from '../model/TabBarModel'\nimport { CartPage } from './main/CartPage';\nimport { SortPage } from './main/SortPage';\nimport { Homepage } from './main/HomePage'\nimport { ProfilePage } from './main/ProfilePage';\nimport { TopicPage } from './main/TopicPage';\n\n@Entry\n@Component\nstruct Index {\n  @State currentPageIndex: number = 0;\n\n  build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.End }) {\n        ForEach(tabBarList, (item: TabBarModel, index: number) => {\n          TabContent() {\n            if (index == 0) {\n              Homepage()\n            } else if (index == 1) {\n              SortPage()\n            } else if (index == 2) {\n              TopicPage()\n            }else if (index == 3) {\n              CartPage()\n            } else {\n              ProfilePage()\n            }\n          }.tabBar(this.BottomNavigation(tabBarList[index]))\n        }, item => JSON.stringify(item))\n      }\n      .barWidth('100%')\n      .barHeight(56)\n      .scrollable(false)\n      .onChange((index: number) => {\n        this.currentPageIndex = index;\n      })\n    }.backgroundColor(Color.White)\n  }\n\n  @Builder BottomNavigation(item: TabBarModel) {\n    Column() {\n      Image(this.currentPageIndex == item.index ? item.selectImg : item.normalImg)\n        .objectFit(ImageFit.Contain)\n        .width(24)\n        .height(24)\n      Text(item.title)\n        .fontColor(this.currentPageIndex == item.index ? '#e92f4f' : Color.Black)\n        .fontWeight(500)\n        .textAlign(TextAlign.Center)\n        .fontSize(12)\n    }.width('100%').height('100%').alignItems(HorizontalAlign.Center).justifyContent(FlexAlign.Center)\n  }\n}\n", "path": "harmony-netease-main\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "harmony-netease-main", "id": "0db52819296e3561359048a54b0532e3800d7fe889e99120190cde75a72be318"}
{"text": "import webview from '@ohos.web.webview'\nimport { LOGIN_PAGE_URL } from '../base/Api'\n\n@Entry\n@Component\nexport struct LoginPage {\n  private controller: webview.WebviewController = new webview.WebviewController()\n  onPageEnd: () => void = () => {\n  }\n  onPageBegin: () => void = () => {\n  }\n\n  build() {\n    Column() {\n      Web({ src: LOGIN_PAGE_URL, controller: this.controller })\n        .javaScriptAccess(true)\n        .multiWindowAccess(true)\n        .zoomAccess(true)\n        .fileAccess(true)\n        .imageAccess(true)\n        .enabled(true)\n        .onPageBegin(e => {\n          this.onPageBegin()\n        })\n        .onPageEnd(e => {\n          this.onPageEnd()\n        })\n        .onUrlLoadIntercept((e) => {\n\n          return false\n        })\n    }\n  }\n\n  @Builder\n  noLogin() {\n\n  }\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\pages\\LoginPage.ets", "project_name": "harmony-netease-main", "id": "c02af8d2f0b04a45b7c6b83454ff1bb7638a43bc2d78d758b22a00a38d1309cc"}
{"text": "import { ProcessBanner } from '../../../model/BannerModel'\n@Component\nexport struct Activity{\n  build(){\n\n  }\n}", "path": "harmony-netease-main\\entry\\src\\main\\ets\\pages\\detail\\componet\\Activity.ets", "project_name": "harmony-netease-main", "id": "4e43ee66afe26ef4d344e91de833e2eedde5ef14c034004d233dd965bc6b2e21"}
{"text": "export const queryURLParameter = (url) => {\n  let regx = /([^&?=]+)=([^&?=]+)/g;\n  let obj = {};\n\n  url.replace(regx, (...args) => {\n    if (obj[args[1]]) {\n      obj[args[1]] = Array.isArray(obj[args[1]])\n        ? obj[args[1]]\n        : [obj[args[1]]];\n      obj[args[1]].push(args[2]);\n    } else {\n      obj[args[1]] = args[2];\n    }\n  });\n\n  return obj;\n};", "path": "harmony-netease-main\\entry\\src\\main\\ets\\utils\\UrlUtil.ets", "project_name": "harmony-netease-main", "id": "74380923c88fa00b3e8f36697d1adbb582990fa8f6e3af210faf1c488338be18"}
{"text": "import HomePageTest from './HomePage.test'\nimport IndexTest from './Index.test'\nimport abilityTest from './Ability.test'\n\nexport default function testsuite() {\n  abilityTest()\n  IndexTest()\n  HomePageTest()\n}", "path": "harmony-netease-main\\entry\\src\\ohosTest\\ets\\test\\List.test.ets", "project_name": "harmony-netease-main", "id": "afd2560b3c46af88aa7d50ed0ec6a4210a2caf4cd96f324ef9683c8bfee259b6"}
{"text": "PersistentStorage.PersistProp('count', 0);\n\n@Entry\n@Component\nstruct Index {\n    @StorageLink('count') count: number = 0\n\n    build() {\n        Row() {\n            Column() {\n                \n                Text(`${this.count}`)\n                    .onClick(() => {\n                        this.count ++;\n                    })\n                    .fontSize(50)\n            }\n        }\n    }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "HarmonyOS-master", "id": "15bb88e162cdb13732a25d1ff51e4bc5479f1615e74f2748b1c6d43fe8379205"}
{"text": "@Entry\n@Component\nstruct ButtonParameter {\n  build() {\n    Column({ space: 50 }) {\n\n      \n\n      \n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\button\\parameter\\practice\\ButtonParameter.ets", "project_name": "HarmonyOS-master", "id": "7f8905dee4158d10a35068d93a7fc33f6055e1168945ab3e463fabeceba78537"}
{"text": "@Entry\n@Component\nstruct ActionSheetPage {\n  build() {\n    Column() {\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\dialog\\actionSheet\\practice\\ActionSheetPage.ets", "project_name": "HarmonyOS-master", "id": "9d33a85005bd70f76f1a49eca7e9a65d39171087c313c380a1a517cf04bae527"}
{"text": "@Entry\n@Component\nstruct AlertDialogPage {\n  build() {\n    Column() {\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\dialog\\alertDialog\\practice\\AlertDialogPage.ets", "project_name": "HarmonyOS-master", "id": "4ba5e27e452d317cf7e47bd7770edbce6a1c66a127cb7ec86b109d4b880553b8"}
{"text": "@Entry\n@Component\nstruct DatePickerDialogPage {\n  build() {\n    Column({ space: 50 }) {\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\dialog\\picker\\datePickerDialog\\practice\\DatePickerDialogPage.ets", "project_name": "HarmonyOS-master", "id": "7ec935647876f9c3113aff2de971684154a372acbd8a660ae1ef13bd9257d2e9"}
{"text": "@Entry\n@Component\nstruct TextPickerDialogPage {\n  build() {\n    Column({ space: 50 }) {\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\dialog\\picker\\textPickerDialog\\practice\\TextPickerDialogPage.ets", "project_name": "HarmonyOS-master", "id": "e280089550623105ae14edcbe912b6ac311887720e6cc6e6587d15b7fc22d644"}
{"text": "@Entry\n@Component\nstruct TimePickerDialogPage {\n  build() {\n    Column({ space: 50 }) {\n\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\dialog\\picker\\timePickerDialog\\practice\\TimePickerDialogPage.ets", "project_name": "HarmonyOS-master", "id": "67330e8f94f4163e4fb7dcb454718ef5acea9d07378a01aec199413e5c38aedd"}
{"text": "@Entry\n@Component\nstruct ImageInterpolationPage {\n  build() {\n    Column({ space: 50 }) {\n      Row({ space: 20 }) {\n        Column() {\n          Image($r('app.media.img_flower'))\n            .width('500px')\n            .height('500px')\n            .interpolation(ImageInterpolation.None)\n          Text('None')\n        }\n\n        Column() {\n          Image($r('app.media.img_flower'))\n            .width('500px')\n            .height('500px')\n            .interpolation(ImageInterpolation.Low)\n          Text('Low')\n        }\n      }\n\n\n      Row({ space: 20 }) {\n        Column() {\n          Image($r('app.media.img_flower'))\n            .width('500px')\n            .height('500px')\n            .interpolation(ImageInterpolation.Medium)\n          Text('Medium')\n\n        }\n\n        Column() {\n          Image($r('app.media.img_flower'))\n            .width('500px')\n            .height('500px')\n            .interpolation(ImageInterpolation.High)\n          Text('High')\n        }\n      }\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\image\\attribute\\interpolation\\practice\\Interpolation.ets", "project_name": "HarmonyOS-master", "id": "e691f613b564ba13aade5436c45e7062c5e34d24fc0e36c2800c6e36529f441a"}
{"text": "@Entry\n@Component\nstruct ImageParameter {\n  build() {\n    Column({ space: 40 }) {\n      \n\n      \n\n      \n\n      \n\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\image\\parameter\\practice\\ImageParameter.ets", "project_name": "HarmonyOS-master", "id": "f3da39919c53dbefffe69fa1e849dbff37f8a655ff326184af3c109e0e4e7d31"}
{"text": "@Entry\n@Component\nstruct ProgressColor {\n  build() {\n    Column({ space: 50 }) {\n      Progress({ value: 30, total: 100, type: ProgressType.Linear })\n        .color(Color.Green)\n        .backgroundColor(\"#26008000\")\n\n      Progress({ value: 30, total: 100, type: ProgressType.Ring })\n        .color(Color.Green)\n        .backgroundColor(\"#26008000\")\n\n      Progress({ value: 30, total: 100, type: ProgressType.Eclipse })\n        .color(Color.Green)\n        .backgroundColor(\"#26008000\")\n\n      Progress({ value: 30, total: 100, type: ProgressType.ScaleRing })\n        .color(Color.Green)\n        .backgroundColor(\"#26008000\")\n\n      Progress({ value: 30, total: 100, type: ProgressType.Capsule })\n        .width(200)\n        .color(Color.Green)\n        .backgroundColor(\"#26008000\")\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\progress\\attribute\\color\\ProgressColor.ets", "project_name": "HarmonyOS-master", "id": "5533690990f22ce24c593d756c371dec7a7004775a2d4df285d20c40834d8658"}
{"text": "@Entry\n@Component\nstruct ProgressAttributePage {\n  build() {\n    Column({ space: 50 }) {\n      Progress({ value: 30, total: 100, type: ProgressType.Linear })\n        .style({\n          strokeWidth: 20\n        })\n\n      Progress({ value: 30, total: 100, type: ProgressType.Ring })\n        .style({\n          strokeWidth: 20\n        })\n\n      Progress({ value: 30, total: 100, type: ProgressType.ScaleRing })\n        .style({\n          strokeWidth: 10,\n          scaleWidth: 3,\n          scaleCount: 30\n        })\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\progress\\attribute\\style\\ProgressStyle.ets", "project_name": "HarmonyOS-master", "id": "95ea0e74ddf3442f0a0b4ee7fe19d95fd373be44f0d5b00f7348dc36cc218b16"}
{"text": "@Entry\n@Component\nstruct FontColorPage {\n  build() {\n    Column({ space: 50 }) {\n      Text('Color.Green')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n        .fontColor(Color.Green)\n\n      Text('rgb(0, 128, 0)')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n        .fontColor('rgba(59, 171, 59, 0.33)')\n\n      Text('#008000')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n        .fontColor('#a4008000')\n\n      Text('0x008000')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n        .fontColor(0xa4008000)\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\text\\attribute\\fontcolor\\solution\\FontColor.ets", "project_name": "HarmonyOS-master", "id": "52121c0f365138751ed4cf8b96f1d2905be77ff4c98f5bca029ba86a11a1f2ba"}
{"text": "@Entry\n@Component\nstruct ToggleAttributePage {\n  build() {\n    Column({ space: 50 }) {\n\n      \n      Row({ space: 20 }) {\n        Toggle({ type: ToggleType.Switch, isOn: true })\n          .selectedColor(Color.Green)\n        Toggle({ type: ToggleType.Checkbox, isOn: true })\n          .selectedColor(Color.Green)\n        Toggle({ type: ToggleType.Button, isOn: true }) {\n          Text('button')\n        }.selectedColor('#66008000')\n\n      }\n\n      \n      Toggle({ type: ToggleType.Switch, isOn: true })\n        .selectedColor(Color.Green)\n        .switchPointColor(Color.Orange)\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\toggle\\attribute\\ToggleAttributePage.ets", "project_name": "HarmonyOS-master", "id": "e7ba3de2a764653d13003c9b4217a85a9bb2134c46977405c8d7b668a29ef667"}
{"text": "@Entry\n@Component\nstruct LightPage {\n  @State isOn: boolean = false;\n\n  build() {\n    Column({ space: 20 }) {\n      if (this.isOn) {\n        Image($r('app.media.img_light'))\n          .height(300)\n          .width(300)\n          .borderRadius(20)\n      } else {\n        Image($r('app.media.img_dark'))\n          .height(300)\n          .width(300)\n          .borderRadius(20)\n      }\n\n      Toggle({ type: ToggleType.Switch, isOn: this.isOn })\n        .width(60)\n        .height(30)\n        .onChange((isOn) => {\n          this.isOn = isOn;\n        })\n    }\n    .height('100%')\n    .width('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\toggle\\event\\practice\\Light.ets", "project_name": "HarmonyOS-master", "id": "f37ba69927dadfd3ef3b41bf31ff82325258f62aea2580de5510dca6762d615e"}
{"text": "@Entry\n@Component\nstruct ToggleParameter {\n  build() {\n    Column({ space: 20 }) {\n      Row({ space: 20 }) {\n        Toggle({ type: ToggleType.Switch, isOn: false })\n        Toggle({ type: ToggleType.Switch, isOn: true })\n      }\n\n      Row({ space: 20 }) {\n        Toggle({ type: ToggleType.Checkbox, isOn: false })\n        Toggle({ type: ToggleType.Checkbox, isOn: true })\n      }\n\n      Row({ space: 20 }) {\n        Toggle({ type: ToggleType.Button, isOn: false }) {\n          Text('button')\n        }\n\n        Toggle({ type: ToggleType.Button, isOn: true }) {\n          Text('button')\n        }\n      }\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\component\\toggle\\parameter\\ToggleParameter.ets", "project_name": "HarmonyOS-master", "id": "54974d5f4903cdf460b574575d0ba7be0413c6310bd1b39354a0b3883fec06cf"}
{"text": "@Entry\n@Component\nstruct PlayAndPausePage {\n  @State isRunning: boolean = false;\n\n  build() {\n    Column() {\n      if (this.isRunning) {\n        Image('pages/helloworld/condition/solution/images/ic_pause.png')\n          .width(100)\n          .height(100)\n          .onClick(() => {\n            this.isRunning = false;\n          })\n      } else {\n        Image('pages/helloworld/condition/solution/images/ic_play.png')\n          .width(100)\n          .height(100)\n          .onClick(() => {\n            this.isRunning = true\n          })\n      }\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\helloworld\\condition\\solution\\PlayAndPausePage.ets", "project_name": "HarmonyOS-master", "id": "9a77d8fb70d6aa5037167e19199b5338cfbe2f81d2ae8ec8e08bad1dc4e8fceb"}
{"text": "import { SwitchButton } from './SwitchButton';\n@Entry\n@Component\nstruct HelloWorldPage {\n  @State isOn: boolean = false;\n\n  build() {\n    Column({ space: 20 }) {\n      if (this.isOn) {\n        Image('pages/helloworld/custom/practice/images/img_light.png')\n          .height(300)\n          .width(300)\n          .borderRadius(20)\n      } else {\n        Image('pages/helloworld/custom/practice/images/img_dark.png')\n          .height(300)\n          .width(300)\n          .borderRadius(20)\n      }\n      Row({ space: 50 }) {\n        SwitchButton({color:Color.Red})\n          .onClick(() => {\n            this.isOn = false\n          })\n\n        SwitchButton({color:Color.Green})\n          .onClick(() => {\n            this.isOn = true;\n          })\n      }\n    }\n    .height('100%')\n    .width('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n\n", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\helloworld\\custom\\practice\\Light.ets", "project_name": "HarmonyOS-master", "id": "21c77468987ce088a45c74579a8db2e724646f0ea0b4618998802eed8b7ce28f"}
{"text": "@Component\nexport struct SwitchButton {\n\n  color:Color = Color.Blue\n\n  build() {\n    Button({ type: ButtonType.Circle }) {\n      Image('pages/helloworld/custom/practice/images/icon_switch.png')\n        .width(30)\n        .height(30)\n    }.width(50)\n    .height(50)\n    .backgroundColor(this.color)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\helloworld\\custom\\practice\\SwitchButton.ets", "project_name": "HarmonyOS-master", "id": "3b07a69cce07c072cf26c938241f54477dbece8a494f8adf573fe4d62d1f5850"}
{"text": "@Entry\n@Component\nstruct HelloWorldPage {\n    @State isOn: boolean = false;\n\n    build() {\n        Column({ space: 20 }) {\n            if (this.isOn) {\n                Image('pages/helloworld/custom/solution/images/img_light.png')\n                    .height(300)\n                    .width(300)\n                    .borderRadius(20)\n            } else {\n                Image('pages/helloworld/custom/solution/images/img_dark.png')\n                    .height(300)\n                    .width(300)\n                    .borderRadius(20)\n            }\n            Row({ space: 50 }) {\n                SwitchButton({ color: Color.Red })\n                    .onClick(() => {\n                        this.isOn = false\n                    })\n                SwitchButton({ color: Color.Green })\n                    .onClick(() => {\n                        this.isOn = true;\n                    })\n            }\n        }\n        .height('100%')\n        .width('100%')\n        .justifyContent(FlexAlign.Center)\n    }\n}\n\n@Component\nstruct SwitchButton {\n    color: Color = Color.Blue;\n\n    build() {\n        Button({ type: ButtonType.Circle }) {\n            Image('pages/helloworld/custom/solution/images/icon_switch.png')\n                .width(30)\n                .width(30)\n        }.width(50)\n        .height(50)\n        .backgroundColor(this.color)\n    }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\helloworld\\custom\\solution\\Light.ets", "project_name": "HarmonyOS-master", "id": "9d97c024354919d6d0bf8104a259302b12b4e55868427309020d097e6ef8b3c2"}
{"text": "@Entry\n@Component\nstruct DeleteButtonPage {\n  build() {\n\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\helloworld\\delete\\practice\\DeleteButtonPage.ets", "project_name": "HarmonyOS-master", "id": "c530f8c28fd02efcbb4fe0feef54cbb4c68f580b10be9760eee7671e96af8aae"}
{"text": "@Entry\n@Component\nstruct AlignSelfPage {\n  build() {\n    Column({ space: 50 }) {\n      Flex({\n        direction: FlexDirection.Row,\n        alignItems: ItemAlign.Start\n      }) {\n        Text('1')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n        Text('2')\n          .width(100)\n          .height(200)\n          .itemTextStyle()\n        Text('3')\n          .width(100)\n          .height(150)\n          .itemTextStyle()\n          .alignSelf(ItemAlign.End)\n      }.height(350)\n      .width(350)\n      .flexStyle()\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Flex) function flexStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\flex\\attribute\\alignSelf\\AlignSelfPage.ets", "project_name": "HarmonyOS-master", "id": "d0b3e79e26caee9bd9194c34e55c049eacc54a7fba0739fd960881002c284a9c"}
{"text": "@Entry\n@Component\nstruct FlexGrowPage {\n  build() {\n    Column({ space: 50 }) {\n      Flex({\n        direction: FlexDirection.Row,\n        alignItems: ItemAlign.Center\n      }) {\n        \n        Text('1')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n          .flexGrow(0) \n\n        \n        Text('2')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n          .flexGrow(1) \n\n        \n        Text('3')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n          .flexGrow(2) \n\n      }.height(150)\n      .width(360)\n      .flexStyle()\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Flex) function flexStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\flex\\attribute\\flexGrow\\FlexGrowPage.ets", "project_name": "HarmonyOS-master", "id": "a26b39bc87d419dd3924e80631fa82a178cd62ccea5b40bd564a0d2109d8cc2a"}
{"text": "@Entry\n@Component\nstruct DirectionPage {\n  build() {\n    Column({ space: 50 }) {\n      Flex({ direction: FlexDirection.ColumnReverse }) {\n        Text('1')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n        Text('2')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n        Text('3')\n          .width(100)\n          .height(100)\n          .itemTextStyle()\n      }\n      .height(350)\n      .width(350)\n      .flexStyle()\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Flex) function flexStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\flex\\parameter\\direction\\DirectionPage.ets", "project_name": "HarmonyOS-master", "id": "87aa461eb55586a2490464655f0d9032d35d2573a2bf93970ba7f15ad0544c4d"}
{"text": "@Entry\n@Component\nstruct JustifyContentPage {\n  build() {\n    Column({ space: 50 }) {\n      Flex({\n        direction: FlexDirection.Row,\n        justifyContent: FlexAlign.Start\n      }) {\n        Text('1')\n          .width(50)\n          .height(50)\n          .itemTextStyle()\n        Text('2')\n          .width(50)\n          .height(50)\n          .itemTextStyle()\n        Text('3')\n          .width(50)\n          .height(50)\n          .itemTextStyle()\n      }.height(50)\n      .width(300)\n      .flexStyle()\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Flex) function flexStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\flex\\parameter\\justifyContent\\JustifyContentPage.ets", "project_name": "HarmonyOS-master", "id": "b527badb090d97927a0d82a2a2addbfb6a77b67e24722ce7dfadd398d5ded1f3"}
{"text": "@Entry\n@Component\nstruct GridBasic {\n  build() {\n    Column() {\n      Grid() {\n        ForEach([1, 2, 3, 4, 5, 6, 7, 8, 9], (item) => {\n          GridItem() {\n            Text(item.toString())\n              .itemTextStyle()\n          }\n        })\n      }\n      .width(320)\n      .height(240)\n      .rowsTemplate('1fr 1fr 1fr')\n      .columnsTemplate('1fr 2fr 1fr')\n      .gridStyle()\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .height('100%')\n  .width('100%')\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Grid) function gridStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\grid\\attribute\\basic\\GridBasic.ets", "project_name": "HarmonyOS-master", "id": "1c7592b4f5bf24892f67320fb9605ce5a3d7f2058030036c509e4e64140cbf0b"}
{"text": "@Entry\n@Component\nstruct GridGap {\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('1')\n            .itemTextStyle()\n        }.rowStart(0).rowEnd(1).columnStart(0).columnEnd(1)\n\n        GridItem() {\n          Text('2')\n            .itemTextStyle()\n        }.rowStart(0).rowEnd(1)\n\n\n        GridItem() {\n          Text('3')\n            .itemTextStyle()\n        }\n\n        GridItem() {\n          Text('4')\n            .itemTextStyle()\n        }.columnStart(1).columnEnd(2)\n      }\n      .width(320)\n      .height(240)\n      .rowsTemplate('1fr 1fr 1fr')\n      .columnsTemplate('1fr 2fr 1fr')\n      .gridStyle()\n      .rowsGap(20)\n      .columnsGap(20)\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .height('100%')\n  .width('100%')\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Grid) function gridStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\grid\\attribute\\gap\\GridGap.ets", "project_name": "HarmonyOS-master", "id": "d18cedf07de88fe5b7dfac45c51eb33827c160269eaf10d82ccf8ef79eeb9138"}
{"text": "@Entry\n@Component\nstruct StartAndEndPage {\n  build() {\n    Column() {\n      Grid() {\n        GridItem() {\n          Text('1')\n            .itemTextStyle()\n        }.rowStart(0).rowEnd(1).columnStart(0).columnEnd(1)\n\n        GridItem() {\n          Text('2')\n            .itemTextStyle()\n        }\n\n        GridItem() {\n          Text('3')\n            .itemTextStyle()\n        }\n\n        GridItem() {\n          Text('4')\n            .itemTextStyle()\n        }\n\n        GridItem() {\n          Text('5')\n            .itemTextStyle()\n        }.columnStart(1).columnEnd(2)\n      }\n      .width(320)\n      .height(240)\n      .rowsTemplate('1fr 1fr 1fr')\n      .columnsTemplate('1fr 2fr 1fr')\n      .gridStyle()\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .height('100%')\n  .width('100%')\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderWidth(1)\n}\n\n@Extend(Grid) function gridStyle() {\n  .backgroundColor('#f5f5f5')\n  .borderWidth(1)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\grid\\attribute\\startAndEnd\\StartAndEndPage.ets", "project_name": "HarmonyOS-master", "id": "19a726c01a7a42363b304f50ec3abdf40eeb2bb6c033cdab594c9edbcd9b0d89"}
{"text": "@Entry\n@Component\nstruct CalculatorPage {\n  build() {\n    Column() {\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n\n@Extend(Text) function screenTextStyle() {\n  .backgroundColor('#bac8d3')\n  .height('100%')\n  .width('100%')\n  .textAlign(TextAlign.End)\n  .padding(10)\n  .borderRadius(10)\n  .borderWidth(1)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n}\n\n@Extend(Text) function buttonTextStyle() {\n  .backgroundColor('#f5f5f5')\n  .height('100%')\n  .width('100%')\n  .textAlign(TextAlign.Center)\n  .padding(10)\n  .borderRadius(10)\n  .borderWidth(1)\n  .fontSize(25)\n}\n\n@Extend(Grid) function gridStyle() {\n  .width(320)\n  .height(480)\n  .borderRadius(10)\n  .borderWidth(1)\n  .padding(10)\n  .rowsGap(10)\n  .columnsGap(10)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\grid\\calculator\\practice\\CalculatorPage.ets", "project_name": "HarmonyOS-master", "id": "a0cf7aca078342da4142691972606190bfd924a04977ce3e5570e351276393ae"}
{"text": "@Entry\n@Component\nstruct AlignItemsPage {\n  build() {\n    Column({ space: 2 }) {\n      Row()\n        .backgroundColor(Color.Green)\n        .width('80%')\n        .height(70)\n      Row()\n        .backgroundColor(Color.Green)\n        .width('80%')\n        .height(70)\n      Row()\n        .backgroundColor(Color.Green)\n        .width('80%')\n        .height(70)\n    }.width('100%')\n    .height('100%')\n    .alignItems(HorizontalAlign.Start)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\linear\\attribute\\alignItems\\AlignItemsPage.ets", "project_name": "HarmonyOS-master", "id": "908a1824d30804d7b87cc6e55731d6e7c5a0f09e0e98e0d171492ca54200f7cd"}
{"text": "@Entry\n@Component\nstruct SpacePage {\n  build() {\n    Column({ space: 50 }) {\n      Row()\n        .backgroundColor(Color.Green)\n        .width('80%')\n        .height(70)\n\n      Row()\n        .backgroundColor(Color.Green)\n        .width('80%')\n        .height(70)\n\n      Row()\n        .backgroundColor(Color.Green)\n        .width('80%')\n        .height(70)\n\n    }.width('100%')\n    .height('100%')\n    .backgroundColor('#eeeeee')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\linear\\parameter\\space\\SpacePage.ets", "project_name": "HarmonyOS-master", "id": "ea2be934ae5f15e7a2a04f4ad271faa49a347f093c8cd9a79e65517c16e2cf83"}
{"text": "@Entry\n@Component\nstruct LayoutWeightPage {\n  build() {\n    Column() {\n      \n      Row() {\n        Text('Header')\n          .fontSize(30)\n      }.backgroundColor('#66008000')\n      .justifyContent(FlexAlign.Center)\n      .height(60)\n      .width('100%')\n      \n      Row() {\n        Text('Content')\n          .fontSize(30)\n      }.backgroundColor('#66ffa200')\n      .justifyContent(FlexAlign.Center)\n      .width('100%')\n      .layoutWeight(3)\n      \n      Row() {\n        Text('Footer')\n          .fontSize(30)\n      }.backgroundColor('#660e9fba')\n      .justifyContent(FlexAlign.Center)\n      .width('100%')\n      .height(60)\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor('#f2f2f2')\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\linear\\tips\\layoutWeight\\LayoutWeightPage.ets", "project_name": "HarmonyOS-master", "id": "ead7bb32044e6779bc02468a96e84ff9b46189c6ae3dfa28feb25b5ed0651474"}
{"text": "@Entry\n@Component\nstruct AlignPage {\n  data: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\n  build() {\n\n    List({ space: 20 }) {\n      ForEach(this.data, (item) => {\n        ListItem() {\n          Text(item.toString())\n            .height(80)\n            .width(320)\n            .itemTextStyle()\n        }\n      })\n    }.listStyle()\n    .height('100%')\n    .width('100%')\n    .alignListItem(ListItemAlign.Center)\n\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderRadius(10)\n}\n\n@Extend(List) function listStyle() {\n  .backgroundColor(Color.White)\n  .padding({ top: 20, bottom: 20 })\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\list\\attribute\\align\\AlignPage.ets", "project_name": "HarmonyOS-master", "id": "2958fa415822587377f28659281d1cc0d3edf17028ab5e75ea08d17fd11b81f5"}
{"text": "@Entry\n@Component\nstruct DividerPage {\n  data: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\n  build() {\n\n    List({ space: 20 }) {\n      ForEach(this.data, (item) => {\n        ListItem() {\n          Text(item.toString())\n            .height(80)\n            .width(320)\n            .itemTextStyle()\n        }\n      })\n    }\n    .listStyle()\n    .height('100%')\n    .width('100%')\n    .alignListItem(ListItemAlign.Center)\n    .divider({\n      strokeWidth: 1,\n      color: Color.Orange,\n      startMargin: 30,\n      endMargin: 30\n    })\n\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderRadius(10)\n}\n\n@Extend(List) function listStyle() {\n  .backgroundColor(Color.White)\n  .padding({ top: 20, bottom: 20 })\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\list\\attribute\\divider\\DividerPage.ets", "project_name": "HarmonyOS-master", "id": "ad381b7254296433cafa43f1223a897becef0f197723db4d3657029a63220a43"}
{"text": "@Entry\n@Component\nstruct ScrollerPage {\n  data: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\n  build() {\n    Stack({ alignContent: Alignment.BottomEnd }) {\n      List({ space: 20 }) {\n        ForEach(this.data, (item) => {\n          ListItem() {\n            Text(item.toString())\n              .itemTextStyle()\n          }\n        })\n      }.listStyle()\n      .height('100%')\n      .width('100%')\n\n      Button({ type: ButtonType.Circle }) {\n        Image($r('app.media.icon_top'))\n          .width(40)\n          .height(40)\n      }\n      .width(60)\n      .height(60)\n      .backgroundColor(Color.Orange)\n      .offset({ x: -20, y: -100 })\n    }\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .height(80)\n  .width('100%')\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderRadius(10)\n}\n\n@Extend(List) function listStyle() {\n  .backgroundColor(Color.White)\n  .padding(20)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\list\\parameter\\scroller\\practice\\ScrollerPage.ets", "project_name": "HarmonyOS-master", "id": "71c121516b6ec61c9b701b26b08589fa98703dd7f02476a7d866c4cee7ac4a05"}
{"text": "@Entry\n@Component\nstruct ScrollerPage {\n  data: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n  scroller: Scroller = new Scroller();\n\n  build() {\n    Stack({ alignContent: Alignment.BottomEnd }) {\n      List({ space: 20, scroller: this.scroller }) {\n        ForEach(this.data, (item) => {\n          ListItem() {\n            Text(item.toString())\n              .itemTextStyle()\n          }\n        })\n      }.listStyle()\n      .height('100%')\n      .width('100%')\n\n      Button({ type: ButtonType.Circle }) {\n        Image($r('app.media.icon_top'))\n          .width(40)\n          .height(40)\n      }\n      .width(60)\n      .height(60)\n      .backgroundColor(Color.Orange)\n      .offset({ x: -20, y: -100 })\n      .onClick(() => {\n        this.scroller.scrollToIndex(0)\n      })\n    }\n  }\n}\n\n@Extend(Text) function itemTextStyle() {\n  .height(80)\n  .width('100%')\n  .textAlign(TextAlign.Center)\n  .fontColor(Color.White)\n  .fontSize(40)\n  .fontWeight(FontWeight.Bold)\n  .backgroundColor('#008a00')\n  .borderRadius(10)\n}\n\n@Extend(List) function listStyle() {\n  .backgroundColor(Color.White)\n  .padding(20)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\list\\parameter\\scroller\\solution\\ScrollerPage.ets", "project_name": "HarmonyOS-master", "id": "e5ab22b5c6030bdf77c63740f364dfb8e85e343ae0f1bee595285cb30cc54203"}
{"text": "@Entry\n@Component\nstruct StackPage {\n  build() {\n    Column() {\n      Stack() {\n        Row()\n          .width(250)\n          .height(250)\n          .backgroundColor('#107B02') \n          .shadow({radius:50})\n\n        Row()\n          .width(200)\n          .height(200)\n          .backgroundColor('#E66826') \n          .shadow({radius:50})\n        Row()\n          .width(150)\n          .height(150)\n          .backgroundColor('#255FA7') \n          .shadow({radius:50})\n      }\n      .width(300)\n      .height(300)\n      .backgroundColor('#E5E5E5')\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\stack\\basis\\StackPage.ets", "project_name": "HarmonyOS-master", "id": "273463b7e10dc930f80ab6f8923764fab98fb7beae633ead178790b0a096fb00"}
{"text": "@Entry\n@Component\nstruct AlignmentContentPage {\n  build() {\n    Column() {\n      Stack({alignContent:Alignment.BottomEnd}) {\n        Image($r('app.media.img_avatar'))\n          .width('100%')\n          .height('100%')\n        Image($r('app.media.icon_v'))\n          .width(60)\n          .height(60)\n      }\n      .width(200)\n      .height(200)\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\stack\\parameter\\alignContent\\AlignContentPage.ets", "project_name": "HarmonyOS-master", "id": "66b616e471c4da471f25440ab6c1765d5a2591b19b0fd954eec22b9f07a5ea40"}
{"text": "@Entry\n@Component\nstruct PositionPage {\n  build() {\n    Column() {\n      Stack() {\n        Image($r('app.media.img_avatar'))\n          .width('100%')\n          .height('100%')\n        Image($r('app.media.icon_v'))\n          .width(60)\n          .height(60)\n          .position({ x: 140, y: 140 })\n      }\n      .width(200)\n      .height(200)\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\layout\\stack\\tips\\position\\PositionPage.ets", "project_name": "HarmonyOS-master", "id": "0d71a8f51e692dd4a1a8cfc77ff16cdefd68c836aef18aa50d17d2cc7a6c7aa7"}
{"text": "@Entry\n@Component\nstruct PageB {\n  build() {\n    Column() {\n      Text('Page B')\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n\n  onPageShow() {\n    console.log('PageB onPageShow')\n  }\n\n  onPageHide() {\n    console.log('PageB onPageHide')\n  }\n\n  onBackPress() {\n    console.log('PageB onBackPress')\n  }\n\n  aboutToDisappear() {\n    console.log('PageB aboutToDisappear')\n  }\n\n  aboutToAppear() {\n    console.log('PageB aboutToAppear')\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\lifecircle\\PageB.ets", "project_name": "HarmonyOS-master", "id": "e9e4268a053ad326dc16da30c449396a60aebac5a4e6210d6fb7a2e7f1b980db"}
{"text": "import router from '@ohos.router'\n\n@Entry\n@Component\nstruct FromPage {\n  build() {\n    Column({ space: 50 }) {\n      Text('FromPage')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n      Blank()\n      Row({ space: 50 }) {\n        Button('push')\n          .onClick(() => {\n            router.pushUrl({ url: 'pages/router/back/ToPage' })\n          })\n        Button('replace')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/router/back/ToPage' })\n          })\n      }\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n    .padding({\n      top: 200,\n      bottom: 200\n    })\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\router\\back\\FromPage.ets", "project_name": "HarmonyOS-master", "id": "a72f2491908260d5b7eaf1a1b5d3790a5e34690b5cfc69b37098f147c42002ea"}
{"text": "import router from '@ohos.router'\n\n@Entry\n@Component\nstruct StartPage {\n  build() {\n    Column({ space: 50 }) {\n      Text('SourcePage')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n      Blank()\n      Row({ space: 50 }) {\n        Button('pushUrl')\n          .onClick(() => {\n            router.pushUrl({\n              url: 'pages/router/params/EndPage',\n              params: {\n                id: 10,\n                name: 'zhangsan',\n                age: '20'\n              }\n            })\n          })\n      }\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n    .padding({\n      top: 200,\n      bottom: 200\n    })\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\router\\params\\StartPage.ets", "project_name": "HarmonyOS-master", "id": "556bdc175cea63c6b408c301f15c0dbeffcf51a72749591153bf276368ea8b58"}
{"text": "@Entry\n@Component\nstruct TargetPage {\n  build() {\n    Column({ space: 50 }) {\n      Text('TargetPage')\n        .fontSize(40)\n        .fontWeight(FontWeight.Bold)\n      Blank()\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n    .padding({ top: 200 })\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\router\\pushAndReplace\\TargetPage.ets", "project_name": "HarmonyOS-master", "id": "e812aceb38314e465083bd2bd4387caecb9e98027b0f30a043163ba2c456a43d"}
{"text": "export class Employee {\n  name: string; \n  age: number; \n  job: Job; \n\n  constructor(name: string, age: number, job: Job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n  }\n}\n\nexport class Job {\n  name: string; \n  salary: number; \n\n  constructor(name: string, salary: number) {\n    this.name = name;\n    this.salary = salary;\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\state\\advanced\\objectlink\\practice\\model\\DataModel.ets", "project_name": "HarmonyOS-master", "id": "8b5f1a13fa83daecb341b2ed9a5931f36a3641d192b57d090e3e1c749f78403d"}
{"text": "export class Person {\n    name: string;\n    age: number;\n\n    constructor(name: string, age: number) {\n        this.name = name;\n        this.age = age;\n    }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\state\\advanced\\state\\array\\model\\DataModel.ets", "project_name": "HarmonyOS-master", "id": "c1240e44bd18b576d99c0feca6e5109e3398852c6e6e57b96ab07dc31919f355"}
{"text": "@Entry\n@Component\nstruct NumberState {\n  @State count: number = 1;\n\n  build() {\n    Column({ space: 50 }) {\n\n      Row({ space: 10 }) {\n        Text('@State').textStyle()\n        \n        Counter() {\n          Text(this.count.toString()).textStyle()\n        }\n        .onInc(() => this.count++)\n        .onDec(() => this.count--)\n      }\n      .width('100%')\n      .backgroundColor(\"#CCE3CB\")\n      .padding(10)\n      .borderRadius(20)\n      .justifyContent(FlexAlign.Center)\n\n    }\n    .height('100%')\n    .width('100%')\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor(Color.White)\n    .padding(10)\n\n  }\n}\n\n\n@Extend(Text) function textStyle() {\n  .fontSize(25)\n  .fontWeight(FontWeight.Bold)\n}\n", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\state\\advanced\\state\\number\\NumberState.ets", "project_name": "HarmonyOS-master", "id": "d71098191e7c7b128f18deda6eca135e815e0f55ff238b3debf15ed441ed45e0"}
{"text": "let nextId = 1;\n\nexport class Person {\n  id: number;\n  name: string;\n  phone: string;\n  isStar: boolean = false;\n\n  constructor(name, phone) {\n    this.id = nextId++;\n    this.name = name;\n    this.phone = phone;\n  }\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\state\\contacts\\practice\\model\\DataModel.ets", "project_name": "HarmonyOS-master", "id": "a117110824a02141cc6d4a02c142801e06a429d5aed41166c2e677a673bc8bcd"}
{"text": "import router from '@ohos.router';\n\nAppStorage.SetOrCreate('count', 0)\n\n@Entry\n@Component\nstruct PageOne {\n  @StorageLink('count') count: number = 0;\n\n  build() {\n    Column({ space: 50 }) {\n      Column({ space: 20 }) {\n        Text('PageOne(Link)')\n          .pageOneTextStyle()\n        Row({ space: 20 }) {\n          Text('count')\n            .pageOneTextStyle()\n          Counter() {\n            Text(this.count.toString())\n              .pageOneTextStyle()\n          }\n          .onInc(() => this.count++)\n          .onDec(() => this.count--)\n        }\n      }.width('90%')\n      .padding(20)\n      .backgroundColor('#f2f2f2')\n      .borderRadius(10)\n\n      Row({ space: 50 }) {\n        Button('PageTwo')\n          .backgroundColor('#dae8fc')\n          .fontColor(Color.Black)\n          .onClick(() => {\n            router.pushUrl({ url: 'pages/storage/appStorage/PageTwo' })\n          })\n        Button('PageThree')\n          .backgroundColor('#d5e8d4')\n          .fontColor(Color.Black)\n          .onClick(() => {\n            router.pushUrl({ url: 'pages/storage/appStorage/PageThree' })\n          })\n\n      }\n\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n\n@Extend(Text) function pageOneTextStyle() {\n  .fontSize(25)\n  .fontWeight(FontWeight.Bold)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\storage\\appStorage\\PageOne.ets", "project_name": "HarmonyOS-master", "id": "e55c6c8fe41d6e19f2febebf042fb6e54ea9072ed7b630130427f58dc55d5bda"}
{"text": "@Entry\n@Component\nstruct PageThree {\n  @StorageProp('count') count: number = 0;\n\n  build() {\n    Column() {\n      Column({ space: 20 }) {\n        Text('PageThree(Prop)')\n          .pageThreeTextStyle()\n        Row({ space: 20 }) {\n          Text('count')\n            .pageThreeTextStyle()\n          Counter() {\n            Text(this.count.toString())\n              .pageThreeTextStyle()\n          }\n          .onInc(() => this.count++)\n          .onDec(() => this.count--)\n        }\n      }.width('90%')\n      .padding(20)\n      .backgroundColor('#d5e8d4')\n      .borderRadius(10)\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n\n@Extend(Text) function pageThreeTextStyle() {\n  .fontSize(25)\n  .fontWeight(FontWeight.Bold)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\storage\\appStorage\\PageThree.ets", "project_name": "HarmonyOS-master", "id": "47d48120eb0df06a25407eb293c0f667e752220e9363dc34f79eed18332ae6ae"}
{"text": "@Entry\n@Component\nstruct PageTwo {\n  @StorageLink('count') count: number = 0;\n\n  build() {\n    Column() {\n      Column({ space: 20 }) {\n        Text('PageTwo(Link)')\n          .pageTwoTextStyle()\n        Row({ space: 20 }) {\n          Text('count')\n            .pageTwoTextStyle()\n          Counter() {\n            Text(this.count.toString())\n              .pageTwoTextStyle()\n          }\n          .onInc(() => this.count++)\n          .onDec(() => this.count--)\n        }\n      }.width('90%')\n      .padding(20)\n      .backgroundColor('#dae8fc')\n      .borderRadius(10)\n    }.width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}\n\n\n@Extend(Text) function pageTwoTextStyle() {\n  .fontSize(25)\n  .fontWeight(FontWeight.Bold)\n}", "path": "HarmonyOS-master\\Demos\\entry\\src\\main\\ets\\pages\\storage\\appStorage\\PageTwo.ets", "project_name": "HarmonyOS-master", "id": "298386306cddb1d1eecfd55fee4b23edd365cd54901298fd255de82e0c57e0d5"}
{"text": "@Entry\n@Component\nstruct Index {\n  build() {\n    \n    Flex({ direction: FlexDirection.Row,justifyContent:FlexAlign.SpaceEvenly,alignItems:ItemAlign.Stretch }) {\n      \n      Row() {\n\n      }\n      .width(60)\n      .height(60)\n      .backgroundColor('#33D')\n\n      Row() {\n\n      }\n      .width(60)\n      .height(60)\n      .backgroundColor('#3DD')\n\n      Row() {\n\n      }\n      .width(60)\n      .height(60)\n      .backgroundColor('#D3D')\n\n      Row() {\n\n      }\n      .width(60)\n      .height(60)\n      .backgroundColor('#3D3')\n    }\n    .width('100%')\n    .height(300)\n    .backgroundColor(\"#ccc\")\n  }\n}\n", "path": "HarmonyOS4-main\\basic\\code\\flex布局\\pages\\Index.ets", "project_name": "HarmonyOS4-main", "id": "12dbd490fccf167458d9d3fcaf7d4e38c634918d60a3c7a43a0ba3dfafe75959"}
{"text": "import Child from '../Views/Child'\nimport Child1 from '../Views/Child1';\n\n@Entry\n@Component\nstruct Index {\n  \n  @State count: number = 1;\n  @State count1:number = 1;\n\n  build() {\n    Column() {\n      Flex({ direction: FlexDirection.Column }) {\n        Text('state count：' + this.count).fontSize(20)\n        Text('state count1：' + this.count1).fontSize(20)\n        Button('Prop+1').onClick((event: ClickEvent) => {\n          this.count++;\n        })\n        Button('Link+1').onClick((event: ClickEvent) => {\n          this.count1++;\n        })\n\n\n        \n        Child({ count: this.count })\n        \n        Child1({count1:$count1})\n      }\n    }\n    .margin(20)\n    .width('100%')\n  }\n}\n", "path": "HarmonyOS4-main\\basic\\code\\Link\\pages\\Index.ets", "project_name": "HarmonyOS4-main", "id": "c2042984c92e69508a073efa8bf0c32145adb42f008f464cd393c052100d25bf"}
{"text": "@Observed\nexport class Person {\n  id: number\n  name: string\n  age: number\n\n  constructor(id: number, name: string, age: number) {\n    this.id = id;\n    this.name = name;\n    this.age = age;\n  }\n}", "path": "HarmonyOS4-main\\basic\\code\\ObjectLink和Observed\\pages\\Model.ets", "project_name": "HarmonyOS4-main", "id": "118a26e3192c93660c4c74d9f95f59a522121095f299737eb22856f4881fce91"}
{"text": "@Entry\n@Component\nstruct Index {\n  build() {\n    List() {\n      ListItem() {\n        Text('list1')\n      }\n      .width('100%')\n      .height(40)\n      .backgroundColor('#33d')\n\n      ListItemGroup() {\n        ListItem() {\n          Text('list2')\n        }\n        .height(40)\n        .width('100%')\n        .backgroundColor('#d3d')\n\n        ListItem() {\n          Text('list3')\n        }\n        .height(40)\n        .width('100%')\n        .backgroundColor('#dd3')\n\n      }\n      .width('100%')\n      .height(400)\n      .backgroundColor(Color.Orange)\n\n\n    }\n    .width('100%')\n    .listDirection(Axis.Horizontal)\n  }\n}\n", "path": "HarmonyOS4-main\\basic\\code\\列表布局\\pages\\Index.ets", "project_name": "HarmonyOS4-main", "id": "eac811cf650e5e69ce7fa1cf185d62b639bcfda1c76af4d20a8cae55e4f44da4"}
{"text": "@Entry\n@Component\nstruct Index {\n  build() {\n    Stack(){\n      Image($r('app.media.dog'))\n        .width(100)\n        .height(100)\n        \n        .position({\n          x:100,\n          y:100\n        })\n    }\n    .width('100%')\n    .height(300)\n    .backgroundColor(\"#ccc\")\n  }\n}\n", "path": "HarmonyOS4-main\\basic\\code\\绝对定位\\pages\\Index.ets", "project_name": "HarmonyOS4-main", "id": "6a9fb8961b2aef0b3c4a50c7f47d389c7e1141c22ffc3314253fda3d770bd4ef"}
{"text": "@Observed\nexport class Person {\n  id: number\n  isSelect: boolean\n  name: string\n  isSave: boolean\n  isExpand: boolean\n  phone: string\n\n  constructor(id: number, isSelect: boolean, name: string, isSave: boolean, isExpand: boolean, phone: string) {\n    this.id = id;\n    this.isSelect = isSelect;\n    this.name = name;\n    this.isSave = isSave;\n    this.isExpand = isExpand;\n    this.phone = phone;\n  }\n}", "path": "HarmonyOS4-main\\basic\\code\\联系人案例完成\\Model\\Model.ets", "project_name": "HarmonyOS4-main", "id": "3234e043ddabea5a153da23b8420b7f018d14c741f9ab2ef25f1370376c687ef"}
{"text": "import IndexTest from './Index.test'\nimport abilityTest from './Ability.test'\n\nexport default function testsuite() {\n  abilityTest()\n  IndexTest()\n}", "path": "HarmonyOS4-main\\basic\\entry\\src\\ohosTest\\ets\\test\\List.test.ets", "project_name": "HarmonyOS4-main", "id": "39938230413f502ba732490af37971097754e1aadde898e00d5b33c449c4f6eb"}
{"text": "@Component\nexport struct Header{\n  private title:ResourceStr\n  build(){\n    Row(){\n      Image($r('app.media.ic_public_back'))\n        .width(30)\n      Text(this.title)\n        .fontSize(30)\n        .fontWeight(FontWeight.Bold)\n      Blank()\n      Image($r('app.media.ic_public_refresh'))\n        .width(30)\n    }\n    .width('100%')\n    .height(30)\n  }\n}", "path": "HarmonyOS4-main\\projects\\MyApplication\\entry\\src\\main\\ets\\components\\CommonComponents.ets", "project_name": "HarmonyOS4-main", "id": "d5ff8733964af6caeac89726ef43fed0f364726e9d9d73f0ecbd88eced6d076e"}
{"text": "export interface IBannerItem {\n  \"id\": number\n  \"name\": string\n  \"imageURL\": string\n}\n\nexport type IBannerList = IBannerItem[]\n", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\model\\HomeData.ets", "project_name": "HarmonyOS4-main", "id": "ad2801813debe8626955a9e229d26d3db4cbc69e1edc29fd1bd65aa7d2a49e62"}
{"text": "@Component\nexport default struct Discover {\n  build() {\n    Column() {\n      Text(\"Discover\");\n    }\n  }\n}", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\pages\\Discover.ets", "project_name": "HarmonyOS4-main", "id": "693af80c5a2ca1eeac3e208cf431e1f126fefcbc8bdca4fd9709b771006a76f9"}
{"text": "import SwiperLayout from '../views/home/SwiperLayout'\n\n@Component\nexport default struct Home {\n  build() {\n    Column() {\n      SwiperLayout()\n    }\n    .height('100%')\n  }\n}", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\pages\\Home.ets", "project_name": "HarmonyOS4-main", "id": "06d9b0bdcf22d523179fd38b1c666f6aa036e8c52c5f8562a896af111a94d5e3"}
{"text": "@Component\nexport default struct My {\n  build() {\n    Column() {\n      Text(\"My\");\n    }\n  }\n}", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\pages\\My.ets", "project_name": "HarmonyOS4-main", "id": "cedcecb5edbc1754c137bb4b8fb02e216061708c00445da0dba29c19d0fdd34a"}
{"text": "@Component\nexport default struct See {\n  build() {\n    Column() {\n      Text(\"See\");\n    }\n  }\n}", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\pages\\See.ets", "project_name": "HarmonyOS4-main", "id": "b5fbf7e9ea4140a8b4f5cf773b460cd68ae423f0d9cb24f59e74c55c26c0aa96"}
{"text": "@Component\nexport default struct Service {\n  build() {\n    Column() {\n      Text(\"Service\");\n    }\n  }\n}", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\pages\\Service.ets", "project_name": "HarmonyOS4-main", "id": "667ad5ebcdc8e7e431120a7c56cc252210c959208975c2bca983bb908c4e3a21"}
{"text": "import type { IBannerItem, IBannerList } from '../../model/HomeData';\n\n@Component\nexport default struct SwiperLayout {\n  @State bannerList: IBannerList = [\n    {\n      \"id\": 1,\n      \"name\": \"banner1\",\n      \"imageURL\": \"http://192.168.2.74:6060/public/home_banner_1.jpg\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"banner2\",\n      \"imageURL\": \"http://192.168.2.74:6060/public/home_banner_2.jpg\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"banner3\",\n      \"imageURL\": \"http://192.168.2.74:6060/public/home_banner_3.jpg\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"banner4\",\n      \"imageURL\": \"http://192.168.2.74:6060/public/home_banner_4.jpg\"\n    }\n  ]\n\n  build() {\n    Swiper() {\n      ForEach(this.bannerList, (banner: IBannerItem) => {\n        Image(banner.imageURL)\n          .width('100%')\n          .height(211)\n          .objectFit(ImageFit.Fill)\n      }, (banner: IBannerItem) => `${banner.id}`)\n\n    }\n    .autoPlay(true)\n    .indicatorStyle({\n      color: '#fff',\n      selectedColor: '#479559'\n    })\n  }\n}\n", "path": "HarmonyOS4-main\\RentRoom\\entry\\src\\main\\ets\\views\\home\\SwiperLayout.ets", "project_name": "HarmonyOS4-main", "id": "c98c7597b70724a9a93a4dbb783fff73672e0cffa787488be49403e9c386d4fb"}
{"text": "import { router } from '@kit.ArkUI'\n\n@Component\nstruct Drawer {\n  @Link show: boolean\n  @State widthSize: number = 0\n  @BuilderParam ContentBuilder: () => void = this.defaultContentBuilder\n  @BuilderParam FooterBuilder: () => void = this.defaultFooterBuilder\n\n  @Builder\n  defaultContentBuilder() {\n\n  }\n\n  @Builder\n  defaultFooterBuilder() {\n\n  }\n\n  aboutToAppear(): void {\n    setTimeout(() => {\n      animateTo({ duration: 500 }, () => {\n        this.widthSize = 260\n      })\n    })\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.End }) {\n      Column()\n        .width('100%')\n        .height('100%')\n        .backgroundColor(Color.Black)\n        .align(Alignment.Top)\n        .opacity(.5)\n        .onClick(() => {\n          this.show = false\n        })\n\n      Column() {\n        Column() {\n          this.ContentBuilder()\n        }\n        .width('100%')\n        .flexGrow(1)\n\n        Row() {\n          this.FooterBuilder()\n        }\n        .width('100%')\n      }\n      .width(this.widthSize)\n      .height('100%')\n      .backgroundColor(Color.White)\n      .align(Alignment.End)\n      .borderRadius({\n        topLeft: 20,\n        bottomLeft: 20\n      })\n    }.width('100%').height('100%').position({ left: 0, top: 0 })\n  }\n}\n\nexport default Drawer\n", "path": "harmonyProject-master\\entry\\src\\main\\ets\\components\\common\\Drawer.ets", "project_name": "harmonyProject-master", "id": "cd6b9795ee9503d72b22784706497122c2c7ba1941d665eb46a48b6b37cef61d"}
{"text": "import { router } from '@kit.ArkUI'\n\n@Component\nstruct Navigate {\n  @BuilderParam ContentBuilder: () => void = this.defaultBuilder\n\n  @Builder\n  defaultBuilder() {\n  }\n\n  build() {\n    Row() {\n      Image($r('app.media.ic_public_back'))\n        .width(26)\n        .margin({ left: 15 })\n        .onClick(() => {\n          router.back()\n        })\n      this.ContentBuilder()\n    }\n    .margin({ right: 15, top: 10 })\n  }\n}\n\nexport default Navigate\n", "path": "harmonyProject-master\\entry\\src\\main\\ets\\components\\common\\Navigate.ets", "project_name": "harmonyProject-master", "id": "ea7b6ac829bdab13d2d839e0a0abb281513885955bf9b465d6a7a47d6c479638"}
{"text": "@Component\nexport struct HomeBanner {\n\n  build() {\n    Swiper(){\n      Image($r('app.media.banner01'))\n        .objectFit(ImageFit.Contain)\n        .width('100%')\n      Image($r('app.media.banner02'))\n        .objectFit(ImageFit.Contain)\n        .width('100%')\n      Image($r('app.media.banner03'))\n        .objectFit(ImageFit.Contain)\n        .width('100%')\n    }\n    .margin({\n      left: 12,\n      right: 12\n    })\n    .borderRadius(10)\n    .autoPlay(true)\n    .indicator(\n      Indicator.dot()\n        .selectedColor(Color.White)\n    )\n  }\n}\n\nexport default HomeBanner\n\n", "path": "harmonyProject-master\\entry\\src\\main\\ets\\pages\\home\\main\\HomeBanner.ets", "project_name": "harmonyProject-master", "id": "0c0239fe6afd05ecb5795f5fd5869aa47954000640db19aef85124bab8a9b44f"}
{"text": "import IndexApi from '../../../api/search'\nimport { querySearchRankingType } from '../../../api/search/type'\n\n@Component\nstruct SearchTop {\n  @State searchRanking: querySearchRankingType[] = []\n\n  async aboutToAppear(): Promise<void> {\n    this.searchRanking = await IndexApi.querySearchRanking()\n  }\n\n  build() {\n    Column() {\n      Image($r(\"app.media.hot_recommend_wap\"))\n        .width('100%')\n\n      List({ space: 10 }) {\n        ForEach(this.searchRanking, (item: querySearchRankingType, index: number) => {\n          ListItem() {\n            Row({ space: 10 }) {\n              Text((index + 1).toString())\n                .fontSize(13)\n              Image(item.photoURL)\n                .width(50)\n                .height(50)\n                .backgroundColor('#fff')\n              Text(item.title)\n                .fontSize(13)\n            }\n          }\n        })\n      }\n    }\n    .padding({ left: 15, right: 15 })\n    .width('100%')\n\n  }\n}\n\nexport default SearchTop\n", "path": "harmonyProject-master\\entry\\src\\main\\ets\\pages\\search\\tip\\SearchTop.ets", "project_name": "harmonyProject-master", "id": "e07ed56263829a14fc34bb97afa7b3091776f915d5e0c6cc50604b694c109944"}
{"text": "import web_webview from '@ohos.web.webview';\nimport router from '@ohos.router';\nimport ActionBar from './comm/ActionBar';\n\n\n@Entry\n@Component\nstruct WebViewPage {\n  webviewController: web_webview.WebviewController = new web_webview.WebviewController();\n  @State path: string  = \"\"\n  @State resourcePath:Resource = $rawfile('debug.html')\n  @State title: string = \"\"\n  @State loadProgress: number = 0\n\n  aboutToAppear() {\n    const params = JSON.stringify(router.getParams()); \n    console.error(\"WebViewPage#aboutToAppear\")\n    console.error(JSON.stringify(params))\n    let paramsPath: string = params['path'];\n    if (paramsPath.startsWith(\"http\") || paramsPath.startsWith(\"file\")) {\n      this.path = paramsPath;\n    } else {\n      this.resourcePath = $rawfile(paramsPath)\n    }\n  }\n\n  build() {\n    Column() {\n      ActionBar({ title: this.title })\n      if (this.loadProgress < 100) {\n        Progress({ value: this.loadProgress, type: ProgressType.Linear, total: 100 }).color(Color.Blue) .width(\"100%\")\n      }\n      Stack() {\n        Web({ src: this.path.length>0 ?this.path: this.resourcePath, controller: this.webviewController })\n          .onTitleReceive((value) => {\n            this.title = value.title\n          }).onPageEnd((event) => {\n          this.loadProgress = 100\n          console.error(\"onPageEnd\")\n        }).onProgressChange((event)=>{\n          this.loadProgress = event.newProgress\n          console.error(\"onProgressChange-->\" + this.loadProgress)\n        }).onPageEnd((value)=>{\n          console.error(\"onPageEnd-->\" + value.url)\n        }).onErrorReceive((error)=>{\n          console.error(\"onErrorReceive-->\" + JSON.stringify(error.error))\n        })\n          .layoutWeight(1)\n          .width('100%')\n        if (this.loadProgress < 100) {\n          LoadingProgress().color(Color.Blue).width(\"20%\").height(\"20%\")\n        }\n      }.layoutWeight(1)\n      .width('100%')\n      .alignContent(Alignment.Center)\n\n\n\n\n    }.height('100%').width('100%')\n  }\n}\n\n", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\WebViewPage.ets", "project_name": "HelloArkUI-main", "id": "cff3622a59dd485481bb1175165358b19e45e49285c6502bde48a40d56b43273"}
{"text": "import router from '@ohos.router'\nimport deviceInfo from '@ohos.deviceInfo'\n@Preview\n@Component\nexport default struct  ActionBar{\n  @Prop title:string\n\n  private topPadding:number = 0\n\n\n  aboutToAppear(){\n    if(deviceInfo.deviceType == \"tablet\"){\n      this.topPadding = 48\n    }\n\n    if(!this.title){\n      this.title = router.getState().path\n    }\n  }\n\n  build(){\n    Row(){\n      Image($r(\"app.media.action_bar_go_back\"))\n        .margin({left:10})\n        .width(32)\n        .height(32)\n        .onClick(()=>{\n        router.back()\n      })\n\n        Text(this.title ).layoutWeight(1).margin({right:32}).textAlign(TextAlign.Center).fontSize(24).fontColor(Color.Black)\n      Image($r(\"app.media.source_code\"))\n        .margin({right:10})\n        .width(32)\n        .height(32)\n        .onClick(()=>{\n          router.pushUrl({url:\"WebViewPage\",params:{path:\"\", }})\n        })\n    }.alignItems(VerticalAlign.Center).padding({top:this.topPadding,bottom:16}).shadow({radius:1}).width('100%')\n  }\n\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\comm\\ActionBar.ets", "project_name": "HelloArkUI-main", "id": "beac45a69403720334ada797ec7fc832ab3ad7ee735534b6414eff36ed786569"}
{"text": "import router from '@ohos.router'\n\n@Extend(Button)\nfunction indexButtonStyle(path: string) {\n  .type(ButtonType.Normal)\n  .borderRadius(4)\n  .margin(6)\n  .backgroundColor($r('app.color.blue_3583ee'))\n  .onClick(() => {\n    router.pushUrl({ url: path })\n  })\n}\n\n\n@Component\nexport struct BaseListItem {\n  path: string=\"\";\n  label: string=\"\";\n\n  build() {\n    Button() {\n      Text(this.label)\n        .fontSize(24)\n        .fontColor(Color.White)\n        .padding({left:10,right:10,top:4,bottom:4})\n    }.indexButtonStyle(this.path)\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\comm\\BaseListItem.ets", "project_name": "HelloArkUI-main", "id": "318f61e7ab7947d9f058c0850ee8052d5473cded9940ca9707babf1866e02b59"}
{"text": "@CustomDialog\nexport struct ContentDialog {\n  private customController: CustomDialogController\n  content:string ='';\n  build() {\n    Column() {\n      Text(this.content)\n        .fontSize(20).padding(10)\n\n    }\n\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\component\\ContentDialog.ets", "project_name": "HelloArkUI-main", "id": "944d8c7c469a352680b3624f4c3278aff9fcb401a2d2b0ba55418ea307d999d0"}
{"text": "@Component\nexport struct MyComponent {\n  @State message: string = \"hello\"\n  public controller?: MyComponentController = undefined;\n\n  aboutToAppear() {\n    if (this.controller) {\n      this.controller.setItem(this);\n    }\n  }\n\n  build() {\n    Text(this.message)\n      .fontColor('#ff6134')\n      .fontSize(20)\n  }\n}\n\nexport class MyComponentController {\n  item?: MyComponent = undefined;\n\n  setItem(item: MyComponent) {\n    this.item = item;\n  }\n\n  updateMessage(message: string) {\n    if (this.item) {\n      this.item.message = message;\n    }\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\component\\CustomMethodAndMemeber.ets", "project_name": "HelloArkUI-main", "id": "4f75713bba50485d0cfaeaddf5a34491a6a76420e3be1dfed1c0bf281b7472a9"}
{"text": "@Component\nexport struct HelloComponent{\n  @State message:string = \"hello\"\n  @State count:Number = 0;\n  build(){\n\n    Row(){\n    Text(this.message)\n      .onClick(()=>{\n        this.message = `you had click for ${this.count} times`\n      })\n      .fontColor('#999999')\n      .fontSize(14)\n      .fontWeight(FontWeight.Regular)\n    }\n\n  }\n}\n", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\component\\HelloComponent.ets", "project_name": "HelloArkUI-main", "id": "a47f8ad75682822c6d227467bfd3f2624e81139f05e2980e6b784e77e724a723"}
{"text": "export class BaseRouterParams{\n\n  public getInfo(){\n    return \"BaseRouterParams\"\n  }\n\n\n}\n\nexport class MainRouterParams{\n  name:string =''\n  public getInfo(){\n    return \"MainRouterParams\"\n  }\n}\n\nexport function getMainRouterInfo(params?:MainRouterParams):string{\n  if(params){\n    return params.name\n  }\n  return \"\"\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\basic_knowledge\\RouterParams.ets", "project_name": "HelloArkUI-main", "id": "010dda9b591fa7cee5e76cea6b05edadf96f89b823f123695958ac958f447236"}
{"text": "import router from '@ohos.router'\nimport ActionBar from '../../comm/ActionBar'\nimport { HelloComponent } from '../../component/HelloComponent'\nimport { getMainRouterInfo, MainRouterParams } from './RouterParams'\nimport { hilog } from '@kit.PerformanceAnalysisKit'\n\n@Entry\n@Component\nstruct Second {\n  @State message: string = 'hi second'\n  @State routerParams?:MainRouterParams = undefined\n  aboutToAppear(): void {\n    this.routerParams = router.getParams() as MainRouterParams\n    let params = router.getParams()\n\n    let tmp:MainRouterParams = new MainRouterParams()\n    tmp.name = \"Second\"\n    hilog.error(0x01,\"Second\",\"aboutToAppear--> \" + JSON.stringify(this.routerParams))\n    hilog.error(0x01,\"Second\",\"aboutToAppear--> \" + JSON.stringify(tmp))\n  }\n\n  build() {\n      Column() {\n        \n        ActionBar()\n        Text(this.message)\n          .fontColor('#1b91e0')\n          .fontWeight(FontWeight.Lighter)\n        Text(getMainRouterInfo(this.routerParams)).width(50).height(50).backgroundColor(Color.Pink)\n        Button() {\n          Text('back')\n            .fontWeight(FontWeight.Medium)\n            .fontColor('#666666')\n\n        }\n        .type(ButtonType.Normal)\n        .backgroundColor('#0D9FFB')\n        .margin({\n          top: 20\n        })\n        .width('40%')\n        .height('5%')\n        .onClick(() => {\n          router.back()\n        })\n\n        HelloComponent()\n\n\n          .width('100%')\n      }.height('100%') .width('100%')\n\n\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\basic_knowledge\\Second.ets", "project_name": "HelloArkUI-main", "id": "eb782e36a0d543c6dd9d6119e34dc8db00e1ca9e4bce93fa3714e59333b29d77"}
{"text": "import { ClockView } from './ClockView'\n@Entry\n@Component\nstruct AlarmClockPage{\n\n  @State second:number = 0\n  @State minute:number = 0\n  @State hour:number = 0\n\n  private timerInterval:number = -1\n\n  aboutToAppear(){\n    this.getCurrentTime()\n    if(this.timerInterval < 0){\n      this.timerInterval =setInterval(()=>{\n        this.getCurrentTime()\n      }, 500)\n    }\n\n  }\n  aboutToDisappear(){\n    if(this.timerInterval > 0){\n      clearInterval(this.timerInterval)\n    }\n  }\n\n  getCurrentTime(){\n    let date:Date = new Date()\n    this.hour =date.getHours()\n    this.minute = date.getMinutes()\n    this.second = date.getSeconds()\n\n  }\n\n\n  build(){\n    Column(){\n      ClockView().width(\"100%\").height(\"50%\")\n      Text(`${this.hour}:${this.minute}:${this.second}`).fontSize(36)\n    }\n\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\AlarmClockPage.ets", "project_name": "HelloArkUI-main", "id": "6bb32cfa7d62876e7b6f634ec98367f9a844397ab8684f1487bd771f966bd485"}
{"text": "@Preview\n@Component\nexport struct ScratchOffView {\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private canvasRendering: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  private path: Path2D = new Path2D()\n\n  build() {\n    Stack() {\n      Image($r(\"app.media.cat\"))\n      Canvas(this.canvasRendering).width(\"100%\").height(\"100%\").onReady(() => {\n        let canvasWidth = this.canvasRendering.width\n        let canvasHeight = this.canvasRendering.height\n\n        this.canvasRendering.fillStyle = \"#aaf7f7f7\"\n        this.canvasRendering.fillRect(0, 0, canvasWidth, canvasHeight)\n\n        this.canvasRendering.strokeStyle = \"#00000000\"\n        this.canvasRendering.fillStyle = \"#000000\"\n        this.canvasRendering.globalCompositeOperation = \"destination-out\"\n\n\n      }).onTouch((event: TouchEvent) => {\n\n        let path = new Path2D()\n        let prex = 0\n        let prey = 0\n        switch (event.type) {\n          case TouchType.Down:\n            prex = event.touches[0].x\n            prey = event.touches[0].y\n            path.moveTo(prex, prey)\n            break\n          case TouchType.Move:\n            this.path.moveTo(event.touches[0].x, event.touches[0].y)\n            this.path.arc(event.touches[0].x, event.touches[0].y, 30, 0, Math.PI*2, false)\n            this.canvasRendering.fill(this.path)\n\n            break\n          case TouchType.Up:\n            break;\n        }\n      })\n    }.width(\"100%\").height(\"100%\")\n\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\ScratchOffView.ets", "project_name": "HelloArkUI-main", "id": "06c807169b6d36bc327266cc8259898b299af66093125f7ffbd872c9f3e86627"}
{"text": "import { CompositeOperationView } from './CompositeOperationView'\n\n@Entry\n@Component\nstruct CanvasCompositeOperationPage{\n  compositeOperation:string[]=[\"source-over\",\"source-in\",\"source-out\",\"source-atop\",\"destination-over\",\"destination-in\",\"destination-out\",\"destination-atop\",\"lighter\",\"copy\",\"xor\"]\n  build() {\n    Flex({ direction: FlexDirection.Row, wrap: FlexWrap.Wrap, }){\n      ForEach(this.compositeOperation,(item:string)=>{\n        Column(){\n          Text(item)\n          CompositeOperationView({compositeOperation:item}).width(\"100%\").height(\"80%\")\n        }.width(\"30%\").height(\"20%\")\n      })\n    }\n  }\n}\n\n", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\canvas\\CanvasCompositeOperationPage.ets", "project_name": "HelloArkUI-main", "id": "fbe4516013479b60f697d49f7fbaa10967421e4b5c390abc4c1afa73d7683d9e"}
{"text": "@Component\nstruct CompositeOperationView{\n  @Prop compositeOperation:string\n  private settings: RenderingContextSettings = new RenderingContextSettings(true)\n  private canvasRendering: CanvasRenderingContext2D = new CanvasRenderingContext2D(this.settings)\n  build() {\n    Canvas(this.canvasRendering).width(\"100%\").height(\"100%\").onReady(() => {\n      let canvasWidth = this.canvasRendering.width\n      let canvasHeight = this.canvasRendering.height\n\n      let circleX = canvasWidth/4\n      let circleY = canvasHeight/4;\n      let circleCenter = Math.min(circleX,circleY)\n\n      this.canvasRendering.fillStyle = \"#FF0000\"\n      this.canvasRendering.arc(circleCenter,circleCenter,circleCenter,0,Math.PI * 2, false)\n      this.canvasRendering.fill()\n\n      this.canvasRendering.globalCompositeOperation = this.compositeOperation\n\n      this.canvasRendering.fillStyle = \"#0000FF\"\n      this.canvasRendering.fillRect(circleCenter, circleCenter, circleCenter*2, circleCenter*2)\n\n    })\n  }\n}\n\nexport{CompositeOperationView}\n\n\n", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\canvas\\CompositeOperationView.ets", "project_name": "HelloArkUI-main", "id": "baee1ab839206c4d799e985e2c82be595a24e08613ca75cb8b1255c39c8b6af7"}
{"text": "import { promptAction } from '@kit.ArkUI'\n\nexport function showDialog() {\n  let dialogController: CustomDialogController | null = new CustomDialogController({\n    builder: CustomDialogExample({\n      cancel: () => {\n      },\n      confirm: () => {\n      },\n    }),\n  })\n  dialogController.open()\n}\n\n\n@CustomDialog\n@Component\nexport struct CustomDialogExample {\n   textValue='textValue'\n  inputValue='inputValue'\n  controller?: CustomDialogController\n  cancel: () => void = () => {\n  }\n  confirm: () => void = () => {\n  }\n\n  build() {\n    Column() {\n      Text('Change text').fontSize(20).margin({ top: 10, bottom: 10 })\n      TextInput({ placeholder: '', text: this.textValue }).height(60).width('90%')\n        .onChange((value: string) => {\n          this.textValue = value\n        })\n      Text('Whether to change a text?').fontSize(16).margin({ bottom: 10 })\n      Flex({ justifyContent: FlexAlign.SpaceAround }) {\n        Button('cancel')\n          .onClick(() => {\n            if (this.controller != undefined) {\n              this.controller.close()\n              this.cancel()\n            }\n          }).backgroundColor(0xffffff).fontColor(Color.Black)\n        Button('confirm')\n          .onClick(() => {\n            if (this.controller != undefined) {\n              this.inputValue = this.textValue\n              this.controller.close()\n              this.confirm()\n            }\n          }).backgroundColor(0xffffff).fontColor(Color.Red)\n      }.margin({ bottom: 10 })\n    }.borderRadius(10)\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\FAQ\\dialog_controller\\DialogControllerUtils.ets", "project_name": "HelloArkUI-main", "id": "501fb8be42547bcc9bcdba5289549a9757850e32e176b2382066f468c8ff4087"}
{"text": "import { DrawContext, FrameNode, NodeController, Position, Size, UIContext, LayoutConstraint } from '@kit.ArkUI';\nimport { drawing } from '@kit.ArkGraphics2D';\n\nfunction GetChildLayoutConstraint(constraint: LayoutConstraint, child: FrameNode): LayoutConstraint {\n  const size = child.getUserConfigSize();\n  const width = Math.max(\n    Math.min(constraint.maxSize.width, size.width.value),\n    constraint.minSize.width\n  );\n  const height = Math.max(\n    Math.min(constraint.maxSize.height, size.height.value),\n    constraint.minSize.height\n  );\n  const finalSize: Size = { width, height };\n  const res: LayoutConstraint = {\n    maxSize: finalSize,\n    minSize: finalSize,\n    percentReference: finalSize\n  };\n\n  return res;\n}\n\nclass MyFrameNode extends FrameNode {\n  public width: number = 100;\n  public offsetY: number = 0;\n  private space: number = 1;\n\n  onMeasure(constraint: LayoutConstraint): void {\n    let sizeRes: Size = { width: vp2px(100), height: vp2px(100) };\n    for (let i = 0;i < this.getChildrenCount(); i++) {\n      let child = this.getChild(i);\n      if (child) {\n        let childConstraint = GetChildLayoutConstraint(constraint, child);\n        child.measure(childConstraint);\n        let size = child.getMeasuredSize();\n        sizeRes.height += size.height + this.space;\n        sizeRes.width = Math.max(sizeRes.width, size.width);\n      }\n    }\n    this.setMeasuredSize(sizeRes);\n  }\n\n  onLayout(position: Position): void {\n    let y = 0;\n    for (let i = 0;i < this.getChildrenCount(); i++) {\n      let child = this.getChild(i);\n      if (child) {\n        child.layout({\n          x: vp2px(100),\n          y: vp2px(this.offsetY)\n        });\n        y += child.getMeasuredSize().height + this.space;\n      }\n    }\n    this.setLayoutPosition(position);\n  }\n\n  onDraw(context: DrawContext) {\n    const canvas = context.canvas;\n    const pen = new drawing.Pen();\n    pen.setStrokeWidth(15);\n    pen.setColor({ alpha: 255, red: 255, green: 0, blue: 0 });\n    canvas.attachPen(pen);\n    canvas.drawRect({\n      left: 50,\n      right: this.width + 50,\n      top: 50,\n      bottom: this.width + 50,\n    });\n    canvas.detachPen();\n  }\n\n  addWidth() {\n    this.width = (this.width + 10) % 50 + 100;\n  }\n}\n\nclass MyNodeController extends NodeController {\n  public rootNode: MyFrameNode | null = null;\n\n  makeNode(context: UIContext): FrameNode | null {\n    this.rootNode = new MyFrameNode(context);\n    this.rootNode?.commonAttribute?.size({ width: 100, height: 100 }).backgroundColor(Color.Green);\n    let frameNode: FrameNode = new FrameNode(context);\n    this.rootNode.appendChild(frameNode);\n    frameNode.commonAttribute.width(10).height(10).backgroundColor(Color.Pink);\n    return this.rootNode;\n  }\n}\n\n@Entry\n@Component\nstruct MeasureAndDraw {\n  private nodeController: MyNodeController = new MyNodeController();\n\n  build() {\n    Row() {\n      Column() {\n        NodeContainer(this.nodeController)\n          .width('100%')\n          .height(200)\n          .backgroundColor('#FFF0F0F0')\n        Button('Invalidate')\n          .margin(10)\n          .onClick(() => {\n            this.nodeController?.rootNode?.addWidth();\n            this.nodeController?.rootNode?.invalidate();\n          })\n        Button('UpdateLayout')\n          .onClick(() => {\n            let node = this.nodeController.rootNode;\n            node!.offsetY = (node!.offsetY + 10) % 110;\n            this.nodeController?.rootNode?.setNeedsLayout();\n          })\n      }\n      .width('100%')\n      .height('100%')\n    }\n    .height('100%')\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\frame_node\\MeasureAndDraw.ets", "project_name": "HelloArkUI-main", "id": "9302ed40d633da154686e200557ffcf4c64b426f0f4e1bd7e080a1eaf916b3c8"}
{"text": "import { HMInterceptor, HMInterceptorAction, HMInterceptorInfo, IHMInterceptor } from \"@hadss/hmrouter\";\n\n@HMInterceptor({ interceptorName: 'JumpInfoInterceptor', global: true })\nexport class JumpInfoInterceptor implements IHMInterceptor {\n  handle(info: HMInterceptorInfo): HMInterceptorAction {\n    let connectionInfo: string = info.type === 'push' ? 'jump to' : 'back to';\n    console.log(`${info.srcName} ${connectionInfo} ${info.targetName}`)\n    return HMInterceptorAction.DO_NEXT;\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\hmrouter_page\\hmrouter\\JumpInfoInterceptor.ets", "project_name": "HelloArkUI-main", "id": "57336d989505f1eb23d551b2ac80fc7784487268e74d7fa7a06d604f183fd6d1"}
{"text": "import { HMAnimator, HMAnimatorHandle, IHMAnimator, OpacityOption, ScaleOption, TranslateOption } from \"@hadss/hmrouter\"\n\n@HMAnimator({ animatorName: 'liveCommentsAnimator' })\nexport class liveCommentsAnimator implements IHMAnimator {\n  effect(enterHandle: HMAnimatorHandle, exitHandle: HMAnimatorHandle): void {\n    \n    enterHandle.start((translateOption: TranslateOption, scaleOption: ScaleOption,\n      opacityOption: OpacityOption) => {\n      translateOption.y = '100%'\n    })\n    enterHandle.finish((translateOption: TranslateOption, scaleOption: ScaleOption,\n      opacityOption: OpacityOption) => {\n      translateOption.y = '0'\n    })\n    enterHandle.duration = 500\n\n    \n    exitHandle.start((translateOption: TranslateOption, scaleOption: ScaleOption,\n      opacityOption: OpacityOption) => {\n      translateOption.y = '0'\n    })\n    exitHandle.finish((translateOption: TranslateOption, scaleOption: ScaleOption,\n      opacityOption: OpacityOption) => {\n      translateOption.y = '100%'\n    })\n    exitHandle.duration = 500\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\hmrouter_page\\hmrouter\\liveCommentsAnimator.ets", "project_name": "HelloArkUI-main", "id": "cd97d5beadadba25074ef6c0586f7db03e82f0bc3c262df40d77d88e2242524e"}
{"text": "import { HMLifecycle, HMLifecycleContext, IHMLifecycle } from \"@hadss/hmrouter\";\n\n@HMLifecycle({ lifecycleName: 'PageDurationLifecycle' })\nexport class PageDurationLifecycle implements IHMLifecycle {\n  public time: number = 0;\n\n  onShown(ctx: HMLifecycleContext): void {\n    this.time = new Date().getTime();\n  }\n\n  onHidden(ctx: HMLifecycleContext): void {\n    const duration = new Date().getTime() - this.time;\n    console.log(`Page ${ctx.navContext?.pathInfo.name} stay ${duration}`);\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\hmrouter_page\\hmrouter\\PageDurationLifecycle.ets", "project_name": "HelloArkUI-main", "id": "120d69fbbb096b3b7c198105ca7b0224e6c93daface2b162e3555891a03afcde"}
{"text": "import { HMRouter, HMRouterMgr } from '@hadss/hmrouter';\nimport { systemDateTime } from '@kit.BasicServicesKit';\n@HMRouter({pageUrl:'MultilevelPage1'})\n@Component\nexport struct  MultilevelPage1{\n  build() {\n    Column(){\n      Button('MultilevelPage2').onClick((_)=>{\n        HMRouterMgr.push({pageUrl:'MultilevelPage2'})\n      })\n    }\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\hmrouter_page\\multilevel_page\\MultilevelPage1.ets", "project_name": "HelloArkUI-main", "id": "a88645bdbc3abb6d66f2fdcbcd3738b64146309f198e8e223b595bf549a56d77"}
{"text": "import { HMRouter, HMRouterMgr } from '@hadss/hmrouter';\nimport { systemDateTime } from '@kit.BasicServicesKit';\n\n\n\n@HMRouter({pageUrl:'MultilevelPage2'})\n@Component\nexport struct  MultilevelPage2{\n  build() {\n    Column(){\n      Button('MultilevelPage3').onClick((_)=>{\n        HMRouterMgr.push({pageUrl:'MultilevelPage3'})\n      })\n    }\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\hmrouter_page\\multilevel_page\\MultilevelPage2.ets", "project_name": "HelloArkUI-main", "id": "a69ef40d16ca30a579de008f173119184983f233bfcfef8b5969a5763719a85f"}
{"text": "export class VNode{\n  text:string=''\n  child?:VNode[]=[]\n  style:Style= new Style()\n}\n\nexport class Style{\n  backgroundColor:string|Resource|Color=Color.Transparent\n  \n  fontSize:number = 16\n  fontColor:string|Resource|Color = Color.Black\n  hrefFontColor:string|Resource|Color = Color.Blue\n  href:string | undefined\n}\nexport function copyStyle(style?:Style):Style{\n  let tmp:Style = new Style()\n  if(style){\n    tmp.backgroundColor = style.backgroundColor\n    tmp.fontSize = style.fontSize\n    tmp.fontColor = style.fontColor\n    tmp.hrefFontColor = style.hrefFontColor\n    tmp.href = style.href\n  }\n\n\n  return tmp;\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\html_parse\\VNode.ets", "project_name": "HelloArkUI-main", "id": "78a881196960e02e5209b4c47611b5e330bccca85a6b4286e68dbce5f03c0cdb"}
{"text": "import { BuilderNode, FrameNode, NodeController, Size, UIContext } from '@kit.ArkUI'\nimport BuildProfile from 'BuildProfile'\n\nclass Params {\n  text: string = \"this is a text\"\n}\n\n@Builder\nfunction buttonBuilder(params: Params) {\n  Column() {\n    Button(params.text)\n      .fontSize(12)\n      .borderRadius(8)\n      .borderWidth(2)\n      .backgroundColor(Color.Orange)\n  }\n}\n\nlet buttonNode: BuilderNode<[Params]> | null = null;\n\nclass MyNodeController extends NodeController {\n  private wrapBuilder: WrappedBuilder<[Params]> = wrapBuilder(buttonBuilder);\n  private isShow: boolean = false;\n\n  constructor(isShow: boolean) {\n    super();\n    this.isShow = isShow;\n  }\n\n  makeNode(uiContext: UIContext): FrameNode | null {\n    if (!this.isShow) {\n      return null;\n    }\n    if (buttonNode == null) {\n      buttonNode = new BuilderNode<[Params]>(uiContext);\n      buttonNode.build(this.wrapBuilder, { text: \"This is a Button\" })\n    }\n    let frameNode = buttonNode?.getFrameNode();\n    return frameNode ? frameNode : null;\n  }\n\n  aboutToResize(size: Size) {\n    console.log(\"aboutToResize width : \" + size.width + \" height : \" + size.height)\n  }\n\n  aboutToAppear() {\n    console.log(\"aboutToAppear\")\n\n  }\n\n  aboutToDisappear() {\n    console.log(\"aboutToDisappear\");\n  }\n\n  onTouchEvent(event: TouchEvent) {\n    console.log(\"onTouchEvent\");\n  }\n\n  toShow() {\n    this.isShow = true;\n    this.rebuild();\n  }\n\n  toHide() {\n    this.isShow = false;\n    this.rebuild();\n  }\n}\n\n@Entry\n@Component\nstruct CustomNode {\n  private myNodeController1: MyNodeController = new MyNodeController(true);\n  private myNodeController2: MyNodeController = new MyNodeController(false);\n\n  build() {\n    Column() {\n      NodeContainer(this.myNodeController1)\n        .width(\"100%\")\n        .height(\"40%\")\n        .backgroundColor(Color.Brown)\n      NodeContainer(this.myNodeController2)\n        .width(\"100%\")\n        .height(\"40%\")\n        .backgroundColor(Color.Gray)\n      Button(\"Change the place of button\")\n        .onClick(() => {\n          \n          \n          \n          this.myNodeController1.toHide();\n          this.myNodeController2.toShow();\n        })\n    }\n    .padding({ left: 35, right: 35, top: 35 })\n    .width(\"100%\")\n    .height(\"100%\")\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\nodeContainer\\CustomNode.ets", "project_name": "HelloArkUI-main", "id": "77aff887b1856c15dbd5269f032dd4d0acde1bac7ec09552dfbf7b7734680b27"}
{"text": "@Observed\nexport class Root{\n  firstLevel:FirstLevel[] = []\n}\n\n@Observed\nexport class FirstLevel{\n\n  contents:SecondLevel[]=[]\n\n}\n\n@Observed\nexport class SecondLevel{\n\n  value:number = 0\n  max:number = 0\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\observed_and_objectLink\\DataModel.ets", "project_name": "HelloArkUI-main", "id": "8a9fbd76db6313f6519e16ff19401090d3ca86f9f53b8ced21121cf41409a421"}
{"text": "import { SlideVerificationView } from './SlideVerificationView';\nimport { SlideVerificationView2 } from './SlideVerificationView2';\n\n@Entry\n@Component\nstruct SlideVerificationPage {\n  build() {\n    Column() {\n\n      SlideVerificationView().backgroundColor(Color.Pink).height(300)\n      Divider().height(20).color(\"#e7e7e7\").vertical(false)\n\n      SlideVerificationView2()\n    }\n    .height('100%')\n    .width('100%')\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\slide_verification\\SlideVerificationPage.ets", "project_name": "HelloArkUI-main", "id": "88c3d3235e9db0e0b978306f38376c60b448c4b5d7a5773c5b27a3053e47a8d1"}
{"text": "import { fileIo } from '@kit.CoreFileKit';\nimport Logger from './Logger';\n\nexport class FileUtil {\n  \n  static createOrOpen(path: string): fileIo.File {\n    let isExist = fileIo.accessSync(path);\n    let file: fileIo.File;\n    if (isExist) {\n      file = fileIo.openSync(path, fileIo.OpenMode.READ_WRITE);\n    } else {\n      file = fileIo.openSync(path, fileIo.OpenMode.READ_WRITE | fileIo.OpenMode.CREATE);\n    }\n    return file;\n  }\n\n  \n  static writeBufferToFile(path: string, arrayBuffer: ArrayBuffer): number {\n    try {\n      let file = fileIo.openSync(path, fileIo.OpenMode.READ_WRITE | fileIo.OpenMode.CREATE);\n      let value = fileIo.writeSync(file.fd, arrayBuffer);\n      fileIo.closeSync(file);\n      return value;\n    } catch (err) {\n      Logger.error('FileUtil', 'writeFile err:' + err);\n      return -1;\n    }\n  }\n\n  \n  static writeStrToFile(path: string, text: string): number {\n    try {\n      let file = fileIo.openSync(path, fileIo.OpenMode.READ_WRITE | fileIo.OpenMode.CREATE);\n      let value = fileIo.writeSync(file.fd, text);\n      fileIo.closeSync(file);\n      return value;\n    } catch (err) {\n      Logger.error('FileUtil', 'writeFile err:' + err);\n      return -1;\n    }\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\video_recorder\\FileUtil.ets", "project_name": "HelloArkUI-main", "id": "247f4f240643a17a36ffcf997972dd44be3c94ba8347f5927f93cf62bad08fb4"}
{"text": "export class RouterParams {\n  text: string;\n  data: string;\n\n  constructor(str: string, data: string) {\n    this.text = str;\n    this.data = data;\n  }\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\pages\\playground\\video_recorder\\RouterParams.ets", "project_name": "HelloArkUI-main", "id": "cb76cb668087af636dd3d74b3e6348ebbc3311a0e68849abafd8a3fe9a0ad7cd"}
{"text": "import { hilog } from \"@kit.PerformanceAnalysisKit\";\n\n\nexport class JSONUtils{\n  static   fromJSON<T>(str:string):T{\n\n    let result: Record<string, Object> = {};\n    let json: Record<string, Object> = JSON.parse(str);\n\n    for (let key of Object.entries(json)) {\n\n\n      hilog.error(0x01,'JSONUtils',`${JSON.stringify(key)}`)\n    }\n    return result as T\n\n\n  }\n}\n\n", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\util\\JSONParase.ets", "project_name": "HelloArkUI-main", "id": "a83c694c541a5867b20a2df612bec026b68e94a485457b6d2bf4edcda3036c45"}
{"text": "import { ErrorEvent, MessageEvents, ThreadWorkerGlobalScope, worker } from '@kit.ArkTS';\n\nconst workerPort: ThreadWorkerGlobalScope = worker.workerPort;\n\n\nworkerPort.onmessage = (e: MessageEvents) => {\n}\n\n\nworkerPort.onmessageerror = (e: MessageEvents) => {\n}\n\n\nworkerPort.onerror = (e: ErrorEvent) => {\n}", "path": "HelloArkUI-main\\entry\\src\\main\\ets\\workers\\CameraWorker.ets", "project_name": "HelloArkUI-main", "id": "f3298d9e12c2fbafb1cf2f83a11ec61918e3259dc2673b6bbb8743f5d3fa7098"}
{"text": "import hilog from '@ohos.hilog';\n\n@Entry\n@Component\nstruct Index {\n  @State message: string = 'this is a feature hap';\n\n  aboutToAppear(): void {\n    hilog.error(0x01,'FeatureHapAbility','FeatureHapAbility index aboutToAppear')\n  }\n\n  build() {\n    Row() {\n      Text(this.message)\n        .fontColor(Color.Pink)\n        .fontSize(24)\n        .fontWeight(FontWeight.Bold)\n        .onClick(() => {\n          this.message = 'Welcome';\n        })\n    }\n    .height('100%')\n    .width('100%')\n  }\n}", "path": "HelloArkUI-main\\FeatureHap\\src\\main\\ets\\pages\\Index.ets", "project_name": "HelloArkUI-main", "id": "9652628e01ced43136184d7936a72b9916f300050e372e250dcda1250a47645a"}
{"text": "import jwt from \"@ohos/jsonwebtoken\";\n\nexport class Token {\n  private static TOKEN_KEY = 'token';\n\n  static init() {\n    PersistentStorage.PersistProp(this.TOKEN_KEY, '');\n  }\n  \n  static getToken(): string {\n    return AppStorage.Get<string>(this.TOKEN_KEY) || '';\n  }\n\n  static getUserId(): string {\n    return jwt.decode(this.getToken(),{ complete: true }).payload['userId']\n  }\n\n  \n  static saveToken(token: string): boolean {\n\n    try {\n     return AppStorage.Set(this.TOKEN_KEY, token);\n    } catch (error) {\n      console.error('Failed to save token:', error);\n      return false;\n    }\n  }\n\n}\n", "path": "Honey-main\\app\\entry\\src\\main\\ets\\commom\\Token.ets", "project_name": "Honey-main", "id": "38b0140740f41f07f386d01110bf5e8e016574a6fa231987dd7a3462e617e248"}
{"text": "export interface PurchaseData {\n  type: number;\n  jwsPurchaseOrder?: string;\n  jwsSubscriptionStatus?: string;\n}\n\nexport interface PurchaseOrderPayload {\n  productId: string;\n  productType: string;\n  purchaseOrderId: string;\n  purchaseToken: string;\n  finishStatus?: FinishStatus;\n}\n\nexport enum FinishStatus {\n  FINISHED = '1',\n  UNFINISHED = '2'\n}\n\nexport interface SubGroupStatusPayload {\n  environment: string;\n  applicationId: string;\n  packageName: string;\n  subGroupId: string;\n  lastSubscriptionStatus?: SubscriptionStatus;\n  historySubscriptionStatusList?: SubscriptionStatus[];\n}\n\nexport interface SubscriptionStatus {\n  subGroupGenerationId: string;\n  subscriptionId: string;\n  purchaseToken: string;\n  status: string;\n  expiresTime: number;\n  lastPurchaseOrder?: PurchaseOrderPayload;\n  renewalInfo?: SubRenewalInfo;\n}\n\ninterface SubRenewalInfo {\n  productId: string;\n}\n\nexport enum SubStatus {\n  ACTIVE = '1',\n  EXPIRED = '2',\n  CHARGE_ATTEMPT = '3',\n  REVOKED = '5'\n}", "path": "iapkit-sample-clientdemo-arkts-master\\entry\\src\\main\\ets\\common\\IapDataModel.ets", "project_name": "iapkit-sample-clientdemo-arkts-master", "id": "ac12be8ca0a8a56c5706fe8a1658e01f32727043957e2702ff4b25eb81dece6a"}
{"text": "import { util } from '@kit.ArkTS';\nimport Logger from './Logger';\n\nconst TAG: string = 'JWSUtil';\nconst BASE64_PADDING_MOD: number = 4;\nconst BASE64_PADDING_INVALID: number = 1;\n\nexport class JWSUtil {\n  public static decodeJwsObj(data: string): string {\n    const jws: string[] = data.split('.');\n    let result: string = '';\n    if (jws.length < 3) {\n      return result;\n    }\n    try {\n      const textDecoder = util.TextDecoder.create('utf-8', { ignoreBOM: true });\n      const base64 = new util.Base64Helper();\n      let payload = jws[1];\n      const pad = payload.length % BASE64_PADDING_MOD;\n      if (pad) {\n        if (pad === BASE64_PADDING_INVALID) {\n          throw new Error('InvalidLengthError: Input base64 string is the wrong length to determine padding');\n        }\n        payload += new Array(BASE64_PADDING_MOD - pad + 1).join('=');\n      }\n      result = textDecoder.decodeToString(base64.decodeSync(payload));\n    } catch (err) {\n      Logger.error(TAG, `decodeJwsObj parse err: ${JSON.stringify(err)}`);\n    }\n    return result;\n  }\n}", "path": "iapkit-sample-clientdemo-arkts-master\\entry\\src\\main\\ets\\common\\JWSUtil.ets", "project_name": "iapkit-sample-clientdemo-arkts-master", "id": "c966dbcc92105fffa37e2adfd0b4b555363db5b795850bd95ccc93e44259dc9d"}
{"text": "import { hilog } from '@kit.PerformanceAnalysisKit';\n\nexport default class Logger {\n  private static IAP_DEMO_PREFIX: string = '[IAP_Demo]';\n\n  private static IAP_LOG_DOMIN = 0x0fff;\n\n  \n  private static TWO_PLACEHOLDER_FORMAT: string = '%{public}s    %{public}s';\n\n  public static info(tag: string, log: string) {\n    hilog.info(Logger.IAP_LOG_DOMIN, Logger.IAP_DEMO_PREFIX, Logger.TWO_PLACEHOLDER_FORMAT, tag, log);\n  }\n\n  public static debug(tag: string, log: string) {\n    hilog.debug(Logger.IAP_LOG_DOMIN, Logger.IAP_DEMO_PREFIX, Logger.TWO_PLACEHOLDER_FORMAT, tag, log);\n  }\n\n  public static warn(tag: string, log: string) {\n    hilog.warn(Logger.IAP_LOG_DOMIN, Logger.IAP_DEMO_PREFIX, Logger.TWO_PLACEHOLDER_FORMAT, tag, log);\n  }\n\n  public static error(tag: string, log: string) {\n    hilog.error(Logger.IAP_LOG_DOMIN, Logger.IAP_DEMO_PREFIX, Logger.TWO_PLACEHOLDER_FORMAT, tag, log);\n  }\n\n}\n", "path": "iapkit-sample-clientdemo-arkts-master\\entry\\src\\main\\ets\\common\\Logger.ets", "project_name": "iapkit-sample-clientdemo-arkts-master", "id": "6197db23ba82d4aaf91175a6a1c6b55a72d4b4adc035ae55347cb06e7b3a02e3"}
{"text": "import { router } from '@kit.ArkUI'\n\n@Entry\n@Component\nstruct EntryPage {\n  aboutToAppear() {\n  }\n\n  build() {\n    Column() {\n      Column() {\n      }\n      .backgroundColor('#F1F3F5')\n      .width(\"100%\")\n      .height(px2vp(136))\n\n      Column() {\n        CustomButton({ mText: 'Consumables', mPageUrl: 'pages/ConsumablesPage' })\n\n        CustomButton({ mText: 'NonConsumables', mPageUrl: 'pages/NonConsumablesPage' })\n\n        CustomButton({ mText: 'Subscriptions', mPageUrl: 'pages/SubscriptionsPage' })\n      }\n      .padding({ left: 24, right: 24 })\n      .width('100%')\n      .height('100%')\n      .backgroundColor('#F1F3F5')\n    }\n  }\n}\n\n@Component\nexport struct CustomButton {\n  private mText: string = ''\n  private mPageUrl: string = ''\n  private mOnClick: ((event?: object) => void) | null = null\n\n  build() {\n    Button() {\n      Text(this.mText)\n        .fontSize(18)\n        .fontWeight(FontWeight.Bold)\n    }\n    .id(this.mText)\n    .type(ButtonType.Capsule)\n    .margin({ top: 12 })\n    .width('100%')\n    .height(40)\n    .backgroundColor('#0D9FFB')\n    .onClick((event) => {\n      if (this.mOnClick) {\n        this.mOnClick(event);\n        return;\n      }\n      router.pushUrl({\n        url: this.mPageUrl\n      })\n    })\n  }\n}", "path": "iapkit-sample-clientdemo-arkts-master\\entry\\src\\main\\ets\\pages\\EntryPage.ets", "project_name": "iapkit-sample-clientdemo-arkts-master", "id": "f780bf8baa3cc528c2b202ea1fde5dc8885b25060d02cdff89345b6f4f62f285"}
{"text": "import { CustomIndicatorBuilder, IndicatorItemBuilder } from \"../utils/common\"\n\nexport enum IndicatorType {\n  DOT, \n  DIGITAL, \n  NONE \n}\n\n\n\n@Observed\nexport class IndicatorStyle {\n  \n  alignRules?: AlignRuleOption\n  \n  margin?: Margin | Length | LocalizedMargin\n  \n  customIndicatorBuilder?: CustomIndicatorBuilder\n}\n\n\n@Observed\nexport class DigitalIndicatorStyle extends IndicatorStyle {\n  text?: ResourceStr\n  fontSize?: Length\n  fontColor?: ResourceColor\n  fontWeight?: FontWeight\n  fontStyle?: FontStyle\n}\n\n\n@Observed\nexport class DotIndicatorStyle extends IndicatorStyle {\n  \n  indicatorWidth?: Length\n  \n  dotWidth?: Length\n  \n  dotHeight?: Length\n  \n  dotSpace?: number | string\n  \n  dotRadius?: Length\n  \n  dotActiveColor?: ResourceColor\n  \n  dotInactiveColor?: ResourceColor\n  \n  customActiveBuilder?: IndicatorItemBuilder\n  \n  customInactiveBuilder?: IndicatorItemBuilder\n}", "path": "imagePreview-master\\ImagePreview\\src\\main\\ets\\model\\IndicatorStyle.ets", "project_name": "imagePreview-master", "id": "d13d5ce02b50b4fb938126f7c5509407452b9d93b402d664de70c34e6fe5785a"}
{"text": "import { ImageType, ImgParserCallBack } from \"./common\";\n\n@ObservedV2\nexport class ImageDataSource implements IDataSource {\n  @Trace private data: ImageType[]\n  private listeners: DataChangeListener[] = [];\n\n  constructor(data?: ImageType[]) {\n    this.data = data ?? []\n  }\n\n  totalCount(): number {\n    return this.data.length\n  }\n\n  getData(index: number): ImageType {\n    return this.data[index]\n  }\n\n  addData(images: ImageType) {\n    this.data.push(images)\n    this.notifyDataAdd(this.totalCount() - 1)\n  }\n\n  setData(images: ImageType[]) {\n    this.data = images\n    this.notifyDataReload()\n  }\n\n  registerDataChangeListener(listener: DataChangeListener): void {\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n    }\n  }\n\n  unregisterDataChangeListener(listener: DataChangeListener): void {\n    const pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n    }\n  }\n\n\n  removeData(index: number) {\n    this.data.splice(index, 1)\n    this.notifyDataReload()\n  }\n\n  \n  notifyDataChange(index: number): void {\n    this.listeners.forEach(listener => {\n      listener.onDataChange(index);\n    })\n  }\n\n  \n  notifyDataReload(): void {\n    this.listeners.forEach(listener => {\n      listener.onDataReloaded();\n    })\n  }\n\n  notifyDataAdd(index: number) {\n    this.listeners.forEach(listener => {\n      listener.onDataAdd(index)\n    })\n  }\n\n  notifyDataRemove(index: number) {\n    this.listeners.forEach(listener => {\n      listener.onDataDelete(index)\n    })\n  }\n}", "path": "imagePreview-master\\ImagePreview\\src\\main\\ets\\utils\\ImageDataSource.ets", "project_name": "imagePreview-master", "id": "a80bc69f10d1398cec711ee823000f22d30ae40fb5b4491ab2c21cbd50468e14"}
{"text": "import { BasicConstant } from '../constants/BasicConstant'\n\nexport class HdListController {\n  loaded: () => void = () => {\n  }\n  finished: () => void = () => {\n  }\n  refreshed: () => void = () => {\n  }\n  reload: () => void = () => {\n  }\n}\n\n@Component\nexport struct HdList {\n  @State\n  refreshing: boolean = false\n  @State\n  finished: boolean = false\n  @State\n  loading: boolean = false\n  \n  lw: number = 0\n\n  @Builder\n  defaultListContent() {\n  }\n\n  @BuilderParam\n  listContent: () => void = this.defaultListContent\n  \n  onLoad: () => void = () => {\n  }\n  onRefresh: () => void = () => {\n  }\n  \n  controller: HdListController = new HdListController()\n  scroller: Scroller = new Scroller()\n\n  aboutToAppear() {\n    if (this.controller) {\n      this.controller.loaded = () => this.loading = false\n      this.controller.finished = () => this.finished = true\n      this.controller.refreshed = () => this.refreshing = false\n      this.controller.reload = () => {\n        this.finished = false\n        this.refreshing = true\n      }\n    }\n  }\n\n  @Builder\n  loadMoreBuilder() {\n    ListItem() {\n      if (this.finished) {\n        Row() {\n          Text($r('app.string.hd_list_finished'))\n            .fontColor(Color.Gray)\n            .fontSize($r('app.float.hd_list_load_font'))\n        }\n        .height($r('app.float.hd_list_load_height'))\n        .width('100%')\n        .justifyContent(FlexAlign.Center)\n      } else if (this.loading && !this.finished) {\n        Row() {\n          LoadingProgress()\n            .width($r('app.float.hd_list_load_icon'))\n          Text($r('app.string.hd_list_loading'))\n            .fontColor(Color.Gray)\n            .fontSize($r('app.float.hd_list_load_font'))\n        }\n        .height($r('app.float.hd_list_load_height'))\n        .width('100%')\n        .justifyContent(FlexAlign.Center)\n      }\n    }\n    .height($r('app.float.hd_list_load_height'))\n  }\n\n  build() {\n    Refresh({ refreshing: $$this.refreshing }) {\n      List({ scroller: this.scroller }) {\n        this.listContent()\n        this.loadMoreBuilder()\n      }\n      .width('100%')\n      .height('100%')\n      .padding({ left: BasicConstant.SPACE_LG, right: BasicConstant.SPACE_LG })\n      .divider({\n        strokeWidth: $r('app.float.common_border_width'),\n        color: $r('app.color.common_gray_border')\n      })\n      .onReachEnd(() => {\n        if (this.loading || this.refreshing || this.finished) {\n          return;\n        }\n        this.loading = true\n        this.onLoad()\n      })\n      .scrollBar(BarState.Off)\n      .nestedScroll({\n        scrollForward: NestedScrollMode.PARENT_FIRST,\n        scrollBackward: NestedScrollMode.SELF_FIRST\n      })\n      .edgeEffect(EdgeEffect.None)\n    }\n    .width('100%')\n    .height('100%')\n    .layoutWeight(this.lw)\n    .onRefreshing(() => {\n      if (this.loading) {\n        return;\n      }\n      this.finished = false\n      this.onRefresh()\n      \n    })\n  }\n}\n", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdList.ets", "project_name": "interview-handbook-project-next", "id": "b942f9012675e3b5bdd02ba93717f0a5f352d982f11822458acae6c01bdeb06e"}
{"text": "@CustomDialog\nexport struct HdLoadingDialog {\n  @State\n  message: string = ''\n  controller: CustomDialogController\n\n  build() {\n    Column({ space: 10 }) {\n      LoadingProgress()\n        .width(48)\n        .height(48)\n        .color('#ffffff')\n      if (this.message) {\n        Text(this.message)\n          .fontSize(14)\n          .fontColor('#ffffff')\n      }\n    }\n    .justifyContent(FlexAlign.Center)\n    .width(120)\n    .height(120)\n    .backgroundColor('rgba(0,0,0,0.6)')\n    .borderRadius(16)\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdLoadingDialog.ets", "project_name": "interview-handbook-project-next", "id": "bd05d12c41dd5a7a4525d5a673d520f935a3667210b747c685cf9dd8d1ba2450"}
{"text": "import { router } from '@kit.ArkUI'\n\n@Builder\nfunction defaultBuilder(): void {\n\n}\n\n@Component\nexport struct HdNav {\n  @StorageProp('topHeight')\n  topHeight: number = 0\n  @Prop\n  title: string = ''\n  @Prop\n  hasBorder: boolean = false\n  @Prop\n  leftIcon: ResourceStr = $r('app.media.ic_common_back')\n  @Prop\n  rightIcon: ResourceStr = $r('sys.media.ohos_ic_public_more')\n  @Prop\n  showRightIcon: boolean = true\n  @BuilderParam\n  titleBuilder: () => void = defaultBuilder\n  @BuilderParam\n  menuBuilder: () => void = defaultBuilder\n\n  build() {\n    Row({ space: 16 }) {\n      Image(this.leftIcon)\n        .size({ width: 24, height: 24 })\n        .onClick(() => router.back())\n        .fillColor($r('app.color.black'))\n      Row() {\n        if (this.title) {\n          Text(this.title)\n            .fontWeight(600)\n            .layoutWeight(1)\n            .textAlign(TextAlign.Center)\n            .fontSize(18)\n            .maxLines(1)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n        } else if (this.titleBuilder) {\n          this.titleBuilder()\n        }\n      }\n      .height(56)\n      .layoutWeight(1)\n\n      if (this.showRightIcon) {\n        Image(this.rightIcon)\n          .size({ width: 24, height: 24 })\n          .objectFit(ImageFit.Contain)\n          .bindMenu(this.menuBuilder)\n      } else {\n        Blank()\n          .width(24)\n      }\n    }\n\n    .padding({ left: 16, right: 16, top: this.topHeight })\n    .height(56 + this.topHeight)\n    .width('100%')\n    .border({\n      width: { bottom: this.hasBorder ? $r('app.float.common_border_width') : 0 },\n      color: $r('app.color.common_gray_bg')\n    })\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdNav.ets", "project_name": "interview-handbook-project-next", "id": "63235aeff8fc259b3cae40f4ed58f06b49b34fb3704baaf0418d5f3a711203f2"}
{"text": "import { BasicConstant } from '../constants/BasicConstant'\n\n@Component\nexport struct HdSearch {\n  @Prop\n  val: string = ''\n  @State\n  readonlyMode: boolean = true\n  ph: string = ''\n  bg: ResourceStr = ''\n  color: string = ''\n  onSubmit: () => void = () => {\n  }\n  onChange: (val: string) => void = (val: string) => {\n  }\n\n  build() {\n    Row() {\n      if (this.readonlyMode) {\n        Row({ space: BasicConstant.SPACE_SM }) {\n          Image($r(\"app.media.ic_common_search\"))\n            .width($r('app.float.hd_search_icon_size'))\n            .aspectRatio(1)\n            .fillColor(this.color || $r('app.color.common_gray_02'))\n          Text(this.ph || $r('app.string.hd_search_placeholder'))\n            .fontColor(this.color || $r('app.color.common_gray_02'))\n            .fontSize($r('app.float.common_font14'))\n        }\n        .height($r('app.float.hd_search_height'))\n        .width('100%')\n        .backgroundColor(this.bg || $r('app.color.common_gray_border'))\n        .borderRadius($r('app.float.hd_search_radius'))\n        .justifyContent(FlexAlign.Center)\n      } else {\n        Search({\n          placeholder: this.ph || $r('app.string.hd_search_placeholder'),\n          value: this.val\n        })\n          .searchIcon({\n            size: $r('app.float.hd_search_icon_size'),\n            src: $r(\"app.media.ic_common_search\"),\n            color: $r('app.color.common_gray_02')\n          })\n          .textFont({ size: $r('app.float.common_font14') })\n          .width('100%')\n          .padding(0)\n          .margin(0)\n          .backgroundColor(this.bg || $r('app.color.common_gray_border'))\n          .placeholderColor($r('app.color.common_gray_02'))\n          .placeholderFont({ size: $r('app.float.common_font14') })\n          .height($r('app.float.hd_search_height'))\n          .onSubmit(() => {\n            this.onSubmit && this.onSubmit()\n          })\n          .onChange((val) => {\n            this.onChange && this.onChange(val)\n          })\n      }\n    }\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdSearch.ets", "project_name": "interview-handbook-project-next", "id": "5f3a0f5bd82d33e8004e2daaa74e1ee77d20da7696b131b8291c04b3c8900278"}
{"text": "export enum HdSkeletonType {\n  BASE,\n  AVATAR,\n  IMAGE\n}\n\n@Builder\nfunction defaultBuilder() {\n\n}\n\n@Component\nexport struct HdSkeleton {\n  @BuilderParam\n  default: () => void = defaultBuilder\n  \n  @State\n  opacityValue: number = 1\n  \n  rows: number = 0\n  \n  type: HdSkeletonType = HdSkeletonType.BASE\n  \n  avatarSize: number = 40\n  \n  imageSize: number = 100\n\n  build() {\n    Row({ space: 15 }) {\n      if (this.default) {\n        this.default()\n      } else {\n        if (this.type === HdSkeletonType.AVATAR) {\n          HdSkeletonAvatar({ widthValue: this.avatarSize })\n            .alignSelf(ItemAlign.Start)\n        }\n        if (this.type === HdSkeletonType.IMAGE) {\n          HdSkeletonImage({ widthValue: this.imageSize })\n            .alignSelf(ItemAlign.Start)\n        }\n        Column() {\n          HdSkeletonRow({ widthValue: '50%' })\n            .margin({ top: this.type === HdSkeletonType.AVATAR ? 10 : 0 })\n          ForEach(new Array(this.rows).fill(0), (_: number, i) => {\n            HdSkeletonRow({ widthValue: i < this.rows - 1 ? '100%' : '75%' })\n              .margin({ top: 10 })\n          })\n        }\n        .alignItems(HorizontalAlign.Start)\n        .layoutWeight(1)\n        .alignSelf(ItemAlign.Start)\n      }\n    }\n    .opacity(this.opacityValue)\n    .animation({\n      duration: 600,\n      playMode: PlayMode.Alternate,\n      iterations: -1,\n      curve: Curve.EaseInOut\n    })\n    .onAppear(() => {\n      this.opacityValue = 0.5\n    })\n  }\n}\n\n\n@Component\nexport struct HdSkeletonRow {\n  @Prop\n  widthValue: Length = '100%'\n\n  build() {\n    Text()\n      .height(16)\n      .width(this.widthValue)\n      .borderRadius(2)\n      .backgroundColor($r('app.color.common_gray_bg'))\n  }\n}\n\n@Component\nexport struct HdSkeletonAvatar {\n  @Prop\n  widthValue: number = 40\n\n  build() {\n    Text()\n      .width(this.widthValue)\n      .aspectRatio(1)\n      .borderRadius(this.widthValue / 2)\n      .backgroundColor($r('app.color.common_gray_bg'))\n  }\n}\n\n@Component\nexport struct HdSkeletonImage {\n  @Prop\n  widthValue: number = 100\n\n  build() {\n    Row() {\n      Image($r('app.media.ic_public_image'))\n        .width(this.widthValue / 2)\n        .aspectRatio(1)\n        .fillColor($r('app.color.common_gray_border'))\n    }\n    .justifyContent(FlexAlign.Center)\n    .width(this.widthValue)\n    .aspectRatio(1)\n    .borderRadius(2)\n    .backgroundColor($r('app.color.common_gray_bg'))\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdSkeleton.ets", "project_name": "interview-handbook-project-next", "id": "0e02d4dcf5a37ed31b58ecf2760c370ee9ae568507554b3f88e451e65556fc1f"}
{"text": "export interface HdTabItem {\n  name: string\n  value?: string | number\n}\n\n@Component\nexport struct HdTab {\n  @Prop\n  activeIndex: number = 0\n  @Prop\n  tabConfig: HdTabItem[] = []\n  @State\n  left: number = 0\n  @Prop\n  lineWidth: number = 20\n  @Prop\n  gutter: number = 20\n  \n  onTabClick?: (tab: HdTabItem, index: number) => void\n  onTabChange?: (tab: HdTabItem, index: number) => void\n\n  \n  setLineLeft(area: Area) {\n    const width = area.width as number\n    const x = area.position.x as number\n    this.left = x + (width - this.lineWidth) / 2\n  }\n\n  @Builder\n  TabBuilder(tab: HdTabItem, index: number) {\n    Text(tab.name)\n      .fontSize(15)\n      .fontColor(this.activeIndex === index ? $r('app.color.black') : '#979797')\n      .animation({\n        duration: 300\n      })\n      .onClick((e) => {\n        if (this.activeIndex !== index) {\n          this.setLineLeft(e.target.area)\n          this.activeIndex = index\n          this.onTabChange && this.onTabChange(tab, index)\n        }\n        this.onTabClick && this.onTabClick(tab, index)\n      })\n      .onAreaChange((_o, n) => {\n        if (this.activeIndex === index) {\n          this.setLineLeft(n)\n        }\n      })\n  }\n\n  build() {\n    Row() {\n      Row({ space: this.gutter }) {\n        ForEach(this.tabConfig, (item: HdTabItem, index) => {\n          this.TabBuilder(item, index)\n        })\n      }\n      .width('100%')\n      .padding({ left: this.gutter, right: this.gutter })\n      .height(40)\n      .border({\n        width: { bottom: $r('app.float.common_border_width') },\n        color: $r('app.color.common_gray_border')\n      })\n\n      Text()\n        .width(this.lineWidth)\n        .height(2)\n        .backgroundColor($r('app.color.black'))\n        .position({ x: this.left, y: 38 })\n        .animation({\n          duration: 300\n        })\n    }\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdTab.ets", "project_name": "interview-handbook-project-next", "id": "a6d16f47d4195d1923f03383b5ef67a03b09a337d68f8dd3be8c1b75cf7b000f"}
{"text": "export interface Tag {\n  text: ResourceStr\n  color: ResourceColor\n}\n\n@Component\nexport struct HdTag {\n  text: string = ''\n  difficulty: number = 1\n\n  getTag(): Tag {\n    if (this.difficulty === 3 || this.difficulty === 4) {\n      return { text: $r('app.string.hd_tag_general'), color: $r('app.color.common_blue') }\n    } else if (this.difficulty === 5) {\n      return { text: $r('app.string.hd_tag_difficult'), color: $r('app.color.common_main_color') }\n    }\n    return { text: this.text ? this.text : $r('app.string.hd_tag_simple'), color: $r('app.color.common_green') }\n  }\n\n  build() {\n    Text(this.getTag().text)\n      .fontColor(this.getTag().color)\n      .fontSize($r('app.float.common_font10'))\n      .padding({ left: $r('app.float.common_space4'), right: $r('app.float.common_space4')})\n      .constraintSize({ minWidth: $r('app.float.hd_tag_width') })\n      .height($r('app.float.hd_tag_height'))\n      .backgroundColor($r('app.color.common_gray_bg'))\n      .borderRadius($r('app.float.hd_tag_radius'))\n      .textAlign(TextAlign.Center)\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdTag.ets", "project_name": "interview-handbook-project-next", "id": "6748fe117284de48af397da3ee23fd7cad378ad5e2e322cafebf1d5a4ea9af9b"}
{"text": "import { webview } from '@kit.ArkWeb'\nimport { logger } from '../utils/logger'\n\n@Component\nexport struct HdWeb {\n  layoutMode: WebLayoutMode = WebLayoutMode.NONE\n  src: ResourceStr = $rawfile('detail.html')\n  onLoad: () => void = () => {\n  }\n  controller: webview.WebviewController = new webview.WebviewController()\n\n  build() {\n    Web({ src: this.src, controller: this.controller })\n      .javaScriptAccess(true)\n      .onPageEnd(() => {\n        this.onLoad()\n      })\n      .onErrorReceive(event => {\n        logger.error(event!.error.getErrorInfo())\n      })\n      .layoutMode(this.layoutMode)\n      .layoutWeight(1)\n  }\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\components\\HdWeb.ets", "project_name": "interview-handbook-project-next", "id": "ffbaa11f2929ede6a963f690c28e8ffe4d287615a4f48e9f3f8834716665aa0a"}
{"text": "export class BasicConstant {\n  static readonly SPACE_SM = 4\n  static readonly SPACE_MD = 10\n  static readonly SPACE_LG = 16\n}", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\constants\\BasicConstant.ets", "project_name": "interview-handbook-project-next", "id": "0ede6ca0a1f82926393a949ec82bdd519ce798b068d20025aeba2688cb92f49e"}
{"text": "import { preferences } from '@kit.ArkData'\nimport { router } from '@kit.ArkUI'\n\nexport interface HdUser {\n  id: string\n  username: string\n  avatar: string\n  token: string\n  refreshToken: string\n  nickName?: string\n  totalTime?: number\n  clockinNumbers?: number\n}\n\nexport const AUTH_STORE_KEY = 'authStore'\n\nclass AuthStore {\n  store: preferences.Preferences | null = null\n\n  getStore() {\n    if (!this.store) {\n      this.store = preferences.getPreferencesSync(getContext(), { name: AUTH_STORE_KEY })\n    }\n    return this.store\n  }\n\n  async setUser(user: HdUser) {\n    AppStorage.setOrCreate('user', user)\n    await this.getStore().put(AUTH_STORE_KEY, JSON.stringify(user))\n    await this.getStore().flush()\n  }\n\n  async delUser() {\n    AppStorage.setOrCreate('user', {})\n    await this.getStore().put(AUTH_STORE_KEY, '{}')\n    await this.getStore().flush()\n  }\n\n  initUser() {\n    const json = this.getStore().getSync(AUTH_STORE_KEY, '{}') as string\n    AppStorage.setOrCreate('user', JSON.parse(json))\n  }\n\n  getUser() {\n    return AppStorage.get<HdUser>('user') || {} as HdUser\n  }\n\n  checkAuth(options: router.RouterOptions | Function) {\n    if (this.getUser().token) {\n      if (typeof options === 'function') {\n        options()\n      } else {\n        router.pushUrl(options)\n      }\n    } else {\n      if (typeof options === 'function') {\n        router.pushUrl({\n          url: 'pages/LoginPage',\n        })\n      } else {\n        const params = options.params as Record<string, string> || {}\n        params.return_path = options.url\n        router.pushUrl({\n          url: 'pages/LoginPage',\n          params: params\n        })\n      }\n    }\n  }\n}\n\nexport const authStore = new AuthStore()", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\utils\\auth.ets", "project_name": "interview-handbook-project-next", "id": "1545bdbd3f5901500fd8289f73e37e3ab2eaa2f0ec0beff9dd4bb8e2dd3a698b"}
{"text": "import hilog from '@ohos.hilog'\n\nconst DOMAIN = 0xFF09\nconst PREFIX = 'PASS_INTERVIEW_LOGGER'\nconst FORMAT = '%{public}s, %{public}s'\n\nclass Logger {\n  debug(...args: string[]) {\n    hilog.debug(DOMAIN, PREFIX, FORMAT, args)\n  }\n\n  info(...args: string[]) {\n    hilog.info(DOMAIN, PREFIX, FORMAT, args)\n  }\n\n  warn(...args: string[]) {\n    hilog.warn(DOMAIN, PREFIX, FORMAT, args)\n  }\n\n  error(...args: string[]) {\n    hilog.error(DOMAIN, PREFIX, FORMAT, args)\n  }\n\n  fatal(...args: string[]) {\n    hilog.fatal(DOMAIN, PREFIX, FORMAT, args)\n  }\n\n  isLoggable(level: hilog.LogLevel) {\n    hilog.isLoggable(DOMAIN, PREFIX, level)\n  }\n}\n\nexport const logger = new Logger()", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\utils\\logger.ets", "project_name": "interview-handbook-project-next", "id": "77a8ec1a88639ae21d043a4b4445c21e2db30bf9fbfb27b2e92f7b9239d25a4b"}
{"text": "import { ConfigurationConstant } from '@kit.AbilityKit'\nimport { window } from '@kit.ArkUI'\nimport { logger } from './logger'\n\nclass ThemeManager {\n  windowStage: window.Window | null = null\n\n  async getWindowStage() {\n    if (this.windowStage) {\n      return this.windowStage\n    } else {\n      return await window.getLastWindow(getContext())\n    }\n  }\n\n  initThemeSetting() {\n    const app = getContext().getApplicationContext()\n    app.on('environment', {\n      onConfigurationUpdated: (config) => {\n        logger.info('===', JSON.stringify(config))\n        if (config.colorMode === ConfigurationConstant.ColorMode.COLOR_MODE_LIGHT) {\n          this.settingStatusBarBlack()\n        }\n        if (config.colorMode === ConfigurationConstant.ColorMode.COLOR_MODE_DARK) {\n          this.settingStatusBarWhite()\n        }\n        if (config.colorMode === ConfigurationConstant.ColorMode.COLOR_MODE_NOT_SET) {\n          \n        }\n      },\n      onMemoryLevel: (_level) => {\n        \n      }\n    })\n    \n    PersistentStorage.persistProp<ConfigurationConstant.ColorMode>('appColorMode',\n      ConfigurationConstant.ColorMode.COLOR_MODE_LIGHT)\n    const appColorMode = AppStorage.get<ConfigurationConstant.ColorMode>('appColorMode')\n    app.setColorMode(appColorMode)\n  }\n\n  settingStatusBarWhite() {\n    this.settingStatusBar({ statusBarContentColor: '#FFFFFF' })\n  }\n\n  settingStatusBarBlack() {\n    this.settingStatusBar({ statusBarContentColor: '#000000' })\n  }\n\n  settingStatusBar(config: window.SystemBarProperties) {\n    this.getWindowStage()\n      .then((windowStage: window.Window) => {\n        windowStage.setWindowSystemBarProperties(config)\n      })\n  }\n\n  enableFullScreen() {\n    this.getWindowStage()\n      .then((windowStage: window.Window) => {\n        windowStage.setWindowLayoutFullScreen(true)\n        const topArea = windowStage.getWindowAvoidArea(window.AvoidAreaType.TYPE_SYSTEM)\n        AppStorage.setOrCreate('topHeight', px2vp(topArea.topRect.height))\n        const bottomArea = windowStage.getWindowAvoidArea(window.AvoidAreaType.TYPE_NAVIGATION_INDICATOR)\n        AppStorage.setOrCreate('bottomHeight', px2vp(bottomArea.bottomRect.height))\n      })\n  }\n\n  disableFullScreen() {\n    this.getWindowStage()\n      .then((windowStage: window.Window) => {\n        windowStage.setWindowLayoutFullScreen(false)\n        AppStorage.setOrCreate('topHeight', 0)\n        AppStorage.setOrCreate('bottomHeight', 0)\n      })\n  }\n}\n\nexport const themeManager = new ThemeManager()", "path": "interview-handbook-project-next\\commons\\basic\\src\\main\\ets\\utils\\themeManager.ets", "project_name": "interview-handbook-project-next", "id": "f030c7c007d028007f13dd6f7b11048bee608c2c08f240aaa772c599fe05e04f"}
{"text": "@Component\nexport struct HomeQuestionCardComp {\n  linearColor: LinerColorType = LinerColorType.GREEN\n  title: string = ''\n  subTitle: string = ''\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.title)\n          .fontSize(14)\n          .padding({ top: 8, bottom: 8 })\n          .fontColor(Color.White)\n        Text(this.subTitle)\n          .fontSize(10)\n          .fontColor(Color.White)\n      }\n      .alignItems(HorizontalAlign.Start)\n      .layoutWeight(1)\n      .alignSelf(ItemAlign.Start)\n      .padding({ right: 8 })\n\n      Image(IMAGES[this.linearColor])\n        .width(50)\n        .alignSelf(ItemAlign.End)\n    }\n    .padding(8)\n    .width(140)\n    .height(100)\n    .linearGradient({\n      colors: LINEAR_COLOR[this.linearColor]\n    })\n    .borderRadius(8)\n  }\n}\n\nenum LinerColorType {\n  GREEN,\n  BLUE,\n  YELLOW,\n  ORANGE,\n}\n\nconst LINEAR_COLOR: [ResourceColor, number][][]  = [\n  [['#026bf1', 0], ['#52d3ff', 1]],\n  [['#fe6544', 0], ['#fdd081', 1]],\n  [['#1FDE06', 0], ['#61F27A', 1]],\n  [['#fe954a', 0], ['#f9b388', 1]],\n]\n\nconst IMAGES: ResourceStr[] = [\n  $r('app.media.card01'),\n  $r('app.media.card02'),\n  $r('app.media.card03'),\n  $r('app.media.card04'),\n]", "path": "interview-handbook-project-next\\features\\home\\src\\main\\ets\\components\\HomeQuestionCardComp.ets", "project_name": "interview-handbook-project-next", "id": "ca3b8c56d2ef91cc0f2bdf7c01260fc663a147951915115518a77df8a1a16c1e"}
{"text": "import { hdHttp } from '@itcast/basic'\nimport { QuestionItemModel, QuestionListParams } from '../models/QuestionItemModel'\nimport { QuestionTypeModel } from '../models/QuestionTypeModel'\n\ninterface PageResult {\n  total: number\n  pageTotal: number\n  rows: QuestionItemModel[]\n}\n\nexport class QuestionService {\n  static findQuestionTypeList() {\n    return hdHttp.get<QuestionTypeModel[]>('question/type')\n  }\n\n  static findQuestionList(params: QuestionListParams) {\n    return hdHttp.get<PageResult>('question/list', params)\n  }\n}", "path": "interview-handbook-project-next\\features\\home\\src\\main\\ets\\services\\QuestionService.ets", "project_name": "interview-handbook-project-next", "id": "e4c6b28fa2605146ee19470d6d6fd11f17532a579c63d72b08fe035eaef42972"}
{"text": "import { preferences } from '@kit.ArkData'\n\nclass HistoryStore {\n  KEY = 'historyStore'\n  store = preferences.getPreferencesSync(getContext(), { name: this.KEY })\n\n  setItem(keyword: string) {\n    this.store.putSync(keyword, keyword)\n    this.store.flush()\n  }\n\n  delItem(keyword: string) {\n    this.store.deleteSync(keyword)\n    this.store.flush()\n  }\n\n  clear() {\n    this.store.clearSync()\n  }\n\n  getAll() {\n    const obj = this.store.getAllSync()\n    return Object.keys(obj)\n  }\n}\n\nexport const historyStore = new HistoryStore()", "path": "interview-handbook-project-next\\features\\home\\src\\main\\ets\\utils\\history.ets", "project_name": "interview-handbook-project-next", "id": "c70ffd223cb0f4480ded8383e36b9f68d589643decd34ef9f3f24fb5184038d6"}
{"text": "import { router } from '@kit.ArkUI'\n\n@Component\nexport struct BootView {\n  @StorageProp('topHeight')\n  topHeight: number = 0\n  @State\n  time: number = 2\n  timer: number | null = null\n\n  aboutToAppear(): void {\n    this.timer = setInterval(() => {\n      this.time--\n      if (this.time <= 0) {\n        router.replaceUrl({ url: 'pages/Index' })\n      }\n    }, 1000)\n  }\n\n  aboutToDisappear(): void {\n    clearInterval(this.timer)\n  }\n\n  build() {\n    Column() {\n      Text(this.time + 's')\n        .width(50)\n        .height(24)\n        .borderRadius(12)\n        .textAlign(TextAlign.Center)\n        .fontSize(14)\n        .backgroundColor('#33000000')\n        .fontColor($r('app.color.white'))\n        .alignSelf(ItemAlign.End)\n        .margin({ right: 20, top: this.topHeight + 20 })\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundImage($r('app.media.boot'))\n    .backgroundImageSize(ImageSize.Cover)\n    .geometryTransition(\"boot\")\n    .transition(TransitionEffect.OPACITY)\n  }\n}", "path": "interview-handbook-project-next\\features\\home\\src\\main\\ets\\views\\BootView.ets", "project_name": "interview-handbook-project-next", "id": "34548e1eb305a2743bea8e91b1326f01cfea7e8c307cd6e41d0f7342fe2bdf3d"}
{"text": "import { hdHttp } from '@itcast/basic/Index'\nimport { InterviewItemModel, InterviewListParams } from '../models/InterviewItemModel'\n\ninterface PageResult {\n  total: number\n  pageTotal: number\n  rows: InterviewItemModel[]\n}\n\nexport class InterviewService {\n  static findInterviewList(params: InterviewListParams) {\n    return hdHttp.get<PageResult>('question/list', params)\n  }\n}", "path": "interview-handbook-project-next\\features\\interview\\src\\main\\ets\\services\\InterviewService.ets", "project_name": "interview-handbook-project-next", "id": "b4053da033d8d05d5094a7c0f30e49c89fcabd67c6ea47b6c161682be128def5"}
{"text": "export { ProjectComp } from './src/main/ets/views/ProjectComp'\n\nexport { ProjectDetailComp } from './src/main/ets/views/ProjectDetailComp'\n\nexport { ProjectItem, ProjectItemModel } from './src/main/ets/models/ProjectItemModel'\n", "path": "interview-handbook-project-next\\features\\project\\Index.ets", "project_name": "interview-handbook-project-next", "id": "a3a7c1146b10e459cd74dcd6e826d55ed7d897227c25b2b077b7850ce41f0400"}
{"text": "export interface ProjectTag {\n  tagName: string\n}\n\nexport interface ProjectItem {\n  id: number\n  name: string\n  icon: ResourceStr\n  describeInfo: string | null\n  tags: ProjectTag[]\n}\n\nexport class ProjectItemModel implements ProjectItem {\n  id: number\n  name: string\n  icon: ResourceStr\n  describeInfo: string | null\n  tags: ProjectTag[]\n\n  constructor(model: ProjectItem) {\n    this.id = model.id\n    this.name = model.name\n    this.icon = model.icon\n    this.describeInfo = model.describeInfo\n    this.tags = model.tags\n  }\n}\n\n", "path": "interview-handbook-project-next\\features\\project\\src\\main\\ets\\models\\ProjectItemModel.ets", "project_name": "interview-handbook-project-next", "id": "750fec8c342af7da966a201e70601a2037e906becf9fd3d550b92065a644b10b"}
{"text": "import { hdHttp } from '@itcast/basic'\nimport { ProjectItemModel } from '../models/ProjectItemModel'\n\nexport class ProjectService {\n  static findProjectList() {\n    return hdHttp.get<ProjectItemModel[]>('question/type', new Object({ type: 'items' }))\n  }\n}", "path": "interview-handbook-project-next\\features\\project\\src\\main\\ets\\services\\ProjectService.ets", "project_name": "interview-handbook-project-next", "id": "a5b0bdd9089ab5762c956460e781464605d9b672098f39def8ea11e7ffc0c81e"}
{"text": "export class TabBarModel {\n  defaultIcon: ResourceStr = ''\n  activeIcon: ResourceStr = ''\n  label: string = ''\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\models\\TabBarModel.ets", "project_name": "interview-handbook-project-next", "id": "660e811fc50400da660ddcd63f3eba1da3d11e1fdf7c90f139d574c2aef7a467"}
{"text": "import { authStore, themeManager } from '@itcast/basic'\nimport { BootView } from '@itcast/home'\n\n@Entry\n@Component\nstruct BootPage {\n  aboutToAppear(): void {\n    themeManager.initThemeSetting()\n    themeManager.enableFullScreen()\n    authStore.initUser()\n\n    getContext().getApplicationContext().getRunningProcessInformation()\n  }\n\n  build() {\n    Column() {\n      BootView()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\BootPage.ets", "project_name": "interview-handbook-project-next", "id": "46ddbd94c8fe08b643a6249de8e90851c66f21171294c6ee367b9b7fbba726a0"}
{"text": "import { ClockedComp } from '@itcast/mine'\n\n@Entry\n@Component\nstruct ClockedPage {\n  build() {\n    Column() {\n      ClockedComp()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\ClockedPage.ets", "project_name": "interview-handbook-project-next", "id": "c2205f77fda1f4cdfbda4e5d8773d8e8203eeabd21bda540523f8d9aff513c01"}
{"text": "import { InterviewDetailComp } from '@itcast/interview/Index';\n\n@Entry\n@Component\nstruct InterviewDetailPage {\n  @StorageProp('bottomHeight')\n  bottomHeight: number = 0\n\n  build() {\n    Column() {\n      InterviewDetailComp()\n    }\n    .padding({ bottom: this.bottomHeight })\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\InterviewDetailPage.ets", "project_name": "interview-handbook-project-next", "id": "1b1a62e73b7e54dde486d227576fadece6ab737ac3e088dce0dab3a31fc669a9"}
{"text": "import { LoginComp } from '@itcast/mine'\n\n@Entry\n@Component\nstruct LoginPage {\n  build() {\n    Column() {\n      LoginComp()\n    }\n  }\n}\n", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\LoginPage.ets", "project_name": "interview-handbook-project-next", "id": "b1b108ca0f012f9929d07b98a44d6650c1c3f77fc7ab3b1bd856cbfa1dce259c"}
{"text": "import { OptionalComp } from '@itcast/mine';\n\n@Entry\n@Component\nstruct OptionalPage {\n  build() {\n    Column() {\n      OptionalComp()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\OptionalPage.ets", "project_name": "interview-handbook-project-next", "id": "70eee2bc22d3741004d167585ae4bd75f070b026cd41feee6f4a18259e58e1e0"}
{"text": "import { ProfileEditComp } from '@itcast/mine';\n\n@Entry\n@Component\nstruct ProfileEditPage {\n  @StorageProp('bottomHeight')\n  bottomHeight: number = 0\n\n  build() {\n    Column() {\n      ProfileEditComp()\n    }\n    .margin({ bottom: this.bottomHeight })\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\ProfileEditPage.ets", "project_name": "interview-handbook-project-next", "id": "7af46bcf08b993e5871e3b1063840a4a42e8e9dc8dc2bbc26b275c7f3ca7ccdf"}
{"text": "import { themeManager } from '@itcast/basic'\nimport { ProjectDetailComp } from '@itcast/project'\n\n@Entry\n@Component\nstruct ProjectPage {\n  onPageShow(): void {\n    themeManager.settingStatusBarWhite()\n  }\n\n  onPageHide(): void {\n    themeManager.settingStatusBarBlack()\n  }\n\n  build() {\n    Column() {\n      ProjectDetailComp()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\ProjectDetailPage.ets", "project_name": "interview-handbook-project-next", "id": "73941cf3b6ab60c6c85939e100ffb554a108b799a4b3b17767b8c5db879da451"}
{"text": "import { QuestionDetailComp } from '@itcast/home'\n\n@Entry\n@Component\nstruct QuestionDetailPage {\n  @StorageProp('bottomHeight')\n  bottomHeight: number = 0\n\n  build() {\n    Column() {\n      QuestionDetailComp()\n    }\n    .padding({ bottom: this.bottomHeight })\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\QuestionDetailPage.ets", "project_name": "interview-handbook-project-next", "id": "899f0a81b965a74657977871c2fae70244a68bd9db693f7a2057171869bb6465"}
{"text": "import { SearchComp } from '@itcast/home';\n\n@Entry\n@Component\nstruct SearchPage {\n  build() {\n    Column() {\n      SearchComp()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\SearchPage.ets", "project_name": "interview-handbook-project-next", "id": "3eefeae7777f7d8c0ffe72e359c1120e24e331af42f55b1ba6e8585e95ab7b3e"}
{"text": "import { SettingsComp } from '@itcast/mine';\n\n@Entry\n@Component\nstruct SettingsPage {\n  build() {\n    Column() {\n      SettingsComp()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\SettingsPage.ets", "project_name": "interview-handbook-project-next", "id": "af2d06734ad2cbecc204b612cd7771cefe0de99223926e52b091f41ca7f132f2"}
{"text": "import { StudyTimeComp } from '@itcast/mine'\n\n@Entry\n@Component\nstruct StudyTimePage {\n  build() {\n    Column() {\n      StudyTimeComp()\n    }\n  }\n}", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\StudyTimePage.ets", "project_name": "interview-handbook-project-next", "id": "ac244205c69da1b0a8fa242fe3408f346044789c726b42122e47427f93150fd8"}
{"text": "import { WordComp } from '@itcast/mine'\n\n@Entry\n@Component\nstruct WordPage {\n  build() {\n    Column() {\n      WordComp()\n    }\n  }\n}\n\n", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\pages\\WordPage.ets", "project_name": "interview-handbook-project-next", "id": "d333d36eaf40bd398bd005b1d3a55fd7effb89449f21076f3d1074e0a56a6f05"}
{"text": "import { formBindingData, FormExtensionAbility, formInfo } from '@kit.FormKit';\nimport { Want } from '@kit.AbilityKit';\nimport { authStore } from '@itcast/basic';\n\nexport interface CardData {\n  formId: string\n  token: string\n  clockinNumbers: number\n}\n\nexport default class PhoneFormAbility extends FormExtensionAbility {\n  onAddForm(want: Want) {\n    \n    const user = authStore.getUser()\n    const formId = want.parameters?.[formInfo.FormParam.IDENTITY_KEY]\n    const data: CardData = {\n      formId: formId ? formId.toString() : '',\n      token: user.token || '',\n      clockinNumbers: user.clockinNumbers || 0\n    }\n    return formBindingData.createFormBindingData(data);\n  }\n\n  onCastToNormalForm(formId: string) {\n    \n    \n  }\n\n  onUpdateForm(formId: string) {\n    \n\n  }\n\n  onChangeFormVisibility(newStatus: Record<string, number>) {\n    \n  }\n\n  onFormEvent(formId: string, message: string) {\n    \n  }\n\n  onRemoveForm(formId: string) {\n    \n  }\n\n  onAcquireFormState(want: Want) {\n    \n    return formInfo.FormState.READY;\n  }\n};", "path": "interview-handbook-project-next\\products\\phone\\src\\main\\ets\\phoneformability\\PhoneFormAbility.ets", "project_name": "interview-handbook-project-next", "id": "4c5cf4b218a1507d8a58938cee9ce99e33aa39fc8aa89072bd434c9947ac65d5"}
{"text": "import { fontSize_Large, fontSize_Normal } from '../defaults/defaults';\n\n@CustomDialog\nstruct woofSymbolDetails {\n  controller: CustomDialogController;\n  @Prop glyphID: number = 0;\n  @Prop glyphName: string = '';\n\n  build() {\n    Scroll() {\n      Column({ space: 10 }) {\n        SymbolGlyph($r('sys.symbol.'.concat(this.glyphName)))\n          .fontSize(128)\n          .fontColor([$r('app.color.color_accent')])\n          .padding({ bottom: 20 })\n\n        Text(\"sys.symbol.\" + this.glyphName)\n          .fontColor($r('app.color.color_accent'))\n          .fontWeight(FontWeight.Medium)\n          .fontSize(fontSize_Normal())\n        Text((this.glyphID + 125830644).toString() + \" (\" + this.fill_zeros_to_string(this.glyphID, 4) + \")\")\n          .fontColor($r('app.color.color_accent'))\n          .fontSize(fontSize_Normal())\n          .opacity(0.7)\n      }\n      .padding(40)\n      .alignItems(HorizontalAlign.Center)\n      .justifyContent(FlexAlign.Center)\n      .width(\"100%\")\n    }\n    .backgroundColor($r('app.color.start_window_background'))\n    .edgeEffect(EdgeEffect.Spring)\n  }\n\n  fill_zeros_to_string(num: number, length: number) {\n    return String(\"0\".repeat(Math.max(length - num.toString().length, 0)) + num.toString());\n  }\n}\n\nexport default woofSymbolDetails;", "path": "Linys_Ani_Examples_NEXT-master\\entry\\src\\main\\ets\\components\\woofSymbolDetails.ets", "project_name": "Linys_Ani_Examples_NEXT-master", "id": "38ebef40f8f5274bf488ee8f670e8f02cce80c7308f386954299c0a04af182ec"}
{"text": "export function fontSize_Extra_Large() {\n  return 36;\n}\n\nexport function fontSize_Large() {\n  return 24;\n}\n\nexport function fontSize_Normal() {\n  return 16;\n}\n\nexport function fontSize_Icon_Button() {\n  return 25;\n}\n\nexport function click_effect_default() {\n  let ce: ClickEffect = { level: ClickEffectLevel.LIGHT };\n  return ce;\n}\n", "path": "Linys_Ani_Examples_NEXT-master\\entry\\src\\main\\ets\\defaults\\defaults.ets", "project_name": "Linys_Ani_Examples_NEXT-master", "id": "0675a9804ba32852f197b3f647118cadfcc0304eaa6db961eb14f8dfa49d7073"}
{"text": "import ButtonCard from '../components/ButtonCard'\nimport ResponsiveLayout from '../components/ResponsiveLayout'\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column(){\n      ResponsiveLayout({\n        title: $r('app.string.index_title'),\n        subTitle: 'ヾ(⌐■_■)ノ♪'\n      }){\n        ButtonCard({\n          navigate_target: 'pages/SpringMotionExample',\n          title: $r('app.string.index_example_springMotion'),\n          subtitle: '2024 / 10 / 10',\n          corner: '01',\n          card_height: 140,\n          timeout: 0\n        })\n        ButtonCard({\n          navigate_target: 'pages/FadeInExample',\n          title: $r('app.string.index_example_floatEntry'),\n          subtitle: '2024 / 10 / 13',\n          corner: '02',\n          card_height: 140,\n          timeout: 1\n        })\n        ButtonCard({\n          navigate_target: 'pages/responsiveLayoutExample',\n          title: $r('app.string.index_example_responsiveLayout'),\n          subtitle: '2024 / 10 / 15',\n          corner: '03',\n          card_height: 140,\n          timeout: 2\n        })\n        ButtonCard({\n          navigate_target: 'pages/SymbolsExample',\n          title: $r('app.string.index_example_symbols'),\n          subtitle: '2024 / 10 / 20',\n          corner: '04',\n          card_height: 140,\n          timeout: 3\n        })\n      }\n    }\n  }\n}", "path": "Linys_Ani_Examples_NEXT-master\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "Linys_Ani_Examples_NEXT-master", "id": "3bc703e1d1b1f563070de7565e05736e33ec8d0b315223e49b8eb0c4df136932"}
{"text": "import Curves from '@ohos.curves';\nimport woofSymbolDetails from '../components/woofSymbolDetails';\nimport {\n    click_effect_default,\n    fontSize_Extra_Large,\n    fontSize_Icon_Button,\n    fontSize_Large\n} from '../defaults/defaults';\nimport { symbolsNames } from '../defaults/sysSymbols';\n\n@Entry\n@Component\nstruct SymbolsExample {\n  @State allSymbols: string[] = symbolsNames;\n  @State animationParam: AnimateParam = { curve: Curves.springMotion(0.3, 1) };\n  @State requestSymbolName: string = \"\";\n  @State area_width: number = 300;\n\n  build() {\n    Column({ space: 15 }) {\n      Row({ space: 15 }) {\n        Navigator({ target: 'pages/Index', type: NavigationType.Back }) {\n          Text('󰃚')\n            .fontWeight(FontWeight.Bold)\n            .fontSize(fontSize_Extra_Large())\n            .clickEffect(click_effect_default())\n        }\n\n        Text($r('app.string.index_example_symbols'))\n          .fontWeight(FontWeight.Bold)\n          .fontSize(fontSize_Large())\n      }\n      .alignItems(VerticalAlign.Center)\n\n\n      WaterFlow() {\n        ForEach(this.allSymbols, (item: string, _index: number) => {\n          FlowItem() {\n            Column() {\n              SymbolGlyph($r(\"sys.symbol.\".concat(item)))\n                .fontSize(48)\n                .fontColor([$r('app.color.color_accent')])\n            }\n            .alignItems(HorizontalAlign.Center)\n            .width(\"100%\")\n            .padding(10)\n            .onClick(() => {\n              let woof_control: CustomDialogController = new CustomDialogController({\n                builder: woofSymbolDetails({\n                  glyphName: item,\n                  glyphID: symbolsNames.indexOf(item)\n                }),\n                alignment: DialogAlignment.Center,\n                \n              })\n              woof_control.open()\n            })\n          }\n          .width(\"100%\")\n          .animation(this.animationParam)\n        })\n      }\n      .onAreaChange((_old, n) => {\n        this.area_width = n.width as number;\n      })\n      .columnsTemplate(\"1fr \".repeat(Math.ceil(this.area_width / 70)))\n      .layoutWeight(1)\n      .edgeEffect(EdgeEffect.Spring)\n      .scrollBar(BarState.On)\n\n      Row({ space: 10 }) {\n        TextInput({ text: this.requestSymbolName })\n          .onChange((a) => {\n            this.requestSymbolName = a;\n          })\n          .onSubmit(() => {\n            this.refresh_visibility_statuses();\n          })\n          .layoutWeight(1)\n        SymbolGlyph($r('sys.symbol.magnifyingglass'))\n          .fontSize(fontSize_Icon_Button())\n          .fontWeight(FontWeight.Bold)\n          .fontColor([$r('app.color.color_accent')])\n          .onClick(() => {\n            this.refresh_visibility_statuses();\n          })\n      }\n\n    }\n    .alignItems(HorizontalAlign.Start)\n    .padding({ left: 20, right: 20, top: 10 })\n  }\n\n  fill_zeros_to_string(num: number, length: number) {\n    return String(\"0\".repeat(Math.max(length - num.toString().length, 0)) + num.toString());\n  }\n\n  refresh_visibility_statuses() {\n    if (this.requestSymbolName == \"\") {\n      this.allSymbols = symbolsNames;\n      return;\n    }\n    this.allSymbols = [];\n    for (let index = 0; index < symbolsNames.length; index++) {\n      if (symbolsNames[index].includes(this.requestSymbolName)) {\n        this.allSymbols.push(symbolsNames[index])\n      }\n    }\n  }\n}", "path": "Linys_Ani_Examples_NEXT-master\\entry\\src\\main\\ets\\pages\\SymbolsExample.ets", "project_name": "Linys_Ani_Examples_NEXT-master", "id": "3b880f53b766749e39c6c6f58040cff6d7bfbd84c693961f0adccc04a5d96147"}
{"text": "export { MiniCanvas } from './src/main/ets/components/MiniCanvas'\nexport { Paint } from './src/main/ets/components/canvas/paint'\nexport { ICanvas } from './src/main/ets/components/canvas/icanvas'\nexport { Gradient } from './src/main/ets/components/canvas/gradient'", "path": "MiniCanvas-master\\mini_canvas\\Index.ets", "project_name": "MiniCanvas-master", "id": "2c564443790e6cccd4e452c1116886a87d3ed37b0f80eb36fda63eeefa3a758f"}
{"text": "import { MiniCanvasAttribute } from \"./canvas/attribte\"\nimport { CanvasImpl } from \"./canvas/canvas\"\nimport { ICanvas } from \"./canvas/icanvas\"\n\n@ComponentV2\nexport struct MiniCanvas {\n\n  private canvas?: CanvasImpl = undefined\n\n  @Param\n  attribute: MiniCanvasAttribute = MiniCanvasAttribute.default()\n\n  @Param @Require\n  onDraw : (canvas: ICanvas) => void = (_canvas: ICanvas) => {}\n\n  build() {\n    Canvas(this.canvas?.renderContext)\n      .width(this.attribute.width)\n      .height(this.attribute.height)\n      .backgroundColor(this.attribute.background)\n      .id(this.attribute.id)\n      .enabled(this.attribute.enabled)\n      .enableAnalyzer(this.attribute.enableAnalyzer)\n      .onReady(() => {\n        if (this.canvas) {\n          this.onDraw(this.canvas)\n        }\n      })\n      .onClick((event) => {\n        if (this.attribute.clickListener) {\n          this.attribute.clickListener(event)\n        }\n      })\n      .onTouch((event) => {\n        if (this.attribute.touchListener) {\n          this.attribute.touchListener(event)\n        }\n      })\n      .onMouse((event) => {\n        if (this.attribute.mouseListener) {\n          this.attribute.mouseListener(event)\n        }\n      })\n      .onHover((isHover: boolean, event: HoverEvent) => {\n        if (this.attribute.hoverListener) {\n          this.attribute.hoverListener(isHover, event)\n        }\n      })\n  }\n\n  aboutToAppear(): void {\n    let setting = new RenderingContextSettings(this.attribute.antiAlias);\n    let context = new CanvasRenderingContext2D(setting);\n    this.canvas = new CanvasImpl(context, this.attribute);\n  }\n}\n", "path": "MiniCanvas-master\\mini_canvas\\src\\main\\ets\\components\\MiniCanvas.ets", "project_name": "MiniCanvas-master", "id": "cc67210a286f7e424c36e33a00a5b8930f9ce2c0bca015073f984122ccebef2f"}
{"text": "import { LightWeightMap } from \"@kit.ArkTS\";\n\n\nexport class Gradient {\n\n  readonly x0: number;\n  readonly y0: number;\n  readonly x1: number;\n  readonly y1: number;\n\n  private readonly colorStopMap: LightWeightMap<number, string> = new LightWeightMap()\n\n  constructor(x0: number, y0: number, x1: number, y1: number) {\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  \n  linearGradient(offset: number, color: string): Gradient {\n    return this.addColorStop(offset, color)\n  }\n\n  \n  addColorStop(offset: number, color: string): Gradient {\n    this.colorStopMap.set(offset, color)\n    return this\n  }\n\n  getColorStop(): LightWeightMap<number, string> {\n    return this.colorStopMap\n  }\n}", "path": "MiniCanvas-master\\mini_canvas\\src\\main\\ets\\components\\canvas\\gradient.ets", "project_name": "MiniCanvas-master", "id": "44d3a7925144f18ad05246bf121f0cc8d03676d6ff444916290fd04ed32b4326"}
{"text": "export class Preconditions {\n  public static check<T>(target: T, defaultValue: T): T {\n    return (undefined == target || null == target) ? defaultValue : target;\n  }\n}", "path": "MiniCanvas-master\\mini_canvas\\src\\main\\ets\\components\\canvas\\preconfition.ets", "project_name": "MiniCanvas-master", "id": "49c771a8e425b344bc50763664893e024cf75cb0be3a60e48de44347110dbac2"}
{"text": "export class CommonConstants {\n  \n  \n  static readonly MESSAGE_DURATION = 3000;\n\n  \n  static readonly PERCENT_100 = '100%'\n}", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\common\\constants\\CommonConstants.ets", "project_name": "Msea_HarmonyOS-main", "id": "95f5135e8c4e30f572a587ee9fad3d4d653414d08a2fb26d442298406ac177c7"}
{"text": "export class UrlConstants {\n  static readonly login = '/member.php?mod=logging&action=login&loginsubmit=yes';\n}", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\common\\constants\\UrlConstants.ets", "project_name": "Msea_HarmonyOS-main", "id": "a3881d7ce751a39be20d731ea1c0a75f98b08777db1361ab00c8e2f8b1c0b948"}
{"text": "import {  CommonConstants as Const } from  '../constants/CommonConstants'\nimport promptAction from '@ohos.promptAction';\n\nexport function showToast(msg: string | Resource) {\n  promptAction.showToast({\n    message: msg,\n    duration: Const.MESSAGE_DURATION\n  });\n}\n", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\common\\utils\\ComponentUtil.ets", "project_name": "Msea_HarmonyOS-main", "id": "d02ce3a92451c5cec9d730e9d0e579524f7d46068a2c52295ea58dacfb8e4a0e"}
{"text": "import { hilog } from '@kit.PerformanceAnalysisKit';\n\nclass Logger {\n  private domain: number;\n  private prefix: string;\n  private format: string = \"%{public}s, %{public}s\";\n\n  constructor(prefix: string) {\n    this.prefix = prefix;\n    this.domain = 0xFF00;\n  }\n\n  debug(...args: Object[]): void {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }\n\n  info(...args: Object[]): void {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }\n\n  warn(...args: Object[]): void {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }\n\n  error(...args: Object[]): void {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }\n}\n\nexport default new Logger('[Msea]');", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\common\\utils\\Logger.ets", "project_name": "Msea_HarmonyOS-main", "id": "9152a6b33309151d5aa4ad2b3df04d0a295a918c64170bdc71865df10d76e91b"}
{"text": "export function getResourceText(resource: Resource) {\n  return getContext().resourceManager.getStringSync(resource);\n}", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\common\\utils\\ResourceUtil.ets", "project_name": "Msea_HarmonyOS-main", "id": "2832060eb3f58a866a13e40139663491e1abeb03c0452f6d33d07fe98ace68e8"}
{"text": "import dataPreferences from '@ohos.data.preferences';\nimport { PreferencesUtil } from './PreferencesUtil';\nimport { UserInfoKey } from '../../model/LoginModel'\n\nexport class UserInfo {\n  private preferencesUtil: PreferencesUtil = PreferencesUtil.getInstance();\n  private static instance: UserInfo;\n\n  static getInstance(): UserInfo {\n    if (!UserInfo.instance) {\n      UserInfo.instance = new UserInfo();\n    }\n    return UserInfo.instance;\n  }\n\n  setAuth(value: dataPreferences.ValueType) {\n    this.preferencesUtil.put(UserInfoKey.AUTH, value)\n  }\n\n  getAuth(): dataPreferences.ValueType {\n    return this.preferencesUtil.get(UserInfoKey.AUTH)\n  }\n\n  reset() {\n    this.preferencesUtil.clear();\n  }\n}\n\n", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\common\\utils\\UserCacheInfo.ets", "project_name": "Msea_HarmonyOS-main", "id": "d53860193be4e5a5eb5543c7abf93df2824838ae68df5ea956edea667038b5ae"}
{"text": "import { HomePage } from './home/HomePage';\nimport { NoticePage } from './notice/NoticePage';\nimport { ProfilePage } from './profile/ProfilePage';\nimport { BottomTabsList } from '../model/IndexModel'\n\n@Entry\n@Component\nstruct Index {\n  private tabsController : TabsController = new TabsController();\n  @State currentIndex: number = 0;\n\n  build() {\n    Tabs({ barPosition: BarPosition.End, controller: this.tabsController }) {\n      TabContent() {\n        HomePage()\n      }\n      .tabBar(this.TabBuilder(0))\n\n      TabContent() {\n        NoticePage()\n      }\n      .tabBar(this.TabBuilder(1))\n\n      TabContent() {\n        ProfilePage()\n      }\n      .tabBar(this.TabBuilder(2))\n    }\n    .height('100%')\n    .scrollable(false)\n    .onChange((index) => {\n      this.currentIndex = index;\n    })\n  }\n\n  @Builder TabBuilder(\n    targetIndex: number\n  ) {\n    Column() {\n      Image(this.currentIndex === targetIndex ?\n      BottomTabsList[targetIndex].selectedIcon : BottomTabsList[targetIndex].normalIcon)\n        .size({ width: 24, height: 24 })\n\n      Text(BottomTabsList[targetIndex].text)\n        .fontColor(this.currentIndex === targetIndex ?\n        $r('app.color.app_theme_primary') : $r('app.color.app_tab_text'))\n    }\n    .width('100%')\n    .height(50)\n    .justifyContent(FlexAlign.Center)\n  }\n}", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "Msea_HarmonyOS-main", "id": "8361fb16b65528536ae02a31d6a99786bedd344b22277548ddec8c2b74d84e8a"}
{"text": "@Entry\n@Component\nexport struct HomePage {\n  build() {\n    Column() {\n      Navigation() {\n        Text($r('app.string.tab_home'))\n          .fontSize($r('app.float.text_size_headline6_30_medium'))\n          .fontWeight(FontWeight.Medium)\n      }\n      .title($r('app.string.tab_home'))\n      .mode(NavigationMode.Auto)\n      .titleMode(NavigationTitleMode.Mini)\n      .hideBackButton(true)\n    }\n  }\n}", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\pages\\home\\HomePage.ets", "project_name": "Msea_HarmonyOS-main", "id": "84134988b6f3a32606a3f28c45bc7522c9504d8956ef260631e4d93e899db759"}
{"text": "import router from '@ohos.router';\nimport {  CommonConstants as Const } from '../../common/constants/CommonConstants';\nimport { UserInfo } from '../../common/utils/UserCacheInfo'\nimport Logger from '../../common/utils/Logger';\nimport { getResourceText } from '../../common/utils/ResourceUtil';\n\n@Entry\n@Component\nexport struct NoticePage {\n  @State isLogin: boolean = false;\n\n  onPageShow() {\n    Logger.info('NoticePage onPageShow')\n    this.refresh();\n  }\n\n  aboutToAppear() {\n    Logger.info('NoticePage aboutToAppear')\n    this.refresh();\n  }\n\n  async refresh() {\n    let auth = await UserInfo.getInstance().getAuth() as string;\n    this.isLogin = auth != '';\n  }\n\n  build() {\n    Column() {\n      Navigation() {\n        if (this.isLogin) {\n          Text(getResourceText($r('app.string.login_logged_in')))\n        } else {\n          Column() {\n            Button($r('app.string.login_title'))\n              .backgroundColor($r('app.color.app_theme_primary'))\n              .onClick(() => {\n                this.refresh()\n                router.pushUrl({\n                  url: 'pages/profile/LoginPage'\n                })\n              })\n          }\n          .height(Const.PERCENT_100)\n          .justifyContent(FlexAlign.Center)\n        }\n      }\n      .height(Const.PERCENT_100)\n      .title($r('app.string.tab_notice'))\n      .titleMode(NavigationTitleMode.Mini)\n      .hideBackButton(true)\n    }\n  }\n}", "path": "Msea_HarmonyOS-main\\entry\\src\\main\\ets\\pages\\notice\\NoticePage.ets", "project_name": "Msea_HarmonyOS-main", "id": "f9dbf4e81dbcdaf1f4eaefd8dbb575c18a5dfc498ab8ada466fd287e2db3c490"}
{"text": "import  { NavigationView } from './src/main/ets/components/mainpage/NavigatitonBarView'\nimport { NavigationBarConfigInterface} from './src/main/ets/components/Entity'\n\nexport { NavigationView } from './src/main/ets/components/mainpage/NavigatitonBarView'\nexport { Example } from './src/main/ets/components/example/Example'\nexport {NavigationBarConfigInterface,NavigationBarConfig,ItemInterface,ItemDirection,ItemSpace,NavigationHeight,GlobalConfig} from './src/main/ets/components/Entity'\n\nexport const NavigationBuilder:WrappedBuilder<[NavigationBarConfigInterface]> = wrapBuilder(builderNavigation)\n\n@Builder\nfunction builderNavigation(config:NavigationBarConfigInterface){\n  NavigationView({config:config})\n}", "path": "navigation-bar-view-main\\Index.ets", "project_name": "navigation-bar-view-main", "id": "437157e5e3654662ee0eec26ccc18177ea95a40c71656716a92f2e6bee9e94b5"}
{"text": "const container = \"__container__\";\nconst leftItem = \"__left__\";\nconst centerItem = \"__center__\";\nconst rightItem = \"__right__\";\n@Component\nexport struct CommonTitleBar {\n  @Builder\n  doNothingBuilder() {\n  };\n\n  @BuilderParam leftBuilder: () => void = this.doNothingBuilder;\n  @BuilderParam centerBuilder: () => void = this.doNothingBuilder;\n  @BuilderParam rightBuilder: () => void = this.doNothingBuilder;\n\n  build() {\n    RelativeContainer(){\n      Row() {\n        this.leftBuilder();\n      }\n      .id(leftItem)\n      .alignRules(\n        {\n        center:{anchor:container,align:VerticalAlign.Center},\n        left:{anchor:container,align:HorizontalAlign.Start}\n      })\n\n      Row() {\n        this.centerBuilder();\n      }\n      .justifyContent(FlexAlign.Center)\n      .id(centerItem)\n      .margin({left:5,right:5})\n      .alignRules(\n        {\n          left:{anchor:leftItem,align:HorizontalAlign.End},\n          center:{anchor:container,align:VerticalAlign.Center},\n          middle:{anchor:container,align:HorizontalAlign.Center},\n          right:{anchor:rightItem,align:HorizontalAlign.Start},\n        })\n\n      Row() {\n        this.rightBuilder();\n      }\n      .justifyContent(FlexAlign.End)\n      .id(rightItem)\n      .alignRules(\n        {\n          center:{anchor:container,align:VerticalAlign.Center},\n          right:{anchor:container,align:HorizontalAlign.End}\n        })\n    }\n    .width(\"100%\")\n  }\n}", "path": "navigation-bar-view-main\\src\\main\\ets\\components\\mainpage\\CommonTitleBar.ets", "project_name": "navigation-bar-view-main", "id": "d4507b2024bdc489fe370ac16545c3f3a0083771527d4b0571e7e6bd96b3d8b6"}
{"text": "export * from \"./bean\"\nexport * from \"./common\"\nexport * from \"./pages\"\n\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\index.ets", "project_name": "NCMusicHarmony-master", "id": "ebfb9abd2343a417913242d3e771d65caafbc61ab92b6bc5c1765cf62a9a6056"}
{"text": "import { BaseResultBean } from 'lib_common/src/main/ets/bean/BaseResultBean'\nimport { ArBean } from './UserPlaylistResultBean'\n\nexport class AlbumResultBean extends BaseResultBean {\n  count: number\n  hasMore: boolean\n  paidCount: number\n  data: AlbumBean[]\n}\n\nexport class AlbumBean {\n  subTime: number\n  artists: ArBean[]\n  picUrl: string\n  name: string\n  size: number\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\bean\\AlbumResultBean.ets", "project_name": "NCMusicHarmony-master", "id": "10d56ee637e8dff2e2be34ee4cd0849ddeca51ea579f79f37490d77e43049026"}
{"text": "import { BaseResultBean } from 'lib_common'\n\n\nexport class CommentResultBean extends BaseResultBean {\n  comments: CommentBean[]\n}\n\nexport class CommentBean {\n  user: CommentUserBean\n  beReplied: object \n  commentId: number\n  content: string\n  time: number\n  timeStr: string\n  likedCount: number\n  owner: boolean\n  liked: boolean\n}\n\nexport class CommentUserBean {\n  avatarUrl: string\n  nickname: string\n  userId: number\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\bean\\CommentResultBean.ets", "project_name": "NCMusicHarmony-master", "id": "9f74df943c5baec0eb2542e61903e83c34c0e50559030a210990ff2f2e8ed89e"}
{"text": "import { BaseResultBean } from 'lib_common'\n\n\n\nexport class LyricResultBean extends BaseResultBean {\n  transUser?: LyricContributorBean\n  lyricUser?: LyricContributorBean\n  lrc?: LrcBean\n  tlyric?: LrcBean\n}\n\nexport class LyricContributorBean {\n  id: number\n  status: number\n  demand: number\n  userid: number\n  nickname: string\n  uptime: number\n}\n\n\nexport class LrcBean {\n  version: number\n  lyric: string\n}\n\nexport class LyricModel {\n  time: number\n  lyric ?: string\n  tLyric ?: string\n\n  constructor(time: number, lyric? : string, tLyric?: string) {\n    this.time = time\n    this.lyric = lyric\n    this.tLyric = tLyric\n  }\n}\n\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\bean\\LyricResultBean.ets", "project_name": "NCMusicHarmony-master", "id": "6ab7ed029179c6c0aa77cb0d95dabd059a0d447dfa6f0a2c79e82eae8e602070"}
{"text": "import { BaseResultBean } from 'lib_common'\n\n\nexport class SongSheetDetailResultBean extends BaseResultBean {\n  songs: SongBean[]\n}\n\nexport class SongBean {\n  \n  id: number\n  \n  name: string\n  al: Al\n  ar: Ar[]\n}\n\nexport class Ar {\n  id: number\n  name: string\n}\n\nexport class Al {\n  id: number\n  name: string\n  picUrl: string\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\bean\\SongSheetDetailResultBean.ets", "project_name": "NCMusicHarmony-master", "id": "39cf4d33a21329c1688a3c0a314e34d31bfc3a61c4706e8e586ba83179af01db"}
{"text": "import { BaseResultBean } from 'lib_common'\n\n\nexport class SongUrlResultBean extends BaseResultBean {\n  data: SongUrlBean[]\n}\n\nexport class SongUrlBean {\n  url: string\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\bean\\SongUrlResultBean.ets", "project_name": "NCMusicHarmony-master", "id": "d1e6244c65e43889b55232f6336f009e0e6ea0dc15ebf857a28dfb40eb06c06a"}
{"text": "export * from './constant'\nexport * from './core'\nexport * from './util'\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\index.ets", "project_name": "NCMusicHarmony-master", "id": "abe48897817cce9aeee81b20924a4b48dec91bb1821c05dd0918ca508dd1737b"}
{"text": "export class EventIds {\n  \n  static readonly PLAYER_STATUS = 1\n  \n  static readonly PLAYER_DURING = 2\n  \n  static readonly PLAYER_TIME_UPDATE = 3\n  \n  static readonly PLAYER_MODE = 4\n  \n  static readonly PLAYER_INDEX = 5\n\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\constant\\EventConstants.ets", "project_name": "NCMusicHarmony-master", "id": "5a46ccabc63178b1b17006714401ce57e2c2e84ca072075b5351021a72fb9f6a"}
{"text": "export * from './ApiConstant'\nexport * from './KVConstant'\nexport * from './StorageConstant'\nexport * from './EventConstants'\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\constant\\index.ets", "project_name": "NCMusicHarmony-master", "id": "1c335548f4e05704241634c342547ff70d03b5c2b065a9c45d1d0f033e6a4862"}
{"text": "export class KVConstants {\n  \n  static readonly KEY_USER_INFO = \"userInfo\"\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\constant\\KVConstant.ets", "project_name": "NCMusicHarmony-master", "id": "000d774c4ec2b97d731ccf5bd1eff0d539129cdb6ce0346f712be4a666880c89"}
{"text": "export const STORAGE_USER_INFO = \"userInfo\"\n\n\nexport const STORAGE_MAIN_DRAWER_TOGGLE = \"mainDrawerToggle\"", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\constant\\StorageConstant.ets", "project_name": "NCMusicHarmony-master", "id": "ca9106fb573312afa44cefccb0b17600f2a26798e5fd5a6c7e73b139bb86797d"}
{"text": "export * from './UserManager'\n\nexport * from './NCPlayer'\n\nexport * from './MusicPlayController'\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\core\\index.ets", "project_name": "NCMusicHarmony-master", "id": "f8aa4ff67ae9f26d8a7b2bffd58b442570258937116d31b58d7f3d1f6ab58540"}
{"text": "import { KEY_COOKIE, KVUtil } from 'lib_common'\nimport { KVConstants, STORAGE_USER_INFO } from '..'\nimport { UserInfoBean } from '../../bean'\n\nexport class UserManager {\n  static async getUserInfo(): Promise<UserInfoBean> {\n    const result = await KVUtil.get<UserInfoBean>(KVConstants.KEY_USER_INFO)\n    return result\n  }\n\n  static async setUserInfo(userInfo: UserInfoBean) {\n    AppStorage.Set(STORAGE_USER_INFO, userInfo)\n    await KVUtil.putString(KVConstants.KEY_USER_INFO, JSON.stringify(userInfo))\n    await KVUtil.putString(KEY_COOKIE, userInfo.cookie)\n  }\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\common\\core\\UserManager.ets", "project_name": "NCMusicHarmony-master", "id": "129dc22a340bbe945bb38cc8fdc665caebddac7bc1bc1238654fb5ff31a6fabe"}
{"text": "import UIAbility from '@ohos.app.ability.UIAbility';\nimport window from '@ohos.window';\nimport { RouterUrls, ScreenUtils } from 'lib_common';\n\nexport default class EntryAbility extends UIAbility {\n  async onCreate() {\n    window.getLastWindow(this.context, async (_, w) => {\n      w.setWindowLayoutFullScreen(true)\n\n      let win = await window.getLastWindow(this.context)\n      let area = win.getWindowAvoidArea(window.AvoidAreaType.TYPE_SYSTEM);\n      AppStorage.SetOrCreate(\"STATUS_BAR_HEIGHT\", area.topRect.height)\n      ScreenUtils.init(area)\n    })\n  }\n\n  onDestroy() {\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    windowStage.loadContent(RouterUrls.Splash);\n  }\n\n  onWindowStageDestroy() {\n  }\n\n  onForeground() {\n  }\n\n  onBackground() {\n  }\n\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\entryability\\EntryAbility.ets", "project_name": "NCMusicHarmony-master", "id": "de76536f54e6df27eb1c771529467749d0fed5b145e4d5a1fc291f119af230b5"}
{"text": "import { CommonNetworkImage, SizeConstant, TimeUtil } from 'lib_common'\nimport { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\nimport { CommentBean } from '../..'\n\n\n@Component\nexport struct CpnCommentItem {\n  bean: CommentBean\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n\n  build() {\n    Row() {\n      CommonNetworkImage({url: this.bean.user.avatarUrl, placeHolder: $r('app.media.ic_default_avatar')})\n        .width(34)\n        .height(34)\n        .borderRadius(17)\n        .clip(true)\n        .margin({ right: SizeConstant.SPACE_M })\n\n      Column() {\n        this.HeaderBuilder()\n        this.ContentBuilder()\n        this.DividerBuilder()\n      }.layoutWeight(1).alignItems(HorizontalAlign.Start)\n    }\n    .width(\"100%\")\n    .alignItems(VerticalAlign.Top)\n    .padding({ left: SizeConstant.SPACE_L, right: SizeConstant.SPACE_L, top: SizeConstant.SPACE_M })\n\n  }\n\n  @Builder HeaderBuilder() {\n    Row() {\n      Column() {\n        Text(this.bean.user.nickname)\n          .fontSize(SizeConstant.TEXT_M)\n          .fontColor(AppTheme.palette(this.themeType).firstText)\n          .fontWeight(FontWeight.Medium)\n          .margin({ bottom: SizeConstant.SPACE_S })\n\n        Text(TimeUtil.formatDate(this.bean.time))\n          .fontSize(SizeConstant.TEXT_S)\n          .fontColor(AppTheme.palette(this.themeType).thirdText)\n      }.alignItems(HorizontalAlign.Start).layoutWeight(1)\n\n      Row() {\n        Text(this.bean.likedCount.toString())\n          .fontSize(SizeConstant.TEXT_M)\n          .fontColor(AppTheme.palette(this.themeType).thirdText)\n\n        Image($r('app.media.ic_like'))\n          .width(SizeConstant.ICON_S)\n          .height(SizeConstant.ICON_S)\n          .margin({ left: SizeConstant.SPACE_M })\n          .fillColor(AppTheme.palette(this.themeType).thirdIcon)\n      }.justifyContent(FlexAlign.Center).alignItems(VerticalAlign.Center)\n    }.alignItems(VerticalAlign.Center).justifyContent(FlexAlign.SpaceBetween)\n  }\n\n  @Builder ContentBuilder() {\n    Text(this.bean.content)\n      .fontSize(SizeConstant.TEXT_L)\n      .fontColor(AppTheme.palette(this.themeType).firstText)\n      .margin({ top: SizeConstant.SPACE_L, bottom: SizeConstant.SPACE_L })\n  }\n\n  @Builder DividerBuilder() {\n    Stack().width(\"100%\").height(\"1px\").backgroundColor(AppTheme.palette(this.themeType).divider)\n  }\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\cpn\\CpnCommentItem.ets", "project_name": "NCMusicHarmony-master", "id": "c986b923cdc04fcf913c98bbbac24627af31c4c1842a298c9fe8de48ced06d1e"}
{"text": "export * from './CpnCommentItem'\n\nexport * from './CpnDynamicItem'\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\cpn\\index.ets", "project_name": "NCMusicHarmony-master", "id": "6d027cda71762f5f8ec7098f7c5bb8cbdc9d724604bf0bd327564fe9d00c5a24"}
{"text": "import { CollapsibleMediator, PagingLayoutMediator, ViewState, ViewStatePagingLayout } from 'lib_common'\nimport { ThemeType, THEME_TYPE } from 'lib_theme'\nimport { CommentBean, CpnCommentItem, dynamicCommentViewModel } from '../../..'\n\n\n@Component\nexport struct DynamicCommentListPage {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  mediator: CollapsibleMediator\n  scroller: Scroller\n  @State pagingLayoutMediator: PagingLayoutMediator = new PagingLayoutMediator({})\n  commentId: string\n\n  aboutToAppear() {\n    this.pagingLayoutMediator = new PagingLayoutMediator({\n      enableLoadMore: true,\n      enableRefresh: false,\n      collapsibleMediator: this.mediator,\n      scroller: this.scroller\n    })\n  }\n\n  @Builder ItemBuilder(item: CommentBean) {\n    CpnCommentItem({ bean: item })\n  }\n\n  build() {\n    ViewStatePagingLayout({\n      mediator: $pagingLayoutMediator,\n      ItemBuilder: (item: object, _) => {\n        this.ItemBuilder(item as CommentBean)\n      },\n      onLoadData: (viewState: ViewState) => {\n        dynamicCommentViewModel.getCommentList(this.commentId, viewState, this.pagingLayoutMediator)\n      },\n    })\n  }\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\dynamic\\view\\DynamicCommnentList.ets", "project_name": "NCMusicHarmony-master", "id": "076ec47b778e0880984890fc29af8b4dba4c8f554f0810571aa30a45c16fb435"}
{"text": "import { BaseViewModel, PagingLayoutMediator, RequestOptions, ViewState } from 'lib_common';\nimport { DynamicBean, DynamicResultBean, ApiConstant } from '../../..';\n\n\nexport class AttentionDynamicViewModel extends BaseViewModel {\n  private lastTime: number = -1\n\n  async getDynamicList(viewState: ViewState,\n                       pagingMediator: PagingLayoutMediator) {\n\n    const result = await this.get<DynamicResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_DYNAMIC,\n        data: {\n          \"pagesize\": pagingMediator.pageCount,\n          \"lasttime\": pagingMediator.page == 1 ? -1 : this.lastTime\n        },\n        viewState: viewState,\n        pagingMediator: pagingMediator,\n        pagingListConverter: (result: DynamicResultBean) => {\n          return result.event.map((item: DynamicBean) => {\n            item.jsonBean = JSON.parse(item.json.replace(\"\\\\\\\"\", \"\\\"\")\n              .replace(\"\\\\n\", \"/\")\n            )\n            return item\n          })\n        },\n        emptyCondition: (result: DynamicResultBean) => {\n          return (!result.event) || result.event.length == 0\n        }\n      }))\n    if (result) {\n      this.lastTime = result.lasttime\n    }\n  }\n\n\n}\n\nexport const attentionDynamicViewModel = new AttentionDynamicViewModel()", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\dynamic\\viewmodel\\AttentionDynamicViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "d31c43a9515d3528de720250fd05a30f5b35f4d6574877fd5f893c88ce12bebc"}
{"text": "import { BaseViewModel, PagingLayoutMediator, RequestOptions, ViewState } from 'lib_common';\nimport { CommentResultBean, ApiConstant } from '../../..';\n\n\nexport class DynamicCommentViewModel extends BaseViewModel {\n  async getCommentList(threadId: string, viewState: ViewState, pagingMediator: PagingLayoutMediator) {\n\n    this.get<CommentResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_DYNAMIC_COMMENT,\n        data: {\n          \"limit\": pagingMediator.pageCount,\n          \"offset\": (pagingMediator.page - 1) * pagingMediator.pageCount,\n          \"threadId\": threadId\n        },\n        viewState: viewState,\n        pagingMediator: pagingMediator,\n        pagingListConverter: (result: CommentResultBean) => {\n          return result.comments\n        },\n        emptyCondition: (result: CommentResultBean) => {\n          return result.comments.length == 0\n        }\n      }))\n\n  }\n}\n\nexport const dynamicCommentViewModel = new DynamicCommentViewModel()", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\dynamic\\viewmodel\\DynamicCommentViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "9c53ac883d9113e97ec05b7374c395fa640b39437fc2b413237b030e409943c8"}
{"text": "import { BaseViewModel, LogUtil, RequestOptions, RouterUrls, ViewState } from 'lib_common';\nimport router from '@ohos.router';\nimport {\n  ApiConstant,\n  UserManager,\n  AccountInfoResultBean,\n  UserDetailResultBean,\n  QrcodeAuthResultBean,\n  QrcodeKeyResultBean,\n  QrcodeValueResultBean,\n  UserInfoBean\n} from '../../..';\n\n\n\nexport class LoginViewModel extends BaseViewModel {\n  checkAuthTimerId: number = -1\n\n  async qrcodeAuth(viewState: ViewState,\n                   authStepCallback: (step: LoginAuthStep) => void): Promise<QrcodeValueResultBean> {\n    if (this.checkAuthTimerId != -1) {\n      clearInterval(this.checkAuthTimerId)\n      this.checkAuthTimerId = -1\n    }\n    const qrcodeKeyResult: QrcodeKeyResultBean = await this.get<QrcodeKeyResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_QRCODE_KEY,\n        data: { \"timeStamp\": new Date().getTime() },\n        viewState: viewState\n      }))\n    if (qrcodeKeyResult) {\n      const qrcodeValueResult = await this.get<QrcodeValueResultBean>(\n        new RequestOptions({\n          url: ApiConstant.URL_QRCODE_VALUE,\n          data: {\n            \"key\": qrcodeKeyResult.data.unikey,\n            \"timeStamp\": new Date().getTime()\n          },\n          viewState: viewState\n        }))\n      if (qrcodeValueResult) {\n        authStepCallback(LoginAuthStep.GENERATE_QRCODE_SUCCESS)\n        this.checkAuthLoop(qrcodeKeyResult.data.unikey, viewState, authStepCallback)\n      }\n      return qrcodeValueResult\n    }\n  }\n\n\n  private async checkAuthLoop(unikey: string,\n                              viewState: ViewState,\n                              authStepCallback: (step: LoginAuthStep) => void) {\n    this.checkAuthTimerId = setInterval(async () => {\n      LogUtil.debug(`LoginViewModel::checkAuthLoop done`)\n      const result: QrcodeAuthResultBean = await this.get<QrcodeAuthResultBean>(new RequestOptions({\n        url: ApiConstant.URL_CHECK_QRCODE,\n        data: {\n          \"key\": unikey,\n          \"timeStamp\": new Date().getTime()\n        },\n        successCondition: (result: QrcodeAuthResultBean) => {\n          return result.code == 803\n        },\n        interceptWhenNoSuccess: false\n      }))\n      LogUtil.debug(`LoginViewModel::checkAuthLoop::result::${JSON.stringify(result)}`)\n      if (result.code == 803) {\n        clearInterval(this.checkAuthTimerId)\n        this.checkAuthTimerId = -1\n        this.getAccountInfo(result.cookie, viewState, authStepCallback)\n      } else if (result.code === 802) {\n        authStepCallback(LoginAuthStep.AUTH_ING)\n      }\n    }, 4000)\n  }\n\n  private async getAccountInfo(cookie: string,\n                               viewState: ViewState,\n                               authStepCallback: (step: LoginAuthStep) => void) {\n    authStepCallback(LoginAuthStep.SYNC_USER_INFO)\n    const accountInfoResult: AccountInfoResultBean = await this.get<AccountInfoResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_ACCOUNT_INFO,\n        data: { \"cookie\": cookie, },\n        viewState: viewState\n      }))\n    LogUtil.debug(`LoginViewModel::getAccountInfo::${JSON.stringify(accountInfoResult)}`)\n\n    if (accountInfoResult) {\n      const userDetailResult: UserDetailResultBean = await this.get<UserDetailResultBean>(\n        new RequestOptions({\n          url: ApiConstant.URL_USER_DETAIL,\n          data: { \"uid\": accountInfoResult.account.id },\n          viewState: viewState\n        }))\n      if (userDetailResult) {\n        const userInfo = new UserInfoBean({\n          cookie: cookie,\n          detail: userDetailResult\n        })\n        UserManager.setUserInfo(userInfo)\n        router.replaceUrl({ url: RouterUrls.Index })\n      }\n    }\n  }\n}\n\n\nexport enum LoginAuthStep {\n  \n  GENERATE_QRCODE_ING,\n  \n  GENERATE_QRCODE_SUCCESS,\n  \n  AUTH_ING,\n  \n  SYNC_USER_INFO\n}\n\nexport const loginViewModel = new LoginViewModel();\n\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\login\\viewmodel\\LoginViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "5dab28fecdcbf1d94b25b9bdc03472f705b0a28f514fdb1a5e44877980e7d5ff"}
{"text": "export * from './view/AttentionDynamic'\n\nexport * from './view/Dynamic'\n\nexport * from './view/SquareDynamic'", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\dynamic\\index.ets", "project_name": "NCMusicHarmony-master", "id": "f0e7afb38125ed3d131d0d350ec1b91d50b63fa780d6bf186bc489aeb7cb2b8a"}
{"text": "import { PagingLayoutMediator, ViewState, ViewStatePagingLayout, } from 'lib_common'\nimport { AppTheme, THEME_TYPE, ThemeType } from 'lib_theme'\nimport { DynamicBean, CpnDynamicItem, attentionDynamicViewModel } from '../../../../'\n\n\n@Component\nexport struct AttentionDynamicPage {\n  @State pagingLayoutMediator: PagingLayoutMediator = new PagingLayoutMediator({})\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n\n  @Builder ItemBuilder(item: DynamicBean) {\n    CpnDynamicItem({ dynamicBean: item })\n  }\n\n  build() {\n    ViewStatePagingLayout({\n      mediator: $pagingLayoutMediator,\n      ItemBuilder: (item: object,  _) => {\n        this.ItemBuilder(item as DynamicBean)\n      },\n      keyGenerator: (item: object, _) => {\n        return (item as DynamicBean).threadId\n      },\n      onLoadData: async (viewState: ViewState) => {\n        attentionDynamicViewModel.getDynamicList(viewState, this.pagingLayoutMediator)\n      },\n    }).backgroundColor(AppTheme.palette(this.themeType).commonBackground)\n  }\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\dynamic\\view\\AttentionDynamic.ets", "project_name": "NCMusicHarmony-master", "id": "754382895ab501c41f604841cae86b59ccd0dc10559046aa03235274dc26ef5b"}
{"text": "export * from './view/MyDynamic'\n\nexport * from './viewmodel/UserDynamicViewModel'\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\dynamic\\index.ets", "project_name": "NCMusicHarmony-master", "id": "66c08d339ac93a40782df0188bf2bfcdec881df26f825424e55182a2c6d92d54"}
{"text": "import { CollapsibleMediator, PagingLayoutMediator, ViewState, ViewStatePagingLayout } from 'lib_common'\nimport { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\nimport { DynamicBean, UserManager, userDynamicViewModel, CpnDynamicItem} from '../../../../..'\n\n\n@Component\nexport struct MyDynamicPage {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  mediator: CollapsibleMediator\n  scroller: Scroller\n  @State pagingLayoutMediator: PagingLayoutMediator = new PagingLayoutMediator({})\n\n  aboutToAppear() {\n    this.pagingLayoutMediator = new PagingLayoutMediator({\n      enableRefresh: false,\n      enableLoadMore: true,\n      collapsibleMediator: this.mediator,\n      scroller: this.scroller\n    })\n  }\n\n  @Builder ItemBuilder(item: DynamicBean) {\n    CpnDynamicItem({ dynamicBean: item })\n  }\n\n  build() {\n    ViewStatePagingLayout({\n      mediator: $pagingLayoutMediator,\n      ItemBuilder: (item: object) => {\n        this.ItemBuilder(item as DynamicBean)\n      },\n      onLoadData: async (viewState: ViewState) => {\n        userDynamicViewModel.getUserDynamicList((await UserManager.getUserInfo()).detail.profile.userId, viewState, this.pagingLayoutMediator)\n      },\n    }).backgroundColor(AppTheme.palette(this.themeType).commonBackground)\n  }\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\dynamic\\view\\MyDynamic.ets", "project_name": "NCMusicHarmony-master", "id": "e97d5313c86bad723fb04be676383ca7a1aed29819eb35756e5846943f74e73e"}
{"text": "import { BaseViewModel, PagingLayoutMediator, RequestOptions, ViewState } from 'lib_common';\nimport { DynamicBean, UserDynamicResultBean, ApiConstant } from '../../../../..';\n\n\nexport class UserDynamicViewModel extends BaseViewModel {\n\n   lastTime : number = -1\n\n  async getUserDynamicList(uid: string,\n                           viewState: ViewState,\n                           pagingMediator: PagingLayoutMediator) {\n\n    const result = await this.get<UserDynamicResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_USER_DYNAMIC,\n        data: {\n          \"uid\": uid,\n          \"limit\": pagingMediator.pageCount,\n          \"lasttime\": pagingMediator.page == 1 ? -1 : this.lastTime\n        },\n        viewState: viewState,\n        pagingMediator: pagingMediator,\n        pagingListConverter: (result: UserDynamicResultBean) => {\n          return result.events.map((item: DynamicBean) => {\n            item.jsonBean = JSON.parse(item.json.replace(\"\\\\\\\"\", \"\\\"\")\n              .replace(\"\\\\n\", \"/\")\n            )\n            return item\n          })\n        },\n        emptyCondition: (result: UserDynamicResultBean) => {\n          return (!result.events) || result.events.length == 0\n        }\n      }))\n    if (result) {\n      this.lastTime = result.lasttime\n    }\n  }\n}\n\nexport const userDynamicViewModel = new UserDynamicViewModel();\n\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\dynamic\\viewmodel\\UserDynamicViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "5d359837731b86c9e517021bd97d027c643fc1e19ba56303a1d5cddd36930f4d"}
{"text": "import { PagingLayoutMediator, ViewState } from 'lib_common'\nimport { CollapsibleMediator, ViewStatePagingLayout } from 'lib_common'\nimport { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\nimport { AlbumBean, albumViewModel, CpnAlbumItem } from '../../../../..'\n\n\n@Component\nexport struct AlbumMusicPage {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  mediator: CollapsibleMediator\n  scroller: Scroller\n  @State pagingLayoutMediator: PagingLayoutMediator = new PagingLayoutMediator({})\n\n  aboutToAppear() {\n    this.pagingLayoutMediator = new PagingLayoutMediator({\n      enableLoadMore: true,\n      enableRefresh: false,\n      collapsibleMediator: this.mediator,\n      scroller: this.scroller\n    })\n  }\n\n  @Builder ItemBuilder(item: object) {\n    CpnAlbumItem({ albumBean: item as AlbumBean })\n  }\n\n  build() {\n    ViewStatePagingLayout({\n      mediator: $pagingLayoutMediator,\n      ItemBuilder: (item: object, _) => {\n        this.ItemBuilder(item)\n      },\n      onLoadData: (viewState: ViewState) => {\n        albumViewModel.getAlbumList(viewState, this.pagingLayoutMediator)\n      },\n    }).backgroundColor(AppTheme.palette(this.themeType).commonBackground)\n  }\n}\n\n\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\music\\view\\AlbumMusic.ets", "project_name": "NCMusicHarmony-master", "id": "97928af725a7b19f082748a2740e34e793829a904cbcf803fa837094b6adcd6c"}
{"text": "import { BaseViewModel, PagingLayoutMediator, RequestOptions, ViewState } from 'lib_common'\nimport { AlbumResultBean, ApiConstant } from '../../../../..'\n\n\nexport class AlbumViewModel extends BaseViewModel {\n  async getAlbumList(viewState: ViewState,\n                     pagingMediator: PagingLayoutMediator) {\n\n    this.get<AlbumResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_COLLECT_ALBUM_LIST,\n        data: {\n          \"limit\": pagingMediator.pageCount,\n          \"offset\": (pagingMediator.page - 1) * pagingMediator.pageCount\n        },\n        viewState: viewState,\n        pagingMediator: pagingMediator,\n        pagingListConverter: (result: AlbumResultBean) => {\n          return result.data\n        }\n      }))\n  }\n}\n\nexport const albumViewModel = new AlbumViewModel()\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\music\\viewmodel\\AlbumViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "5792b66c2d6373615b9dd3d0ba044626f392fea425001231b092ec4b261d624c"}
{"text": "import { BaseViewModel, PagingLayoutMediator, RequestOptions, ViewState } from 'lib_common';\nimport { UserPlaylistBean, UserPlaylistResultBean, ApiConstant } from '../../../../..';\n\n\nexport class SongSheetViewModel extends BaseViewModel {\n  async getUserPlayList(uid: string,\n                        isSelfCreate: boolean,\n                        viewState: ViewState,\n                        pagingMediator: PagingLayoutMediator) {\n\n    this.get<UserPlaylistResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_USER_PLAY_LIST,\n        data: { \"uid\": uid },\n        viewState: viewState,\n        pagingMediator: pagingMediator,\n        pagingListConverter: (result: UserPlaylistResultBean) => {\n          return result.playlist.filter((item: UserPlaylistBean) => {\n            return isSelfCreate ? item.userId.toString() == uid : item.userId.toString() != uid\n          })\n        }\n      }))\n  }\n}\n\nexport const songSheetViewModel = new SongSheetViewModel();\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\music\\viewmodel\\SongSheetViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "bfbf6077f1e2fb40161303d4efc7d660e3a476f0f9d4321e9a009c7491307cc6"}
{"text": "import router from '@ohos.router'\nimport { ClickEffectLayout, RouterUrls, SizeConstant } from 'lib_common'\nimport { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\nimport { MusicPlayController, PlayerStatus, MusicPlayListDialog, EventIds } from '../../../..'\nimport emitter from '@ohos.events.emitter'\n\n\n@Component\nexport struct CpnMusicPlayBar {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  customDialogController: CustomDialogController = new CustomDialogController({\n    builder: MusicPlayListDialog(),\n    customStyle: true,\n    alignment: DialogAlignment.Bottom,\n    autoCancel: true\n  })\n  \n  @State playerIndex: number = 0\n  \n  @State playerStatus: PlayerStatus | undefined = undefined\n\n  aboutToAppear() {\n    this.playerIndex = MusicPlayController.playerIndex\n    \n    emitter.on({ eventId: EventIds.PLAYER_INDEX }, (data) => {\n      this.playerIndex = data.data.index\n    })\n    \n    emitter.on({ eventId: EventIds.PLAYER_STATUS }, (data) => {\n      this.playerStatus = data.data.status\n    })\n  }\n\n\n  build() {\n    Column() {\n      ClickEffectLayout({ click: () => {\n        router.pushUrl({ url: RouterUrls.MusicPlay })\n      } }) {\n        Row() {\n          Image(MusicPlayController.playList[this.playerIndex]?.al?.picUrl??\"\")\n            .width(30)\n            .height(30)\n            .borderRadius(SizeConstant.RADIUS_M)\n            .margin({ right: SizeConstant.SPACE_S })\n\n          Text() {\n            Span(MusicPlayController.playList[this.playerIndex]?.name??\"\").fontSize(SizeConstant.TEXT_M)\n              .fontColor(AppTheme.palette(this.themeType).firstText)\n            Span(` - ${MusicPlayController.playList[this.playerIndex]?.ar[0]?.name??\"\"}`)\n              .fontSize(SizeConstant.TEXT_M)\n              .fontColor(AppTheme.palette(this.themeType).thirdText)\n          }.layoutWeight(1)\n\n          Row() {\n            ClickEffectLayout({ click: () => {\n              if (this.playerStatus == PlayerStatus.STARTED) {\n                MusicPlayController.pause()\n              } else {\n                MusicPlayController.start()\n              }\n            } }) {\n              Image(this.playerStatus == PlayerStatus.STARTED ? $r('app.media.ic_play_stop') : $r('app.media.ic_play_start'))\n                .width(SizeConstant.ICON_L + SizeConstant.SPACE_S * 2)\n                .height(SizeConstant.ICON_L + SizeConstant.SPACE_S * 2)\n                .padding(SizeConstant.SPACE_S)\n                .fillColor(AppTheme.palette(this.themeType).secondIcon)\n                .margin({ right: SizeConstant.SPACE_M })\n            }\n\n            ClickEffectLayout({ click: () => {\n              this.customDialogController.open()\n            } }) {\n              Image($r('app.media.ic_play_list'))\n                .width(SizeConstant.ICON_L + SizeConstant.SPACE_S * 2)\n                .height(SizeConstant.ICON_L + SizeConstant.SPACE_S * 2)\n                .padding(SizeConstant.SPACE_S)\n                .fillColor(AppTheme.palette(this.themeType).secondIcon)\n            }\n          }\n        }\n        .width(\"100%\")\n        .height(SizeConstant.MUSIC_PLAY_BAR_HEIGHT)\n        .padding({ left: SizeConstant.SPACE_L, right: SizeConstant.SPACE_L })\n        .alignItems(VerticalAlign.Center)\n      }\n\n      Stack()\n        .height(`0.5px`)\n        .width(\"100%\")\n        .backgroundColor(AppTheme.palette(this.themeType).divider)\n    }.height(SizeConstant.MUSIC_PLAY_BAR_HEIGHT)\n    .backgroundColor(AppTheme.palette(this.themeType).navBarBackground)\n  }\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\view\\CpnMusicPlayBar.ets", "project_name": "NCMusicHarmony-master", "id": "243fd3e22383f1de082a1d1bf0c67e3b9151a5b8a97e1dd9b40ac90781bfcb6f"}
{"text": "export * from './My'\n\nexport * from './CpnAlbumItem'\n\nexport * from './CpnMusicPlayBar'\n\nexport * from './CpnMyHeader'\n\nexport * from './CpnPodcastSheetItem'\n\nexport * from './CpnSongSheetItem'\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\my\\view\\index.ets", "project_name": "NCMusicHarmony-master", "id": "f0e832962a18c0e7dd673c69016f22925269052d9d4a3d1b7c917f63583e9fe4"}
{"text": "export * from \"./Main\"\n\nexport * from \"./cpn/MainDrawer\"", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\main\\view\\index.ets", "project_name": "NCMusicHarmony-master", "id": "03a8ab6c5d1a07771eb84cd9dd8ae4762e33001d84cc394e6db9fcfea0274d5c"}
{"text": "import { SizeConstant, TabLayoutPagerMediator, TabPager } from 'lib_common'\nimport { CommonAppBar } from 'lib_common'\nimport router from '@ohos.router'\n\n\n@Entry\n@Component\nstruct PicturePreviewPage {\n  pics: PicturePreviewBean[]\n  @State private tabMediator: TabLayoutPagerMediator = new TabLayoutPagerMediator()\n\n  aboutToAppear() {\n    const params = (router.getParams() as PicturePreviewRouterParams)\n    this.pics = params.pics\n    this.tabMediator = new TabLayoutPagerMediator({\n      tabItems: this.pics,\n      cacheCount: 0, \n      currentIndex: params.index,\n    })\n  }\n\n  onBackPress() {\n    \n    this.tabMediator = new TabLayoutPagerMediator({\n      tabItems: this.pics,\n      cacheCount: 0,\n      currentIndex: this.tabMediator.currentIndex,\n    })\n  }\n\n  build() {\n    Column() {\n      CommonAppBar({\n        bgColor: Color.Black,\n        contentColor: Color.White,\n        CustomerTitleBuilder: () => {\n          this.CustomerTitleBuilder()\n        }\n      })\n      TabPager({ mediator: this.tabMediator,\n        TabPageBuilder: (index: number) => {\n          this.TabPageBuilder(index)\n        } }).layoutWeight(1)\n        .onAppear(() => {\n          setTimeout(() => {\n            \n            this.tabMediator = new TabLayoutPagerMediator({\n              tabItems: this.pics,\n              cacheCount: 1,\n              currentIndex: this.tabMediator.currentIndex,\n            })\n          }, 300)\n        })\n    }.width(\"100%\")\n    .height(\"100%\")\n    .backgroundColor(Color.Black)\n  }\n\n  @Builder CustomerTitleBuilder() {\n    Text(`${Math.round(this.tabMediator.currentIndex) + 1} / ${this.pics.length}`)\n      .fontSize(SizeConstant.TEXT_XL)\n      .fontWeight(FontWeight.Bold)\n      .fontColor(Color.White)\n      .maxLines(1)\n      .width(\"100%\")\n      .textAlign(TextAlign.Center)\n      .textOverflow({ overflow: TextOverflow.Ellipsis })\n      .margin({ left: SizeConstant.SPACE_M, right: SizeConstant.SPACE_M })\n  }\n\n  @Builder TabPageBuilder(index: number) {\n    Stack({ alignContent: Alignment.Center }) {\n      Image(this.pics[index].url).width(\"100%\")\n        .sharedTransition(`picPreview:${this.pics[index].url}`, {\n          duration: 300,\n          curve: Curve.Linear\n        })\n    }.width(\"100%\").height(\"100%\")\n  }\n\n  pageTransition() {\n    PageTransitionEnter({ duration: 300, curve: Curve.Linear })\n      .opacity(0)\n    PageTransitionEnter({ type: RouteType.Pop, duration: 300, curve: Curve.Linear })\n      .opacity(1)\n    PageTransitionExit({ duration: 300, curve: Curve.Linear })\n      .opacity(1)\n    PageTransitionExit({ type: RouteType.Pop, duration: 300, curve: Curve.Linear })\n      .opacity(0)\n  }\n}\n\n\nexport class PicturePreviewBean {\n  url: string\n\n  constructor(url: string) {\n    this.url = url\n  }\n}\n\nexport class PicturePreviewRouterParams {\n  index: number\n  pics: PicturePreviewBean[]\n\n  constructor(index: number, pics: PicturePreviewBean[]) {\n    this.index = index\n    this.pics = pics\n  }\n}", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\pics\\view\\PicturePreview.ets", "project_name": "NCMusicHarmony-master", "id": "cd5eb2de1012115652a5785b1201022b0bb51bc5f793000b4d34ed4f0f6067fe"}
{"text": "import { ListDataSource, SizeConstant, ViewStateLayout, ViewState } from 'lib_common'\nimport { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\nimport { MusicPlayController, LyricModel, lyricViewModel } from '../../..'\n\n\n@Component\nexport struct CpnLyric {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  lazyDataSource: ListDataSource = new ListDataSource()\n  @Prop @Watch(\"indexChange\") index: number\n  @Prop @Watch(\"currentDuringChange\") currentDuring: number\n  @State @Watch(\"currentPlayLineChange\") currentPlayLine: number = 0\n  viewState: ViewState | undefined = undefined\n  scroller: Scroller = new Scroller()\n\n  build() {\n    ViewStateLayout({ onLoadData: async (viewState) => {\n      this.viewState = viewState\n      this.lazyDataSource.reloadData(await lyricViewModel.fetchData(MusicPlayController.playList[this.index].id, viewState))\n    } }) {\n      List({ space: 0, scroller: this.scroller }) {\n        LazyForEach(this.lazyDataSource, (item: LyricModel, index: number) => {\n          ListItem() {\n            Column() {\n              if (item.lyric) {\n                Text(item.lyric)\n                  .textAlign(TextAlign.Center)\n                  .fontSize(SizeConstant.TEXT_M)\n                  .fontColor(this.currentPlayLine != index ? Color.White : AppTheme.palette(this.themeType).primary)\n                  .width(\"100%\")\n                  .margin(SizeConstant.SPACE_S)\n              }\n              if (item.tLyric) {\n                Text(item.tLyric)\n                  .textAlign(TextAlign.Center)\n                  .fontSize(SizeConstant.TEXT_S)\n                  .fontColor(this.currentPlayLine != index ? Color.White : AppTheme.palette(this.themeType).primary)\n                  .width(\"100%\")\n                  .margin(SizeConstant.SPACE_S)\n              }\n            }.padding({ left: SizeConstant.SPACE_L, right: SizeConstant.SPACE_L })\n          }\n        }, (item: object, _) => {\n          return JSON.stringify(item)\n        })\n      }.margin({ top: SizeConstant.SPACE_XXL, bottom: SizeConstant.SPACE_XXL }).width(\"100%\")\n    }\n  }\n\n  currentDuringChange() {\n    for (let index = 0; index < this.lazyDataSource.dataArray.length; index++) {\n      const model = this.lazyDataSource.dataArray[index] as LyricModel\n      if (this.currentDuring < model.time) {\n        this.currentPlayLine = Math.max(0, index - 1)\n        return\n      }\n    }\n  }\n\n  async indexChange() {\n    this.lazyDataSource.reloadData(await lyricViewModel.fetchData(MusicPlayController.playList[this.index].id, this.viewState))\n  }\n\n  currentPlayLineChange() {\n    this.scroller.scrollToIndex(this.currentPlayLine)\n  }\n}\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\play\\view\\CpnLyric.ets", "project_name": "NCMusicHarmony-master", "id": "ead55285df31de4823c708ae037c7bf035faf14f7663addb4188c3fb5b952b09"}
{"text": "import { BaseViewModel, RequestOptions, ViewState } from 'lib_common';\nimport { ApiConstant } from '../../..';\nimport { LyricModel, LyricResultBean, LyricUtil } from '../../..';\n\nexport class LyricViewModel extends BaseViewModel {\n  async fetchData(id: number, viewState: ViewState) : Promise<LyricModel[]> {\n    const lyricResult = await this.get<LyricResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_LYRIC,\n        data: { \"id\": id},\n        viewState: viewState\n      }))\n\n    const lyricModels = LyricUtil.parse(lyricResult)\n    return lyricModels\n  }\n}\n\nexport const lyricViewModel = new LyricViewModel()", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\play\\viewmodel\\LyricViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "6100c755b01c542c1369c6355855775d33eb8463b3dd0b2cec971bd89d747c2b"}
{"text": "import { BaseViewModel, PagingLayoutMediator, RequestOptions, ViewState } from 'lib_common';\nimport { SongSheetDetailResultBean, ApiConstant, UserPlayListDetailResultBean } from '../../..';\n\n\n\nexport class SongSheetDetailViewModel extends BaseViewModel {\n  async getSongDetail(id: number,\n                      viewState: ViewState,\n                      pagingMediator: PagingLayoutMediator): Promise<UserPlayListDetailResultBean> {\n\n    const playlistDetailResultBean = await this.get<UserPlayListDetailResultBean>(\n      new RequestOptions({\n        url: ApiConstant.URL_PLAY_LIST_DETAIL,\n        data: { \"id\": id },\n        viewState: viewState,\n      }))\n    if (playlistDetailResultBean) {\n      const trackIdBeans = playlistDetailResultBean.playlist.trackIds\n      let ids = \"\"\n      if (trackIdBeans) {\n        for (let index = 0; index < trackIdBeans.length; index++) {\n          ids += trackIdBeans[index].id;\n          if (index != trackIdBeans.length - 1) {\n            ids += \",\"\n          }\n        }\n      }\n      this.get<SongSheetDetailResultBean>(\n        new RequestOptions({\n          url: ApiConstant.URL_SONG_DETAIL,\n          data: { \"ids\": ids },\n          viewState: viewState,\n          pagingMediator: pagingMediator,\n          pagingListConverter: (result: SongSheetDetailResultBean) => {\n            return result.songs\n          }\n        }))\n    }\n    return playlistDetailResultBean\n  }\n}\n\nexport const songSheetDetailViewModel = new SongSheetDetailViewModel();\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\songsheet\\viewmodel\\SongSheetDetailViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "686725b63b7163db8891fb4fd172cab395d3c1951b21aed3ea6c4b23497edc07"}
{"text": "import {RouterUrls } from 'lib_common'\nimport { AppTheme, THEME_TYPE, ThemeType } from 'lib_theme'\nimport router from '@ohos.router'\nimport { IUserInfoBean, UserInfoBean, UserManager, STORAGE_USER_INFO } from '../../..'\n\n\n\n@Entry\n@Component\nexport default struct SplashPage {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  @StorageLink(STORAGE_USER_INFO) userInfo: UserInfoBean = new UserInfoBean({} as IUserInfoBean)\n\n  async aboutToAppear() {\n    this.userInfo = await UserManager.getUserInfo()\n    setTimeout(() => {\n      router.replaceUrl({ url: this.userInfo ? RouterUrls.Index : RouterUrls.Login })\n    }, 1000)\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Top }) {\n      Image($r('app.media.ic_app_logo'))\n        .width(80)\n        .height(80)\n        .margin({ top: 300 })\n        .borderRadius(40)\n        .sharedTransition('imgAppLogo', {\n          duration: 300,\n          curve: Curve.Linear\n        })\n\n    }.width(\"100%\").height(\"100%\").backgroundColor(AppTheme.palette(this.themeType).primary)\n  }\n\n  pageTransition() {\n    PageTransitionEnter({ type: RouteType.Push, duration: 300, curve: Curve.Linear })\n      .opacity(0)\n    PageTransitionEnter({ type: RouteType.Pop, duration: 300, curve: Curve.Linear })\n      .opacity(1)\n    PageTransitionExit({ type: RouteType.Push, duration: 300, curve: Curve.Linear })\n      .opacity(1)\n    PageTransitionExit({ type: RouteType.Pop, duration: 300, curve: Curve.Linear })\n      .opacity(0)\n  }\n}\n\n", "path": "NCMusicHarmony-master\\entry\\src\\main\\ets\\pages\\splash\\view\\Splash.ets", "project_name": "NCMusicHarmony-master", "id": "bc928889b58f7d287e50cda1518093f035863042ed63116f4d55a7143582b9ed"}
{"text": "export class BaseResultBean {\n  code?: number\n  message?: string\n}", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\bean\\BaseResultBean.ets", "project_name": "NCMusicHarmony-master", "id": "ad2b7cc9bc64f8111e2816d5fe359f4ee11e770f81a63eb695816879f363d6bb"}
{"text": "export * from './BaseDataSource'\n\nexport * from './BaseResultBean'\n\nexport * from './RequestParamBean'\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\bean\\index.ets", "project_name": "NCMusicHarmony-master", "id": "fc8e318c7231df317eb2224489a56453e59d87d070b3734846c2113dc64f5816"}
{"text": "import { PagingLayoutMediator, ViewState } from '..'\n\n\nexport interface IRequestOptions {\n  \n  url: string\n  \n  data?: object\n  \n  viewState?: ViewState,\n  \n  pagingMediator?: PagingLayoutMediator,\n  \n  successCondition?: (result: object) => boolean\n  \n  emptyCondition?: (result: object) => boolean\n  \n  pagingListConverter?: (result: object) => object[]\n  \n  interceptWhenNoSuccess?: boolean\n}\n\nexport class RequestOptions {\n  url: string\n  data?: object\n  viewState?: ViewState\n  pagingMediator?: PagingLayoutMediator = null\n  successCondition?: (result: object) => boolean = null\n  emptyCondition?: (result: object) => boolean = null\n  pagingListConverter?: (result: object) => object[] = null\n  interceptWhenNoSuccess?: boolean = true\n\n  constructor(options: IRequestOptions) {\n    this.url = options.url\n    this.data = options.data\n    this.viewState = options.viewState\n    this.pagingMediator = options.pagingMediator\n    this.pagingListConverter = options.pagingListConverter\n    this.successCondition = options.successCondition\n    this.emptyCondition = options.emptyCondition\n    if (options.interceptWhenNoSuccess != undefined) {\n      this.interceptWhenNoSuccess = options.interceptWhenNoSuccess\n    }\n  }\n}", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\bean\\RequestParamBean.ets", "project_name": "NCMusicHarmony-master", "id": "80aa063a48ec48a85182a183c91493ba7ecdc71e3d7f3f6bdc5f26bb005d4183"}
{"text": "@Component\nexport struct CommonNetworkImage {\n  url: string | undefined = undefined\n  placeHolder: Resource = $r('app.media.ic_default_place_holder')\n  @State status: NetworkImageLoadStatus = NetworkImageLoadStatus.LOADING\n  @State imageOpacity: number = 0\n\n  build() {\n    Stack() {\n      if (this.status != NetworkImageLoadStatus.SUCCESS) {\n        Image(this.placeHolder)\n          .width(\"100%\")\n          .height(\"100%\")\n          .constraintSize({ maxWidth: 72, maxHeight: 72 })\n      }\n      \n      \n      \n      \n      \n\n      Image(this.url)\n        .width(\"100%\")\n        .height(\"100%\")\n        .onComplete((event: {\n          width: number;\n          height: number;\n          componentWidth: number;\n          componentHeight: number;\n          loadingStatus: number;\n        }) => {\n          if (event.loadingStatus == 1) {\n            this.status = NetworkImageLoadStatus.SUCCESS\n            \n            \n            \n            \n            \n          }\n        })\n        .onError(() => {\n          this.status = NetworkImageLoadStatus.ERROR\n        })\n        .visibility(this.status == NetworkImageLoadStatus.SUCCESS ? Visibility.Visible : Visibility.Hidden)\n        \n    }\n  }\n}\n\nenum NetworkImageLoadStatus {\n  LOADING,\n  SUCCESS,\n  ERROR\n}", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\cpn\\CommonNetworkImage.ets", "project_name": "NCMusicHarmony-master", "id": "98ad92fa0c0c2b811e668f710a99206ef519c600403577f820a7d69e7c0dcc7c"}
{"text": "import { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\n\n\n@Component\nexport struct CpnProgressBar {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  progressHeight: number = 1\n  progressActiveHeight: number = 2\n  progressThumbSize: number = 6\n  progressThumbActiveSize: number = 12\n  progressColor: ResourceColor = AppTheme.palette(this.themeType).primary\n  bgColor: ResourceColor = Color.White\n  thumbColor: ResourceColor = Color.White\n  @Link progress: number\n  @State isActive: boolean = false\n  @State progressWidth: number = 0\n  dragCallback: (isFinish: boolean) => void = null\n\n  build() {\n    Stack({ alignContent: Alignment.Start }) {\n      Stack()\n        .width(\"100%\")\n        .height(this.isActive ? this.progressActiveHeight : this.progressHeight)\n        .backgroundColor(this.bgColor)\n        .borderRadius(this.isActive ? this.progressActiveHeight / 2 : this.progressHeight / 2)\n      Stack()\n        .width(`${this.progress}%`)\n        .height(this.isActive ? this.progressActiveHeight : this.progressHeight)\n        .backgroundColor(this.progressColor)\n        .borderRadius(this.isActive ? this.progressActiveHeight / 2 : this.progressHeight / 2)\n      Stack()\n        .width(this.isActive ? this.progressThumbActiveSize : this.progressThumbSize)\n        .height(this.isActive ? this.progressThumbActiveSize : this.progressThumbSize)\n        .backgroundColor(this.thumbColor)\n        .borderRadius(this.isActive ? this.progressThumbActiveSize / 2 : this.progressThumbSize / 2)\n        .offset({\n          x: (this.progressWidth - (this.isActive ? this.progressThumbActiveSize : this.progressThumbSize)) * this.progress / 100.0\n        })\n    }\n    .height(\"100%\")\n    .width(\"100%\")\n    .onAreaChange((_, newValue) => {\n      this.progressWidth = newValue.width as number\n    })\n    .onTouch((event: TouchEvent) => {\n      if (event.type == TouchType.Down || event.type == TouchType.Move) {\n        this.isActive = true\n        this.progress = Math.max(0, Math.min(100, event.touches[0].x / this.progressWidth * 100))\n        if (this.dragCallback) {\n          this.dragCallback(false)\n        }\n      } else if (event.type == TouchType.Up || event.type == TouchType.Cancel) {\n        this.isActive = false\n        this.progress = Math.max(0, Math.min(100, event.touches[0].x / this.progressWidth * 100))\n        if (this.dragCallback) {\n          this.dragCallback(true)\n        }\n      }\n    })\n  }\n}", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\cpn\\CpnProgressBar.ets", "project_name": "NCMusicHarmony-master", "id": "cf1e684a173e3058794fbf335ab9ccff995726be5ea376c3dcf83467de425778"}
{"text": "import { ViewStateEmpty } from './ViewStateEmpty'\nimport { ViewStateError } from './ViewStateError'\nimport { ViewStateLoading } from './ViewStateLoading'\n\n\n@Component\nexport struct ViewStateLayout {\n  @State viewState: ViewState = new ViewState(ViewStateType.LOADING)\n  \n  onLoadData: (viewState: ViewState) => void = () => {}\n\n  \n  onRetry() {\n    this.onLoadData(this.viewState)\n  }\n\n  @BuilderParam\n  ContentBuilder: () => void = () => {\n  }\n\n  aboutToAppear() {\n    this.onLoadData(this.viewState)\n  }\n\n  build() {\n    Stack() {\n      if (this.viewState.type === ViewStateType.LOADING) {\n        ViewStateLoading()\n      } else if (this.viewState.type === ViewStateType.EMPTY) {\n        ViewStateEmpty({ retryCallback: () => {\n          this.onRetry()\n        } })\n      } else if (this.viewState.type === ViewStateType.ERROR) {\n        ViewStateError({\n          errorCode: this.viewState.errorCode,\n          errorMessage: this.viewState.errorMessage,\n          retryCallback: () => {\n            this.onRetry()\n          }\n        })\n      } else {\n        this.ContentBuilder()\n      }\n    }.width(\"100%\").height(\"100%\")\n  }\n}\n\n@Observed\nexport class ViewState {\n  public errorCode: number = 0\n  public errorMessage: string = \"\"\n  public type: ViewStateType\n\n  constructor(type: ViewStateType) {\n    this.type = type\n  }\n}\n\nexport enum ViewStateType {\n  LOADING = 0,\n  SUCCESS = 1,\n  EMPTY = 2,\n  ERROR = 3\n}\n\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\cpn\\viewstate\\ViewStateLayout.ets", "project_name": "NCMusicHarmony-master", "id": "791d8e0f59e8b01231fa85f5fe14043abdf2d07176e07ceb3b1c97c6b955dcb9"}
{"text": "import { AppTheme, ThemeType, THEME_TYPE } from 'lib_theme'\nimport { CpnLoading } from '..'\nimport { SizeConstant } from '../..'\n\n\n@Preview\n@Component\nexport struct ViewStateLoading {\n  @StorageLink(THEME_TYPE) themeType: ThemeType = ThemeType.DEFAULT\n  private tip: string = \"\"\n  flexAlign: FlexAlign = FlexAlign.Center\n  yPosition: string = \"40%\"\n\n  build() {\n    Stack() {\n      Column() {\n        CpnLoading()\n        Text(this.tip)\n          .fontSize(SizeConstant.TEXT_M)\n          .fontColor(AppTheme.palette(this.themeType).secondText)\n          .fontWeight(FontWeight.Normal)\n          .margin(SizeConstant.SPACE_M)\n      }.position({ y: this.yPosition }).width(\"100%\").alignItems(HorizontalAlign.Center)\n    }.width('100%')\n    .height('100%')\n  }\n}", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\cpn\\viewstate\\ViewStateLoading.ets", "project_name": "NCMusicHarmony-master", "id": "57c064b9142f3d912931b04dfd1c7ce521b2df27f0588bbbd15a30036257c1bd"}
{"text": "const numberArrayCache: Array<Array<number>> = []\n\nexport class ArrayUtil {\n  static generateNumberArray(count: number): Array<number> {\n    if (numberArrayCache[count]) {\n      return numberArrayCache[count]\n    } else {\n      const numberArray: Array<number> = []\n      for (let index = 0; index < count; index++) {\n        numberArray[index] = index\n      }\n      numberArrayCache[count] = numberArray\n      return numberArrayCache[count]\n    }\n  }\n}\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\util\\ArrayUtil.ets", "project_name": "NCMusicHarmony-master", "id": "e8f18332257e975d7cc1810db5048868ab1d030c2834c5d1167a303cba9f6300"}
{"text": "import dataPreferences from '@ohos.data.preferences';\nimport { LogUtil } from './LogUtil';\n\nlet preference: dataPreferences.Preferences;\n\n\nexport class KVUtil {\n  static async getInstance() {\n    try {\n      preference = await dataPreferences.getPreferences(getContext(), \"NCMusicHarmony\");\n    } catch (err) {\n      LogUtil.error(`Failed to get preferences, Cause: ${err}`);\n    }\n  }\n\n  static async putString(key: string, value: string) {\n    try {\n      if (!preference) {\n        await this.getInstance();\n      }\n      try {\n        await preference.put(key, value);\n      } catch (err) {\n        LogUtil.error(`Failed to put value, Cause: ${err}`);\n      }\n      await preference.flush();\n    } catch (err) {\n      LogUtil.error(`Failed to get preferences, Cause: ${err}`);\n    }\n  }\n\n  static async getString(key: string) {\n    let value: string = null;\n    if (!preference) {\n      await this.getInstance();\n    }\n    try {\n      value = (await preference.get(key, '')).toString();\n    } catch (err) {\n      LogUtil.error(`Failed to get value, Cause: ${err}`);\n    }\n    return value;\n  }\n\n  static async get<T>(key: string) {\n    let value: T = null;\n    if (!preference) {\n      await this.getInstance();\n    }\n    try {\n      const json = await this.getString(key)\n      if (json) {\n        \n        value = JSON.parse(json) as T\n      }\n    } catch (err) {\n      LogUtil.error(`Failed to get value, Cause: ${err}`);\n    }\n    return value;\n  }\n}\n\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\util\\KVUtil.ets", "project_name": "NCMusicHarmony-master", "id": "a95abcaf2136621c7e841e7c3826915d17078870a84fd196290c20680d55b2c8"}
{"text": "import hilog from '@ohos.hilog';\n\n\nexport class LogUtil {\n  private static domain: number = 0xFF00;\n  private static prefix: string = '[NCMusicLog]';\n  private static format: string = '%{public}s';\n\n  static debug(...args: string[]) {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }\n\n  static info(...args: string[]) {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }\n\n  static warn(...args: string[]) {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }\n\n  static error(...args: string[]) {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }\n}\n\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\util\\LogUtil.ets", "project_name": "NCMusicHarmony-master", "id": "40be9a04ea987236d4c24a21eac9818bab0c3a6428982854a5fb88fe579f1420"}
{"text": "export class ScreenUtils {\n  static avoidArea\n\n  static init(avoidArea) {\n    ScreenUtils.avoidArea = avoidArea\n  }\n\n\n  static getStatusBarHeight(): number{\n    return px2vp(ScreenUtils.avoidArea.topRect.height)\n  }\n\n\n  static getNavigationBarHeight(): number{\n    return ScreenUtils.avoidArea.bottomRect.height\n  }\n}\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\util\\ScreenUtils.ets", "project_name": "NCMusicHarmony-master", "id": "554e02a009b254322fdedc45e860f3cec0c849d02b4fa2495fbe31bba0b62250"}
{"text": "export class TimeUtil {\n\n  static formatCurrentDate() {\n    const currentDate: Date = new Date();\n\n    const year: number = currentDate.getFullYear();\n    const month: number = currentDate.getMonth() + 1; \n    const day: number = currentDate.getDate();\n    const hours: number = currentDate.getHours();\n    const minutes: number = currentDate.getMinutes();\n    const seconds: number = currentDate.getSeconds();\n\n    \n    const formattedDate: string = `${year}${TimeUtil.padZero(month)}${TimeUtil.padZero(day)} ${TimeUtil.padZero(hours)}:${TimeUtil.padZero(minutes)}:${TimeUtil.padZero(seconds)}`;\n\n    return formattedDate;\n  }\n\n  static padZero(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  static formatDate(timestamp) {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n  }\n\n  static msToTime(ms: number) {\n    const seconds = Math.floor((ms / 1000) % 60);\n    const minutes = Math.floor((ms / (1000 * 60)) % 60);\n    return  (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n  }\n\n}", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\util\\TimeUtil.ets", "project_name": "NCMusicHarmony-master", "id": "017c1dc1d47547e11c19342bf987e62b523f1b4c680afea7d1543e764d8ec381"}
{"text": "import { BaseResultBean, RequestOptions, ApiRequest } from '..'\n\nexport class BaseViewModel {\n  async get<T extends BaseResultBean>(\n    requestBean: RequestOptions\n  ): Promise<T> {\n    return ApiRequest.get(requestBean)\n  }\n\n\n  async post<T extends BaseResultBean>(\n    requestBean: RequestOptions\n  ): Promise<T> {\n    return ApiRequest.post(requestBean)\n  }\n}\n\n\n", "path": "NCMusicHarmony-master\\lib_common\\src\\main\\ets\\viewmodel\\BaseViewModel.ets", "project_name": "NCMusicHarmony-master", "id": "f3aae8526408d5762a2d989f20814784932b3bb2099a2a4abe8c8625855e4083"}
{"text": "import { DarkThemePalette, DefaultThemePalette, IThemePalette, OriginThemePalette, GreenThemePalette, ThemeType } from '.'\n\n\nexport const defaultThemePalette = new DefaultThemePalette()\n\nexport const darkThemePalette = new DarkThemePalette()\n\nexport const originThemePalette = new OriginThemePalette()\n\nexport const greenThemePalette = new GreenThemePalette()\n\nexport class AppTheme {\n  \n  static palette(themeType: ThemeType): IThemePalette {\n    if (themeType == ThemeType.DEFAULT) {\n      return defaultThemePalette\n    } else if (themeType == ThemeType.DARK) {\n      return darkThemePalette\n    } else if (themeType == ThemeType.ORIGIN) {\n      return originThemePalette\n    } else if (themeType == ThemeType.GREEN) {\n      return greenThemePalette\n    } else {\n      return defaultThemePalette\n    }\n  }\n}\n\n\nexport const THEME_TYPE = \"THEME_TYPE\"\n\n", "path": "NCMusicHarmony-master\\lib_theme\\src\\main\\ets\\AppTheme.ets", "project_name": "NCMusicHarmony-master", "id": "b5cb3027e981ad3b321b486a766e32dc5ef3c42840a9d57b2a19b7d64ad04041"}
{"text": "export * from './palette'\nexport * from './AppTheme'\nexport * from './ThemeType'\n", "path": "NCMusicHarmony-master\\lib_theme\\src\\main\\ets\\index.ets", "project_name": "NCMusicHarmony-master", "id": "4e7b3222c6067223095db4181307faa399c322ef20d28747cabd3d5141f66ab7"}
{"text": "export enum ThemeType {\n  DEFAULT,\n  DARK,\n  ORIGIN,\n  GREEN\n}", "path": "NCMusicHarmony-master\\lib_theme\\src\\main\\ets\\ThemeType.ets", "project_name": "NCMusicHarmony-master", "id": "0658c5e58da6163419bfe5409cc791a9739f5dabc164e705f04c44c8ab841141"}
{"text": "import { IThemePalette } from '.'\n\n\nexport class DarkThemePalette implements IThemePalette {\n  primary: ResourceColor = \"#FFF0484E\"\n  secondary: ResourceColor = \"#FFF0888C\"\n  pure: ResourceColor = \"#FF000000\"\n  divider: ResourceColor = \"#FF555555\"\n  commonBackground: ResourceColor = \"#FF222222\"\n  deepenBackground: ResourceColor = \"#FF444444\"\n  titleBackground: ResourceColor = \"#FF333333\"\n  navBarBackground: ResourceColor = \"#FF333333\"\n  drawerBackground: ResourceColor = \"#FF333333\"\n  firstText: ResourceColor = \"#FFFFFFFF\"\n  secondText: ResourceColor = \"#FFBBBBBB\"\n  thirdText: ResourceColor = \"#FF999999\"\n  firstIcon: ResourceColor = \"#FFFFFFFF\"\n  secondIcon: ResourceColor = \"#FFBBBBBB\"\n  thirdIcon: ResourceColor = \"#FF999999\"\n}", "path": "NCMusicHarmony-master\\lib_theme\\src\\main\\ets\\palette\\DarkThemePalette.ets", "project_name": "NCMusicHarmony-master", "id": "424bbba59e7d0c9378b8d4c8625dfef2bb6f7e2df88b8fec3f691d19cd88d559"}
{"text": "export * from './IThemePalette'\nexport * from './DefaultThemePalette'\nexport * from './DarkThemePalette'\nexport * from './GreenThemePalette'\nexport * from './OriginThemePalette'\n", "path": "NCMusicHarmony-master\\lib_theme\\src\\main\\ets\\palette\\index.ets", "project_name": "NCMusicHarmony-master", "id": "949886d20021e36048ff4eca01a27adea471f2fd84ba44e1ad5f40d2eb078944"}
{"text": "@Entry\n@Component\nstruct Index {\n  @State message: string = 'OpenHarmony'\n  @State cook: string = 'Cookbook'\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n\n\n        \n        Text(this.cook)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}", "path": "oh-cookbook-main\\packages\\cookbook\\entry\\src\\main\\ets\\pages\\Index.ets", "project_name": "oh-cookbook-main", "id": "7f34a109377eccf59c50ff7e4a04fb2e567e8bb46c8a8d0f4620d483d520fd99"}
{"text": "import router from '@ohos.router';\n\n@Component\nexport struct OhNavBar {\n  private isTitleCenter = false;\n  private isBack = true;\n  private title: string;\n  private bgColor: ResourceColor = Color.White;\n  private shadowRadius: number = 0;\n  build() {\n    Stack() {\n      Row() {\n        if (this.isBack) {\n          Image($r('app.media.ic_page_back'))\n            .width(42).height(42)\n            .margin({left: 16})\n            .objectFit(ImageFit.Contain).padding(12)\n            .onClick(() => {\n              router.back();\n            })\n        }\n        if (!this.isTitleCenter) {\n          Text(this.title)\n            .fontSize(16)\n            .fontColor(Color.Black)\n            .fontWeight(FontWeight.Medium)\n            .padding({ left: 12, right: 12 })\n        }\n        Blank()\n      }.width('100%').height('100%')\n      if (this.isTitleCenter) {\n        Row() {\n          Text(this.title)\n            .width('100%')\n            .fontSize(20)\n            .fontColor(Color.Black)\n            .fontWeight(FontWeight.Medium)\n            .textAlign(TextAlign.Center)\n        }.width('100%').height('100%')\n      }\n    }.width('100%').height(48)\n    .border({width: {bottom: 0.5}, color: '#cccccc'})\n    .backgroundColor(this.bgColor)\n    .shadow({radius: this.shadowRadius, color: Color.Gray})\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\base\\OhNavBar.ets", "project_name": "ohbili-master", "id": "1d2a9ce974d1cfd6ff6c19e196b9072fe8ff64b71267345aeeca18ce89e0d261"}
{"text": "@Component\nexport struct SettingRow {\n  icon?: string | PixelMap | Resource\n  title: string\n  info?: string | Resource\n  clickHandler?: (event?: ClickEvent) => void\n  showRightArrow?: boolean = true\n\n  build() {\n    Row() {\n      Image(this.icon).width(26).height(26).borderRadius(13).margin({ left: 14 })\n      Column() {\n        Text(this.title).fontSize(16).fontColor('#333333')\n          .alignSelf(ItemAlign.Start)\n          .margin({ top: 4 })\n        Text(this.info)\n          .fontSize(12)\n          .fontColor('#888888')\n          .maxLines(2)\n          .alignSelf(ItemAlign.Start)\n          .margin({ top: 4, bottom: 4 })\n      }.padding({ left: 14, right: 14 })\n      .layoutWeight(1)\n      .alignItems(HorizontalAlign.Center)\n\n      Blank();\n      if (this.showRightArrow) {\n        Image($r('app.media.ic_arrow_right'))\n          .width(12).height(24)\n          .objectFit(ImageFit.Contain).margin({ right: 14 })\n      }\n    }\n    .width('100%')\n    .onClick(this.clickHandler)\n    .margin({ top: 5, bottom: 5 })\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\base\\SettingRow.ets", "project_name": "ohbili-master", "id": "3247a80b738e073edeb179a3d432ed5538cd9e8d7bef7077bba0a55b7cc403ca"}
{"text": "@Component\nexport struct SettingSwitchItem {\n  private title: string;\n  @Link value: string;\n  private callback: (isOn) => void = (isOn) => {\n    this.value = isOn ? '1' : '0';\n  }\n\n  build() {\n    Row() {\n      Text(this.title).fontSize(14).fontColor('#333333')\n      Blank()\n      Toggle({ type: ToggleType.Switch, isOn: this.value == '1' }).onChange(this.callback)\n    }.width('100%').height(50)\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\base\\SettingSwitchItem.ets", "project_name": "ohbili-master", "id": "267d88677e914592ec4dc441b53b2aaae105ed0d12e628c6ef01caccb51e0b71"}
{"text": "@Component\nexport struct SettingTextItem {\n  private title: string;\n  @Link value: string;\n  private arr: string[] = [];\n  private callback: () => void = () => {\n    if (this.arr.length > 0) {\n      TextPickerDialog.show({\n        range: this.arr,\n        selected: this.arr.indexOf(this.value),\n        onAccept: (value: TextPickerResult) => {\n          this.value = this.arr[value.index]\n        } })\n    }\n  }\n\n  build() {\n    Row() {\n      Text(this.title).fontSize(14).fontColor('#333333')\n      Blank()\n      Text(this.value).fontSize(14).fontColor('#888888').onClick(this.callback)\n    }.width('100%').height(50)\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\base\\SettingTextItem.ets", "project_name": "ohbili-master", "id": "48c8f022882ebc4c82f1769f4ac9df3557ef27bdb992bc87a9d7cef3e0d79f51"}
{"text": "import router from '@ohos.router'\nimport { ImageKnifeComponent, ImageKnifeOption, ScaleType,\n  ImageKnifeDrawFactory } from '@ohos/imageknife'\nimport { BaseVideo } from './../../model/response/Response'\nimport { BLog } from './../../utils/BLog'\nimport { StringUtil } from './../../utils/StringUtil'\n\n@Component\nexport struct RecommendItemView {\n  private item: BaseVideo\n  private ratio: number = 4/3\n\n  build() {\n    Column() {\n      Stack() {\n        \n        Image(this.item.pic ? this.item.pic : $r('app.media.bg_default_show'))\n          .width('100%')\n          .height('100%')\n          .borderRadius({ topLeft: 4, topRight: 4 })\n        Row() {\n          Image($r('app.media.ic_play_count_white'))\n            .width(16)\n            .height(16)\n          Text(StringUtil.generateCN(this.item.stat.view))\n            .fontSize(11)\n            .fontColor(Color.White)\n            .margin({ left: 4, right: 8 })\n          Image($r('app.media.ic_danmakus_white'))\n            .width(16)\n            .height(16)\n          Text(this.item.stat.danmaku + \"\")\n            .fontSize(11)\n            .fontColor(Color.White)\n            .margin({ left: 4, right: 8 })\n          Blank()\n          Text(StringUtil.stringForTime(<number>this.item.duration * 1000))\n            .fontSize(11)\n            .fontColor(Color.White)\n        }.width('100%').padding(4).linearGradient({\n          colors: [[\"#00000000\", 0.0], [\"#aa000000\", 1.0]]\n        })\n      }.width('100%')\n      .aspectRatio(this.ratio)\n      .alignContent(Alignment.BottomStart)\n\n      Text(this.item.title)\n        .fontSize(14)\n        .fontColor('#333333')\n        .fontWeight(FontWeight.Regular)\n        .height(48)\n        .width('100%')\n        .textAlign(TextAlign.Start)\n        .maxLines(2)\n        .align(Alignment.Top)\n        .padding({ left: 12, right: 12, top: 12 })\n      Row() {\n        Image($r('app.media.music_icon_playlist_upper'))\n          .width(16)\n          .height(16)\n          .margin({ left: 12, right: 8 })\n        Text(this.item.owner.name)\n          .maxLines(1)\n          .fontSize(12)\n          .fontColor('#aaaaaa')\n          .height(30)\n          .width('100%')\n      }\n    }\n    .onClick(() => {\n      router.pushUrl({ url: 'pages/Video', params: { vInfo: this.item } });\n    })\n    .borderRadius(4)\n    .backgroundColor('#ffffff')\n    .shadow({radius: 3, color: \"#ff6d6d6d\"})\n  }\n\n  private getImageKnifeOption(): ImageKnifeOption {\n    BLog.i(\"item.pic: \" + this.item.pic);\n    let imageKnifeOption: ImageKnifeOption =\n      {\n        loadSrc: this.item.pic ? this.item.pic : $r('app.media.bg_default_show'),\n        mainScaleType: ScaleType.CENTER_CROP,\n        placeholderSrc: $r('app.media.bg_default_show'),\n        placeholderScaleType: ScaleType.CENTER_CROP,\n        errorholderSrc: $r('app.media.img_load_fail_place_holder'),\n        errorholderSrcScaleType: ScaleType.CENTER_CROP,\n        drawLifeCycle:ImageKnifeDrawFactory.createRoundLifeCycle(0, \"#ffffff\", 8)\n      };\n    return imageKnifeOption;\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\home\\RecommendItem.ets", "project_name": "ohbili-master", "id": "4de2d0a528e5e0248e0fc2f8d170b309a67fbc306fc447980bf443911b7bc933"}
{"text": "@Component\nexport struct MineOptView {\n  build() {\n    Row() {\n      Column() {\n        Image($r('app.media.ic_mine_offline'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.offline_cache'))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_mine_history'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.history_record'))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_mine_favorite'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.my_favorite'))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_mine_watchlater'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.watch_later'))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n    }.width('100%').margin({ top: 16, bottom: 16 })\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\mine\\MineOpt.ets", "project_name": "ohbili-master", "id": "98903c001cc8e18fb8809eec26559a3ef94b7bfe4a3a54aeb672abb7d150fac6"}
{"text": "import router from '@ohos.router'\n\n@Component\nexport struct MoreServerView {\n  build() {\n    Column() {\n      Text($r('app.string.more_service'))\n        .fontSize(18)\n        .fontColor('#333333')\n        .fontWeight(FontWeight.Medium).margin({ left: 16, top: 24, right: 16, bottom: 24 })\n\n      Row() {\n        Image($r('app.media.ic_setting'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.setting'))\n          .fontSize(16)\n          .fontColor('#333333')\n          .margin({ left: 16 })\n        Blank()\n        Image($r('app.media.ic_arrow_right'))\n          .objectFit(ImageFit.Auto)\n          .width(20)\n          .height(20)\n      }.width('100%')\n      .padding({ left: 24, top: 16, right: 12, bottom: 16 })\n      .onClick(() => {\n        router.pushUrl({ url: \"pages/Setting\" });\n      })\n\n      Row() {\n        Image($r('app.media.ic_feedback'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.problem_feedback'))\n          .fontSize(16)\n          .fontColor('#333333')\n          .margin({ left: 16 })\n        Blank()\n        Image($r('app.media.ic_arrow_right'))\n          .objectFit(ImageFit.Auto)\n          .width(20)\n          .height(20)\n      }.width('100%')\n      .padding({ left: 24, top: 16, right: 12, bottom: 16 })\n      .onClick(() => {\n        router.pushUrl({ url: \"pages/Feedback\" });\n      })\n\n      Row() {\n        Image($r('app.media.ic_about'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.about'))\n          .fontSize(16)\n          .fontColor('#333333')\n          .margin({ left: 16 })\n        Blank()\n        Image($r('app.media.ic_arrow_right'))\n          .objectFit(ImageFit.Auto)\n          .width(20)\n          .height(20)\n      }.width('100%')\n      .padding({ left: 24, top: 16, right: 12, bottom: 16 })\n      .onClick(() => {\n        router.pushUrl({ url: \"pages/About\" });\n      })\n\n    }.width('100%')\n    .justifyContent(FlexAlign.Start)\n    .alignItems(HorizontalAlign.Start)\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\mine\\MoreServer.ets", "project_name": "ohbili-master", "id": "d229c2d242f06d5af4095084fd954cd58a0cfe49fddc70fd5e1ab9979ea062ac"}
{"text": "import promptAction from '@ohos.promptAction'\nimport router from '@ohos.router';\n\n@Component\nexport struct UserHeadView {\n  @StorageLink('isOhBiliLoggedIn') loginState: boolean = false;\n  build() {\n    Row() {\n      Image($r(\"app.media.ic_live_no_face_dark\"))\n        .width(64)\n        .height(64)\n        .borderRadius(32)\n        .margin({ left: 16, right: 16 })\n\n      if(!this.loginState)\n      {\n        Text($r('app.string.click_login'))\n          .fontSize(18)\n          .fontColor('#333333')\n          .fontWeight(FontWeight.Medium)\n          .maxLines(1)\n      }\n\n      Blank()\n\n      Image($r('app.media.ic_arrow_right'))\n        .objectFit(ImageFit.Auto)\n        .width(20)\n        .height(20)\n        .margin({ left: 16, right: 16 })\n\n    }.margin({ top: 32, bottom: 32 }).width('100%')\n    .justifyContent(FlexAlign.Start)\n    .onClick(() => {\n      if(!this.loginState){\n        router.pushUrl({url: \"pages/Login\"})\n        return;\n      }\n    })\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\mine\\UserHead.ets", "project_name": "ohbili-master", "id": "b016058979cd03a8c894d906a07bcea6ae4509dce55e40df84c95c3b580109ae"}
{"text": "@Component\nexport struct UserStateView {\n  build() {\n    Row() {\n      Column() {\n        Text(\"-\")\n          .fontSize(14)\n          .fontColor('#333333')\n        Text($r('app.string.dynamic_state'))\n          .fontSize(12)\n          .fontColor('#888888')\n          .margin({ top: 4 })\n      }.layoutWeight(1)\n\n      Flex().width(1).height(20).backgroundColor(\"#eeeeee\")\n\n      Column() {\n        Text(\"-\")\n          .fontSize(14)\n          .fontColor('#333333')\n        Text($r('app.string.attention'))\n          .fontSize(12)\n          .fontColor('#888888')\n          .margin({ top: 4 })\n      }.layoutWeight(1)\n\n      Flex().width(1).height(20).backgroundColor(\"#eeeeee\")\n\n      Column() {\n        Text(\"-\")\n          .fontSize(14)\n          .fontColor('#333333')\n        Text($r('app.string.fans'))\n          .fontSize(12)\n          .fontColor('#888888')\n          .margin({ top: 4 })\n      }.layoutWeight(1)\n    }.width('100%').margin({ bottom: 16 })\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\mine\\UserState.ets", "project_name": "ohbili-master", "id": "60622f019f51987e9cf8f3dcc071a9e9dfd59e289dade1de801f4931aeedbeda"}
{"text": "import { VideoInfoView } from './VideoRelated';\nimport { VideoTopBar } from './VideoTopBar';\nimport { PopularItemView } from '../home/PopularItem';\nimport { BaseVideo } from './../../model/response/Response';\nimport { DataSourceManager } from './../../model/DataSourceManager';\n\n@Component\nexport struct VideoOverview {\n  @Link vInfo: BaseVideo;\n  @Link isFollowing: boolean;\n  @Link fansCount: number;\n  @Link archiveCount: number;\n  scroller: Scroller = new Scroller();\n  @State dataList: BaseVideo[] = [];\n\n  build() {\n    Stack({ alignContent: Alignment.TopStart }) {\n      List({ scroller: this.scroller }) {\n        LazyForEach(DataSourceManager.getRelatedSource(this.vInfo.bvid), (item: BaseVideo, index: number) => {\n          ListItem() {\n            if (index == 0) {\n              VideoInfoView({ vInfo: $vInfo, isFollowing: $isFollowing, fansCount: $fansCount, archiveCount: $archiveCount })\n            } else if (index == 1) {\n              VideoTopBar({ vInfo: $vInfo })\n            } else {\n              Column() {\n                Flex().width('100%').height(1)\n                  .backgroundColor('#ffeeeeee')\n                PopularItemView({ item: item, isReplaceUrl: true })\n              }.padding({ left: 16, right: 16 })\n            }\n          }\n        }, item => item.bvid)\n      }\n    }.width('100%').height('100%')\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\video\\VideoOverview.ets", "project_name": "ohbili-master", "id": "ba4da07a54d8349469d01dea6a12a7b23e655d35e47494da9b4e3970bb4dc3ea"}
{"text": "import { BaseVideo } from './../../model/response/Response';\nimport { StringUtil } from './../../utils/StringUtil';\n\n@Component\nexport struct VideoTopBar {\n  @Link vInfo: BaseVideo;\n\n  build() {\n    Row() {\n      Column() {\n        Image($r('app.media.ic_topbar_like_bold'))\n          .width(24)\n          .height(24)\n        Text(StringUtil.generateCN(this.vInfo.stat.like))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_topbar_dislike_bold'))\n          .width(24)\n          .height(24)\n        Text($r('app.string.dislike'))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_topbar_coin_bold'))\n          .width(24)\n          .height(24)\n        Text(StringUtil.generateCN(this.vInfo.stat.coin == undefined ? 0 : this.vInfo.stat.coin))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_topbar_favorite_bold'))\n          .width(24)\n          .height(24)\n        Text(StringUtil.generateCN(this.vInfo.stat.favorite == undefined ? 0 : this.vInfo.stat.favorite))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n\n      Column() {\n        Image($r('app.media.ic_topbar_share_bold'))\n          .width(24)\n          .height(24)\n        Text(StringUtil.generateCN(this.vInfo.stat.share == undefined ? 0 : this.vInfo.stat.share))\n          .fontSize(12)\n          .fontColor('#333333')\n          .margin({ top: 8 })\n      }.layoutWeight(1)\n    }.width('100%').padding(16)\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\components\\video\\VideoTopBar.ets", "project_name": "ohbili-master", "id": "2426ca8380a392f144ef18be6ac3e46f73a0832c403aadfc104043f4af1c7db8"}
{"text": "export class DanmakuItem {\n  DanmakuType: number = 0;\n  alphaDuration: number = 0;\n  beginAlpha: number = 0;\n  beginX: number = 0;\n  beginY: number = 0;\n  duration: number = 0;\n  endAlpha: number = 0;\n  endX: number = 0;\n  endY: number = 0;\n  index: number = 0;\n  isQuadraticEaseOut: boolean = false;\n  rotationY: number = 0;\n  rotationZ: number = 0;\n  text: string = \"\";\n  textColor: number = 0;\n  textShadowColor: number = 0;\n  textSize: number = 0;\n  time: number = 0;\n  timeOffset: number = 0;\n  translationDuration: number = 0;\n  translationStartDelay: number = 0;\n}", "path": "ohbili-master\\common\\src\\main\\ets\\model\\proto\\DanmakuItem.ets", "project_name": "ohbili-master", "id": "b68515e164ea09af8496a39474a609d14a22530eed12aa5f03a4c52d5fb30b15"}
{"text": "import { IDataSource } from '@ohos/danmakuflamemaster'\n\nimport { DanmakuItem } from './DanmakuItem';\nimport { Long } from '@ohos/protobufjs';\nimport { ResUtils } from '../../utils/ResUtils';\n\nexport class ProtoSource implements IDataSource<[]> {\n  private mArray: DanmakuItem[] = [];\n\n  \n  constructor(reply: any) {\n    if (reply != null && reply.elems.length > 0) {\n      reply.elems.forEach((elem) => {\n        var item = new DanmakuItem();\n        item.index = elem.id as Long ? (elem.id as Long).low : elem.id as number;\n        item.DanmakuType = elem.mode;\n        item.textSize = elem.fontsize;\n        item.textColor = elem.color;\n        item.textShadowColor = ResUtils.getShadowColor(elem.color);\n        item.text = elem.content;\n        item.time = elem.progress;\n        if (elem.mode == 7) {\n          item.alphaDuration = 4500;\n          item.beginAlpha = 249;\n          item.beginX = 1;\n          item.beginY = 500;\n          item.duration = 4500;\n          item.endAlpha = 25;\n          item.endX = 40;\n          item.endY = 268;\n          item.rotationY = 360;\n          item.rotationZ = 360;\n          item.translationDuration = 500;\n        }\n        this.mArray.push(item);\n      });\n    }\n  }\n\n  public release() {\n    this.mArray = null;\n  }\n\n  public data() {\n    return this.mArray\n  }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\model\\proto\\ProtoSource.ets", "project_name": "ohbili-master", "id": "21288c2b3ed2cd48f6e4f021ec1e84499e63f380aa9994e68a49fe9bcde08781"}
{"text": "import { IPlayStatus } from './IPlayStatus';\n\nexport interface OnTimeUpdateCallback {\n    onTimeUpdate(current: number, total: number);\n}\n\nexport interface OnTimeStrUpdateCallback {\n    onTimeStrUpdate(current: string, total: string);\n}\n\nexport interface OnStateChangeCallback {\n    OnStateChange(status: IPlayStatus);\n}\n\nexport interface OnSizeChangeCallback {\n    OnSizeChange(width: number, height: number);\n}", "path": "ohbili-master\\common\\src\\main\\ets\\player\\IPlayerCallback.ets", "project_name": "ohbili-master", "id": "f9436f189bd8c4ae95c28757d48886a6f7e71e8a6e85e81243cdce5f18daaac0"}
{"text": "export enum IPlayStatus {\n  INIT,\n  PREPARED,\n  PLAY,\n  PAUSE,\n  DONE,\n  ERROR\n}", "path": "ohbili-master\\common\\src\\main\\ets\\player\\IPlayStatus.ets", "project_name": "ohbili-master", "id": "d3f3f0d51d22a656525bb528e04be0ef205e71c870f68c9cd05c307947f78e62"}
{"text": "import { XLog, LogConfiguration, OhPrinter, FilePrinter,\n    FileLastModifiedCleanStrategy, DateFileNameGenerator,\n    FileSizeBackupStrategy, LogLevel\n} from '@ohos/xlog';\n\nexport class BLog {\n    static init(filesDir: string) {\n        let config = new LogConfiguration.Builder()\n            .setTag(\"OhBili\")\n            .setLogLevel(LogLevel.INFO)\n            .build();\n        \n        \n        \n        \n        \n        XLog.init(config, [new OhPrinter()]);\n    }\n\n    static setDebug(isOpen: boolean) {\n        console.info(\"OhBili isOpen: \" + isOpen);\n        XLog.changeLogLevel(isOpen ? LogLevel.ALl : LogLevel.INFO)\n    }\n\n    static i(msg: string) {\n        XLog.i(msg);\n    }\n\n    static d(msg: string) {\n        XLog.d(msg);\n    }\n\n    static w(msg: string) {\n        XLog.w(msg);\n    }\n\n    static e(msg: string) {\n        XLog.e(msg);\n    }\n}", "path": "ohbili-master\\common\\src\\main\\ets\\utils\\BLog.ets", "project_name": "ohbili-master", "id": "c1b74fb1dc7bc8c29141a9897f8c77e6d65083f80cc780514c469e8c62d22ab5"}
{"text": "import { HomeView } from './Home';\nimport { MineView } from './Mine';\nimport { WindowManager } from '@ohos/common';\nimport { MomentsView } from './Moments';\n\n@Entry\n@Component\nstruct Index {\n  private tabsController: TabsController = new TabsController()\n  @State currentIndex: number = 0;\n  @StorageLink(\"isShowPage\") isShowPage: boolean = true;\n\n  @Builder TabBuilder(title: string | Resource, targetIndex: number, imgPath: Resource) {\n    Column() {\n      Image(imgPath)\n        .fillColor(this.currentIndex === targetIndex ? '#1698CE' : '#6B6B6B')\n        .size({ width: this.currentIndex === targetIndex ? 22 : 20,\n          height: this.currentIndex === targetIndex ? 22 : 20 })\n      Text(title)\n        .margin({ top: 6 })\n        .fontSize(this.currentIndex === targetIndex ? 14 : 12)\n        .fontColor(this.currentIndex === targetIndex ? '#1698CE' : '#6B6B6B')\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n    .border({width: {top: 0.5}, color: '#cccccc'})\n  }\n\n  onPageShow() {\n    this.isShowPage = true;\n    WindowManager.setLayoutFullScreen(false, WindowManager.COLOR_WHITE,\n      WindowManager.COLOR_BLACK, WindowManager.COLOR_WHITE, WindowManager.COLOR_BLACK);\n  }\n\n  onPageHide() {\n    this.isShowPage = false;\n  }\n\n  build() {\n    Tabs({ barPosition: BarPosition.End, controller: this.tabsController }) {\n      TabContent() {\n        HomeView()\n      }\n      .tabBar(this.TabBuilder($r('app.string.home'), 0, $r('app.media.ic_tab_bar_home')))\n\n      TabContent() {\n        MomentsView()\n      }\n      .tabBar(this.TabBuilder($r('app.string.moments'), 1, $r('app.media.ic_tab_bar_moments')))\n\n      \n\n      TabContent() {\n        MineView()\n      }\n      .tabBar(this.TabBuilder($r('app.string.mine'), 2, $r('app.media.ic_tab_bar_mine')))\n    }.scrollable(false)\n    .barMode(BarMode.Fixed)\n    .onChange((index) => {\n      this.currentIndex = index\n    })\n  }\n}", "path": "ohbili-master\\product\\phone\\src\\main\\ets\\pages\\Index.ets", "project_name": "ohbili-master", "id": "6ba65154775b75acf5c17fe7b128b84ce915cd163571981dad0911b1c9f2886d"}
{"text": "import { UserHeadView } from '@ohos/common';\nimport { UserStateView } from '@ohos/common';\nimport { MineOptView } from '@ohos/common';\nimport { MoreServerView } from '@ohos/common';\n\n@Component\nexport struct MineView {\n  build() {\n    Column() {\n      UserHeadView()\n      UserStateView()\n      MineOptView()\n      MoreServerView()\n    }.width('100%').height('100%')\n    .justifyContent(FlexAlign.Start)\n  }\n}", "path": "ohbili-master\\product\\phone\\src\\main\\ets\\pages\\Mine.ets", "project_name": "ohbili-master", "id": "61396e2e78600beeae01350de19035d278d2d90f15290bb88580b102c95b32f9"}
{"text": "import { ApiManager } from '@ohos/common';\nimport { PopularItem } from '@ohos/common';\nimport { HomePullToRefresh } from '@ohos/common';\nimport { DataSourceManager } from '@ohos/common';\nimport { PopularItemView } from '@ohos/common';\n\n@Component\nexport struct PopularView {\n  private scroller: Scroller = new Scroller();\n  @State data: any[] = [];\n  @State pn: number = 1;\n\n  build() {\n    Column() {\n      HomePullToRefresh({\n        \n        data: $data,\n        \n        scroller: this.scroller,\n        \n        customList: this.getListView,\n        \n        onRefresh: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.pn = 1;\n            ApiManager.getInstance().requestPopular(this.pn).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        \n        onLoadMore: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.pn++;\n            ApiManager.getInstance().requestPopular(this.pn).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        customLoad: null,\n        customRefresh: null,\n      })\n    }.backgroundColor('#ffffff')\n  }\n\n  @Builder\n  private getListView(_, onListStatus: (isListStart: boolean, isListEnd: boolean) => void) {\n    List({ scroller: this.scroller }) {\n      LazyForEach(DataSourceManager.getPopularSource(), (item: PopularItem, index: number) => {\n        ListItem() {\n          PopularItemView({ item: item })\n        }\n      }, item => item.bvid)\n    }\n    .width('100%')\n    .padding({ left: 16, right: 16, bottom: 4 })\n    .divider({ strokeWidth: 1, color: '#ffeeeeee' })\n    .edgeEffect(EdgeEffect.None)\n    .onScrollIndex((start, end) => {\n      onListStatus(start == 0,\n        end == DataSourceManager.getPopularSource().totalCount() - 1)\n    })\n  }\n}\n", "path": "ohbili-master\\product\\phone\\src\\main\\ets\\pages\\Popular.ets", "project_name": "ohbili-master", "id": "8ad7dce1807d789bc1bbb49948bb56e960829fb1b014b98406a947bb73a6215d"}
{"text": "import { ApiManager } from '@ohos/common'\nimport { RecommendItem } from '@ohos/common';\nimport { DataSourceManager } from '@ohos/common';\nimport { RecommendItemView } from '@ohos/common';\nimport { HomePullToRefresh } from '@ohos/common';\n\n@Component\nexport struct RecommendView {\n  private scroller: Scroller = new Scroller();\n  @State isRefreshing: boolean = false\n  @State freshIdx: number = 1;\n  @State data: any[] = [];\n\n  build() {\n    Column() {\n      HomePullToRefresh({\n        \n        data: $data,\n        \n        scroller: this.scroller,\n        \n        customList: this.getListView,\n        \n        onRefresh: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.freshIdx++;\n            ApiManager.getInstance().requestRecommend(this.freshIdx, true).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        \n        onLoadMore: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.freshIdx++;\n            ApiManager.getInstance().requestRecommend(this.freshIdx, false).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        customLoad: null,\n        customRefresh: null,\n      })\n    }.backgroundColor('#eeeeee')\n  }\n\n  @Builder\n  private getListView(_, onListStatus: (isListStart: boolean, isListEnd: boolean) => void) {\n\n    List({ scroller: this.scroller }) {\n      LazyForEach(DataSourceManager.getRecommendSource(), (item: RecommendItem, index: number) => {\n        if (index % 2 == 0) {\n          ListItem() {\n            Row() {\n              Flex() {\n                RecommendItemView({ item: item })\n              }.layoutWeight(1)\n              Flex().width(8).height(8)\n              Flex() {\n                if (index + 1 < DataSourceManager.getRecommendSource().totalCount() ){\n                  RecommendItemView({ item: DataSourceManager.getRecommendSource().getData(index + 1) })\n                }\n              }.layoutWeight(1)\n            }\n          }\n        } else {\n          ListItem() {\n            Flex().width('100%').height(8)\n          }\n        }\n      }, item => item.bvid)\n    }\n    .width('100%')\n    .padding({ top: 8, left: 16, right: 16 })\n    .edgeEffect(EdgeEffect.None)\n    .onScrollIndex((start, end) => {\n      onListStatus(start == 0,\n        end == DataSourceManager.getRecommendSource().totalCount() - 1)\n    })\n  }\n}\n", "path": "ohbili-master\\product\\phone\\src\\main\\ets\\pages\\Recommend.ets", "project_name": "ohbili-master", "id": "4bf1b00d53af5333d5423e8a8131cd75a8871a779ff05f0ee59ef23c1ed845d0"}
{"text": "import { ApiManager } from '@ohos/common';\nimport { PopularItem } from '@ohos/common';\nimport { DataSourceManager } from '@ohos/common';\nimport { PopularItemView } from '@ohos/common';\nimport { PullToRefresh } from '@ohos/pulltorefresh';\n\n@Component\nexport struct PopularView {\n  private scroller: Scroller = new Scroller();\n  @State data: any[] = [];\n  @State pn: number = 1;\n\n  build() {\n    Column() {\n      PullToRefresh({\n        \n        data: $data,\n        \n        scroller: this.scroller,\n        \n        customList: this.getListView,\n        \n        onRefresh: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.pn = 1;\n            ApiManager.getInstance().requestPopular(this.pn).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        \n        onLoadMore: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.pn++;\n            ApiManager.getInstance().requestPopular(this.pn).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        customLoad: null,\n        customRefresh: null,\n      })\n    }.backgroundColor('#ffffff')\n  }\n\n  @Builder\n  private getListView(_, onListStatus: (isListStart: boolean, isListEnd: boolean) => void) {\n    List({ scroller: this.scroller }) {\n      LazyForEach(DataSourceManager.getPopularSource(), (item: PopularItem, index: number) => {\n        if (index % 2 == 0) {\n          ListItem() {\n            Row() {\n              Flex() {\n                PopularItemView({ item: item })\n              }.layoutWeight(1)\n\n              Flex().width(18).height(18)\n              Flex() {\n                if (index + 1 < DataSourceManager.getPopularSource().totalCount()) {\n                  PopularItemView({ item: DataSourceManager.getPopularSource().getData(index + 1) })\n                }\n              }.layoutWeight(1)\n            }\n          }\n        } else {\n          ListItem() {\n            Row() {\n              Flex().height(1).layoutWeight(1)\n                .backgroundColor('#ffeeeeee')\n              Flex().width(18).height(1)\n              Flex().height(1).layoutWeight(1)\n                .backgroundColor('#ffeeeeee')\n            }.width('100%')\n            .margin({ top: 4, bottom: 4 })\n          }\n        }\n      }, item => item.bvid)\n    }\n    .width('100%')\n    .padding({ left: 16, right: 16, bottom: 4 })\n    \n    .edgeEffect(EdgeEffect.None)\n    .onScrollIndex((start, end) => {\n      onListStatus(start == 0,\n        end == DataSourceManager.getPopularSource().totalCount() - 1)\n    })\n  }\n}\n", "path": "ohbili-master\\product\\tablet\\src\\main\\ets\\pages\\Popular.ets", "project_name": "ohbili-master", "id": "a3491c7c193d44c5244a13f4281b046d3116053e366bab8025fd6941f311fd5a"}
{"text": "import { ApiManager } from '@ohos/common'\nimport { RecommendItem } from '@ohos/common';\nimport { DataSourceManager } from '@ohos/common';\nimport { RecommendItemView } from '@ohos/common';\nimport { PullToRefresh } from '@ohos/pulltorefresh';\n\n@Component\nexport struct RecommendView {\n  private scroller: Scroller = new Scroller();\n  @State isRefreshing: boolean = false\n  @State freshIdx: number = 1;\n  @State data: any[] = [];\n\n  build() {\n    Column() {\n      PullToRefresh({\n        \n        data: $data,\n        \n        scroller: this.scroller,\n        \n        customList: this.getListView,\n        \n        onRefresh: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.freshIdx++;\n            ApiManager.getInstance().requestRecommend(this.freshIdx, true).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        \n        onLoadMore: () => {\n          return new Promise<string>((resolve, reject) => {\n            this.freshIdx++;\n            ApiManager.getInstance().requestRecommend(this.freshIdx, false).then((resp: boolean) => {\n              resolve('');\n            });\n          });\n        },\n        customLoad: null,\n        customRefresh: null,\n      })\n    }.backgroundColor('#eeeeee')\n  }\n\n  @Builder\n  private getListView(_, onListStatus: (isListStart: boolean, isListEnd: boolean) => void) {\n\n    List({ scroller: this.scroller }) {\n      LazyForEach(DataSourceManager.getRecommendSource(), (item: RecommendItem, index: number) => {\n        if (index % 4 == 0) {\n          ListItem() {\n            Row() {\n              Flex() {\n                RecommendItemView({ item: item, ratio: 16/9 })\n              }.layoutWeight(1)\n              Flex().width(18).height(18)\n              Flex() {\n                if (index + 1 < DataSourceManager.getRecommendSource().totalCount() ){\n                  RecommendItemView({ item: DataSourceManager.getRecommendSource().getData(index + 1), ratio: 16/9 })\n                }\n              }.layoutWeight(1)\n              Flex().width(18).height(18)\n              Flex() {\n                if (index + 2 < DataSourceManager.getRecommendSource().totalCount() ){\n                  RecommendItemView({ item: DataSourceManager.getRecommendSource().getData(index + 2), ratio: 16/9 })\n                }\n              }.layoutWeight(1)\n              Flex().width(18).height(18)\n              Flex() {\n                if (index + 3 < DataSourceManager.getRecommendSource().totalCount() ){\n                  RecommendItemView({ item: DataSourceManager.getRecommendSource().getData(index + 3), ratio: 16/9 })\n                }\n              }.layoutWeight(1)\n            }\n          }\n        } else {\n          ListItem() {\n            Flex().width('100%').height(6)\n          }\n        }\n      }, item => item.bvid)\n    }\n    .width('100%')\n    .padding({ top: 18, left: 18, right: 18 })\n    .edgeEffect(EdgeEffect.None)\n    .onScrollIndex((start, end) => {\n      onListStatus(start == 0,\n        end == DataSourceManager.getRecommendSource().totalCount() - 1)\n    })\n  }\n}\n", "path": "ohbili-master\\product\\tablet\\src\\main\\ets\\pages\\Recommend.ets", "project_name": "ohbili-master", "id": "ce1d0da8112d99f208f5751be273d1637594cd7b9328dc45260ecad1a992ef58"}
{"text": "import { PieChart } from './../commons/widgets/pie_chart'\n\n@Entry @Component struct Index {\n  @State message: string = 'Hello World'\n\n  build() {\n    Column({space: 20}) {\n      Stack() {\n        PieChart()\n      }\n      .size({width: 150, height: 150})\n    }\n    .padding(10)\n    .size({width: \"100%\", height: \"100%\"})\n  }\n}", "path": "PieChart-master\\entry\\src\\main\\ets\\MainAbility\\pages\\index.ets", "project_name": "PieChart-master", "id": "b48b770f4ad0ce3dd64cdad81a75272ae0d58ef410c773e67ef44cfbbdc99096"}
{"text": "import { http } from '../common/utils/Request'\nimport { BookRoomItem, ReserveRoomParams } from '../viewmodel/BookRoomModel';\n\n\nexport const reservationApi = (params: ReserveRoomParams): Promise<void> => {\n  return http.post<void>('/auth/house/reservation', params);\n}\n\n\nexport const getBookRentRoomListApi = (): Promise<BookRoomItem[]> => {\n  return http.get<BookRoomItem[]>('/auth/house/history')\n}", "path": "Rental-main\\entry\\src\\main\\ets\\api\\book.ets", "project_name": "Rental-main", "id": "7b4281da3f8982eccfb076fa5472ad6082485e0ad594b7d60cfa837d082c83c9"}
{"text": "import { http } from '../common/utils/Request'\nimport { DiscoverModel } from '../viewmodel/DiscoverModel'\n\n\n\nexport const getDiscoverDataApi = (): Promise<DiscoverModel> => {\n  return http.get<DiscoverModel>('/discover/info')\n}", "path": "Rental-main\\entry\\src\\main\\ets\\api\\discover.ets", "project_name": "Rental-main", "id": "0267ac4086ba0a814ff3ff193fea3889854a51597bebe109ac8798474018d409"}
{"text": "import { http } from '../common/utils/Request'\nimport { HomeModel, RoomRecommendItem } from '../viewmodel/HomeModel';\n\n\nexport const getHomeDataApi = (): Promise<HomeModel> => {\n  return http.get<HomeModel>('/home/info');\n}\n\n\nexport const getRoomRecommendApi = (): Promise<RoomRecommendItem[]> => {\n  return http.get<RoomRecommendItem[]>('/house/nearbyHouses');\n}", "path": "Rental-main\\entry\\src\\main\\ets\\api\\home.ets", "project_name": "Rental-main", "id": "2c012d28e07d801afd18ca01ff9906a2c453abf4e5877aadcde60faac6e0ad4a"}
{"text": "import { http } from '../common/utils/Request'\n\nimport {\n  CityItem,\n  CityParams,\n  DistrictItem,\n  DistrictParams,\n  ProvinceItem,\n  RoomListModel,\n  SearchParams,\n} from '../viewmodel/RoomListModel'\n\n\nexport const getRoomListApi = (param: SearchParams): Promise<RoomListModel> => {\n  return http.get<RoomListModel>('/house/search', param);\n}\n\n\nexport const getProvinceApi = (): Promise<ProvinceItem[]> => {\n  return http.get<ProvinceItem[]>('/province');\n}\n\n\nexport const getCityApi = (params: CityParams): Promise<CityItem[]> => {\n  return http.get<CityItem[]>('/city', params);\n}\n\n\nexport const getAreaApi = (params: DistrictParams): Promise<DistrictItem[]> => {\n  return http.get<DistrictItem[]>('/area', params);\n}", "path": "Rental-main\\entry\\src\\main\\ets\\api\\room.ets", "project_name": "Rental-main", "id": "a17bd3c25d9783301ddc2cdbfba01bf88125b1cece2b74ae2f172f1b409e2dd4"}
{"text": "import { http } from '../common/utils/Request'\nimport { RoomDetailModel } from '../viewmodel/RoomDetailModel';\n\n\nexport const getRoomDetailApi = (id: string): Promise<RoomDetailModel> => {\n  return http.get<RoomDetailModel>('/house/detail', { id: id });\n}\n", "path": "Rental-main\\entry\\src\\main\\ets\\api\\roomDetail.ets", "project_name": "Rental-main", "id": "4d607f9899c99df26f4445126cdab1094ccba094c8f55d784c453f27a50a8755"}
{"text": "import { http } from '../common/utils/Request'\nimport { ServiceModel } from '../viewmodel/ServiceModel';\n\n\n\nexport const getServiceDataApi = (): Promise<ServiceModel> => {\n  return http.get<ServiceModel>('/service/info');\n}\n", "path": "Rental-main\\entry\\src\\main\\ets\\api\\service.ets", "project_name": "Rental-main", "id": "894a67eaadea4ccee368cee0d010e05f4df8f29c14972e0ce25f2bd9ff9fbb75"}
{"text": "import { http } from '../common/utils/Request'\nimport { LoginResModel, UserModel } from '../viewmodel/UserModel';\n\n\nexport const sendSMSCodeApi = (phone: string): Promise<void> => {\n  return http.post<void>('/sendSMSCode', { phone: phone });\n}\n\n\nexport const loginApi = (phone: string, code: string): Promise<LoginResModel> => {\n  return http.post<LoginResModel>('/login', { phone: phone, code: code });\n}\n\n\nexport const getUserInfoApi = (): Promise<UserModel> => {\n  return http.get<UserModel>('/auth/user/userInfo');\n}", "path": "Rental-main\\entry\\src\\main\\ets\\api\\user.ets", "project_name": "Rental-main", "id": "371cd373e336c3e8cd974444bc31a39a1e66ae014a21f8c6f444163cb12dac42"}
{"text": "export default class CommonConstants {\n  \n  static readonly FULL_LENGTH = '100%';\n}", "path": "Rental-main\\entry\\src\\main\\ets\\common\\constants\\CommonConstants.ets", "project_name": "Rental-main", "id": "6267dc232defbce1275cb82ce94d2c08989bcc489f7246f5214572c60ca1f3d8"}
{"text": "import { GlobalContext } from './GlobalContext'\nimport { window } from '@kit.ArkUI'\n\n\nexport const getTopRectHeight = (): number => {\n  return AppStorage.get<number>('topRectHeight') || 0\n}\n\n\nexport const getBottomRectHeight = (): number => {\n  return AppStorage.get<number>('bottomRectHeight') || 0\n}\n\n\nexport function getWindowWidth() {\n  return AppStorage.get<number>('windowWidth') || 360\n}\n\n\nexport function getWindowHeight() {\n  return AppStorage.get<number>('windowHeight') || 780\n}\n\n\nexport function rvp(val: number): number {\n  \n  return val / 360 * getWindowWidth()\n}\n\n\nexport function setSystemBar(prop: window.SystemBarProperties) {\n  const windowClass = GlobalContext.getContext().getWindowClass()\n  if (windowClass) {\n    windowClass.setWindowSystemBarProperties(prop)\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\common\\utils\\DeviceScreen.ets", "project_name": "Rental-main", "id": "d469948d1a5a115bd855947809b3e365378cf68dffae4fc9291a61ebc4bbac58"}
{"text": "import { display, window } from '@kit.ArkUI';\nimport { Want } from '@kit.AbilityKit';\n\nexport class GlobalContext {\n  private constructor() {\n  }\n\n  private static instance: GlobalContext;\n  private _objects = new Map<string, Object>();\n\n  public static getContext(): GlobalContext {\n    if (!GlobalContext.instance) {\n      GlobalContext.instance = new GlobalContext();\n    }\n    return GlobalContext.instance;\n  }\n\n  getObject(value: string): Object | undefined {\n    return this._objects.get(value);\n  }\n\n  setObject(key: string, objectClass: Object): void {\n    this._objects.set(key, objectClass);\n  }\n\n  \n  getAbilityWant(): Want | undefined {\n    const abilityWant = this._objects.get('abilityWant')\n    return abilityWant ? abilityWant as Want : undefined\n  }\n\n  \n  getDisplay(): display.Display | undefined {\n    const display = this._objects.get('display')\n    return display ? display as display.Display : undefined\n  }\n\n  \n  getWindowClass(): window.Window | undefined {\n    const windowClass = this._objects.get('windowClass')\n    return windowClass ? windowClass as window.Window : undefined\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\common\\utils\\GlobalContext.ets", "project_name": "Rental-main", "id": "d92c0fe3a7be16ff3544a819e4e9552a4e68af6d1d201ce66ca8ac7f5b87eacd"}
{"text": "@Component\nexport struct Avatar {\n  @Link src: string\n  @Prop avatarSize: number = 20\n  @Prop radius: number = 0\n\n  build() {\n    Image(this.src || $r('app.media.avatar_unlogin'))\n      .width(this.avatarSize)\n      .height(this.avatarSize)\n      .borderRadius(this.radius)\n      .objectFit(ImageFit.Fill)\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\component\\Avatar.ets", "project_name": "Rental-main", "id": "862b52b27a32a14a97e630c4295c2cdb7f9640fd94d648498e6081bc10a08454"}
{"text": "@Component\nexport struct BottomSafeArea {\n  @StorageProp('bottomRectHeight')\n  bottomRectHeight: number = 0\n\n  build() {\n    Row() {\n\n    }\n    .width('100%')\n    .height(this.bottomRectHeight)\n\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\component\\BottomSafeArea.ets", "project_name": "Rental-main", "id": "f4451cbac1ee808adf19dbdeda1574b52fb678aec00eb5805db819ccf293e1e5"}
{"text": "@Component\nexport struct Card {\n  \n  @Prop cardPadding: number = 8\n\n  @Builder\n  default() {\n  }\n\n  @BuilderParam content: () => void = this.default\n\n  build() {\n    Column() {\n      this.content()\n\n    }\n    .alignItems(HorizontalAlign.Start)\n    .padding(this.cardPadding)\n    .borderRadius(8)\n    .backgroundColor($r('app.color.white'))\n\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\component\\Card.ets", "project_name": "Rental-main", "id": "5970e690ce79af391ce1ba83d63e2199c9354461512f9a0adefde4204c986afc"}
{"text": "@Component\nexport struct Drawer {\n  @Link show: boolean;\n  @BuilderParam render: () => void\n\n  build() {\n    if (this.show) {\n      Stack() {\n        Column() {\n        }.width('100%')\n        .height('100%')\n        .backgroundColor('rgba(0, 0, 0, 0.7)')\n        .onClick(() => {\n          this.show = false;\n        })\n\n        Column() {\n          this.render()\n        }.backgroundColor($r('app.color.bg_gray'))\n        .width('100%')\n        .padding(15)\n        .borderRadius({\n          topLeft: 10,\n          topRight: 10\n        })\n      }\n      .width('100%')\n      .height('100%')\n      .position({ x: 0, y: 0 })\n      .zIndex(999)\n      .alignContent(Alignment.BottomStart)\n    }\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\component\\Drawer.ets", "project_name": "Rental-main", "id": "2bde0bd91d1eca00a3a36be81e9bc30f52acf630465677a3c837244392c4d0a6"}
{"text": "@Component\nexport struct Empty {\n  @Prop title: ResourceStr\n  @Prop image: ResourceStr\n\n  build() {\n    Column() {\n      Image(this.image)\n        .width(150)\n        .height(140)\n        .objectFit(ImageFit.Fill)\n      Text(this.title)\n        .fontSize(12)\n        .fontWeight(500)\n        .margin({ top: 20 })\n    }\n    .width('100%')\n    .alignItems(HorizontalAlign.Center)\n\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\component\\Empty.ets", "project_name": "Rental-main", "id": "71c8ff16ede5664aafa3e21fb7e6744d48227def4611783ed2e677c665e883b5"}
{"text": "import { router } from '@kit.ArkUI'\n\n@Component\nexport struct NavBar {\n  \n  @Prop title: string\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Stack({ alignContent: Alignment.TopStart }) {\n      Text(this.title)\n        .fontWeight(700)\n        .fontSize(16)\n        .textAlign(TextAlign.Center)\n        .width('100%')\n      Image($r('app.media.back'))\n        .width(24)\n        .height(23)\n        .onClick(() => {\n          router.back()\n        })\n    }\n    .width('100%')\n    .align(Alignment.Start)\n    .padding({ top: this.topRectHeight + 10, bottom: 10, left: 8 })\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\component\\NavBar.ets", "project_name": "Rental-main", "id": "b6acb20745665dc46bf3aa52e2b9daac6a980237e012bd90295985f220811a7c"}
{"text": "@Component\nexport struct TopSafeArea {\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Row() {\n\n    }\n    .width('100%')\n    .height(this.topRectHeight)\n\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\component\\TopSafeArea.ets", "project_name": "Rental-main", "id": "23687c1656d67518a9037e1fd1b8b0cf14d2f7e1f7f6113bd122189fb094a1be"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen';\nimport { DanMuItem } from '../../viewmodel/DiscoverModel';\n\n@Component\nexport struct BannerScroll {\n  @Prop bannerList: DanMuItem[];\n\n  build() {\n    List() {\n      ForEach(this.bannerList, (banner: DanMuItem) => {\n        ListItem() {\n          Row({ space: rvp(6) }) {\n            Image(banner.avatar).width(rvp(24)).height(rvp(24)).objectFit(ImageFit.Fill).borderRadius(rvp(24))\n            Text(banner.content).fontSize(14).fontWeight(500)\n          }\n          .padding({\n            top: rvp(6),\n            left: rvp(6),\n            bottom: rvp(6),\n            right: rvp(10)\n          })\n          .borderRadius(rvp(42))\n          .backgroundColor('#CDFFD9')\n          .margin({ left: rvp(10) })\n        }\n      }, (banner: DanMuItem, index) => JSON.stringify(banner) + index)\n    }\n    .listDirection(Axis.Horizontal) \n    .edgeEffect(EdgeEffect.None) \n    .width('100%')\n    .scrollBar(BarState.Off)\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\view\\discover\\BannerScroll.ets", "project_name": "Rental-main", "id": "535b486a2c828b69bbbd3a356ca44c9b2456e9add549b2de871050139de1d1d9"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\n\n@Component\nexport default struct Bg {\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Image($r('app.media.discover_bg'))\n      .width('100%')\n      .height(rvp(280) + this.topRectHeight)\n      .objectFit(ImageFit.Fill)\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\view\\discover\\Bg.ets", "project_name": "Rental-main", "id": "23f8a521b1c3412235926b1ac6fae8128dbf0a63c72a479cb2c231c615e386ef"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\n\n@Component\nexport struct Ad {\n  @Prop adPicture: string\n\n  build() {\n    Row() {\n      Image(this.adPicture)\n        .width('100%')\n        .height(rvp(60))\n        .objectFit(ImageFit.Fill)\n        .shadow({\n          radius: rvp(8),\n          color: $r('app.color.gray')\n        })\n\n    }\n    .width('100%')\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\home\\Ad.ets", "project_name": "Rental-main", "id": "d9ffa6f6bfe5ef9c76ef4f15d4439e5ed7dcd7f1d8a7dc5b773a6f5ff6cc1db2"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\nimport { NavItem } from '../../viewmodel/HomeModel'\n\n@Component\nexport struct NavList {\n  @Prop navList: NavItem[]\n\n  build() {\n    Grid() {\n      ForEach(this.navList, (nav: NavItem) => {\n        GridItem() {\n          Column({ space: rvp(8) }) {\n            Image(nav.imageURL)\n              .width(rvp(60))\n              .height(rvp(60))\n              .objectFit(ImageFit.Fill)\n              .borderRadius(rvp(8))\n            Text(nav.title)\n              .fontSize(rvp(12))\n              .fontColor($r('app.color.black'))\n              .fontWeight(500)\n          }\n        }\n      })\n    }\n    .width('100%')\n    .columnsTemplate('1fr 1fr 1fr 1fr')\n    .rowsGap(rvp(8))\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\home\\NavList.ets", "project_name": "Rental-main", "id": "03bd14c96307e9e47eae31a6b07786d0a92c173577c487defb70803bda5bdd92"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\nimport { PlanItem } from '../../viewmodel/HomeModel'\n\n@Component\nexport struct PlanList {\n  @Prop planList: PlanItem[]\n\n  build() {\n    Grid() {\n      ForEach(this.planList, (item: PlanItem) => {\n        GridItem() {\n          Image(item.imageURL)\n            .objectFit(ImageFit.Fill)\n        }\n      })\n    }\n    .width('100%')\n    .height(rvp(60))\n    .rowsTemplate('1fr')\n    .columnsTemplate('1fr 1fr 1fr 1fr')\n    .columnsGap(rvp(8))\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\home\\PlanList.ets", "project_name": "Rental-main", "id": "d237c3181d8e09bb37b76764715147dadd2a48d82a73c9d77bedf6fccb97d5a1"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\nimport BannerListDataSource from '../../viewmodel/datasource/BannerListDataSource'\nimport { BannerItem } from '../../viewmodel/HomeModel'\n\n@Component\nexport struct SwiperLayout {\n  @ObjectLink\n  bannerListDataSource: BannerListDataSource\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Swiper() {\n      LazyForEach(this.bannerListDataSource, (item: BannerItem) => {\n        Image(item.imageURL)\n          .objectFit(ImageFit.Fill)\n      }, (item: BannerItem) => item.id + '')\n    }\n    .width('100%')\n    .height(rvp(200) + this.topRectHeight)\n    .autoPlay(true)\n\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\home\\SwiperLayout.ets", "project_name": "Rental-main", "id": "660584d01ae39da4ed3145361eb56cf0cd574d794f6cd82b36fa6ac0a37f9e45"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\nimport { TileItem } from '../../viewmodel/HomeModel'\n\n@Component\nexport struct TileList {\n  @Prop tileList: TileItem[]\n\n  build() {\n    Row({ space: rvp(16) }) {\n      ForEach(this.tileList, (item: TileItem) => {\n        Column({ space: rvp(8) }) {\n          Image(item.imageURL)\n            .width('100%')\n            .height(rvp(58))\n          Row({ space: rvp(8) }) {\n            Text(item.title)\n              .fontSize(rvp(12))\n              .fontColor($r('app.color.black'))\n            Text(item.sub_title)\n              .fontSize(10)\n              .fontColor($r('app.color.text_gray'))\n          }\n          .width('100%')\n        }\n        .width('50%')\n      })\n    }\n    .width('100%')\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\home\\TileList.ets", "project_name": "Rental-main", "id": "0a59ce6ac1a5925cbdb467e57551e930d729e7c52ca5732c42bd8bc8e7f5612b"}
{"text": "import { BarData, ScrollContainer } from '../../component/ScrollContainer'\nimport { FindRoom } from '../see/FindRoom'\nimport { NavBar } from '../see/NavBar'\n\n@Preview\n@Component\nexport struct See {\n  @State barData: BarData = new BarData()\n\n  @Builder\n  navBar() {\n    NavBar({ barData: this.barData })\n  }\n\n  @Builder\n  content() {\n    Column() {\n      FindRoom()\n    }\n    .padding({ top: this.barData.navBarHeight })\n    .linearGradient({\n      angle: 180,\n      direction: GradientDirection.Top,\n      colors: [\n        ['#DEFBE5', 0],\n        ['#ffffff', 0.3],\n        ['#ffffff', 1],\n      ],\n      repeating: false,\n    })\n  }\n\n  build() {\n    ScrollContainer({\n      barData: this.barData,\n      barColorStart: '#000000',\n      barColorEnd: '#000000',\n      navBar: () => {\n        this.navBar()\n      },\n      content: () => {\n        this.content()\n      }\n    })\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\index\\See.ets", "project_name": "Rental-main", "id": "01745c672fd4dadcad2439f5464bf47ab55f7a0371bb4c3b59695ee3e61b2e2d"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\n\n@Component\nexport struct Bg {\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Column()\n      .width('100%')\n      .height(rvp(175) + this.topRectHeight)\n      .linearGradient({\n        angle: 180,\n        colors: [\n          ['#6DC782', 0],\n          ['#8FE1A2', 0.43],\n          ['#8FE1A2', 1],\n        ]\n      })\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\view\\my\\Bg.ets", "project_name": "Rental-main", "id": "a54dd4857c789197266ce60f72c100840f9bd14483f5c17a7ca88b3a35025413"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\nimport { Discount } from '../../viewmodel/RoomDetailModel'\n\n@Component\nexport struct DiscountsList {\n  @Prop discountsList: Discount[]\n\n  build() {\n    Column({ space: rvp(16) }) {\n      ForEach(this.discountsList, (item: Discount) => {\n        Row({ space: 8 }) {\n          Image(item.image).height(rvp(20))\n          Text(item.txt).fontSize(12).fontColor($r('app.color.gray'))\n          Blank()\n          Image($r('app.media.arrow_right')).width(rvp(4)).fillColor($r('app.color.primary'))\n        }.width('100%')\n      })\n    }.margin({ top: rvp(13) })\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\view\\roomDetail\\DiscountsList.ets", "project_name": "Rental-main", "id": "1dd30dad8f1446d7477dcf5d8268e539d26dc3d64a17ad4258b01439a3a2783b"}
{"text": "import { router } from '@kit.ArkUI'\nimport { rvp } from '../../common/utils/DeviceScreen'\nimport { BarData } from '../../component/ScrollContainer'\n\n@Component\nexport struct NavBar {\n  \n  @Prop title: string\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Row() {\n      Image($r('app.media.back'))\n        .width(rvp(20))\n        .height(rvp(20))\n        .onClick(() => {\n          router.back()\n        })\n      Text(this.title)\n        .fontWeight(500)\n        .fontSize(14)\n        .textAlign(TextAlign.Center)\n      Blank()\n      Image($r('app.media.share'))\n        .width(rvp(20))\n        .height(rvp(20))\n        .onClick(() => {\n        })\n\n    }\n    .width('100%')\n    .backgroundColor(Color.White)\n    .padding({\n      left: rvp(16),\n      right: rvp(16),\n      top: rvp(16) + this.topRectHeight,\n      bottom: rvp(16)\n    })\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\roomDetail\\NavBar.ets", "project_name": "Rental-main", "id": "3d6088d5be6900cf01a577a18b89ebad38c5b4580678ef30af940260678a35f6"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\nimport { TagItem } from '../../viewmodel/HomeModel'\n\n@Component\nexport struct TagList {\n  @Prop tagList: TagItem[]\n\n  build() {\n    Row({ space: rvp(14) }) {\n      ForEach(this.tagList, (item: TagItem) => {\n        Text(item.name)\n          .fontSize(12)\n          .backgroundColor('#F7F7F7')\n          .padding({\n            top: rvp(4),\n            bottom: rvp(4),\n            left: rvp(8),\n            right: rvp(8)\n          })\n      })\n    }.width('100%').margin({ top: rvp(8) })\n  }\n}", "path": "Rental-main\\entry\\src\\main\\ets\\view\\roomDetail\\TagList.ets", "project_name": "Rental-main", "id": "24b58552608aa44b37e9f155d27a64eab8d7b2f520569713325a31feabba7d81"}
{"text": "import { rvp } from '../../common/utils/DeviceScreen'\n\n@Component\nexport struct Bg {\n  @StorageProp('topRectHeight')\n  topRectHeight: number = 0\n\n  build() {\n    Stack({ alignContent: Alignment.Bottom }) {\n      Image($r('app.media.service_bg'))\n        .width('100%')\n        .height(this.topRectHeight + 180)\n        .objectFit(ImageFit.Fill)\n      Image($r('app.media.arrow_down_2'))\n        .width(rvp(15))\n        .height(rvp(5))\n        .objectFit(ImageFit.Fill)\n        .margin({ bottom: rvp(10) })\n    }\n    .width('100%')\n\n  }\n}\n\n", "path": "Rental-main\\entry\\src\\main\\ets\\view\\service\\Bg.ets", "project_name": "Rental-main", "id": "10490a030cff295e19e51f439813d54dfdefc7c76a6b66945d25cfea0ea5928a"}
{"text": "export interface DiscoverModel {\n  danMuList1: Array<DanMuItem>,\n  danMuList2: Array<DanMuItem>,\n  postZone: PostZone,\n  benefits: Array<BenefitsItem>\n}\n\nexport interface PostZone {\n  mainPost: MainPost\n  contentBlockList: Array<ContentBlockItem>\n}\n\nexport interface BenefitsItem {\n  title: string\n  img: string\n}\n\nexport interface ContentBlockItem {\n  img: string\n}\n\nexport interface DanMuItem {\n  avatar: string\n  content: string\n}\n\nexport interface MainPost {\n  followerNum: number\n  title: string\n  userAvatar: string\n  userName: string\n  postContent: string\n}\n", "path": "Rental-main\\entry\\src\\main\\ets\\viewmodel\\DiscoverModel.ets", "project_name": "Rental-main", "id": "b86aa672ac8bbae1bf7395e0ef3843b5e8d473b04143e6221d1a25be109b3960"}
{"text": "export interface UserModel {\n  avatar: string;\n  id: number;\n  nickname: string;\n}\n\n\n\nexport interface LoginResModel {\n  token: string;\n}", "path": "Rental-main\\entry\\src\\main\\ets\\viewmodel\\UserModel.ets", "project_name": "Rental-main", "id": "6195a9b5214c62b566f41035541721bde2cebd440957041a9e250fdc11eaf276"}
{"text": "import axios, { AxiosResponse } from '@ohos/axios';\nimport { ResponseResult } from '../../viewmodel/ArticleViewModel';\nimport { CommonConstant } from '../constant/CommonConstant';\n\nexport enum TYPE {\n  GET,\n  POST\n}\n\ndeclare type FetchParams = {\n  url?: string;\n  method?: TYPE;\n};\n\nexport function fetch(params: FetchParams): Promise<ResponseResult> {\n\n  const { url,method = TYPE.GET } = params || {};\n  let serverData: ResponseResult = new ResponseResult();\n  if (method === TYPE.GET) {\n    return axios.get<ResponseResult, AxiosResponse<ResponseResult>, null>(url)\n      .then((response: AxiosResponse<ResponseResult>) => {\n        if (response.status === CommonConstant.HTTP_CODE_200) {\n          let resultJson: ResponseResult = response.data;\n          if (resultJson.errorCode === CommonConstant.SERVER_CODE_SUCCESS) {\n            serverData.data = resultJson.data;\n          }\n          serverData.errorCode = resultJson.errorCode;\n          serverData.errorMsg = resultJson.errorMsg;\n        } else {\n          serverData.errorMsg = `${$r('app.string.http_error_message')}&${response.status}`;\n        }\n        return serverData;\n      })\n      .catch(() => {\n        serverData.errorMsg = $r('app.string.http_error_message');\n        return serverData;\n      })\n  } else {\n    return null;\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\common\\utils\\FetchUtil.ets", "project_name": "wanharmony-main", "id": "da3d0f45f8d35bb54ba492575c0a06fc9dcd1c185bff3ac634d0d5318d9e1485"}
{"text": "import router from '@ohos.router';\n\n@Entry\n@Component\nstruct WebPage {\n  private url: string = router.getParams()?.['url'];\n  private title: string = router.getParams()?.['title'];\n  controller: WebController = new WebController();\n\n  build() {\n    Column() {\n      Row() {\n        Image($r('app.media.ic_back'))\n          .width(26)\n          .height(26)\n          .onClick(() => {\n            router.back()\n          })\n          .margin({ left: 10, right: 10 })\n        Text(this.title).fontColor('#333333').fontSize(14).fontWeight(700).maxLines(1)\n      }\n      .backgroundColor($r('app.color.white'))\n      .width('100%')\n      .alignItems(VerticalAlign.Center)\n      .height(50)\n      Divider().backgroundColor($r('app.color.dividerColor')).height(0.5)\n      Web({ src: this.url, controller: this.controller })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\pages\\WebPage.ets", "project_name": "wanharmony-main", "id": "52559d4ea81c953a98fe2290e8345fdba81ba185f263bedf5ff5290d8a8bedc4"}
{"text": "import { CommonConstant as Const } from '../common/constant/CommonConstant';\nimport MainViewModel, { TabBean } from '../viewmodel/MainViewModel';\nimport ArticleList from './Article/ArticleList';\nimport KnowledgeList from './Knowledge/KnowledgeList';\nimport NavigationList from './Navigation/NavigationList';\nimport ProjectList from './Project/ProjectList';\n\n\n@Component\n@Preview\nexport default struct TabBar {\n  @State tabBarArray: TabBean[] = MainViewModel.getTabList();\n  @State currentIndex: number = 0;\n  @State currentPage: number = 1;\n  @Provide('isBig') isBig: boolean = false;\n\n  @Builder\n  TabBuilder(index: number, tabBean: TabBean) {\n    Column() {\n      Text(this.tabBarArray[index].name)\n        .fontWeight(this.currentIndex === index ? Const.TabBars_SELECT_TEXT_FONT_WEIGHT : Const.TabBars_UN_SELECT_TEXT_FONT_WEIGHT)\n        .fontSize(14)\n        .fontColor($r('app.color.fontColor_text3')).margin({ bottom: 2 })\n      Image(tabBean.icon).height(20).width(20)\n    }\n  }\n\n  aboutToAppear() {\n  }\n\n  build() {\n    Tabs() {\n      ForEach(this.tabBarArray, (tabsItem: TabBean, index) => {\n        TabContent() {\n          Column() {\n            if (index === 0) {\n              ArticleList({ currentIndex: $currentIndex })\n            } else if (index === 1) {\n              KnowledgeList()\n            } else if (index === 3) {\n              NavigationList()\n            } else if (index === 4) {\n              ProjectList()\n            } else {\n              Text(tabsItem.name)\n                .onClick(() => {\n                  this.isBig = !this.isBig\n                })\n                .backgroundColor('#00ff00')\n                .height(this.isBig ? 400 : 200)\n                .animation({\n                  duration: 1000,\n                  tempo: 3.0,\n                  delay: 0,\n                  curve: Curve.Linear,\n                  playMode: PlayMode.Normal,\n                  iterations: 1\n                })\n\n            }\n          }\n        }\n        .tabBar(this.TabBuilder(index, tabsItem))\n      }, (item: TabBean) => JSON.stringify(item));\n    }\n    .barHeight(50)\n    .barPosition(BarPosition.End)\n    .barMode(BarMode.Fixed)\n    .barWidth(Const.TabBars_BAR_WIDTH)\n    .backgroundColor($r('app.color.white'))\n    .onChange((index: number) => {\n      this.currentIndex = index;\n      this.currentPage = 1;\n    })\n    .vertical(false)\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\view\\TabBar.ets", "project_name": "wanharmony-main", "id": "1ecf5d9bc4428ed68ddc767f15b2e3d7368b777cf59b98df1889040aa8b45ba3"}
{"text": "@Component\nexport default struct TitleComponent {\n  title: string;\n  onBackPress: () => void;\n\n  build() {\n    Row() {\n      Image($r('app.media.ic_back'))\n        .width(26)\n        .height(26)\n        .onClick(() => {\n          this.onBackPress();\n        })\n        .margin({ left: 10, right: 10 })\n      Text(this.title).fontColor('#333333').fontSize(14).fontWeight(700).maxLines(1)\n    }\n    .backgroundColor($r('app.color.white'))\n    .width('100%')\n    .alignItems(VerticalAlign.Center)\n    .height(50)\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\view\\TitleComponent.ets", "project_name": "wanharmony-main", "id": "7aa6d53986245c6d6f2e7f495e18935bd399917e87fa717652b553a84c04f7d5"}
{"text": "import promptAction from '@ohos.promptAction';\nimport { CommonConstant } from '../../common/constant/CommonConstant';\nimport Logger from '../../common/utils/Logger';\nimport ArticleViewModel, { ArticleBean, Banner } from '../../viewmodel/ArticleViewModel';\nimport ArticleItem from './ArticleItem';\n\n@Component\nexport default struct ArticleTopItem {\n  @State topData: Array<ArticleBean> = [];\n\n  aboutToAppear() {\n    ArticleViewModel.getArticleTopList()\n      .then((data: ArticleBean[]) => {\n        this.topData = data;\n        Logger.debug(\"ArticleList\", `ArticleTopItem  topData:${this.topData.length}`)\n      })\n      .catch((err: string | Resource) => {\n        promptAction.showToast({\n          message: err,\n          duration: CommonConstant.ANIMATION_DURATION\n        });\n      })\n  }\n\n  build() {\n    if (this.topData.length > 0) {\n      Column() {\n        ForEach(this.topData, (item: ArticleBean) => {\n          ArticleItem({ articleBean: item, isTop: true })\n            .backgroundColor($r('app.color.white'))\n            .width('100%')\n        }, (item: ArticleBean, index?: number) => JSON.stringify(item) + index)\n      }\n    }\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\view\\Article\\ArticleTopItem.ets", "project_name": "wanharmony-main", "id": "7142059b8169af28b1914a3b23ddf4e80f15bdb15fd264ef1d07f0631b0478b8"}
{"text": "import promptAction from '@ohos.promptAction';\nimport { CommonConstant } from '../../common/constant/CommonConstant';\nimport Logger from '../../common/utils/Logger';\nimport ArticleViewModel, { Banner } from '../../viewmodel/ArticleViewModel';\n\n@Component\nexport default struct BannerItem {\n  @State bannerData: Array<Banner> = [];\n  @Consume('isBig') @Watch('onStateChange') isBig: boolean\n\n  private onStateChange() {\n    Logger.debug('BannerItem','isBig:' + this.isBig)\n  }\n\n  aboutToAppear() {\n    ArticleViewModel.getBannerList()\n      .then((data: Banner[]) => {\n        this.bannerData = data;\n        Logger.debug(\"ArticleList\", `BannerItem  bannerData:${this.bannerData.length}`)\n      })\n      .catch((err: string | Resource) => {\n        promptAction.showToast({\n          message: err,\n        });\n      })\n  }\n\n  build() {\n    if(this.bannerData.length > 0) {\n      Swiper() {\n        ForEach(this.bannerData, (item: Banner) => {\n          Image(item.imagePath)\n            .width(CommonConstant.FULL_WIDTH)\n            .height(CommonConstant.FULL_WIDTH)\n            .onClick(()=>{\n              this.isBig = !this.isBig\n            })\n        })\n      }\n      .width(CommonConstant.FULL_WIDTH)\n      .height(150)\n    }\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\view\\Article\\BannerItem.ets", "project_name": "wanharmony-main", "id": "55f3bdcc75302251763dafe8cdf145a9c22eac6141e2b7f30b346cc1613004c3"}
{"text": "import promptAction from '@ohos.promptAction';\nimport router from '@ohos.router';\nimport { CommonConstant } from '../../common/constant/CommonConstant';\nimport KnowledgeViewMode, { KnowledgeBean } from '../../viewmodel/KnowledgeViewModel';\n\n@Component\nexport default struct KnowledgeList {\n  @State knowledgeData: Array<KnowledgeBean> = [];\n\n  aboutToAppear() {\n    KnowledgeViewMode.getKnowledgeList()\n      .then((datas: KnowledgeBean[]) => {\n        this.knowledgeData = datas;\n      })\n      .catch((err: string | Resource) => {\n        promptAction.showToast({\n          message: err,\n          duration: CommonConstant.ANIMATION_DURATION\n        });\n      })\n  }\n\n  build() {\n    List() {\n      ForEach(this.knowledgeData, (item: KnowledgeBean, index) => {\n        ListItem() {\n          KnowledgeItem({ knowledgeBean: item })\n        }\n      }, (item, index) => JSON.stringify(item) + index)\n    }\n    .divider({\n      color: $r('app.color.dividerColor'),\n      strokeWidth: CommonConstant.NewsListConstant_LIST_DIVIDER_STROKE_WIDTH,\n      endMargin: CommonConstant.NewsListConstant_LIST_MARGIN_RIGHT\n    })\n  }\n}\n\n@Component\nstruct KnowledgeItem {\n  @Prop knowledgeBean: KnowledgeBean\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.knowledgeBean.name).fontSize(14).fontColor('#333').margin({ bottom: 10 })\n        Flex({ wrap: FlexWrap.Wrap }) {\n          ForEach(this.knowledgeBean.children || [], (item: KnowledgeBean, index) => {\n            Text(item.name)\n              .fontSize(11)\n              .fontColor('#666')\n              .borderWidth(0.5)\n              .borderColor('#ff3333')\n              .borderRadius(2)\n              .padding({ left: 2, right: 2, bottom: 1, top: 1 })\n              .margin({ right: 4, top: 5 })\n          }, (item, index) => JSON.stringify(item) + index)\n        }\n      }\n      .justifyContent(FlexAlign.Start)\n      .alignItems(HorizontalAlign.Start)\n      .layoutWeight(1)\n\n      Image($r('app.media.ic_right_arrow')).height(20).width(20)\n    }\n    .padding(10)\n    .onClick(() => {\n      router.pushUrl({\n        url: 'pages/KnowledgeDetail',\n        params: { courseId: this.knowledgeBean.id, title: this.knowledgeBean.name }\n      })\n    })\n  }\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\view\\Knowledge\\KnowledgeList.ets", "project_name": "wanharmony-main", "id": "148e51841e1d88e9db7e7b71c4a9097ab386b945da3bb096a8c78ec163fe9ba2"}
{"text": "import promptAction from '@ohos.promptAction';\nimport router from '@ohos.router';\nimport { CommonConstant } from '../../common/constant/CommonConstant';\nimport { fetch } from '../../common/utils/FetchUtil';\nimport Logger from '../../common/utils/Logger';\nimport { ArticleBean, ResponseResult } from '../../viewmodel/ArticleViewModel';\n\n@Component\nexport default struct NavigationList {\n  @State navigationData: Array<NavigationBean> = [];\n  @State currentIndex: number = 0;\n\n  aboutToAppear() {\n    let url = `${CommonConstant.SERVER}/navi/json`;\n    fetch({ url }).then((response: ResponseResult) => {\n      if (response.errorCode === 0) {\n        this.navigationData = response.data || [];\n      } else {\n        Logger.error('getNewsList failed', JSON.stringify(response));\n        promptAction.showToast({ message: $r('app.string.page_none_msg') })\n      }\n    }).catch((err: Error) => {\n      Logger.error('getNewsList failed', JSON.stringify(err));\n      promptAction.showToast({ message: $r('app.string.http_error_message') })\n    });\n  }\n\n  build() {\n    Tabs() {\n      ForEach(this.navigationData, (tabsItem: NavigationBean, index) => {\n        TabContent() {\n          NavigationItem({ item: tabsItem })\n        }\n        .tabBar(this.TabBuilder(index, tabsItem))\n      }, (item: NavigationBean) => JSON.stringify(item));\n    }\n    .barHeight('100%')\n    .barPosition(BarPosition.Start)\n    .barMode(BarMode.Scrollable)\n    .barWidth('25%')\n    .backgroundColor('#FFF')\n    .onChange((index: number) => {\n      this.currentIndex = index;\n    })\n    .vertical(true)\n  }\n\n  @Builder\n  TabBuilder(index: number, tabBean: NavigationBean) {\n    Text(tabBean.name || '')\n      .fontSize(14)\n      .width('100%')\n      .height(50)\n      .backgroundColor('#F1F3F5')\n      .textAlign(TextAlign.Center)\n      .fontColor(this.currentIndex === index ? '#333' : '#666')\n  }\n}\n\n@Component\nstruct NavigationItem {\n  @Prop item: NavigationBean\n\n  build() {\n    Column() {\n      Text(this.item.name).fontSize(14).fontColor(\"#333\").margin({ top: 10 })\n      Flex({ wrap: FlexWrap.Wrap }) {\n        ForEach(this.item.articles || [], (item: ArticleBean, index) => {\n          Text(item.title)\n            .fontSize(13)\n            .fontColor('#666')\n            .backgroundColor('#F1F3F5')\n            .padding({ left: 5, right: 5, bottom: 8, top: 8 })\n            .margin({ right: 10, top: 10 })\n            .onClick(() => {\n              router.pushUrl({ url: 'pages/WebPage', params: { url: item.link, title: item.title } })\n            })\n        }, (item, index) => JSON.stringify(item) + index)\n      }\n      .margin({ left: 20 })\n    }\n    .justifyContent(FlexAlign.Start)\n    .height('100%')\n  }\n}\n\nexport interface NavigationBean {\n  articles?: ArticleBean[];\n  cid?: number;\n  name?: string;\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\view\\Navigation\\NavigationList.ets", "project_name": "wanharmony-main", "id": "18ae2aa020f04c9453d0db152f0e605f612bb6386405d5597242c164c35b84d6"}
{"text": "import { CommonConstant as Const, PageState } from '../common/constant/CommonConstant';\n\nimport { ArticleBean, Banner } from './ArticleViewModel';\n\nexport default class ArticleModel {\n  currentPage: number = 1;\n  pageState: number = PageState.Loading;\n}", "path": "wanharmony-main\\entry\\src\\main\\ets\\viewmodel\\ArticleModel.ets", "project_name": "wanharmony-main", "id": "b4791b534ba2c67065240816dd4e4b1836a7593dc9da130e7a40423b4d397d50"}
{"text": "import { CommonConstant as Const } from '../common/constant/CommonConstant';\nimport { fetch } from '../common/utils/FetchUtil';\nimport Logger from '../common/utils/Logger';\nimport { ArticleBean, ResponseResult } from './ArticleViewModel';\n\nexport interface KnowledgeBean {\n  articleList?: any[];\n  author?: string;\n  children?: KnowledgeBean[];\n  courseId?: number;\n  cover?: string;\n  desc?: string;\n  id?: number;\n  lisense?: string;\n  lisenseLink?: string;\n  name?: string;\n  order?: number;\n  parentChapterId?: number;\n  type?: number;\n  userControlSetTop?: boolean;\n  visible?: number;\n}\n\n\nclass KnowledgeViewMode {\n  getKnowledgeList(): Promise<KnowledgeBean[]> {\n    return new Promise(async (resolve: Function, reject: Function) => {\n      let url = `${Const.SERVER}/tree/json`;\n      fetch({ url }).then((response: ResponseResult) => {\n        if (response.errorCode === 0) {\n          resolve(response.data || []);\n        } else {\n          Logger.error('getNewsList failed', JSON.stringify(response));\n          reject($r('app.string.page_none_msg'));\n        }\n      }).catch((err: Error) => {\n        Logger.error('getNewsList failed', JSON.stringify(err));\n        reject($r('app.string.http_error_message'));\n      });\n    });\n  }\n\n  getKnowledgeDetail(courseId: number): Promise<ArticleBean[]> {\n    return new Promise(async (resolve: Function, reject: Function) => {\n      let url = `${Const.SERVER}/article/list/0/json?cid=${courseId}`;\n      fetch({ url }).then((response: ResponseResult) => {\n        if (response.errorCode === 0) {\n          resolve(response.data?.datas || []);\n        } else {\n          Logger.error('getNewsList failed', JSON.stringify(response));\n          reject($r('app.string.page_none_msg'));\n        }\n      }).catch((err: Error) => {\n        Logger.error('getNewsList failed', JSON.stringify(err));\n        reject($r('app.string.http_error_message'));\n      });\n    });\n  }\n}\n\nlet knowledgeViewModel = new KnowledgeViewMode();\n\nexport default knowledgeViewModel as KnowledgeViewMode;\n\n", "path": "wanharmony-main\\entry\\src\\main\\ets\\viewmodel\\KnowledgeViewModel.ets", "project_name": "wanharmony-main", "id": "66a143b8ea2b6c07649b8ed58d3f02a865536955dcbad2d6372feea52d498c1c"}
{"text": "import { ChatContentItemData } from '../pages/chat/ChatContentItemData'\nimport AudioRendererManager from '../utils/AudioRendererManager'\n\n@Preview\n@Component\nexport default struct ListChatContentLeftItem {\n  private data?: ChatContentItemData\n\n  build() {\n    Row() {\n      Image(this.data?.headSrc)\n        .width(48)\n        .height(48)\n        .borderRadius(4)\n        .margin({ left: 20, right: 8 })\n        .objectFit(ImageFit.Cover)\n\n      Path()\n        .commands(`M${vp2px(10)} 0 L0 ${vp2px(7)} ${vp2px(10)} ${vp2px(14)} Z`)\n        .fill('rgb(255,255,255)')\n        .margin({\n          top: 19\n        })\n        .strokeWidth(0)\n\n      Row() {\n        if (this.data?.msgType === 0) {\n          Text(this.data?.msg)\n            .fontColor(Color.Black)\n            .fontSize(18)\n            .fontWeight(500)\n            .borderRadius(4)\n            .backgroundColor(Color.White)\n            .padding({\n              left: 14,\n              right: 14,\n              top: 10,\n              bottom: 10\n            })\n\n        } else if (this.data?.msgType === 2) {\n          Row() {\n            Text(this.data?.msg)\n              .fontColor(Color.Black)\n              .fontSize(18)\n              .fontWeight(500)\n\n            Image(this.data?.img)\n              .width(28)\n              .width(28)\n              .margin({ left: 1 })\n              .objectFit(ImageFit.Auto)\n          }\n          .padding({\n            left: 14,\n            right: 14,\n            top: 10,\n            bottom: 10\n          })\n          .borderRadius(4)\n          .backgroundColor(\"#a9ea7a\")\n          .onClick(this.playVoice)\n\n        } else {\n          Image(this.data?.img)\n            .width(150)\n            .borderRadius(4)\n            .objectFit(ImageFit.Auto)\n            .backgroundColor(Color.White)\n        }\n      }\n      .margin({ right: 80 })\n      .layoutWeight(1)\n\n    }.alignItems(VerticalAlign.Top)\n  }\n\n  playVoice = async () => {\n    if (this.data?.voicePath) {\n      AudioRendererManager.doPlay(this.data?.voicePath)\n    }\n  }\n\n  aboutToDisappear(): void {\n    AudioRendererManager.release()\n  }\n}\n\n", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\component\\ListChatContentLeftItem.ets", "project_name": "Wechat_HarmonyOS-main", "id": "e91f3a8650f308f83a612c9ef021cf6f9ea1b1f1bf7b4bb4b0d795fb83b1b434"}
{"text": "import { ChatContentItemData } from '../pages/chat/ChatContentItemData'\nimport AudioRendererManager from '../utils/AudioRendererManager'\n\n@Preview\n@Component\nexport default struct ListChatContentRightItem {\n  data?: ChatContentItemData\n\n  build() {\n    Row() {\n      Column() {\n        if (this.data?.msgType == 0) {\n          Text(this.data?.msg)\n            .fontColor(Color.Black)\n            .fontWeight(500)\n            .fontSize(18)\n            .padding({\n              left: 14,\n              right: 14,\n              top: 10,\n              bottom: 10\n            })\n            .borderRadius(4)\n            .backgroundColor(\"#a9ea7a\")\n        } else if (this.data?.msgType === 2) {\n          Row() {\n            Text(this.data?.msg)\n              .fontColor(Color.Black)\n              .fontSize(18)\n              .fontWeight(500)\n\n            Image(this.data?.img)\n              .width(28)\n              .width(28)\n              .margin({ left: 1 })\n              .objectFit(ImageFit.Auto)\n          }\n          .padding({\n            left: 14,\n            right: 14,\n            top: 10,\n            bottom: 10\n          })\n          .borderRadius(4)\n          .backgroundColor(\"#a9ea7a\")\n          .onClick(this.playVoice)\n\n        } else {\n          Image(this.data?.img)\n            .width(150)\n            .borderRadius(4)\n            .objectFit(ImageFit.Auto)\n            .backgroundColor(\"#a9ea7a\")\n        }\n      }\n      .margin({ left: 80 })\n      .alignItems(HorizontalAlign.End)\n      .layoutWeight(1)\n\n      Path()\n        .commands(`M0 0 L${vp2px(10)} ${vp2px(7)} 0 ${vp2px(14)} Z`)\n        .fill('rgb(169,234,122)')\n        .margin({\n          top: 18\n        })\n        .strokeWidth(0)\n\n      Image(this.data?.headSrc)\n        .width(48)\n        .height(48)\n        .borderRadius(4)\n        .margin({ left: 8, right: 20 })\n        .objectFit(ImageFit.Cover)\n\n    }.alignItems(VerticalAlign.Top)\n  }\n\n  playVoice = async () => {\n    if (this.data?.voicePath) {\n      AudioRendererManager.doPlay(this.data?.voicePath)\n    }\n  }\n\n  aboutToDisappear(): void {\n    AudioRendererManager.release()\n  }\n}\n\n\n", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\component\\ListChatContentRightItem.ets", "project_name": "Wechat_HarmonyOS-main", "id": "2791dac2766ed2e7a0b9725e915f2356e13c367c28207ea21d42367411269c82"}
{"text": "@Preview\n@Component\nexport default struct ListContactItem {\n  private head: string | PixelMap | Resource = \"\"\n  private name: string = \"\"\n\n  build() {\n    Row() {\n      Image(this.head)\n        .width(46)\n        .height(46)\n        .borderRadius(4)\n        .margin({ left: 20, right: 15 })\n        .objectFit(ImageFit.Cover)\n\n      Text(this.name)\n        .fontSize(19)\n        .fontWeight(500)\n        .width(\"100%\")\n        .layoutWeight(1)\n        .maxLines(1)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .margin({ right: 30 })\n        .fontColor(Color.Black)\n    }\n    .backgroundColor(Color.White)\n    .width(\"100%\")\n    .height(60)\n  }\n}", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\component\\ListContactItem.ets", "project_name": "Wechat_HarmonyOS-main", "id": "6e33893ecae6ae24909c4f93d0d891ff77cc49c77c3fb5777e4f6c6a34bb33e5"}
{"text": "export interface ChatContentItemData {\n  name?: string\n  voicePath?: string\n  headSrc?: Resource\n  msg?: string\n  img?: Resource\n  msgType?: number\n  self?: Boolean\n}", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\pages\\chat\\ChatContentItemData.ets", "project_name": "Wechat_HarmonyOS-main", "id": "64830bc5492fe678b427248fe1eb2536c075697a7a3f29706e1ec7d93c83d2c9"}
{"text": "export default interface ChatPageParam {\n  name: string\n}", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\pages\\chat\\ChatPageParam.ets", "project_name": "Wechat_HarmonyOS-main", "id": "1b32403b06ecabcff73f3f3d2dc916ec07dc9cc40fd3e9e56d218118b6c4edb5"}
{"text": "import { audio } from '@kit.AudioKit';\nimport { fileIo } from '@kit.CoreFileKit';\n\n\nclass Options {\n  offset?: number;\n  length?: number;\n}\n\n\nclass AudioRendererManager {\n  \n  private static audioRender: audio.AudioRenderer | null = null\n\n  \n  static async doPlay(fileName: string) {\n    await AudioRendererManager.ready(fileName)\n    AudioRendererManager.start()\n  }\n\n  \n  private static async ready(fileName: string) {\n\n    try {\n      let bufferSize: number = 0;\n      let audioStreamInfo: audio.AudioStreamInfo = {\n        samplingRate: audio.AudioSamplingRate.SAMPLE_RATE_16000, \n        channels: audio.AudioChannel.CHANNEL_1, \n        sampleFormat: audio.AudioSampleFormat.SAMPLE_FORMAT_S16LE, \n        encodingType: audio.AudioEncodingType.ENCODING_TYPE_RAW \n      }\n      let audioRendererInfo: audio.AudioRendererInfo = {\n        usage: audio.StreamUsage.STREAM_USAGE_MUSIC, \n        rendererFlags: 0 \n      }\n      let audioRendererOptions: audio.AudioRendererOptions = {\n        streamInfo: audioStreamInfo,\n        rendererInfo: audioRendererInfo\n      }\n      let path = getContext().filesDir;\n      \n      let file: fileIo.File = fileIo.openSync(fileName, fileIo.OpenMode.READ_ONLY);\n      const fileSize = fileIo.statSync(file.path).size\n      let writeDataCallback = (buffer: ArrayBuffer) => {\n        let options: Options = {\n          offset: bufferSize,\n          length: buffer.byteLength\n        }\n        fileIo.readSync(file.fd, buffer, options);\n        bufferSize += buffer.byteLength;\n        \n        if (bufferSize >= fileSize) {\n          AudioRendererManager.stop()\n            .then(() => {\n              AudioRendererManager.release()\n            })\n        }\n      }\n      AudioRendererManager.audioRender = await audio.createAudioRenderer(audioRendererOptions)\n      AudioRendererManager.audioRender.on(\"writeData\", writeDataCallback)\n    } catch (e) {\n      console.log(\"e\", e.message, e.code)\n    }\n  }\n\n  \n  static async start() {\n    \n    await AudioRendererManager.audioRender?.start();\n  }\n\n  \n  static async pause() {\n    await AudioRendererManager.audioRender?.pause()\n  }\n\n  \n  static async stop() {\n    await AudioRendererManager.audioRender?.stop()\n  }\n\n  \n  static async release() {\n    await AudioRendererManager.audioRender?.release()\n  }\n}\n\nexport default AudioRendererManager", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\utils\\AudioRendererManager.ets", "project_name": "Wechat_HarmonyOS-main", "id": "33b36bba91ac6dd51b9b4002104797aa02fb7e9ef94999dd53e628cdd920b9d5"}
{"text": "import { abilityAccessCtrl, bundleManager, common, Permissions } from '@kit.AbilityKit';\n\n\n\nexport class PermissionUtils {\n  \n  static check(permissions: Permissions[]): boolean {\n    \n    const atManager = abilityAccessCtrl.createAtManager();\n    \n    const bundleInfo = bundleManager.getBundleInfoForSelfSync(bundleManager.BundleFlag.GET_BUNDLE_INFO_WITH_APPLICATION)\n    \n    const tokenID = bundleInfo.appInfo.accessTokenId\n    \n    const authResults = permissions.map((item) => atManager.checkAccessTokenSync(tokenID, item))\n    \n    return authResults.every(v => v === abilityAccessCtrl.GrantStatus.PERMISSION_GRANTED)\n  }\n\n  \n  static async request(permissions: Permissions[]): Promise<boolean> {\n    if (PermissionUtils.check(permissions)) {\n      return true\n    }\n    \n    const atManager = abilityAccessCtrl.createAtManager();\n    \n    const grantStatus = await atManager.requestPermissionsFromUser(getContext(), permissions)\n    \n    const isAuth = grantStatus.authResults.every(v => v === abilityAccessCtrl.GrantStatus.PERMISSION_GRANTED)\n    \n    return isAuth\n  }\n\n  \n  static openPermissionSettingsPage() {\n    \n    const context = getContext() as common.UIAbilityContext\n    \n    const bundleInfo = bundleManager.getBundleInfoForSelfSync(bundleManager.BundleFlag.GET_BUNDLE_INFO_WITH_APPLICATION)\n    \n    context.startAbility({\n      bundleName: 'com.huawei.hmos.settings',\n      abilityName: 'com.huawei.hmos.settings.MainAbility',\n      uri: 'application_info_entry',\n      parameters: {\n        \n        pushParams: bundleInfo.name\n      }\n    })\n  }\n}", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\utils\\PermissionUtils.ets", "project_name": "Wechat_HarmonyOS-main", "id": "044c529c925960290a52ddb24ae40f4469e2449912d0e56865856a3cabcc2d80"}
{"text": "import { promptAction } from '@kit.ArkUI';\n\nexport class ToastUtils {\n  static show(msg: string) {\n    ToastUtils.showTime(msg, 2000)\n  }\n\n  static showLong(msg: string) {\n    ToastUtils.showTime(msg, 4000)\n  }\n\n  static showTime(msg: string, duration: number = 4000) {\n    try {\n      promptAction.showToast({\n        message: msg,\n        duration: duration,\n        bottom: \"center\",\n      })\n    } catch (error) {\n      console.error(`showToast args error code is ${error.code}, message is ${error.message}`);\n    }\n  }\n}\n\n", "path": "Wechat_HarmonyOS-main\\entry\\src\\main\\ets\\utils\\ToastUtils.ets", "project_name": "Wechat_HarmonyOS-main", "id": "e875ca1f4bbf15c7df41c179840d869ac8318e842271746c682dae939dd8b5a6"}
